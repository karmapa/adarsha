{
  "version": 3,
  "sources": [
    "../../../usr/local/lib/node_modules/ksana-cli/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "adarsha/index.js",
    "adarsha/node_modules/pedurma/dPedurma.js",
    "adarsha/node_modules/pedurma/hPedurma.js",
    "adarsha/node_modules/pedurma/index.js",
    "adarsha/node_modules/pedurma/jPedurma.js",
    "adarsha/src/corres_api.js",
    "adarsha/src/defbox.jsx",
    "adarsha/src/dict_api.js",
    "adarsha/src/entries.js",
    "adarsha/src/indexes.js",
    "adarsha/src/main.jsx",
    "adarsha/src/namelist.jsx",
    "adarsha/src/resultlist.jsx",
    "adarsha/src/search_api.js",
    "adarsha/src/searcharea.jsx",
    "adarsha/src/showseg.jsx",
    "adarsha/src/showtext.jsx",
    "adarsha/src/tabarea.jsx",
    "adarsha/src/textcontrolbar.jsx",
    "node_modules/ksana-analyzer/configs.js",
    "node_modules/ksana-analyzer/index.js",
    "node_modules/ksana-analyzer/tokenizers.js",
    "node_modules/ksana-database/bsearch.js",
    "node_modules/ksana-database/index.js",
    "node_modules/ksana-database/kde.js",
    "node_modules/ksana-database/kde_remote.js",
    "node_modules/ksana-database/listkdb.js",
    "node_modules/ksana-database/method.js",
    "node_modules/ksana-database/platform.js",
    "node_modules/ksana-database/rpc.js",
    "node_modules/ksana-database/rpc_kde.js",
    "node_modules/ksana-jsonrom/html5read.js",
    "node_modules/ksana-jsonrom/index.js",
    "node_modules/ksana-jsonrom/kdb.js",
    "node_modules/ksana-jsonrom/kdbfs.js",
    "node_modules/ksana-jsonrom/kdbfs_android.js",
    "node_modules/ksana-jsonrom/kdbfs_ios.js",
    "node_modules/ksana-search/boolsearch.js",
    "node_modules/ksana-search/bsearch.js",
    "node_modules/ksana-search/excerpt.js",
    "node_modules/ksana-search/index.js",
    "node_modules/ksana-search/plist.js",
    "node_modules/ksana-search/search.js",
    "node_modules/ksana2015-stacktoc/index.js",
    "node_modules/ksana2015-webruntime/downloader.js",
    "node_modules/ksana2015-webruntime/html5fs.js",
    "node_modules/ksana2015-webruntime/ksanagap.js",
    "node_modules/ksana2015-webruntime/livereload.js",
    "node_modules/ksana2015-webruntime/mkdirp.js",
    "node_modules/tibetan/wylie.js"
  ],
  "names": [],
  "mappingsrnpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrzzlLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClphplHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACplvlTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxhgjhjdxalptGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACp
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var React=require(\"react\");\nrequire(\"ksana2015-webruntime/livereload\")();\nrequire(\"ksana2015-webruntime/ksanagap\").boot(\"adarsha\",function(){\n\tvar Main=React.createElement(require(\"./src/main.jsx\"));\n\tksana.mainComponent=React.render(Main,document.getElementById(\"main\"));\t\n});\n",
    "var dPedurma=[ [ '1_1', '001@001b1-001@015a7', '1_1' ],\n  [ '1_2', '001@015a7-001@025a2', '1_2' ],\n  [ '1_3', '001@025a2-001@034b7', '1_3' ],\n  [ '1_4', '001@034b7-001@045b6', '1_4' ],\n  [ '1_5', '001@045b6-001@064a1', '1_5' ],\n  [ '1_6', '001@064a1-001@075b1', '1_6' ],\n  [ '1_7', '001@075b1-001@087a6', '1_7' ],\n  [ '1_8', '001@087a6-001@099a2', '1_8' ],\n  [ '1_9', '001@099a2-001@111a4', '1_9' ],\n  [ '1_10', '001@111a4-001@124a2', '1_10' ],\n  [ '1_11', '001@124a2-001@137b3', '1_11' ],\n  [ '1_12', '001@137b3-001@152a1', '1_12' ],\n  [ '1_13', '001@152a1-001@164b4', '1_13' ],\n  [ '1_14', '001@164b4-001@176b4', '1_14' ],\n  [ '1_15', '001@176b4-001@191b5', '1_15' ],\n  [ '1_16', '001@191b5-001@206a4', '1_16' ],\n  [ '1_17', '001@206a4-001@218b1', '1_17' ],\n  [ '1_18', '001@218b1-001@232a5', '1_18' ],\n  [ '1_19', '001@232a5-001@245a6', '1_19' ],\n  [ '1_20', '001@245a6-001@258b3', '1_20' ],\n  [ '1_21', '001@258b3-001@272b6', '1_21' ],\n  [ '1_22', '001@272b6-001@285a5', '1_22' ],\n  [ '1_23', '001@285a5-001@298a6', '1_23' ],\n  [ '1_24', '001@298a6-002@001b1', '1_24' ],\n  [ '1_25', '002@001b1-002@014a5', '1_25' ],\n  [ '1_26', '002@014a5-002@027a2', '1_26' ],\n  [ '1_27', '002@027a2-002@039b6', '1_27' ],\n  [ '1_28', '002@039b6-002@050a6', '1_28' ],\n  [ '1_29', '002@050a6-002@060b7', '1_29' ],\n  [ '1_30', '002@060b7-002@070b6', '1_30' ],\n  [ '1_31', '002@070b6-002@080a5', '1_31' ],\n  [ '1_32', '002@080a5-002@090a5', '1_32' ],\n  [ '1_33', '002@090a5-002@101a4', '1_33' ],\n  [ '1_34', '002@101a4-002@111a6', '1_34' ],\n  [ '1_35', '002@111a6-002@121b1', '1_35' ],\n  [ '1_36', '002@121b1-002@132b3', '1_36' ],\n  [ '1_37', '002@132b3-002@143a3', '1_37' ],\n  [ '1_38', '002@143a3-002@154a5', '1_38' ],\n  [ '1_39', '002@154a5-002@164a5', '1_39' ],\n  [ '1_40', '002@164a5-002@173a1', '1_40' ],\n  [ '1_41', '002@173a1-002@182a6', '1_41' ],\n  [ '1_42', '002@182a6-002@191b5', '1_42' ],\n  [ '1_43', '002@191b5-002@200a4', '1_43' ],\n  [ '1_44', '002@200a4-002@209b5', '1_44' ],\n  [ '1_45', '002@209b5-002@220a3', '1_45' ],\n  [ '1_46', '002@220a3-002@230b6', '1_46' ],\n  [ '1_47', '002@230b6-002@241a7', '1_47' ],\n  [ '1_48', '002@241a7-002@252a6', '1_48' ],\n  [ '1_49', '002@252a6-002@265a3', '1_49' ],\n  [ '1_50', '002@265a3-002@275a7', '1_50' ],\n  [ '1_51', '002@275a7-002@286a6', '1_51' ],\n  [ '1_52', '002@286a6-002@297b6', '1_52' ],\n  [ '1_53', '002@297b6-002@308a4', '1_53' ],\n  [ '1_54', '002@308a4-003@001b1', '1_54' ],\n  [ '1_55', '003@001b1-003@011b7', '1_55' ],\n  [ '1_56', '003@011b7-003@021b2', '1_56' ],\n  [ '1_57', '003@021b2-003@031b1', '1_57' ],\n  [ '1_58', '003@031b1-003@040a4', '1_58' ],\n  [ '1_59', '003@040a4-003@049a7', '1_59' ],\n  [ '1_60', '003@049a7-003@058b7', '1_60' ],\n  [ '1_61', '003@058b7-003@068a7', '1_61' ],\n  [ '1_62', '003@068a7-003@079a5', '1_62' ],\n  [ '1_63', '003@079a5-003@089b3', '1_63' ],\n  [ '1_64', '003@089b3-003@098a3', '1_64' ],\n  [ '1_65', '003@098a3-003@107a7', '1_65' ],\n  [ '1_66', '003@107a7-003@116a5', '1_66' ],\n  [ '1_67', '003@116a5-003@124a7', '1_67' ],\n  [ '1_68', '003@124a7-003@134b3', '1_68' ],\n  [ '1_69', '003@134b3-003@143b7', '1_69' ],\n  [ '1_70', '003@143b7-003@154b4', '1_70' ],\n  [ '1_71', '003@154b4-003@167a4', '1_71' ],\n  [ '1_72', '003@167a4-003@177a6', '1_72' ],\n  [ '1_73', '003@177a6-003@187a1', '1_73' ],\n  [ '1_74', '003@187a1-003@197a2', '1_74' ],\n  [ '1_75', '003@197a2-003@208a7', '1_75' ],\n  [ '1_76', '003@208a7-003@219a3', '1_76' ],\n  [ '1_77', '003@219a3-003@231b1', '1_77' ],\n  [ '1_78', '003@231b1-003@243a6', '1_78' ],\n  [ '1_79', '003@243a6-003@255b1', '1_79' ],\n  [ '1_80', '003@255b1-003@268b4', '1_80' ],\n  [ '1_81', '003@268b4-003@280b2', '1_81' ],\n  [ '1_82', '003@280b2-004@001b2', '1_82' ],\n  [ '1_83', '004@001b2-004@013b7', '1_83' ],\n  [ '1_84', '004@013b7-004@025b6', '1_84' ],\n  [ '1_85', '004@025b6-004@036b3', '1_85' ],\n  [ '1_86', '004@036b3-004@047a2', '1_86' ],\n  [ '1_87', '004@047a2-004@059a1', '1_87' ],\n  [ '1_88', '004@059a1-004@070b6', '1_88' ],\n  [ '1_89', '004@070b6-004@083a2', '1_89' ],\n  [ '1_90', '004@083a2-004@094b7', '1_90' ],\n  [ '1_91', '004@094b7-004@106a6', '1_91' ],\n  [ '1_92', '004@106a6-004@119a1', '1_92' ],\n  [ '1_93', '004@119a1-004@130a3', '1_93' ],\n  [ '1_94', '004@130a3-004@141a1', '1_94' ],\n  [ '1_95', '004@141a1-004@151b2', '1_95' ],\n  [ '1_96', '004@151b2-004@162b5', '1_96' ],\n  [ '1_97', '004@162b5-004@174a4', '1_97' ],\n  [ '1_98', '004@174a4-004@185a1', '1_98' ],\n  [ '1_99', '004@185a1-004@196b4', '1_99' ],\n  [ '1_100', '004@196b4-004@208b1', '1_100' ],\n  [ '1_101', '004@208b1-004@219b1', '1_101' ],\n  [ '1_102', '004@219b1-004@229a7', '1_102' ],\n  [ '1_103', '004@229a7-004@240a6', '1_103' ],\n  [ '1_104', '004@240a6-004@250a7', '1_104' ],\n  [ '1_105', '004@250a7-004@261a1', '1_105' ],\n  [ '1_106', '004@261a1-004@271b4', '1_106' ],\n  [ '1_107', '004@271b4-004@282b1', '1_107' ],\n  [ '1_108', '004@282b1-004@292b1', '1_108' ],\n  [ '1_109', '004@292b1-004@302a5', '1_109' ],\n  [ '2_1', '005@001b1-005@011b1', '2_1' ],\n  [ '2_2', '005@011b1-005@020b7', '2_2' ],\n  [ '3_1', '005@021a1-005@035b5', '3_1' ],\n  [ '3_2', '005@035b5-005@048b1', '3_2' ],\n  [ '3_3', '005@048b1-005@061b6', '3_3' ],\n  [ '3_4', '005@061b6-005@075b5', '3_4' ],\n  [ '3_5', '005@075b5-005@088b2', '3_5' ],\n  [ '3_6', '005@088b2-005@101a7', '3_6' ],\n  [ '3_7', '005@101a7-005@113a6', '3_7' ],\n  [ '3_8', '005@113a6-005@126b6', '3_8' ],\n  [ '3_9', '005@126b6-005@139b5', '3_9' ],\n  [ '3_10', '005@139b5-005@153b1', '3_10' ],\n  [ '3_11', '005@153b1-005@164b3', '3_11' ],\n  [ '3_12', '005@164b3-005@177a7', '3_12' ],\n  [ '3_13', '005@177a7-005@189b2', '3_13' ],\n  [ '3_14', '005@189b2-005@201b3', '3_14' ],\n  [ '3_15', '005@201b3-005@215a2', '3_15' ],\n  [ '3_16', '005@215a2-005@227a2', '3_16' ],\n  [ '3_18', '005@227a2-005@239a1', '3_18' ],\n  [ '3_17', '005@239a1-005@252a3', '3_17' ],\n  [ '3_19', '005@252a3-005@265b7', '3_19' ],\n  [ '3_20', '005@265b7-005@279a4', '3_20' ],\n  [ '3_21', '005@279a4-006@001b1', '3_21' ],\n  [ '3_22', '006@001b1-006@016a7', '3_22' ],\n  [ '3_23', '006@016a7-006@029a4', '3_23' ],\n  [ '3_24', '006@029a4-006@042a4', '3_24' ],\n  [ '3_25', '006@042a4-006@054b3', '3_25' ],\n  [ '3_26', '006@054b3-006@066b3', '3_26' ],\n  [ '3_27', '006@066b3-006@080a5', '3_27' ],\n  [ '3_28', '006@080a5-006@093a3', '3_28' ],\n  [ '3_29', '006@093a3-006@105b3', '3_29' ],\n  [ '3_30', '006@105b3-006@119a3', '3_30' ],\n  [ '3_31', '006@119a3-006@134a1', '3_31' ],\n  [ '3_32', '006@134a1-006@148b1', '3_32' ],\n  [ '3_33', '006@148b1-006@162b2', '3_33' ],\n  [ '3_34', '006@162b2-006@176b6', '3_34' ],\n  [ '3_35', '006@176b6-006@193b6', '3_35' ],\n  [ '3_36', '006@193b6-006@208b6', '3_36' ],\n  [ '3_37', '006@208b6-006@222b3', '3_37' ],\n  [ '3_38', '006@222b3-006@236a6', '3_38' ],\n  [ '3_39', '006@236a6-006@248a4', '3_39' ],\n  [ '3_40', '006@248a4-006@261a6', '3_40' ],\n  [ '3_41', '006@261a6-006@274b2', '3_41' ],\n  [ '3_42', '006@274b2-007@001b1', '3_42' ],\n  [ '3_43', '007@001b1-007@016a7', '3_43' ],\n  [ '3_44', '007@016a7-007@032a1', '3_44' ],\n  [ '3_45', '007@032a1-007@046b5', '3_45' ],\n  [ '3_46', '007@046b5-007@063b3', '3_46' ],\n  [ '3_47', '007@063b3-007@079b3', '3_47' ],\n  [ '3_48', '007@079b3-007@093a4', '3_48' ],\n  [ '3_49', '007@093a4-007@108a2', '3_49' ],\n  [ '3_50', '007@108a2-007@122b1', '3_50' ],\n  [ '3_51', '007@122b1-007@136b1', '3_51' ],\n  [ '3_52', '007@136b1-007@148a7', '3_52' ],\n  [ '3_53', '007@148a7-007@161a4', '3_53' ],\n  [ '3_54', '007@161a4-007@173a2', '3_54' ],\n  [ '3_55', '007@173a2-007@187a4', '3_55' ],\n  [ '3_56', '007@187a4-007@201a4', '3_56' ],\n  [ '3_57', '007@201a4-007@214a3', '3_57' ],\n  [ '3_58', '007@214a3-007@227b3', '3_58' ],\n  [ '3_59', '007@227b3-007@242b2', '3_59' ],\n  [ '3_60', '007@242b2-007@258a2', '3_60' ],\n  [ '3_61', '007@258a2-007@272a6', '3_61' ],\n  [ '3_62', '007@272a6-008@001b1', '3_62' ],\n  [ '3_63', '008@001b1-008@015a7', '3_63' ],\n  [ '3_64', '008@015a7-008@026b2', '3_64' ],\n  [ '3_65', '008@026b2-008@040b7', '3_65' ],\n  [ '3_66', '008@040b7-008@057a2', '3_66' ],\n  [ '3_67', '008@057a2-008@073a1', '3_67' ],\n  [ '3_68', '008@073a1-008@087b6', '3_68' ],\n  [ '3_69', '008@087b6-008@100a3', '3_69' ],\n  [ '3_70', '008@100a3-008@112a7', '3_70' ],\n  [ '3_71', '008@112a7-008@125a1', '3_71' ],\n  [ '3_72', '008@125a1-008@137b5', '3_72' ],\n  [ '3_73', '008@137b5-008@150b4', '3_73' ],\n  [ '3_74', '008@150b4-008@162a6', '3_74' ],\n  [ '3_75', '008@162a6-008@173a5', '3_75' ],\n  [ '3_76', '008@173a5-008@183b7', '3_76' ],\n  [ '3_77', '008@183b7-008@194b6', '3_77' ],\n  [ '3_78', '008@194b6-008@204a8', '3_78' ],\n  [ '3_79', '008@204a8-008@216a2', '3_79' ],\n  [ '3_80', '008@216a2-008@228b5', '3_80' ],\n  [ '3_81', '008@228b5-008@240a4', '3_81' ],\n  [ '3_82', '008@240a4-008@254a4', '3_82' ],\n  [ '3_83', '008@254a4-008@269a6', '3_83' ],\n  [ '4_1', '009@001b1-009@013a7', '4_1' ],\n  [ '4_2', '009@013a7-009@025a7', '4_2' ],\n  [ '5_1', '009@025b1-009@036b7', '5_1' ],\n  [ '5_2', '009@036b7-009@047a7', '5_2' ],\n  [ '5_3', '009@047a7-009@059a2', '5_3' ],\n  [ '5_4', '009@059a2-009@069b6', '5_4' ],\n  [ '5_5', '009@069b6-009@082a5', '5_5' ],\n  [ '5_6', '009@082a5-009@095a2', '5_6' ],\n  [ '5_7', '009@095a2-009@107a3', '5_7' ],\n  [ '5_8', '009@107a3-009@119a4', '5_8' ],\n  [ '5_9', '009@119a4-009@131a1', '5_9' ],\n  [ '5_10', '009@131a1-009@144a4', '5_10' ],\n  [ '5_11', '009@144a4-009@156b2', '5_11' ],\n  [ '5_12', '009@156b2-009@168a1', '5_12' ],\n  [ '5_13', '009@168a1-009@179a1', '5_13' ],\n  [ '5_14', '009@179a1-009@189a6', '5_14' ],\n  [ '5_15', '009@189a6-009@201b3', '5_15' ],\n  [ '5_16', '009@201b3-009@212a4', '5_16' ],\n  [ '5_17', '009@212a4-009@221b5', '5_17' ],\n  [ '5_18', '009@221b5-009@231a4', '5_18' ],\n  [ '5_19', '009@231a4-009@240a4', '5_19' ],\n  [ '5_20', '009@240a4-009@251a3', '5_20' ],\n  [ '5_21', '009@251a3-009@261a1', '5_21' ],\n  [ '5_22', '009@261a1-009@271a7', '5_22' ],\n  [ '5_23', '009@271a7-009@280a5', '5_23' ],\n  [ '5_24', '009@280a5-009@289b3', '5_24' ],\n  [ '5_25', '009@289b3-009@299a2', '5_25' ],\n  [ '5_26', '009@299a2-009@309a2', '5_26' ],\n  [ '5_27', '009@309a2-009@318a7', '5_27' ],\n  [ '5_28', '009@318a7-009@328a6', '5_28' ],\n  [ '6_1', '010@001b1-010@013a7', '6_1' ],\n  [ '6_2', '010@013a7-010@027a5', '6_2' ],\n  [ '6_3', '010@027a5-010@041b3', '6_3' ],\n  [ '6_4', '010@041b3-010@051b2', '6_4' ],\n  [ '6_5', '010@051b2-010@063a2', '6_5' ],\n  [ '6_6', '010@063a2-010@074a5', '6_6' ],\n  [ '6_7', '010@074a5-010@085b3', '6_7' ],\n  [ '6_8', '010@085b3-010@097a3', '6_8' ],\n  [ '6_9', '010@097a3-010@108a3', '6_9' ],\n  [ '6_10', '010@108a3-010@121a3', '6_10' ],\n  [ '6_11', '010@121a3-010@133a5', '6_11' ],\n  [ '6_12', '010@133a5-010@144b7', '6_12' ],\n  [ '6_13', '010@144b7-010@156b6', '6_13' ],\n  [ '6_14', '010@156b6-010@168a2', '6_14' ],\n  [ '6_15', '010@168a2-010@178b4', '6_15' ],\n  [ '6_16', '010@178b4-010@192a2', '6_16' ],\n  [ '6_17', '010@192a2-010@205a3', '6_17' ],\n  [ '6_18', '010@205a3-010@217b6', '6_18' ],\n  [ '6_19', '010@217b6-010@229a1', '6_19' ],\n  [ '6_20', '010@229a1-010@237a5', '6_20' ],\n  [ '6_21', '010@237a5-010@252a1', '6_21' ],\n  [ '6_22', '010@252a1-010@261b7', '6_22' ],\n  [ '6_23', '010@261b7-010@273a3', '6_23' ],\n  [ '6_24', '010@273a3-010@281a2', '6_24' ],\n  [ '6_25', '010@281a2-010@289b3', '6_25' ],\n  [ '6_26', '010@289b3-010@299a6', '6_26' ],\n  [ '6_27', '010@299a6-011@001b1', '6_27' ],\n  [ '6_28', '011@001b1-011@013a4', '6_28' ],\n  [ '6_29', '011@013a4-011@024a6', '6_29' ],\n  [ '6_30', '011@024a6-011@037a2', '6_30' ],\n  [ '6_31', '011@037a2-011@050b2', '6_31' ],\n  [ '6_32', '011@050b2-011@060b7', '6_32' ],\n  [ '6_33', '011@060b7-011@070a7', '6_33' ],\n  [ '6_34', '011@070a7-011@088a1', '6_34' ],\n  [ '6_35', '011@088a1-011@099b2', '6_35' ],\n  [ '6_36', '011@099b2-011@112b1', '6_36' ],\n  [ '6_37', '011@112b1-011@122a4', '6_37' ],\n  [ '6_38', '011@122a4-011@134b1', '6_38' ],\n  [ '6_39', '011@134b1-011@144a2', '6_39' ],\n  [ '6_40', '011@144a2-011@151a2', '6_40' ],\n  [ '6_41', '011@151a2-011@159a3', '6_41' ],\n  [ '6_42', '011@159a3-011@170a6', '6_42' ],\n  [ '6_43', '011@170a6-011@182b3', '6_43' ],\n  [ '6_44', '011@182b3-011@192a6', '6_44' ],\n  [ '6_45', '011@192a6-011@202a1', '6_45' ],\n  [ '6_46', '011@202a1-011@209b4', '6_46' ],\n  [ '6_47', '011@209b4-011@218a7', '6_47' ],\n  [ '6_48', '011@218a7-011@227a6', '6_48' ],\n  [ '6_49', '011@227a6-011@237b6', '6_49' ],\n  [ '6_50', '011@237b6-011@247b2', '6_50' ],\n  [ '6_51', '011@247b2-011@258a2', '6_51' ],\n  [ '6_52', '011@258a2-011@268b4', '6_52' ],\n  [ '6_53', '011@268b4-011@277a1', '6_53' ],\n  [ '6_54', '011@277a1-011@285b5', '6_54' ],\n  [ '6_55', '011@285b5-011@294b7', '6_55' ],\n  [ '6_56', '011@294b7-011@304b6', '6_56' ],\n  [ '6_57', '011@304b6-011@315a7', '6_57' ],\n  [ '6_58', '011@315a7-011@325b2', '6_58' ],\n  [ '6_59', '011@325b2-011@333a7', '6_59' ],\n  [ '7a_1', '012@001b1-012@011b1', '7_1' ],\n  [ '7a_2', '012@011b1-012@020a1', '7_2' ],\n  [ '7a_3', '012@020a1-012@028a7', '7_3' ],\n  [ '7a_4', '012@028a7-012@037b1', '7_4' ],\n  [ '7a_5', '012@037b1-012@046a7', '7_5' ],\n  [ '7a_6', '012@046a7-012@054a4', '7_6' ],\n  [ '7a_7', '012@054a4-012@061a8', '7_7' ],\n  [ '7a_8', '012@061a8-012@068b3', '7_8' ],\n  [ '7a_9', '012@068b3-012@076a4', '7_9' ],\n  [ '7a_10', '012@076a4-012@083a3', '7_10' ],\n  [ '7a_11', '012@083a3-012@091a3', '7_11' ],\n  [ '7a_12', '012@091a3-013@313a5', '7_12' ],\n  [ '7b', '012@092b1-302a7', '8' ],\n  [ '_1', '012@092b2-012@104b5', '19_1' ],\n  [ '_2', '012@104b5-012@113b8', '19_2' ],\n  [ '_3', '012@113b8-012@128a2', '19_3' ],\n  [ '_4', '012@128a2-012@138a6', '19_4' ],\n  [ '_5', '012@138a6-012@149a6', '19_5' ],\n  [ '_6', '012@149a6-012@160b5', '19_6' ],\n  [ '_7', '012@160b5-012@168b3', '19_7' ],\n  [ '_8', '012@168b3-012@175b7', '19_8' ],\n  [ '_9', '012@175b7-012@183a7', '19_9' ],\n  [ '_10', '012@183a7-012@192a2', '19_10' ],\n  [ '_11', '012@192a2-012@201a8', '19_11' ],\n  [ '_12', '012@201a8-012@211b5', '19_12' ],\n  [ '_13', '012@211b5-012@221a5', '19_13' ],\n  [ '_14', '012@221a5-012@230a8', '19_14' ],\n  [ '_15', '012@230a8-012@239a4', '19_15' ],\n  [ '_16', '012@239a4-012@248b7', '19_16' ],\n  [ '_17', '012@248b7-012@258a7', '19_17' ],\n  [ '_18', '012@258a7-012@268a3', '19_18' ],\n  [ '_19', '012@268a3-012@275b6', '19_19' ],\n  [ '_20', '012@275b6-012@283a8', '19_20' ],\n  [ '_21', '012@283a8-012@292a5', '19_21' ],\n  [ '_22', '012@292a5-0', '19_22' ],\n  [ '7b', '013@001b1-313a5', '8' ],\n  [ '_30', '013@066b8-013@074b3', '19_30' ],\n  [ '_31', '013@074b3-013@084b4', '19_31' ],\n  [ '_32', '013@084b4-013@094a4', '19_32' ],\n  [ '_33', '013@094a4-013@102b5', '19_33' ],\n  [ '_34', '013@102b5-013@112a5', '19_34' ],\n  [ '_35', '013@112a5-013@123a5', '19_35' ],\n  [ '_36', '013@123a5-013@134a2', '19_36' ],\n  [ '_37', '013@134a2-013@144a8', '19_37' ],\n  [ '_38', '013@144a8-013@154b7', '19_38' ],\n  [ '_39', '013@154b7-013@165a3', '19_39' ],\n  [ '_40', '013@165a3-013@175a8', '19_40' ],\n  [ '_41', '013@175a8-013@183b6', '19_41' ],\n  [ '_42', '013@183b6-013@193a8', '19_42' ],\n  [ '_43', '013@193a8-013@201b8', '19_43' ],\n  [ '_44', '013@201b8-013@211b3', '19_44' ],\n  [ '_45', '013@211b3-013@221b6', '19_45' ],\n  [ '_46', '013@221b6-013@232a8', '19_46' ],\n  [ '_47', '013@232a8-013@243a8', '19_47' ],\n  [ '_48', '013@243a8-013@255a3', '19_48' ],\n  [ '_49', '013@255a3-013@267a5', '19_49' ],\n  [ '_50', '013@267a5-013@277b8', '19_50' ],\n  [ '_51', '013@277b8-013@291b2', '19_51' ],\n  [ '_52', '013@291b2-013@302a8', '19_52' ],\n  [ '_53', '013@302a8-0', '19_53' ],\n  [ '8_1', '014@001b1-014@019a5', '25_1' ],\n  [ '8_2', '014@019a5-014@035a5', '25_2' ],\n  [ '8_3', '014@035a5-014@056b5', '25_3' ],\n  [ '8_4', '014@056b5-014@072a6', '25_4' ],\n  [ '8_5', '014@072a6-014@087a7', '25_5' ],\n  [ '8_6', '014@087a7-014@104a4', '25_6' ],\n  [ '8_7', '014@104a4-014@116b5', '25_7' ],\n  [ '8_8', '014@116b5-014@132a6', '25_8' ],\n  [ '8_9', '014@132a6-014@148a4', '25_9' ],\n  [ '8_10', '014@148a4-014@163a7', '25_10' ],\n  [ '8_11', '014@163a7-014@179b4', '25_11' ],\n  [ '8_12', '014@179b4-014@198b2', '25_12' ],\n  [ '8_13', '014@198b2-014@212b3', '25_13' ],\n  [ '8_14', '014@212b3-014@225b6', '25_14' ],\n  [ '8_15', '014@225b6-014@239a5', '25_15' ],\n  [ '8_16', '014@239a5-014@254a5', '25_16' ],\n  [ '8_17', '014@254a5-014@270a4', '25_17' ],\n  [ '8_18', '014@270a4-014@286b1', '25_18' ],\n  [ '8_19', '014@286b1-014@310b5', '25_19' ],\n  [ '8_20', '014@310b5-014@332b7', '25_20' ],\n  [ '8_21', '014@332b7-014@346b5', '25_21' ],\n  [ '8_22', '014@346b5-014@363b6', '25_22' ],\n  [ '8_23', '014@363b6-014@378b4', '25_23' ],\n  [ '8_24', '014@378b4-015@001b1', '25_24' ],\n  [ '8_25', '015@001b1-015@018b4', '25_25' ],\n  [ '8_26', '015@018b4-015@034a6', '25_26' ],\n  [ '8_27', '015@034a6-015@049a5', '25_27' ],\n  [ '8_28', '015@049a5-015@062b1', '25_28' ],\n  [ '8_29', '015@062b1-015@074b1', '25_29' ],\n  [ '8_30', '015@074b1-015@087a2', '25_30' ],\n  [ '8_31', '015@087a2-015@101a8', '25_31' ],\n  [ '8_32', '015@101a8-015@113b3', '25_32' ],\n  [ '8_33', '015@113b3-015@123b1', '25_33' ],\n  [ '8_34', '015@123b1-015@137b1', '25_34' ],\n  [ '8_35', '015@137b1-015@154a1', '25_35' ],\n  [ '8_36', '015@154a1-015@165b7', '25_36' ],\n  [ '8_37', '015@165b7-015@181a3', '25_37' ],\n  [ '8_38', '015@181a3-015@198b3', '25_38' ],\n  [ '8_39', '015@198b3-015@215b7', '25_39' ],\n  [ '8_40', '015@215b7-015@231b7', '25_40' ],\n  [ '8_41', '015@231b7-015@246b5', '25_41' ],\n  [ '8_42', '015@246b5-015@262b3', '25_42' ],\n  [ '8_43', '015@262b3-015@275b5', '25_43' ],\n  [ '8_44', '015@275b5-015@292a4', '25_44' ],\n  [ '8_45', '015@292a4-015@312a4', '25_45' ],\n  [ '8_46', '015@312a4-015@328b2', '25_46' ],\n  [ '8_47', '015@328b2-015@344a7', '25_47' ],\n  [ '8_48', '015@344a7-015@358b3', '25_48' ],\n  [ '8_49', '015@358b3-015@371b5', '25_49' ],\n  [ '8_50', '015@371b5-015@386a1', '25_50' ],\n  [ '8_51', '015@386a1-016@001b1', '25_51' ],\n  [ '8_52', '016@001b1-016@015b2', '25_52' ],\n  [ '8_53', '016@015b2-016@028a3', '25_53' ],\n  [ '8_54', '016@028a3-016@041b2', '25_54' ],\n  [ '8_55', '016@041b2-016@055b2', '25_55' ],\n  [ '8_56', '016@055b2-016@069b7', '25_56' ],\n  [ '8_57', '016@069b7-016@082b2', '25_57' ],\n  [ '8_58', '016@082b2-016@099b1', '25_58' ],\n  [ '8_59', '016@099b1-016@119a6', '25_59' ],\n  [ '8_60', '016@119a6-016@139a5', '25_60' ],\n  [ '8_61', '016@139a5-016@151b2', '25_61' ],\n  [ '8_62', '016@151b2-016@164b4', '25_62' ],\n  [ '8_63', '016@164b4-016@180b7', '25_63' ],\n  [ '8_64', '016@180b7-016@196a5', '25_64' ],\n  [ '8_65', '016@196a5-016@210a3', '25_65' ],\n  [ '8_66', '016@210a3-016@223a1', '25_66' ],\n  [ '8_67', '016@223a1-016@234b7', '25_67' ],\n  [ '8_68', '016@234b7-016@249b1', '25_68' ],\n  [ '8_69', '016@249b1-016@264b4', '25_69' ],\n  [ '8_70', '016@264b4-016@280b6', '25_70' ],\n  [ '8_71', '016@280b6-016@298a1', '25_71' ],\n  [ '8_72', '016@298a1-016@316a7', '25_72' ],\n  [ '8_73', '016@316a7-016@331a4', '25_73' ],\n  [ '8_74', '016@331a4-016@346a4', '25_74' ],\n  [ '8_75', '016@346a4-016@364a1', '25_75' ],\n  [ '8_76', '016@364a1-016@380b6', '25_76' ],\n  [ '8_77', '016@380b6-017@001b1', '25_77' ],\n  [ '8_78', '017@001b1-017@024b1', '25_78' ],\n  [ '8_79', '017@024b1-017@039a1', '25_79' ],\n  [ '8_80', '017@039a1-017@059a7', '25_80' ],\n  [ '8_81', '017@059a7-017@076b7', '25_81' ],\n  [ '8_82', '017@076b7-017@093b5', '25_82' ],\n  [ '8_83', '017@093b5-017@110b1', '25_83' ],\n  [ '8_84', '017@110b1-017@125a6', '25_84' ],\n  [ '8_85', '017@125a6-017@141a6', '25_85' ],\n  [ '8_86', '017@141a6-017@156b6', '25_86' ],\n  [ '8_87', '017@156b6-017@169b4', '25_87' ],\n  [ '8_88', '017@169b4-017@188b1', '25_88' ],\n  [ '8_89', '017@188b1-017@200b3', '25_89' ],\n  [ '8_90', '017@200b3-017@214a2', '25_90' ],\n  [ '8_91', '017@214a2-017@228a1', '25_91' ],\n  [ '8_92', '017@228a1-017@240a3', '25_92' ],\n  [ '8_93', '017@240a3-017@254b1', '25_93' ],\n  [ '8_94', '017@254b1-017@268b3', '25_94' ],\n  [ '8_95', '017@268b3-017@282b7', '25_95' ],\n  [ '8_96', '017@282b7-017@295b1', '25_96' ],\n  [ '8_97', '017@295b1-017@309b2', '25_97' ],\n  [ '8_98', '017@309b2-017@325a3', '25_98' ],\n  [ '8_99', '017@325a3-017@337b6', '25_99' ],\n  [ '8_100', '017@337b6-017@352b3', '25_100' ],\n  [ '8_101', '017@352b3-017@363a6', '25_101' ],\n  [ '8_102', '017@363a6-018@001a1', '25_102' ],\n  [ '8_103', '018@001a1-018@018a2', '25_103' ],\n  [ '8_104', '018@018a2-018@031a3', '25_104' ],\n  [ '8_105', '018@031a3-018@043a6', '25_105' ],\n  [ '8_106', '018@043a6-018@055a1', '25_106' ],\n  [ '8_107', '018@055a1-018@069a7', '25_107' ],\n  [ '8_108', '018@069a7-018@084a1', '25_108' ],\n  [ '8_109', '018@084a1-018@098a5', '25_109' ],\n  [ '8_110', '018@098a5-018@113b2', '25_110' ],\n  [ '8_111', '018@113b2-018@129a2', '25_111' ],\n  [ '8_112', '018@129a2-018@143a5', '25_112' ],\n  [ '8_113', '018@143a5-018@153a1', '25_113' ],\n  [ '8_114', '018@153a1-018@167a6', '25_114' ],\n  [ '8_115', '018@167a6-018@182a5', '25_115' ],\n  [ '8_116', '018@182a5-018@193b2', '25_116' ],\n  [ '8_117', '018@193b2-018@225a7', '25_117' ],\n  [ '8_118', '018@225a7-018@238b5', '25_118' ],\n  [ '8_119', '018@238b5-018@253a3', '25_119' ],\n  [ '8_120', '018@253a3-018@266b3', '25_120' ],\n  [ '8_121', '018@266b3-018@282b2', '25_121' ],\n  [ '8_122', '018@282b2-018@297a2', '25_122' ],\n  [ '8_123', '018@297a2-018@313a7', '25_123' ],\n  [ '8_124', '018@313a7-018@328b1', '25_124' ],\n  [ '8_125', '018@328b1-018@344a5', '25_125' ],\n  [ '8_126', '018@344a5-018@363a2', '25_126' ],\n  [ '8_127', '018@363a2-018@380b4', '25_127' ],\n  [ '8_128', '018@380b4-019@001b1', '25_128' ],\n  [ '8_129', '019@001b1-019@015b6', '25_129' ],\n  [ '8_130', '019@015b6-019@046a3', '25_130' ],\n  [ '8_132', '019@046a3-019@061b7', '25_132' ],\n  [ '8_133', '019@061b7-019@074b3', '25_133' ],\n  [ '8_134', '019@074b3-019@087b7', '25_134' ],\n  [ '8_135', '019@087b7-019@101b5', '25_135' ],\n  [ '8_136', '019@101b5-019@117a7', '25_136' ],\n  [ '8_137', '019@117a7-019@131a6', '25_137' ],\n  [ '8_138', '019@131a6-019@145b5', '25_138' ],\n  [ '8_139', '019@145b5-019@158a3', '25_139' ],\n  [ '8_140', '019@158a3-019@170a6', '25_140' ],\n  [ '8_141', '019@170a6-019@182a7', '25_141' ],\n  [ '8_142', '019@182a7-019@195b6', '25_142' ],\n  [ '8_143', '019@195b6-019@209a1', '25_143' ],\n  [ '8_144', '019@209a1-019@222a3', '25_144' ],\n  [ '8_145', '019@222a3-019@234b4', '25_145' ],\n  [ '8_146', '019@234b4-019@252a5', '25_146' ],\n  [ '8_147', '019@252a5-019@268b6', '25_147' ],\n  [ '8_148', '019@268b6-019@284a3', '25_148' ],\n  [ '8_149', '019@284a3-019@299b6', '25_149' ],\n  [ '8_150', '019@299b6-019@316a2', '25_150' ],\n  [ '8_151', '019@316a2-019@338a3', '25_151' ],\n  [ '8_152', '019@338a3-019@356b3', '25_152' ],\n  [ '8_153', '019@356b3-020@001b1', '25_153' ],\n  [ '8_154', '020@001b1-020@024a7', '25_154' ],\n  [ '8_155', '020@024a7-020@046a7', '25_155' ],\n  [ '8_156', '020@046a7-020@067a1', '25_156' ],\n  [ '8_157', '020@067a1-020@082b2', '25_157' ],\n  [ '8_158', '020@082b2-020@098a4', '25_158' ],\n  [ '8_159', '020@098a4-020@116b1', '25_159' ],\n  [ '8_160', '020@116b1-020@134a6', '25_160' ],\n  [ '8_161', '020@134a6-020@152b3', '25_161' ],\n  [ '8_162', '020@152b3-020@171a4', '25_162' ],\n  [ '8_163', '020@171a4-020@189b1', '25_163' ],\n  [ '8_164', '020@189b1-020@208a7', '25_164' ],\n  [ '8_165', '020@208a7-020@226b4', '25_165' ],\n  [ '8_166', '020@226b4-020@246a5', '25_166' ],\n  [ '8_167', '020@246a5-020@265a3', '25_167' ],\n  [ '8_168', '020@265a3-020@280a6', '25_168' ],\n  [ '8_169', '020@280a6-020@297b4', '25_169' ],\n  [ '8_170', '020@297b4-020@314a1', '25_170' ],\n  [ '8_171', '020@314a1-020@330b5', '25_171' ],\n  [ '8_172', '020@330b5-020@348a1', '25_172' ],\n  [ '8_173', '020@348a1-020@365a3', '25_173' ],\n  [ '8_174', '020@365a3-020@382a4', '25_174' ],\n  [ '8_175', '020@382a4-021@001b1', '25_175' ],\n  [ '8_176', '021@001b1-021@017b1', '25_176' ],\n  [ '8_177', '021@017b1-021@029b3', '25_177' ],\n  [ '8_178', '021@029b3-021@042a2', '25_178' ],\n  [ '8_179', '021@042a2-021@057b5', '25_179' ],\n  [ '8_180', '021@057b5-021@069b1', '25_180' ],\n  [ '8_181', '021@069b1-021@085b3', '25_181' ],\n  [ '8_182', '021@085b3-021@097a7', '25_182' ],\n  [ '8_183', '021@097a7-021@109b4', '25_183' ],\n  [ '8_184', '021@109b4-021@121b4', '25_184' ],\n  [ '8_185', '021@121b4-021@136a3', '25_185' ],\n  [ '8_186', '021@136a3-021@151b5', '25_186' ],\n  [ '8_187', '021@151b5-021@166b4', '25_187' ],\n  [ '8_188', '021@166b4-021@181a3', '25_188' ],\n  [ '8_189', '021@181a3-021@192a2', '25_189' ],\n  [ '8_190', '021@192a2-021@205a5', '25_190' ],\n  [ '8_191', '021@205a5-021@220b1', '25_191' ],\n  [ '8_192', '021@220b1-021@241b5', '25_192' ],\n  [ '8_193', '021@241b5-021@268b1', '25_193' ],\n  [ '8_194', '021@268b1-021@291b4', '25_194' ],\n  [ '8_195', '021@291b4-021@307a6', '25_195' ],\n  [ '8_196', '021@307a6-021@321a8', '25_196' ],\n  [ '8_197', '021@321a8-021@338a6', '25_197' ],\n  [ '8_198', '021@338a6-021@353a5', '25_198' ],\n  [ '8_199', '021@353a5-021@366a4', '25_199' ],\n  [ '8_200', '021@366a4-021@383a4', '25_200' ],\n  [ '8_201', '021@383a4-022@001b1', '25_201' ],\n  [ '8_202', '022@001b1-022@020b2', '25_202' ],\n  [ '8_203', '022@020b2-022@034a1', '25_203' ],\n  [ '8_204', '022@034a1-022@049a6', '25_204' ],\n  [ '8_205', '022@049a6-022@065a6', '25_205' ],\n  [ '8_206', '022@065a6-022@077b4', '25_206' ],\n  [ '8_207', '022@077b4-022@095b7', '25_207' ],\n  [ '8_208', '022@095b7-022@111b7', '25_208' ],\n  [ '8_209', '022@111b7-022@126a3', '25_209' ],\n  [ '8_210', '022@126a3-022@140b3', '25_210' ],\n  [ '8_211', '022@140b3-022@158b1', '25_211' ],\n  [ '8_212', '022@158b1-022@174a2', '25_212' ],\n  [ '8_213', '022@174a2-022@190b2', '25_213' ],\n  [ '8_214', '022@190b2-022@206a7', '25_214' ],\n  [ '8_215', '022@206a7-022@220b2', '25_215' ],\n  [ '8_216', '022@220b2-022@233b3', '25_216' ],\n  [ '8_217', '022@233b3-022@246b7', '25_217' ],\n  [ '8_218', '022@246b7-022@262a2', '25_218' ],\n  [ '8_219', '022@262a2-022@275b4', '25_219' ],\n  [ '8_220', '022@275b4-022@291a2', '25_220' ],\n  [ '8_221', '022@291a2-022@304b7', '25_221' ],\n  [ '8_222', '022@304b7-022@320a3', '25_222' ],\n  [ '8_223', '022@320a3-022@339b1', '25_223' ],\n  [ '8_224', '022@339b1-022@356b2', '25_224' ],\n  [ '8_225', '022@356b2-022@370a4', '25_225' ],\n  [ '8_226', '022@370a4-023@001b1', '25_226' ],\n  [ '8_227', '023@001b1-023@017a4', '25_227' ],\n  [ '8_228', '023@017a4-023@030b6', '25_228' ],\n  [ '8_229', '023@030b6-023@044a3', '25_229' ],\n  [ '8_230', '023@044a3-023@061b4', '25_230' ],\n  [ '8_231', '023@061b4-023@075b3', '25_231' ],\n  [ '8_232', '023@075b3-023@087a4', '25_232' ],\n  [ '8_233', '023@087a4-023@102a2', '25_233' ],\n  [ '8_234', '023@102a2-023@117a7', '25_234' ],\n  [ '8_235', '023@117a7-023@132b1', '25_235' ],\n  [ '8_236', '023@132b1-023@144a6', '25_236' ],\n  [ '8_237', '023@144a6-023@160b5', '25_237' ],\n  [ '8_238', '023@160b5-023@181b6', '25_238' ],\n  [ '8_239', '023@181b6-023@196a7', '25_239' ],\n  [ '8_240', '023@196a7-023@212a5', '25_240' ],\n  [ '8_241', '023@212a5-023@223a7', '25_241' ],\n  [ '8_242', '023@223a7-023@234b2', '25_242' ],\n  [ '8_243', '023@234b2-023@249a6', '25_243' ],\n  [ '8_244', '023@249a6-023@263a5', '25_244' ],\n  [ '8_245', '023@263a5-023@281a3', '25_245' ],\n  [ '8_246', '023@281a3-023@295b3', '25_246' ],\n  [ '8_247', '023@295b3-023@311b7', '25_247' ],\n  [ '8_248', '023@311b7-023@327b5', '25_248' ],\n  [ '8_249', '023@327b5-023@341a6', '25_249' ],\n  [ '8_250', '023@341a6-023@353b4', '25_250' ],\n  [ '8_251', '023@353b4-023@371b7', '25_251' ],\n  [ '8_252', '023@371b7-024@001b1', '25_252' ],\n  [ '8_253', '024@001b1-024@017b5', '25_253' ],\n  [ '8_254', '024@017b5-024@033a5', '25_254' ],\n  [ '8_255', '024@033a5-024@047b6', '25_255' ],\n  [ '8_256', '024@047b6-024@063a2', '25_256' ],\n  [ '8_257', '024@063a2-024@076a3', '25_257' ],\n  [ '8_258', '024@076a3-024@090a3', '25_258' ],\n  [ '8_259', '024@090a3-024@107a2', '25_259' ],\n  [ '8_260', '024@107a2-024@128b2', '25_260' ],\n  [ '8_261', '024@128b2-024@146a1', '25_261' ],\n  [ '8_262', '024@146a1-024@165b6', '25_262' ],\n  [ '8_263', '024@165b6-024@183a2', '25_263' ],\n  [ '8_264', '024@183a2-024@200b4', '25_264' ],\n  [ '8_265', '024@200b4-024@221a1', '25_265' ],\n  [ '8_266', '024@221a1-024@241b4', '25_266' ],\n  [ '8_267', '024@241b4-024@255a1', '25_267' ],\n  [ '8_268', '024@255a1-024@279a4', '25_268' ],\n  [ '8_269', '024@279a4-024@303b3', '25_269' ],\n  [ '8_270', '024@303b3-024@325b5', '25_270' ],\n  [ '8_271', '024@325b5-024@345a4', '25_271' ],\n  [ '8_272', '024@345a4-024@361a7', '25_272' ],\n  [ '8_273', '024@361a7-024@377b3', '25_273' ],\n  [ '8_274', '024@377b3-024@396a2', '25_274' ],\n  [ '8_275', '024@396a2-025@001b1', '25_275' ],\n  [ '8_276', '025@001b1-025@018b1', '25_276' ],\n  [ '8_277', '025@018b1-025@029a6', '25_277' ],\n  [ '8_278', '025@029a6-025@038b6', '25_278' ],\n  [ '8_279', '025@038b6-025@055a5', '25_279' ],\n  [ '8_280', '025@055a5-025@071a7', '25_280' ],\n  [ '8_281', '025@071a7-025@088b3', '25_281' ],\n  [ '8_282', '025@088b3-025@103a7', '25_282' ],\n  [ '8_283', '025@103a7-025@123a7', '25_283' ],\n  [ '8_284', '025@123a7-025@142b6', '25_284' ],\n  [ '8_285', '025@142b6-025@162a7', '25_285' ],\n  [ '8_286', '025@162a7-025@180a2', '25_286' ],\n  [ '8_287', '025@180a2-025@201a1', '25_287' ],\n  [ '8_288', '025@201a1-025@217a5', '25_288' ],\n  [ '8_289', '025@217a5-025@230b5', '25_289' ],\n  [ '8_290', '025@230b5-025@244a1', '25_290' ],\n  [ '8_291', '025@244a1-025@256a2', '25_291' ],\n  [ '8_292', '025@256a2-025@269a6', '25_292' ],\n  [ '8_293', '025@269a6-025@282b2', '25_293' ],\n  [ '8_294', '025@282b2-025@296b1', '25_294' ],\n  [ '8_295', '025@296b1-025@312b2', '25_295' ],\n  [ '8_296', '025@312b2-025@327b2', '25_296' ],\n  [ '8_297', '025@327b2-025@347a3', '25_297' ],\n  [ '8_298', '025@347a3-025@362a1', '25_298' ],\n  [ '8_299', '025@362a1-025@379b5', '25_299' ],\n  [ '8_300', '025@379b5-025@395a6', '25_300' ],\n  [ '9_1', '026@001b1-026@016b1', '26_1' ],\n  [ '9_2', '026@016b1-026@031a1', '26_2' ],\n  [ '9_3', '026@031a1-026@046b6', '26_3' ],\n  [ '9_4', '026@046b6-026@062a3', '26_4' ],\n  [ '9_5', '026@062a3-026@076b4', '26_5' ],\n  [ '9_6', '026@076b4-026@091b6', '26_6' ],\n  [ '9_7', '026@091b6-026@108b5', '26_7' ],\n  [ '9_8', '026@108b5-026@123b4', '26_8' ],\n  [ '9_9', '026@123b4-026@137a7', '26_9' ],\n  [ '9_10', '026@137a7-026@151b2', '26_10' ],\n  [ '9_11', '026@151b2-026@165b6', '26_11' ],\n  [ '9_12', '026@165b6-026@180a3', '26_12' ],\n  [ '9_13', '026@180a3-026@195a3', '26_13' ],\n  [ '9_14', '026@195a3-026@210a6', '26_14' ],\n  [ '9_15', '026@210a6-026@223b2', '26_15' ],\n  [ '9_16', '026@223b2-026@236b6', '26_16' ],\n  [ '9_17', '026@236b6-026@251a4', '26_17' ],\n  [ '9_18', '026@251a4-026@266b6', '26_18' ],\n  [ '9_19', '026@266b6-026@280a2', '26_19' ],\n  [ '9_20', '026@280a2-026@293b1', '26_20' ],\n  [ '9_21', '026@293b1-026@308a7', '26_21' ],\n  [ '9_22', '026@308a7-026@323b4', '26_22' ],\n  [ '9_23', '026@323b4-026@337b7', '26_23' ],\n  [ '9_24', '026@337b7-026@352a6', '26_24' ],\n  [ '9_25', '026@352a6-026@367b6', '26_25' ],\n  [ '9_26', '026@367b6-027@001b1', '26_26' ],\n  [ '9_27', '027@001b1-027@015b1', '26_27' ],\n  [ '9_28', '027@015b1-027@028b5', '26_28' ],\n  [ '9_29', '027@028b5-027@044a2', '26_29' ],\n  [ '9_30', '027@044a2-027@062a3', '26_30' ],\n  [ '9_31', '027@062a3-027@076a6', '26_31' ],\n  [ '9_32', '027@076a6-027@092a7', '26_32' ],\n  [ '9_33', '027@092a7-027@107a4', '26_33' ],\n  [ '9_34', '027@107a4-027@124a2', '26_34' ],\n  [ '9_35', '027@124a2-027@139a3', '26_35' ],\n  [ '9_36', '027@139a3-027@154b3', '26_36' ],\n  [ '9_37', '027@154b3-027@171a3', '26_37' ],\n  [ '9_38', '027@171a3-027@186a7', '26_38' ],\n  [ '9_39', '027@186a7-027@201a3', '26_39' ],\n  [ '9_40', '027@201a3-027@215b1', '26_40' ],\n  [ '9_41', '027@215b1-027@229b3', '26_41' ],\n  [ '9_42', '027@229b3-027@243b5', '26_42' ],\n  [ '9_43', '027@243b5-027@257a1', '26_43' ],\n  [ '9_44', '027@257a1-027@268b4', '26_44' ],\n  [ '9_45', '027@268b4-027@282b4', '26_45' ],\n  [ '9_46', '027@282b4-027@295a3', '26_46' ],\n  [ '9_47', '027@295a3-027@308a6', '26_47' ],\n  [ '9_48', '027@308a6-027@324b5', '26_48' ],\n  [ '9_49', '027@324b5-027@341b7', '26_49' ],\n  [ '9_50', '027@341b7-027@359b6', '26_50' ],\n  [ '9_51', '027@359b6-027@376a6', '26_51' ],\n  [ '9_52', '027@376a6-028@001b1', '26_52' ],\n  [ '9_53', '028@001b1-028@017b7', '26_53' ],\n  [ '9_54', '028@017b7-028@037a3', '26_54' ],\n  [ '9_55', '028@037a3-028@053a2', '26_55' ],\n  [ '9_56', '028@053a2-028@070a6', '26_56' ],\n  [ '9_57', '028@070a6-028@085b5', '26_57' ],\n  [ '9_58', '028@085b5-028@101b5', '26_58' ],\n  [ '9_59', '028@101b5-028@117a1', '26_59' ],\n  [ '9_60', '028@117a1-028@129b7', '26_60' ],\n  [ '9_61', '028@129b7-028@145a4', '26_61' ],\n  [ '9_62', '028@145a4-028@159a5', '26_62' ],\n  [ '9_63', '028@159a5-028@174b7', '26_63' ],\n  [ '9_64', '028@174b7-028@189b6', '26_64' ],\n  [ '9_65', '028@189b6-028@206a5', '26_65' ],\n  [ '9_66', '028@206a5-028@221b2', '26_66' ],\n  [ '9_67', '028@221b2-028@234b1', '26_67' ],\n  [ '9_68', '028@234b1-028@247b3', '26_68' ],\n  [ '9_69', '028@247b3-028@259b6', '26_69' ],\n  [ '9_70', '028@259b6-028@274a2', '26_70' ],\n  [ '9_71', '028@274a2-028@286b6', '26_71' ],\n  [ '9_72', '028@286b6-028@300a4', '26_72' ],\n  [ '9_73', '028@300a4-028@314b2', '26_73' ],\n  [ '9_74', '028@314b2-028@329b1', '26_74' ],\n  [ '9_75', '028@329b1-028@342b5', '26_75' ],\n  [ '9_76', '028@342b5-028@353b1', '26_76' ],\n  [ '9_77', '028@353b1-028@366a4', '26_77' ],\n  [ '9_78', '028@366a4-028@381a5', '26_78' ],\n  [ '10_1', '029@001b2-029@015b7', '27_1' ],\n  [ '10_2', '029@015b7-029@030a7', '27_2' ],\n  [ '10_3', '029@030a7-029@043a4', '27_3' ],\n  [ '10_4', '029@043a4-029@056a3', '27_4' ],\n  [ '10_5', '029@056a3-029@070b6', '27_5' ],\n  [ '10_6', '029@070b6-029@085a1', '27_6' ],\n  [ '10_7', '029@085a1-029@099b2', '27_7' ],\n  [ '10_8', '029@099b2-029@114a4', '27_8' ],\n  [ '10_9', '029@114a4-029@132a1', '27_9' ],\n  [ '10_10', '029@132a1-029@143b1', '27_10' ],\n  [ '10_11', '029@143b1-029@155a4', '27_11' ],\n  [ '10_12', '029@155a4-029@168a2', '27_12' ],\n  [ '10_13', '029@168a2-029@183b7', '27_13' ],\n  [ '10_14', '029@183b7-029@197a7', '27_14' ],\n  [ '10_15', '029@197a7-029@209b1', '27_15' ],\n  [ '10_16', '029@209b1-029@223b5', '27_16' ],\n  [ '10_17', '029@223b5-029@238a7', '27_17' ],\n  [ '10_18', '029@238a7-029@252b1', '27_18' ],\n  [ '10_19', '029@252b1-029@264a1', '27_19' ],\n  [ '10_20', '029@264a1-029@275a3', '27_20' ],\n  [ '10_21', '029@275a3-029@287b6', '27_21' ],\n  [ '10_22', '029@287b6-030@001b1', '27_22' ],\n  [ '10_23', '030@001b1-030@014a4', '27_23' ],\n  [ '10_24', '030@014a4-030@026b5', '27_24' ],\n  [ '10_25', '030@026b5-030@038b2', '27_25' ],\n  [ '10_26', '030@038b2-030@052a4', '27_26' ],\n  [ '10_27', '030@052a4-030@064b2', '27_27' ],\n  [ '10_28', '030@064b2-030@076b6', '27_28' ],\n  [ '10_29', '030@076b6-030@088b4', '27_29' ],\n  [ '10_30', '030@088b4-030@101b5', '27_30' ],\n  [ '10_31', '030@101b5-030@113a4', '27_31' ],\n  [ '10_32', '030@113a4-030@128a7', '27_32' ],\n  [ '10_33', '030@128a7-030@141a3', '27_33' ],\n  [ '10_34', '030@141a3-030@155a2', '27_34' ],\n  [ '10_35', '030@155a2-030@166b4', '27_35' ],\n  [ '10_36', '030@166b4-030@182a2', '27_36' ],\n  [ '10_37', '030@182a2-030@196b1', '27_37' ],\n  [ '10_38', '030@196b1-030@210b7', '27_38' ],\n  [ '10_39', '030@210b7-030@225a2', '27_39' ],\n  [ '10_40', '030@225a2-030@239b1', '27_40' ],\n  [ '10_41', '030@239b1-030@258a2', '27_41' ],\n  [ '10_42', '030@258a2-030@273b1', '27_42' ],\n  [ '10_43', '030@273b1-030@289b3', '27_43' ],\n  [ '10_44', '030@289b3-031@001b1', '27_44' ],\n  [ '10_45', '031@001b1-031@014a2', '27_45' ],\n  [ '10_46', '031@014a2-031@026a3', '27_46' ],\n  [ '10_47', '031@026a3-031@039a2', '27_47' ],\n  [ '10_48', '031@039a2-031@051a4', '27_48' ],\n  [ '10_49', '031@051a4-031@061b1', '27_49' ],\n  [ '10_50', '031@061b1-031@074b2', '27_50' ],\n  [ '10_51', '031@074b2-031@085b2', '27_51' ],\n  [ '10_52', '031@085b2-031@099b3', '27_52' ],\n  [ '10_53', '031@099b3-031@114b6', '27_53' ],\n  [ '10_54', '031@114b6-031@128a4', '27_54' ],\n  [ '10_55', '031@128a4-031@141a3', '27_55' ],\n  [ '10_56', '031@141a3-031@152a7', '27_56' ],\n  [ '10_57', '031@152a7-031@163a5', '27_57' ],\n  [ '10_58', '031@163a5-031@181a7', '27_58' ],\n  [ '10_59', '031@181a7-031@193b2', '27_59' ],\n  [ '10_60', '031@193b2-031@206a7', '27_60' ],\n  [ '11_1', '031@207b1-031@217b7', '28_1' ],\n  [ '11_2', '031@217b7-031@229b3', '28_2' ],\n  [ '11_3', '031@229b3-031@239b4', '28_3' ],\n  [ '11_4', '031@239b4-031@251b2', '28_4' ],\n  [ '11_5', '031@251b2-031@262b5', '28_5' ],\n  [ '11_6', '031@262b5-031@274a1', '28_6' ],\n  [ '11_7', '031@274a1-031@285a7', '28_7' ],\n  [ '11_8', '031@285a7-032@001a1', '28_8' ],\n  [ '11_9', '032@001a1-032@012b4', '28_9' ],\n  [ '11_10', '032@012b4-032@023b4', '28_10' ],\n  [ '11_11', '032@023b4-032@034a4', '28_11' ],\n  [ '11_12', '032@034a4-032@046a5', '28_12' ],\n  [ '11_13', '032@046a5-032@057a5', '28_13' ],\n  [ '11_14', '032@057a5-032@068a2', '28_14' ],\n  [ '11_15', '032@068a2-032@080a6', '28_15' ],\n  [ '11_16', '032@080a6-032@090b6', '28_16' ],\n  [ '11_17', '032@090b6-032@103a1', '28_17' ],\n  [ '11_18', '032@103a1-032@114b2', '28_18' ],\n  [ '11_19', '032@114b2-032@126b2', '28_19' ],\n  [ '11_20', '032@126b2-032@136b3', '28_20' ],\n  [ '11_21', '032@136b3-032@146b2', '28_21' ],\n  [ '11_22', '032@146b2-032@161b3', '28_22' ],\n  [ '11_23', '032@161b3-032@175a6', '28_23' ],\n  [ '11_24', '032@175a6-032@187b7', '28_24' ],\n  [ '11_25', '032@187b7-032@200a1', '28_25' ],\n  [ '11_26', '032@200a1-032@211a4', '28_26' ],\n  [ '11_27', '032@211a4-032@223a1', '28_27' ],\n  [ '11_28', '032@223a1-032@235a2', '28_28' ],\n  [ '11_29', '032@235a2-032@247b5', '28_29' ],\n  [ '11_30', '032@247b5-032@259a1', '28_30' ],\n  [ '11_31', '032@259a1-032@268b5', '28_31' ],\n  [ '11_32', '032@268b5-032@280a1', '28_32' ],\n  [ '11_33', '032@280a1-032@293b2', '28_33' ],\n  [ '11_34', '032@293b2-032@397a7', '28_34' ],\n  [ '12_1', '033@001b1-033@016a6', '29_1' ],\n  [ '12_2', '033@016a6-033@028a2', '29_2' ],\n  [ '12_3', '033@028a2-033@042b5', '29_3' ],\n  [ '12_4', '033@042b5-033@054b3', '29_4' ],\n  [ '12_5', '033@054b3-033@067a7', '29_5' ],\n  [ '12_6', '033@067a7-033@078b4', '29_6' ],\n  [ '12_7', '033@078b4-033@091a5', '29_7' ],\n  [ '12_8', '033@091a5-033@104a4', '29_8' ],\n  [ '12_9', '033@104a4-033@116a2', '29_9' ],\n  [ '12_10', '033@116a2-033@128a5', '29_10' ],\n  [ '12_11', '033@128a5-033@138b6', '29_11' ],\n  [ '12_12', '033@138b6-033@149a3', '29_12' ],\n  [ '12_13', '033@149a3-033@160a2', '29_13' ],\n  [ '12_14', '033@160a2-033@169b7', '29_14' ],\n  [ '12_15', '033@169b7-033@182a4', '29_15' ],\n  [ '12_16', '033@182a4-033@193b3', '29_16' ],\n  [ '12_17', '033@193b3-033@205a1', '29_17' ],\n  [ '12_18', '033@205a1-033@216a6', '29_18' ],\n  [ '12_19', '033@216a6-033@226a5', '29_19' ],\n  [ '12_20', '033@226a5-033@234b7', '29_20' ],\n  [ '12_21', '033@234b7-033@246b7', '29_21' ],\n  [ '12_22', '033@246b7-033@261a3', '29_22' ],\n  [ '12_23', '033@261a3-033@273a2', '29_23' ],\n  [ '12_24', '033@273a2-033@286a6', '29_24' ],\n  [ '13', '034@001b1-019b7', '30' ],\n  [ '14_1', '034@020a1-034@032b7', '31_1' ],\n  [ '14_2', '034@032b7-034@047b4', '31_2' ],\n  [ '14_3', '034@047b4-034@063b6', '31_3' ],\n  [ '14_4', '034@063b6-034@076a2', '31_4' ],\n  [ '14_5', '034@076a2-034@089a7', '31_5' ],\n  [ '14_6', '034@089a7-034@103b7', '31_6' ],\n  [ '15', '034@104a1-120b7', '32' ],\n  [ '16', '034@121a1-132b7', '33' ],\n  [ '17', '034@133a1-139b6', '34' ],\n  [ '18', '034@139b6-142a4', '35' ],\n  [ '19', '034@142a4-143b5', '36' ],\n  [ '20', '034@143b5-144b6', '37' ],\n  [ '21', '034@144b6-146a3', '38' ],\n  [ '22', '034@146a3-147b3', '39' ],\n  [ '23', '034@147b3-147b7', '40' ],\n  [ '24_1', '034@148a1-034@161b5', '41_1' ],\n  [ '24_2', '034@161b5-034@174a2', '41_2' ],\n  [ '25', '034@174a2-175b3', '42' ],\n  [ '26', '034@175b3-176b6', '43' ],\n  [ '27', '034@176b6-177b6', '44' ],\n  [ '28', '034@177b6-178a6', '45' ],\n  [ '29', '034@178a6-178b6', '46' ],\n  [ '30', '034@178b6-179a7', '47' ],\n  [ '31', '034@180a1-183a7', '48' ],\n  [ '32', '034@183a7-250a5', '49' ],\n  [ '33', '034@250a5-259b4', '50' ],\n  [ '34', '034@259b4-263a4', '51' ],\n  [ '35', '034@263a4-270a1', '52' ],\n  [ '36', '034@270a1-270b7', '53' ],\n  [ '37', '034@271a1-276a5', '54' ],\n  [ '38', '034@276a5-279a2', '55' ],\n  [ '39', '034@279a2-281b1', '56' ],\n  [ '40', '034@281b1-282a6', '57' ],\n  [ '41', '034@282a6-282b6', '58' ],\n  [ '42', '034@282b6-283a5', '59' ],\n  [ '43', '034@283a5-284a7', '60' ],\n  [ '44', '035@001b1-393a5', '61' ],\n  [ '44', '036@001b1-396a6', '61' ],\n  [ '44', '037@001b1-396a7', '61' ],\n  [ '44', '038@001b1-363a6', '61' ],\n  [ '45', '039@001b1-045a7', '62' ],\n  [ '46', '039@045b1-099b7', '63' ],\n  [ '47', '039@100a1-203a7', '64' ],\n  [ '48', '039@203b1-237a7', '65' ],\n  [ '49', '039@237b1-270a5', '66' ],\n  [ '50', '040@001b1-070a7', '67' ],\n  [ '51', '040@070b1-140a7', '68' ],\n  [ '52', '040@140b1-164a5', '69' ],\n  [ '53', '040@164a6-184b6', '70' ],\n  [ '54', '040@184b6-195a7', '71' ],\n  [ '55', '040@195b1-255b1', '72' ],\n  [ '56', '040@255b1-294a7', '73' ],\n  [ '56', '041@001b1-205b1', '73' ],\n  [ '57', '041@205b1-236b7', '74' ],\n  [ '58', '041@237a1-248a7', '75' ],\n  [ '59', '041@248b1-297a3', '76' ],\n  [ '60', '042@001b1-168a7', '77' ],\n  [ '61', '042@168b1-227a6', '78' ],\n  [ '62', '042@227a7-257a7', '79' ],\n  [ '63', '042@257a7-288a4', '80' ],\n  [ '64', '043@001b1-017b4', '81' ],\n  [ '65', '043@017b4-036a1', '82' ],\n  [ '66', '043@036a1-067b7', '83' ],\n  [ '67', '043@068a1-114b7', '84' ],\n  [ '68', '043@115a1-131a7', '85' ],\n  [ '69', '043@131a7-153b7', '86' ],\n  [ '70', '043@154a1-180b7', '87' ],\n  [ '71', '043@181a1-193b7', '88' ],\n  [ '72', '043@194a1-204b1', '89' ],\n  [ '73', '043@204b1-215b7', '90' ],\n  [ '74', '043@216a1-222a3', '91' ],\n  [ '75', '043@222a3-225b3', '92' ],\n  [ '76', '043@225b3-240b7', '93' ],\n  [ '77', '043@241a1-261b6', '94' ],\n  [ '78', '043@261b6-266b6', '95' ],\n  [ '79', '043@266b6-284b7', '96' ],\n  [ '80', '043@285a1-309a7', '97' ],\n  [ '80', '044@001b1-027a4', '97' ],\n  [ '81', '044@027a4-029b7', '98' ],\n  [ '82', '044@030a1-070b7', '99' ],\n  [ '83', '044@071a1-094b7', '100' ],\n  [ '84', '044@095a1-104b1', '101' ],\n  [ '85', '044@104b1-116b2', '102' ],\n  [ '86', '044@116b2-119a7', '103' ],\n  [ '87', '044@119b1-151b7', '104' ],\n  [ '88', '044@152a1-175b2', '105' ],\n  [ '89', '044@175b2-182b6', '106' ],\n  [ '90', '044@182b6-209b7', '107' ],\n  [ '91', '044@210a1-254b7', '108' ],\n  [ '92', '044@255a1-277b7', '109' ],\n  [ '93', '044@278a1-299a7', '110' ],\n  [ '94_1', '045@001b1-045@014a6', '111_1' ],\n  [ '94_2', '045@014a6-045@026a7', '111_2' ],\n  [ '94_3', '045@026a7-045@038a4', '111_3' ],\n  [ '94_4', '045@038a4-045@049b4', '111_4' ],\n  [ '94_5', '045@049b4-045@060b4', '111_5' ],\n  [ '94_6', '045@060b4-045@072a5', '111_6' ],\n  [ '94_7', '045@072a5-045@084b7', '111_7' ],\n  [ '94_8', '045@084b7-045@096b1', '111_8' ],\n  [ '94_9', '045@096b1-045@110a3', '111_9' ],\n  [ '94_10', '045@110a3-045@123a4', '111_10' ],\n  [ '94_11', '045@123a4-045@137b1', '111_11' ],\n  [ '94_12', '045@137b1-045@151a5', '111_12' ],\n  [ '94_13', '045@151a5-045@165a2', '111_13' ],\n  [ '94_14', '045@165a2-045@179a2', '111_14' ],\n  [ '94_15', '045@179a2-045@191b4', '111_15' ],\n  [ '94_16', '045@191b4-045@204b5', '111_16' ],\n  [ '94_17', '045@204b5-045@218a7', '111_17' ],\n  [ '94_18', '045@218a7-045@230a4', '111_18' ],\n  [ '94_19', '045@230a4-045@243b1', '111_19' ],\n  [ '94_20', '045@243b1-045@256a6', '111_20' ],\n  [ '94_21', '045@256a6-045@268a2', '111_21' ],\n  [ '94_22', '045@268a2-045@282a2', '111_22' ],\n  [ '94_23', '045@282a2-045@296a2', '111_23' ],\n  [ '94_24', '045@296a2-045@310b5', '111_24' ],\n  [ '94_25', '045@310b5-045@325a6', '111_25' ],\n  [ '94_26', '045@325a6-045@340a5', '111_26' ],\n  [ '95_1', '046@001b1-046@013a7', '112_1' ],\n  [ '95_2', '046@013a7-046@025b1', '112_2' ],\n  [ '95_3', '046@025b1-046@037a2', '112_3' ],\n  [ '95_4', '046@037a2-046@048a6', '112_4' ],\n  [ '95_5', '046@048a6-046@060b2', '112_5' ],\n  [ '95_6', '046@060b2-046@071a4', '112_6' ],\n  [ '95_7', '046@071a4-046@082a1', '112_7' ],\n  [ '95_8', '046@082a1-046@091b3', '112_8' ],\n  [ '95_9', '046@091b3-046@102b7', '112_9' ],\n  [ '95_10', '046@102b7-046@117a2', '112_10' ],\n  [ '95_11', '046@117a2-046@129b5', '112_11' ],\n  [ '95_12', '046@129b5-046@143a2', '112_12' ],\n  [ '95_13', '046@143a2-046@156a5', '112_13' ],\n  [ '95_14', '046@156a5-046@169a6', '112_14' ],\n  [ '95_15', '046@169a6-046@180b1', '112_15' ],\n  [ '95_16', '046@180b1-046@192b7', '112_16' ],\n  [ '95_17', '046@192b7-046@203a7', '112_17' ],\n  [ '95_18', '046@203a7-046@216b7', '112_18' ],\n  [ '96_1', '046@217a1-046@228a4', '113_1' ],\n  [ '96_2', '046@228a4-046@241b7', '113_2' ],\n  [ '97', '046@242a1-257b7', '114' ],\n  [ '98', '046@258a1-278a4', '115' ],\n  [ '99_1', '047@001b2-047@013a1', '117_1' ],\n  [ '99_2', '047@013a1-047@024a4', '117_2' ],\n  [ '99_3', '047@024a4-047@035b3', '117_3' ],\n  [ '99_4', '047@035b3-047@047a3', '117_4' ],\n  [ '99_5', '047@047a3-047@057a2', '117_5' ],\n  [ '99_6', '047@057a2-047@067b7', '117_6' ],\n  [ '99_7', '047@067b7-047@078b2', '117_7' ],\n  [ '99_8', '047@078b2-047@088b2', '117_8' ],\n  [ '99_9', '047@088b2-047@099a4', '117_9' ],\n  [ '99_10', '047@099a4-047@109b1', '117_10' ],\n  [ '99_11', '047@109b1-047@120b7', '117_11' ],\n  [ '99_12', '047@120b7-047@133b5', '117_12' ],\n  [ '99_13', '047@133b5-047@146b4', '117_13' ],\n  [ '99_14', '047@146b4-047@158b1', '117_14' ],\n  [ '99_15', '047@158b1-047@169b3', '117_15' ],\n  [ '99_16', '047@169b3-047@181b1', '117_16' ],\n  [ '99_17', '047@181b1-047@192a7', '117_17' ],\n  [ '99_18', '047@192a7-047@204a2', '117_18' ],\n  [ '99_19', '047@204a2-047@214b5', '117_19' ],\n  [ '99_20', '047@214b5-047@225a7', '117_20' ],\n  [ '99_21', '047@225a7-047@236b3', '117_21' ],\n  [ '99_22', '047@236b3-047@246b6', '117_22' ],\n  [ '99_23', '047@246b6-047@257a7', '117_23' ],\n  [ '99_24', '047@257a7-047@268b3', '117_24' ],\n  [ '99_25', '047@268b3-047@275b7', '117_25' ],\n  [ '100_1', '047@276a1-047@286a7', '118_1' ],\n  [ '100_2', '047@286a7-047@295b4', '118_2' ],\n  [ '100_3', '047@295b4-047@305a7', '118_3' ],\n  [ '101_1', '048@001b2-048@016a3', '119_1' ],\n  [ '101_2', '048@016a3-048@030b3', '119_2' ],\n  [ '101_3', '048@030b3-048@043b3', '119_3' ],\n  [ '101_4', '048@043b3-048@057a5', '119_4' ],\n  [ '101_5', '048@057a5-048@070a2', '119_5' ],\n  [ '101_6', '048@070a2-048@082b1', '119_6' ],\n  [ '101_7', '048@082b1-048@093b3', '119_7' ],\n  [ '101_8', '048@093b3-048@106b4', '119_8' ],\n  [ '101_9', '048@106b4-048@119b6', '119_9' ],\n  [ '101_10', '048@119b6-048@132b6', '119_10' ],\n  [ '101_11', '048@132b6-048@145b5', '119_11' ],\n  [ '101_12', '048@145b5-048@159a5', '119_12' ],\n  [ '101_13', '048@159a5-048@173a1', '119_13' ],\n  [ '101_14', '048@173a1-048@185b2', '119_14' ],\n  [ '101_15', '048@185b2-048@197b2', '119_15' ],\n  [ '101_16', '048@197b2-048@209b4', '119_16' ],\n  [ '101_17', '048@209b4-048@220a6', '119_17' ],\n  [ '101_18', '048@220a6-048@227b7', '119_18' ],\n  [ '102_1', '048@227a1-048@239b7', '120_1' ],\n  [ '102_2', '048@239b7-048@251b7', '120_2' ],\n  [ '102_3', '048@251b7-048@262b3', '120_3' ],\n  [ '102_4', '048@262b3-048@274b7', '120_4' ],\n  [ '103', '048@275a1-285b4', '121' ],\n  [ '104', '048@285b4-286b7', '122' ],\n  [ '105', '048@286b7-288a7', '123' ],\n  [ '106_1', '049@001b1-049@019a6', '124_1' ],\n  [ '106_2', '049@019a6-049@037b6', '124_2' ],\n  [ '106_3', '049@037b6-049@055b7', '124_3' ],\n  [ '107_1', '049@056a1-049@069a5', '125_1' ],\n  [ '107_2', '049@069a5-049@082b6', '125_2' ],\n  [ '107_3', '049@082b6-049@097b3', '125_3' ],\n  [ '107_4', '049@097b3-049@111a4', '125_4' ],\n  [ '107_5', '049@111a4-049@127b4', '125_5' ],\n  [ '107_6', '049@127b4-049@144a6', '125_6' ],\n  [ '107_7', '049@144a6-049@159a1', '125_7' ],\n  [ '107_8', '049@159a1-049@173a1', '125_8' ],\n  [ '107_9', '049@173a1-049@191b7', '125_9' ],\n  [ '108_1', '049@192a1-049@204a5', '126_1' ],\n  [ '108_2', '049@204a5-049@216a5', '126_2' ],\n  [ '108_3', '049@216a5-049@227a1', '126_3' ],\n  [ '108_4', '049@227a1-049@240a1', '126_4' ],\n  [ '108_5', '049@240a1-049@250b7', '126_5' ],\n  [ '108_6', '049@250b7-049@260b6', '126_6' ],\n  [ '108_7', '049@260b6-049@272a5', '126_7' ],\n  [ '108_8', '049@272a5-049@284b7', '126_8' ],\n  [ '109', '049@285a1-292a7', '127' ],\n  [ '110_1', '050@001b1-050@020a3', '128_1' ],\n  [ '110_2', '050@020a3-050@032b4', '128_2' ],\n  [ '110_3', '050@032b4-050@046a1', '128_3' ],\n  [ '110_4', '050@046a1-050@055b7', '128_4' ],\n  [ '111_1', '050@056a1-050@066a1', '129_1' ],\n  [ '111_2', '050@066a1-050@077b2', '129_2' ],\n  [ '111_3', '050@077b2-050@089a5', '129_3' ],\n  [ '111_4', '050@089a5-050@102a7', '129_4' ],\n  [ '111_5', '050@102a7-050@115b5', '129_5' ],\n  [ '111_6', '050@115b5-050@128b7', '129_6' ],\n  [ '112_1', '050@129a1-050@138b7', '130_1' ],\n  [ '112_2', '050@138b7-050@149a3', '130_2' ],\n  [ '112_3', '050@149a3-050@160b3', '130_3' ],\n  [ '112_4', '050@160b3-050@171a2', '130_4' ],\n  [ '112_5', '050@171a2-050@183a1', '130_5' ],\n  [ '112_6', '050@183a1-050@194a1', '130_6' ],\n  [ '112_7', '050@194a1-050@204a7', '130_7' ],\n  [ '112_8', '050@204a7-050@216a7', '130_8' ],\n  [ '112_9', '050@216a7-050@226a3', '130_9' ],\n  [ '112_10', '050@226a3-050@236b5', '130_10' ],\n  [ '112_11', '050@236b5-050@247a3', '130_11' ],\n  [ '112_12', '050@247a3-050@259b7', '130_12' ],\n  [ '112_13', '050@259b7-050@271a3', '130_13' ],\n  [ '112_14', '050@271a3-050@285a2', '130_14' ],\n  [ '112_15', '050@285a2-050@297a7', '130_15' ],\n  [ '113_1', '051@001b1-051@012b4', '131_1' ],\n  [ '113_2', '051@012b4-051@024b5', '131_2' ],\n  [ '113_3', '051@024b5-051@039a4', '131_3' ],\n  [ '113_4', '051@039a4-051@050b5', '131_4' ],\n  [ '113_5', '051@050b5-051@061b6', '131_5' ],\n  [ '113_6', '051@061b6-051@075a6', '131_6' ],\n  [ '113_7', '051@075a6-051@088b6', '131_7' ],\n  [ '113_8', '051@088b6-051@103b3', '131_8' ],\n  [ '113_9', '051@103b3-051@118a1', '131_9' ],\n  [ '113_10', '051@118a1-051@132a5', '131_10' ],\n  [ '113_11', '051@132a5-051@146b7', '131_11' ],\n  [ '113_12', '051@146b7-051@164a6', '131_12' ],\n  [ '113_13', '051@164a6-051@180b7', '131_13' ],\n  [ '114', '051@181a1-195b4', '132' ],\n  [ '115', '051@195b4-200a2', '133' ],\n  [ '116_1', '051@200a3-051@212b7', '134_1' ],\n  [ '116_2', '051@212b7-051@222b3', '134_2' ],\n  [ '116_3', '051@222b3-051@234a7', '134_3' ],\n  [ '116_4', '051@234a7-051@247b7', '134_4' ],\n  [ '117_1', '051@248a1-051@258a1', '135_1' ],\n  [ '117_2', '051@258a1-051@268b1', '135_2' ],\n  [ '117_3', '051@268b1-051@279a7', '135_3' ],\n  [ '117_4', '051@279a7-051@290a7', '135_4' ],\n  [ '118', '051@290b1-298a7', '136' ],\n  [ '119_1', '052@001b1-052@013a5', '137_1' ],\n  [ '119_2', '052@013a5-052@024b5', '137_2' ],\n  [ '119_3', '052@024b5-052@038a7', '137_3' ],\n  [ '119_4', '052@038a7-052@051a6', '137_4' ],\n  [ '119_5', '052@051a6-052@062b2', '137_5' ],\n  [ '119_6', '052@062b2-052@073a1', '137_6' ],\n  [ '119_7', '052@073a1-052@085a6', '137_7' ],\n  [ '119_8', '052@085a6-052@098b2', '137_8' ],\n  [ '119_9', '052@098b2-052@112b4', '137_9' ],\n  [ '119_10', '052@112b4-052@123b3', '137_10' ],\n  [ '119_11', '052@123b3-052@136a7', '137_11' ],\n  [ '119_12', '052@136a7-052@149b3', '137_12' ],\n  [ '119_13', '052@149b3-052@161a6', '137_13' ],\n  [ '119_14', '052@161a6-052@174a1', '137_14' ],\n  [ '119_15', '052@174a1-052@185a1', '137_15' ],\n  [ '119_16', '052@185a1-052@197a1', '137_16' ],\n  [ '119_17', '052@197a1-052@209a2', '137_17' ],\n  [ '119_18', '052@209a2-052@221a3', '137_18' ],\n  [ '119_19', '052@221a3-052@232b3', '137_19' ],\n  [ '119_20', '052@232b3-052@246a1', '137_20' ],\n  [ '119_21', '052@246a1-052@257a7', '137_21' ],\n  [ '119_22', '052@257a7-052@269a1', '137_22' ],\n  [ '119_23', '052@269a1-052@279a4', '137_23' ],\n  [ '119_24', '052@279a4-052@290a5', '137_24' ],\n  [ '119_25', '052@290a5-052@301b1', '137_25' ],\n  [ '119_26', '052@301b1-052@313b3', '137_26' ],\n  [ '119_27', '052@313b3-052@326b7', '137_27' ],\n  [ '119_28', '052@326b7-053@001b1', '137_28' ],\n  [ '119_29', '053@001b1-053@013a1', '137_29' ],\n  [ '119_30', '053@013a1-053@024a6', '137_30' ],\n  [ '119_31', '053@024a6-053@035b7', '137_31' ],\n  [ '119_32', '053@035b7-053@048a6', '137_32' ],\n  [ '119_33', '053@048a6-053@060b5', '137_33' ],\n  [ '119_34', '053@060b5-053@073a4', '137_34' ],\n  [ '119_35', '053@073a4-053@086a1', '137_35' ],\n  [ '119_36', '053@086a1-053@098b3', '137_36' ],\n  [ '119_37', '053@098b3-053@111a2', '137_37' ],\n  [ '119_38', '053@111a2-053@124a1', '137_38' ],\n  [ '119_39', '053@124a1-053@138b5', '137_39' ],\n  [ '119_40', '053@138b5-053@152a1', '137_40' ],\n  [ '119_41', '053@152a1-053@165b6', '137_41' ],\n  [ '119_42', '053@165b6-053@177a4', '137_42' ],\n  [ '119_43', '053@177a4-053@189a3', '137_43' ],\n  [ '119_44', '053@189a3-053@201a2', '137_44' ],\n  [ '119_45', '053@201a2-053@212b4', '137_45' ],\n  [ '119_46', '053@212b4-053@225a1', '137_46' ],\n  [ '119_47', '053@225a1-053@236b5', '137_47' ],\n  [ '119_48', '053@236b5-053@248b6', '137_48' ],\n  [ '119_49', '053@248b6-053@260b4', '137_49' ],\n  [ '119_50', '053@260b4-053@272a1', '137_50' ],\n  [ '119_51', '053@272a1-053@281b6', '137_51' ],\n  [ '119_52', '053@281b6-053@294a5', '137_52' ],\n  [ '119_53', '053@294a5-053@307a1', '137_53' ],\n  [ '119_54', '053@307a1-053@318a1', '137_54' ],\n  [ '119_55', '053@318a1-053@329b4', '137_55' ],\n  [ '119_56', '053@329b4-053@339a7', '137_56' ],\n  [ '120_1', '054@001b1-054@014b7', '138_1' ],\n  [ '120_2', '054@014b7-054@028a1', '138_2' ],\n  [ '120_3', '054@028a1-054@043a4', '138_3' ],\n  [ '120_4', '054@043a4-054@054a4', '138_4' ],\n  [ '120_5', '054@054a4-054@066b1', '138_5' ],\n  [ '120_6', '054@066b1-054@077b4', '138_6' ],\n  [ '120_7', '054@077b4-054@088b2', '138_7' ],\n  [ '120_8', '054@088b2-054@100a1', '138_8' ],\n  [ '120_9', '054@100a1-054@111a4', '138_9' ],\n  [ '120_10', '054@111a4-054@122b2', '138_10' ],\n  [ '120_11', '054@122b2-054@133a1', '138_11' ],\n  [ '120_12', '054@133a1-054@142a3', '138_12' ],\n  [ '120_13', '054@142a3-054@151a4', '138_13' ],\n  [ '121', '054@151a4-152b7', '139' ],\n  [ '122', '054@153a1-153b1', '140' ],\n  [ '123_1', '054@153b1-054@169a3', '141_1' ],\n  [ '123_2', '054@169a3-054@182a6', '141_2' ],\n  [ '123_3', '054@182a6-054@197a1', '141_3' ],\n  [ '123_4', '054@197a1-054@212b7', '141_4' ],\n  [ '124_1', '054@212b7-054@213a1', '142_1' ],\n  [ '124_2', '054@213a1-054@224b4', '142_2' ],\n  [ '124_3', '054@224b4-054@236a7', '142_3' ],\n  [ '124_4', '054@236a7-054@248b5', '142_4' ],\n  [ '124_5', '054@248b5-054@259a4', '142_5' ],\n  [ '124_6', '054@259a4-054@269a6', '142_6' ],\n  [ '124_7', '054@269a6-054@292b7', '142_7' ],\n  [ '125', '054@293a1-293a7', '143' ],\n  [ '126', '054@293a7-296a7', '144' ],\n  [ '127_1', '055@001b2-055@012a7', '145_1' ],\n  [ '127_2', '055@012a7-055@024a7', '145_2' ],\n  [ '127_3', '055@024a7-055@034b6', '145_3' ],\n  [ '127_4', '055@034b6-055@046a7', '145_4' ],\n  [ '127_5', '055@046a7-055@058a1', '145_5' ],\n  [ '127_6', '055@058a1-055@071b1', '145_6' ],\n  [ '127_7', '055@071b1-055@083b3', '145_7' ],\n  [ '127_8', '055@083b3-055@093b2', '145_8' ],\n  [ '127_9', '055@093b2-055@103b7', '145_9' ],\n  [ '127_10', '055@103b7-055@116a2', '145_10' ],\n  [ '127_11', '055@116a2-055@126b2', '145_11' ],\n  [ '127_12', '055@126b2-055@137b4', '145_12' ],\n  [ '127_13', '055@137b4-055@150b7', '145_13' ],\n  [ '127_14', '055@150b7-055@161b3', '145_14' ],\n  [ '127_15', '055@161b3-055@170b7', '145_15' ],\n  [ '128', '055@171a1-174b4', '146' ],\n  [ '129_1', '055@174b5-055@186b5', '147_1' ],\n  [ '129_2', '055@186b5-055@197b6', '147_2' ],\n  [ '129_3', '055@197b6-055@210b3', '147_3' ],\n  [ '130', '055@210b3-230b4', '148' ],\n  [ '131_1', '055@230b5-055@242b5', '149_1' ],\n  [ '131_2', '055@242b5-055@253b5', '149_2' ],\n  [ '132_1', '055@253b5-055@265b1', '150_1' ],\n  [ '132_2', '055@265b1-055@279a4', '150_2' ],\n  [ '132_3', '055@279a4-055@291a6', '150_3' ],\n  [ '132_4', '055@291a6-055@303a2', '150_4' ],\n  [ '132_5', '055@303a2-055@316b6', '150_5' ],\n  [ '133_1', '056@001b2-056@012a4', '151_1' ],\n  [ '133_2', '056@012a4-056@021b1', '151_2' ],\n  [ '133_3', '056@021b1-056@032a1', '151_3' ],\n  [ '133_4', '056@032a1-056@041b2', '151_4' ],\n  [ '133_5', '056@041b2-056@050b4', '151_5' ],\n  [ '133_6', '056@050b4-056@060b4', '151_6' ],\n  [ '133_7', '056@060b4-056@070b2', '151_7' ],\n  [ '134_1', '056@070b2-056@081b2', '152_1' ],\n  [ '134_2', '056@081b2-056@094b7', '152_2' ],\n  [ '134_3', '056@094b7-056@107a5', '152_3' ],\n  [ '134_4', '056@107a5-056@121b7', '152_4' ],\n  [ '135_1', '056@122a1-056@134a3', '153_1' ],\n  [ '135_2', '056@134a3-056@144b2', '153_2' ],\n  [ '136_1', '056@144b2-056@156a1', '154_1' ],\n  [ '136_2', '056@156a1-056@167b2', '154_2' ],\n  [ '136_3', '056@167b2-056@179a4', '154_3' ],\n  [ '137', '056@179a4-187b2', '155' ],\n  [ '138_1', '056@187b3-056@196b4', '156_1' ],\n  [ '138_2', '056@196b4-056@207b3', '156_2' ],\n  [ '138_3', '056@207b3-056@217a2', '156_3' ],\n  [ '138_4', '056@217a2-056@226b6', '156_4' ],\n  [ '138_5', '056@226b6-056@236b5', '156_5' ],\n  [ '138_6', '056@236b5-056@249b7', '156_6' ],\n  [ '138_7', '056@249b7-056@259b3', '156_7' ],\n  [ '138_8', '056@259b3-056@277b7', '156_8' ],\n  [ '139', '056@278a1-289b4', '157' ],\n  [ '140', '056@289b4-299a5', '158' ],\n  [ '141', '056@299a5-300a3', '159' ],\n  [ '142', '057@001b1-006b1', '160' ],\n  [ '143', '057@006b1-006b6', '161' ],\n  [ '144_1', '057@006b6-057@034a3', '162_1' ],\n  [ '145', '057@034a4-082a3', '163' ],\n  [ '144_2', '057@046a5-057@034a3', '162_2' ],\n  [ '146', '057@082a3-141b7', '164' ],\n  [ '147_1', '057@142a1-057@153b6', '165_1' ],\n  [ '147_2', '057@153b6-057@167b1', '165_2' ],\n  [ '147_3', '057@167b1-057@185a6', '165_3' ],\n  [ '147_4', '057@185a6-057@200b5', '165_4' ],\n  [ '147_5', '057@200b5-057@215a3', '165_5' ],\n  [ '147_6', '057@215a3-057@230a1', '165_6' ],\n  [ '147_7', '057@230a1-057@242b7', '165_7' ],\n  [ '148_1', '057@243a1-057@256a3', '166_1' ],\n  [ '148_2', '057@256a3-057@270b3', '166_2' ],\n  [ '148_3', '057@270b3-057@281b4', '166_3' ],\n  [ '148_4', '057@281b4-057@292b7', '166_4' ],\n  [ '148_5', '057@292b7-057@302a6', '166_5' ],\n  [ '148_6', '057@302a6-057@310b2', '166_6' ],\n  [ '148_7', '057@310b2-057@321b4', '166_7' ],\n  [ '148_8', '057@321b4-057@330a7', '166_8' ],\n  [ '149', '057@330b1-331a2', '167' ],\n  [ '150', '057@331a2-331b5', '168' ],\n  [ '151', '057@331b5-344a4', '169' ],\n  [ '152_1', '058@001b1-058@013b5', '170_1' ],\n  [ '152_2', '058@013b5-058@026a1', '170_2' ],\n  [ '152_3', '058@026a1-058@037b4', '170_3' ],\n  [ '152_4', '058@037b4-058@048a7', '170_4' ],\n  [ '152_5', '058@048a7-058@058b3', '170_5' ],\n  [ '152_6', '058@058b3-058@069b2', '170_6' ],\n  [ '152_7', '058@069b2-058@081b5', '170_7' ],\n  [ '152_8', '058@081b5-058@092a6', '170_8' ],\n  [ '152_9', '058@092a6-058@104b2', '170_9' ],\n  [ '152_10', '058@104b2-058@115b7', '170_10' ],\n  [ '153_1', '058@116a1-058@129a7', '171_1' ],\n  [ '153_2', '058@129a7-058@141b6', '171_2' ],\n  [ '153_3', '058@141b6-058@154a7', '171_3' ],\n  [ '153_4', '058@154a7-058@165b1', '171_4' ],\n  [ '153_5', '058@165b1-058@178a2', '171_5' ],\n  [ '153_6', '058@178a2-058@187b1', '171_6' ],\n  [ '153_7', '058@187b1-058@198a3', '171_7' ],\n  [ '154', '058@198a3-205a6', '172' ],\n  [ '155', '058@205a6-205b7', '173' ],\n  [ '156', '058@206a1-253b7', '174' ],\n  [ '157_1', '058@254a1-058@265b4', '175_1' ],\n  [ '157_2', '058@265b4-058@276b3', '175_2' ],\n  [ '157_3', '058@276b3-058@290b2', '175_3' ],\n  [ '157_4', '058@290b2-058@305a1', '175_4' ],\n  [ '157_5', '058@305a1-058@319a7', '175_5' ],\n  [ '158', '059@001b1-010b4', '176' ],\n  [ '159', '059@010b4-022b7', '177' ],\n  [ '160_1', '059@023a1-059@036a7', '178_1' ],\n  [ '160_2', '059@036a7-059@049a5', '178_2' ],\n  [ '160_3', '059@049a5-059@062b4', '178_3' ],\n  [ '160_4', '059@062b4-059@075a1', '178_4' ],\n  [ '160_5', '059@075a1-059@087a2', '178_5' ],\n  [ '160_6', '059@087a2-059@100b7', '178_6' ],\n  [ '161_1', '059@101a1-059@114a2', '179_1' ],\n  [ '161_2', '059@114a2-059@125b7', '179_2' ],\n  [ '161_3', '059@125b7-059@139b4', '179_3' ],\n  [ '162', '059@139b5-143b7', '180' ],\n  [ '163', '059@144a1-159b7', '181' ],\n  [ '164', '059@160a1-167b2', '182' ],\n  [ '165', '059@167b2-171b3', '183' ],\n  [ '166', '059@171b3-175a7', '184' ],\n  [ '167_1', '059@175b1-059@185b6', '185_1' ],\n  [ '167_2', '059@185b6-059@198a1', '185_2' ],\n  [ '167_3', '059@198a1-059@210b7', '185_3' ],\n  [ '168_1', '059@211a1-059@222b6', '186_1' ],\n  [ '168_2', '059@222b6-059@234a2', '186_2' ],\n  [ '168_3', '059@234a2-059@245b2', '186_3' ],\n  [ '168_4', '059@245b2-059@259b7', '186_4' ],\n  [ '169_1', '059@260a1-059@272b6', '187_1' ],\n  [ '169_2', '059@272b6-059@284b4', '187_2' ],\n  [ '169_3', '059@284b4-059@297a2', '187_3' ],\n  [ '169_4', '059@297a2-059@307a7', '187_4' ],\n  [ '170', '059@307b1-310b3', '188' ],\n  [ '171', '059@310b4-314a7', '189' ],\n  [ '172', '060@001b1-005a7', '190' ],\n  [ '173', '060@005b1-007b4', '191' ],\n  [ '174_1', '060@007b5-060@025b3', '192_1' ],\n  [ '174_2', '060@025b3-060@045a4', '192_2' ],\n  [ '174_3', '060@045a4-060@062b6', '192_3' ],\n  [ '174_4', '060@062b6-060@078b7', '192_4' ],\n  [ '175_1', '060@079a1-060@092b5', '193_1' ],\n  [ '175_2', '060@092b5-060@106b2', '193_2' ],\n  [ '175_3', '060@106b2-060@120a1', '193_3' ],\n  [ '175_4', '060@120a1-060@133b5', '193_4' ],\n  [ '175_5', '060@133b5-060@148a5', '193_5' ],\n  [ '175_6', '060@148a5-060@162a7', '193_6' ],\n  [ '175_7', '060@162a7-060@174b7', '193_7' ],\n  [ '176_1', '060@175a1-060@184a3', '194_1' ],\n  [ '176_2', '060@184a3-060@197b7', '194_2' ],\n  [ '176_3', '060@197b7-060@214a1', '194_3' ],\n  [ '176_4', '060@214a1-060@231a3', '194_4' ],\n  [ '176_5', '060@231a3-060@239b7', '194_5' ],\n  [ '177', '060@240a1-240b5', '195' ],\n  [ '178', '060@240b5-244b4', '196' ],\n  [ '179_1', '060@244b4-060@256a1', '197_1' ],\n  [ '179_2', '060@256a1-060@266b7', '197_2' ],\n  [ '180_1', '060@267a1-060@276b2', '198_1' ],\n  [ '180_2', '060@276b2-060@287b2', '198_2' ],\n  [ '180_3', '060@287b2-060@296a6', '198_3' ],\n  [ '181_1', '061@001b1-061@016a1', '199_1' ],\n  [ '181_2', '061@016a1-061@031b2', '199_2' ],\n  [ '181_3', '061@031b2-061@043a5', '199_3' ],\n  [ '181_4', '061@043a5-061@054a2', '199_4' ],\n  [ '181_5', '061@054a2-061@065a1', '199_5' ],\n  [ '181_6', '061@065a1-061@076b7', '199_6' ],\n  [ '182', '061@077a1-095b1', '200' ],\n  [ '183', '061@095b2-096b6', '201' ],\n  [ '184', '061@096b6-105b7', '202' ],\n  [ '185_1', '061@106a1-061@119a5', '203_1' ],\n  [ '185_2', '061@119a5-061@130b6', '203_2' ],\n  [ '185_3', '061@130b6-061@143b4', '203_3' ],\n  [ '186', '061@143b4-158a4', '204' ],\n  [ '187_1', '061@158a4-061@168b5', '205_1' ],\n  [ '187_2', '061@168b5-061@181a5', '205_2' ],\n  [ '187_3', '061@181a5-061@191a7', '205_3' ],\n  [ '188', '061@191b1-199b5', '206' ],\n  [ '189', '061@199b6-201a6', '207' ],\n  [ '190_1', '061@201a6-061@224b5', '208_1' ],\n  [ '190_2', '061@224b5-061@224b5', '208_2' ],\n  [ '191', '061@224b5-243b5', '209' ],\n  [ '192', '061@243b6-246a7', '210' ],\n  [ '193', '061@246a7-250b3', '211' ],\n  [ '194', '061@250b3-251a5', '212' ],\n  [ '195', '061@251a6-266a7', '213' ],\n  [ '196', '061@266b1-271b2', '214' ],\n  [ '197', '061@271b2-274b5', '215' ],\n  [ '198_1', '061@274b6-061@286a1', '216_1' ],\n  [ '198_2', '061@286a1-061@296a7', '216_2' ],\n  [ '199', '061@296b1-303a5', '217' ],\n  [ '200', '061@303a6-308a7', '218' ],\n  [ '201_1', '062@001b1-062@063a5', '219_1' ],\n  [ '209', '062@011b7-115b7', '227' ],\n  [ '201_2', '062@012b6-062@023b4', '219_2' ],\n  [ '201_3', '062@023b4-062@034b6', '219_3' ],\n  [ '201_4', '062@034b6-062@049a5', '219_4' ],\n  [ '201_5', '062@049a5-062@063a5', '219_5' ],\n  [ '202', '062@063a5-078a4', '220' ],\n  [ '203', '062@078a4-081b2', '221' ],\n  [ '204', '062@081b2-092a5', '222' ],\n  [ '205', '062@092a5-093b7', '223' ],\n  [ '207_1', '062@094a1-062@109a5', '225_1' ],\n  [ '206', '062@094a1-095a7', '224' ],\n  [ '208', '062@109a6-111b7', '226' ],\n  [ '210', '062@116a1-123b1', '228' ],\n  [ '211', '062@123b1-125a3', '229' ],\n  [ '212', '062@125a3-125b7', '230' ],\n  [ '213_1', '062@126a1-062@141a6', '231_1' ],\n  [ '213_2', '062@141a6-062@150b3', '231_2' ],\n  [ '213_3', '062@150b3-062@162a5', '231_3' ],\n  [ '213_4', '062@162a5-062@173b1', '231_4' ],\n  [ '213_5', '062@173b1-062@185a1', '231_5' ],\n  [ '213_6', '062@185a1-062@206b7', '231_6' ],\n  [ '212_7', '062@196a3-062@125b7', '230_7' ],\n  [ '214', '062@207a1-210a3', '232' ],\n  [ '215', '062@210a3-211b2', '233' ],\n  [ '216_1', '062@211b2-062@222a7', '234_1' ],\n  [ '216_2', '062@222a7-062@233a2', '234_2' ],\n  [ '216_3', '062@233a2-062@244b2', '234_3' ],\n  [ '216_4', '062@244b2-062@255b6', '234_4' ],\n  [ '216_5', '062@255b6-0', '234_5' ],\n  [ '217', '062@269a1-284a2', '235' ],\n  [ '218', '062@284a3-297b5', '236' ],\n  [ '220_1', '062@297b5-063@077b7', '238_1' ],\n  [ '219', '062@297b5-307a6', '237' ],\n  [ '220_1', '063@001b1-063@012b1', '238_1' ],\n  [ '220_2', '063@012b1-063@022b2', '238_2' ],\n  [ '220_3', '063@022b2-063@033b5', '238_3' ],\n  [ '220_4', '063@033b5-063@045b1', '238_4' ],\n  [ '220_5', '063@045b1-063@056a5', '238_5' ],\n  [ '220_6', '063@056a5-063@067a3', '238_6' ],\n  [ '220_7', '063@067a3-063@077b7', '238_7' ],\n  [ '221', '063@078a1-084b4', '239' ],\n  [ '222_1', '063@084b5-063@094a4', '240_1' ],\n  [ '222_2', '063@094a4-063@104a1', '240_2' ],\n  [ '222_3', '063@104a1-063@112a5', '240_3' ],\n  [ '222_4', '063@112a5-063@120a5', '240_4' ],\n  [ '222_5', '063@120a5-063@126b7', '240_5' ],\n  [ '223_1', '063@127a1-063@139a4', '241_1' ],\n  [ '223_2', '063@139a4-063@151a5', '241_2' ],\n  [ '223_3', '063@151a5-063@164a2', '241_3' ],\n  [ '224', '063@164a2-173b7', '242' ],\n  [ '225', '063@174a1-175a5', '243' ],\n  [ '226', '063@175a6-177a3', '244' ],\n  [ '227', '063@177a3-188b7', '245' ],\n  [ '228_1', '063@189a1-063@201b7', '246_1' ],\n  [ '228_2', '063@201b7-063@214b5', '246_2' ],\n  [ '228_3', '063@214b5-063@226a7', '246_3' ],\n  [ '229_1', '063@226b1-063@240a3', '247_1' ],\n  [ '229_2', '063@240a3-063@253b6', '247_2' ],\n  [ '229_3', '063@253b6-063@265b7', '247_3' ],\n  [ '230_1', '063@266a1-063@276b7', '248_1' ],\n  [ '230_2', '063@276b7-063@287b7', '248_2' ],\n  [ '230_3', '063@287b7-063@297a7', '248_3' ],\n  [ '231', '064@001b1-112b7', '249' ],\n  [ '232', '064@113a1-214b7', '250' ],\n  [ '233', '064@215a1-245b7', '251' ],\n  [ '_1', '064@215a6-0', '_1' ],\n  [ '234', '064@246a1-250b2', '252' ],\n  [ '235', '064@250b2-263a7', '253' ],\n  [ '236', '064@263a7-287a4', '254' ],\n  [ '237', '064@287a4-299a4', '255' ],\n  [ '238', '065@001b1-099b7', '256' ],\n  [ '239', '065@100a1-241b4', '257' ],\n  [ '240', '065@241b4-301b7', '258' ],\n  [ '241', '065@302a1-303a7', '259' ],\n  [ '242', '065@303a7-306a7', '260' ],\n  [ '243', '066@001b1-015b1', '261' ],\n  [ '244', '066@015b2-027b4', '262' ],\n  [ '245', '066@027b5-033a1', '263' ],\n  [ '246', '066@033a1-042b5', '264' ],\n  [ '247', '066@042b5-046a7', '265' ],\n  [ '248', '066@046b1-059a5', '266' ],\n  [ '249', '066@059a5-059b7', '267' ],\n  [ '250', '066@059b7-060a7', '268' ],\n  [ '251', '066@060b1-061a2', '269' ],\n  [ '252', '066@061a2-069b2', '270' ],\n  [ '253', '066@069b2-070b3', '271' ],\n  [ '254', '066@070b3-071a2', '272' ],\n  [ '255', '066@071a3-074a3', '273' ],\n  [ '256', '066@074a4-091a7', '274' ],\n  [ '257', '066@091b1-245b1', '275' ],\n  [ '258', '066@245b2-259b4', '276' ],\n  [ '259', '066@259b5-264a4', '277' ],\n  [ '260', '066@264a4-283b2', '278' ],\n  [ '262_1', '066@283b2-067@089b7', '280_1' ],\n  [ '261', '066@283b2-310a7', '279' ],\n  [ '263', '067@090a1-209b7', '281' ],\n  [ '264', '067@210a1-264a1', '282' ],\n  [ '265', '067@264a1-287b7', '283' ],\n  [ '266', '067@288a1-319a6', '284' ],\n  [ '267', '068@001b1-005b2', '285' ],\n  [ '268', '068@005b3-007a2', '286' ],\n  [ '269', '068@007a2-013a7', '287' ],\n  [ '270', '068@013b1-017b3', '288' ],\n  [ '271', '068@017b3-021a7', '289' ],\n  [ '272', '068@021b1-026a5', '290' ],\n  [ '273', '068@026a5-029b6', '291' ],\n  [ '274', '068@029b6-035b7', '292' ],\n  [ '275', '068@036a1-044b2', '293' ],\n  [ '276', '068@044b3-049b6', '294' ],\n  [ '277', '068@049b6-052b6', '295' ],\n  [ '278', '068@052b6-054b6', '296' ],\n  [ '279', '068@054b6-055a7', '297' ],\n  [ '280', '068@055a7-055b4', '298' ],\n  [ '282_1', '068@055b4-068@056a4', '300_1' ],\n  [ '281', '068@055b4-055b6', '299' ],\n  [ '283', '068@056a5-057a3', '301' ],\n  [ '284', '068@057a3-077a3', '302' ],\n  [ '285', '068@077a3-079b7', '303' ],\n  [ '286', '068@079b7-081b7', '304' ],\n  [ '287_1', '068@082a1-068@095b1', '305_1' ],\n  [ '287_2', '068@095b1-068@109a2', '305_2' ],\n  [ '287_3', '068@109a2-068@121a5', '305_3' ],\n  [ '287_4', '068@121a5-068@132a6', '305_4' ],\n  [ '287_5', '068@132a6-068@144a6', '305_5' ],\n  [ '287_6', '068@144a6-068@155b1', '305_6' ],\n  [ '287_7', '068@155b1-068@167b2', '305_7' ],\n  [ '287_8', '068@167b2-068@179a7', '305_8' ],\n  [ '287_9', '068@179a7-068@191b7', '305_9' ],\n  [ '287_10', '068@191b7-068@204a6', '305_10' ],\n  [ '287_11', '068@204a6-068@215b6', '305_11' ],\n  [ '287_12', '068@215b6-068@226b6', '305_12' ],\n  [ '287_13', '068@226b6-068@237b3', '305_13' ],\n  [ '287_14', '068@237b3-068@248b7', '305_14' ],\n  [ '287_15', '068@248b7-068@260b7', '305_15' ],\n  [ '287_16', '068@260b7-068@272a3', '305_16' ],\n  [ '287_17', '068@272a3-068@283a7', '305_17' ],\n  [ '287_18', '068@283a7-068@294b6', '305_18' ],\n  [ '287_19', '068@294b6-068@305a2', '305_19' ],\n  [ '287_20', '068@305a2-069@001b1', '305_20' ],\n  [ '287_21', '069@001b1-069@013b5', '305_21' ],\n  [ '287_22', '069@013b5-069@026a1', '305_22' ],\n  [ '287_23', '069@026a1-069@038a1', '305_23' ],\n  [ '287_24', '069@038a1-069@050b1', '305_24' ],\n  [ '287_25', '069@050b1-069@062a6', '305_25' ],\n  [ '287_26', '069@062a6-069@074a3', '305_26' ],\n  [ '287_27', '069@074a3-069@085b6', '305_27' ],\n  [ '287_28', '069@085b6-069@097b7', '305_28' ],\n  [ '287_29', '069@097b7-069@109b3', '305_29' ],\n  [ '287_30', '069@109b3-069@122a1', '305_30' ],\n  [ '287_31', '069@122a1-069@135a7', '305_31' ],\n  [ '287_32', '069@135a7-069@148a1', '305_32' ],\n  [ '287_33', '069@148a1-069@159b4', '305_33' ],\n  [ '287_34', '069@159b4-069@171a2', '305_34' ],\n  [ '287_35', '069@171a2-069@182b3', '305_35' ],\n  [ '287_36', '069@182b3-069@193b7', '305_36' ],\n  [ '287_37', '069@193b7-069@205a2', '305_37' ],\n  [ '287_38', '069@205a2-069@217b1', '305_38' ],\n  [ '287_39', '069@217b1-069@229a6', '305_39' ],\n  [ '287_40', '069@229a6-069@240b4', '305_40' ],\n  [ '287_41', '069@240b4-069@252b1', '305_41' ],\n  [ '287_42', '069@252b1-069@263b5', '305_42' ],\n  [ '287_43', '069@263b5-069@275a1', '305_43' ],\n  [ '287_44', '069@275a1-069@285a1', '305_44' ],\n  [ '287_45', '069@285a1-070@001b1', '305_45' ],\n  [ '287_46', '070@001b1-070@022b1', '305_46' ],\n  [ '287_47', '070@022b1-070@044a5', '305_47' ],\n  [ '287_48', '070@044a5-070@101a1', '305_48' ],\n  [ '287_49', '070@101a1-070@129b2', '305_49' ],\n  [ '287_50', '070@129b2-070@137b5', '305_50' ],\n  [ '287_51', '070@137b5-070@154a3', '305_51' ],\n  [ '287_52', '070@154a3-070@190b2', '305_52' ],\n  [ '287_53', '070@190b2-070@192a7', '305_53' ],\n  [ '287_54', '070@192a7-070@216a2', '305_54' ],\n  [ '287_55', '070@216a2-071@001b1', '305_55' ],\n  [ '287_56', '071@001b1-071@018b1', '305_56' ],\n  [ '287_57', '071@018b1-071@081b2', '305_57' ],\n  [ '287_58', '071@081b2-071@103b6', '305_58' ],\n  [ '287_59', '071@103b6-071@229b7', '305_59' ],\n  [ '288', '071@230a1-244a7', '306' ],\n  [ '289', '071@244b1-249b7', '307' ],\n  [ '290', '071@250a1-253b2', '308' ],\n  [ '291', '071@253b2-261b7', '309' ],\n  [ '292', '071@262a1-265b4', '310' ],\n  [ '293', '071@265b4-267a7', '311' ],\n  [ '294', '071@267b1-275b7', '312' ],\n  [ '295', '071@276a1-295b1', '313' ],\n  [ '296', '071@295b2-297a2', '314' ],\n  [ '_1', '071@297a2-0', '_1' ],\n  [ '297', '071@297a2-301b2', '315' ],\n  [ '298', '071@301b2-303b4', '316' ],\n  [ '299', '071@303b4-304b3', '317' ],\n  [ '300', '071@304b3-305a7', '318' ],\n  [ '301_1', '072@001b1-072@019a7', '319_1' ],\n  [ '301_2', '072@019a7-072@037b6', '319_2' ],\n  [ '301_3', '072@037b6-072@057a4', '319_3' ],\n  [ '301_4', '072@057a4-072@075a4', '319_4' ],\n  [ '301_5', '072@075a4-072@093a3', '319_5' ],\n  [ '301_6', '072@093a3-072@112a5', '319_6' ],\n  [ '301_7', '072@112a5-072@125a7', '319_7' ],\n  [ '302', '072@125a7-127a2', '320' ],\n  [ '303', '072@127a2-127b7', '321' ],\n  [ '304', '072@128a1-130b4', '322' ],\n  [ '305', '072@130b4-131b1', '323' ],\n  [ '306', '072@131b1-139a4', '324' ],\n  [ '307', '072@139a4-145b3', '325' ],\n  [ '308', '072@145b4-155a1', '326' ],\n  [ '309', '072@155a2-155b4', '327' ],\n  [ '310', '072@155b5-157a5', '328' ],\n  [ '311', '072@157a6-157b4', '329' ],\n  [ '312', '072@157b4-161b1', '330' ],\n  [ '313', '072@161b1-163b5', '331' ],\n  [ '314', '072@163b6-169a4', '332' ],\n  [ '315', '072@169a4-169b7', '333' ],\n  [ '316', '072@170a1-170b4', '334' ],\n  [ '317', '072@170b4-188a7', '335' ],\n  [ '318', '072@188a7-193b7', '336' ],\n  [ '319', '072@194a1-196b7', '337' ],\n  [ '320', '072@197a1-198b4', '338' ],\n  [ '321', '072@198b5-201a5', '339' ],\n  [ '322', '072@201a6-204a4', '340' ],\n  [ '323', '072@204a4-204a6', '341' ],\n  [ '325_1', '072@204a6-072@208b7', '343_1' ],\n  [ '324', '072@204a6-204b3', '342' ],\n  [ '326', '072@209a1-253a7', '344' ],\n  [ '327', '072@253b1-254b3', '345' ],\n  [ '328', '072@254b3-257a6', '346' ],\n  [ '329', '072@257a7-258b6', '347' ],\n  [ '330', '072@258b7-259b3', '348' ],\n  [ '331', '072@259b3-260a4', '349' ],\n  [ '332', '072@260a5-263b5', '350' ],\n  [ '333', '072@263b6-268a4', '351' ],\n  [ '334', '072@268a5-271a5', '352' ],\n  [ '335', '072@271a5-274a7', '353' ],\n  [ '336', '072@274a7-275a6', '354' ],\n  [ '337', '072@275a6-277a4', '355' ],\n  [ '338', '072@277a4-298b7', '357' ],\n  [ '339', '072@298b7-310a7', '358' ],\n  [ '340_1', '073@001b1-073@017b6', '360_1' ],\n  [ '340_2', '073@017b6-073@032b4', '360_2' ],\n  [ '340_3', '073@032b4-073@042b4', '360_3' ],\n  [ '340_4', '073@042b4-073@052a7', '360_4' ],\n  [ '340_5', '073@052a7-073@064b4', '360_5' ],\n  [ '340_6', '073@064b4-073@076a4', '360_6' ],\n  [ '340_7', '073@076a4-073@091a1', '360_7' ],\n  [ '340_8', '073@091a1-073@104b1', '360_8' ],\n  [ '340_9', '073@104b1-073@119b3', '360_9' ],\n  [ '340_10', '073@119b3-073@132b4', '360_10' ],\n  [ '340_11', '073@132b4-073@142a6', '360_11' ],\n  [ '340_12', '073@142a6-073@152b3', '360_12' ],\n  [ '340_13', '073@152b3-073@162b7', '360_13' ],\n  [ '340_14', '073@162b7-073@174a7', '360_14' ],\n  [ '340_15', '073@174a7-073@187a5', '360_15' ],\n  [ '340_16', '073@187a5-073@199a1', '360_16' ],\n  [ '340_17', '073@199a1-073@208b3', '360_17' ],\n  [ '340_18', '073@208b3-073@220b7', '360_18' ],\n  [ '340_19', '073@220b7-073@232a6', '360_19' ],\n  [ '340_20', '073@232a6-073@242a5', '360_20' ],\n  [ '340_21', '073@242a5-073@254b5', '360_21' ],\n  [ '340_22', '073@254b5-073@265b7', '360_22' ],\n  [ '340_23', '073@265b7-073@276a4', '360_23' ],\n  [ '340_24', '073@276a4-073@288b1', '360_24' ],\n  [ '340_25', '073@288b1-073@298b3', '360_25' ],\n  [ '340_26', '073@298b3-074@001b1', '360_26' ],\n  [ '340_27', '074@001b1-074@013a1', '360_27' ],\n  [ '340_28', '074@013a1-074@022b4', '360_28' ],\n  [ '340_29', '074@022b4-074@034a2', '360_29' ],\n  [ '340_30', '074@034a2-074@045b1', '360_30' ],\n  [ '340_31', '074@045b1-074@058a6', '360_31' ],\n  [ '340_32', '074@058a6-074@070a7', '360_32' ],\n  [ '340_33', '074@070a7-074@081a7', '360_33' ],\n  [ '340_34', '074@081a7-074@094b6', '360_34' ],\n  [ '340_35', '074@094b6-074@105b4', '360_35' ],\n  [ '340_36', '074@105b4-074@116a1', '360_36' ],\n  [ '340_37', '074@116a1-074@128b7', '360_37' ],\n  [ '341_1', '074@129b1-074@145b1', '361_1' ],\n  [ '341_2', '074@145b1-074@156b3', '361_2' ],\n  [ '341_3', '074@156b3-074@170b6', '361_3' ],\n  [ '341_4', '074@170b6-074@182b1', '361_4' ],\n  [ '341_5', '074@182b1-074@197a4', '361_5' ],\n  [ '341_6', '074@197a4-074@211b7', '361_6' ],\n  [ '341_7', '074@211b7-074@223a3', '361_7' ],\n  [ '341_8', '074@223a3-074@236a2', '361_8' ],\n  [ '341_9', '074@236a2-074@248b3', '361_9' ],\n  [ '341_10', '074@248b3-074@265b5', '361_10' ],\n  [ '341_11', '074@265b5-074@281a7', '361_11' ],\n  [ '341_12', '074@281a7-074@298a7', '361_12' ],\n  [ '342', '074@298b1-300a4', '362' ],\n  [ '343_1', '075@001b1-075@012b7', '363_1' ],\n  [ '343_2', '075@012b7-075@026b6', '363_2' ],\n  [ '343_3', '075@026b6-075@037b7', '363_3' ],\n  [ '343_4', '075@037b7-075@049a6', '363_4' ],\n  [ '343_5', '075@049a6-075@067a1', '363_5' ],\n  [ '343_6', '075@067a1-075@075a3', '363_6' ],\n  [ '343_7', '075@075a3-075@087a1', '363_7' ],\n  [ '343_8', '075@087a1-075@097a3', '363_8' ],\n  [ '343_9', '075@097a3-075@111a2', '363_9' ],\n  [ '343_10', '075@111a2-075@122a2', '363_10' ],\n  [ '343_11', '075@122a2-075@134a1', '363_11' ],\n  [ '343_12', '075@134a1-075@146a6', '363_12' ],\n  [ '343_13', '075@146a6-075@159a2', '363_13' ],\n  [ '343_14', '075@159a2-075@171b4', '363_14' ],\n  [ '343_15', '075@171b4-075@184a7', '363_15' ],\n  [ '343_16', '075@184a7-075@197b1', '363_16' ],\n  [ '343_17', '075@197b1-075@210a5', '363_17' ],\n  [ '343_18', '075@210a5-075@225b1', '363_18' ],\n  [ '343_19', '075@225b1-075@239a2', '363_19' ],\n  [ '343_20', '075@239a2-075@254a6', '363_20' ],\n  [ '343_21', '075@254a6-075@269a4', '363_21' ],\n  [ '343_22', '075@269a4-075@286b7', '363_22' ],\n  [ '344', '075@287a1-289b2', '364' ],\n  [ '345', '075@289b2-291a7', '365' ],\n  [ '346', '075@291b1-298a6', '366' ],\n  [ '347', '076@001b1-022a4', '367' ],\n  [ '348', '076@022a4-031b3', '368' ],\n  [ '349', '076@031b3-050a5', '369' ],\n  [ '350', '076@050a5-055b7', '370' ],\n  [ '351', '076@055b7-070b1', '371' ],\n  [ '352', '076@070b2-086a2', '372' ],\n  [ '353_1', '076@086a2-076@102b3', '373_1' ],\n  [ '353_2', '076@102b3-076@118a5', '373_2' ],\n  [ '353_3', '076@118a5-076@133b2', '373_3' ],\n  [ '353_4', '076@133b2-076@149a2', '373_4' ],\n  [ '353_5', '076@149a2-076@162b1', '373_5' ],\n  [ '353_6', '076@162b1-076@183a4', '373_6' ],\n  [ '353_7', '076@183a4-076@198b7', '373_7' ],\n  [ '354', '076@199a1-208b7', '374' ],\n  [ '355', '076@209a1-216a4', '375' ],\n  [ '356', '076@216a5-220b5', '376' ],\n  [ '357', '076@220b6-232a7', '377' ],\n  [ '358', '076@232b1-277b5', '378' ],\n  [ '359a', '076@27756-281a7', '380' ],\n  [ '359b', '076@281b1-289a3', '381' ],\n  [ '360', '077@001b1-013b7', '385' ],\n  [ '361', '077@014a1-021a6', '386' ],\n  [ '362', '077@022a1-128b7', '387' ],\n  [ '363', '077@129a1-144a7', '388' ],\n  [ '364', '077@144b1-146a7', '389' ],\n  [ '365', '077@146a7-150a7', '390' ],\n  [ '366', '077@151a1-193a6', '391' ],\n  [ '367', '077@193a6-212a7', '392' ],\n  [ '368', '077@213a1-246b7', '393' ],\n  [ '369', '077@247a1-370a7', '394' ],\n  [ '370', '078@001b1-125a7', '395' ],\n  [ '371', '078@125b1-136b7', '396' ],\n  [ '372', '078@137a1-264b7', '397' ],\n  [ '373', '078@265a1-311a6', '398' ],\n  [ '374', '079@001b1-033b7', '399' ],\n  [ '375', '079@034a1-044b5', '400' ],\n  [ '376', '079@044b6-052b5', '401' ],\n  [ '377', '079@052b5-060a7', '402' ],\n  [ '378', '079@060b1-071a3', '403a' ],\n  [ '379', '079@071a3-072b7', '403b' ],\n  [ '380', '079@072b7-073a7', '404' ],\n  [ '381', '079@073b1-158b7', '405a' ],\n  [ '382', '079@158b7-184a7', '405b' ],\n  [ '383', '079@184b1-187a1', '406' ],\n  [ '384', '079@187a2-195b7', '407' ],\n  [ '385', '079@196a1-199a7', '408' ],\n  [ '386', '079@199a7-202a1', '409' ],\n  [ '387', '079@202a2-203b1', '410' ],\n  [ '388', '079@203b1-208b2', '411' ],\n  [ '389', '079@208b2-213b4', '412' ],\n  [ '390', '079@213b4-216a3', '413' ],\n  [ '391', '079@216a3-219a2', '414' ],\n  [ '392', '079@219a2-220a7', '415' ],\n  [ '393', '079@220b1-221b7', '416' ],\n  [ '394', '079@222a1-223a7', '417' ],\n  [ '395', '079@223a7-224b4', '418' ],\n  [ '396', '079@224b4-227b2', '419' ],\n  [ '397', '079@227b3-229a2', '420' ],\n  [ '398', '079@229a2-230a2', '421' ],\n  [ '399', '079@230a2-231b3', '422' ],\n  [ '400', '079@231b4-233a5', '423' ],\n  [ '401', '079@233a5-235a5', '424' ],\n  [ '402', '079@235a5-237a5', '425' ],\n  [ '403', '079@237a5-238b7', '426' ],\n  [ '404', '079@239a1-239b7', '427' ],\n  [ '405', '079@240a1-242b7', '428' ],\n  [ '406', '079@242b7-244a7', '429' ],\n  [ '407', '079@244b1-245b6', '430' ],\n  [ '408', '079@245b6-247a4', '431' ],\n  [ '409', '079@247a4-248a1', '432' ],\n  [ '410', '079@248a1-249b6', '433' ],\n  [ '411', '079@249b6-251b3', '434' ],\n  [ '412', '079@251b3-254b4', '435' ],\n  [ '413', '079@254b5-259b3', '436' ],\n  [ '414', '079@259b3-261b3', '437' ],\n  [ '415', '079@261b3-263a7', '438' ],\n  [ '416', '079@263b1-292a6', '439' ],\n  [ '417', '080@001b1-013b5', '440a' ],\n  [ '418', '080@013b5-030a3', '440b' ],\n  [ '419', '080@030a4-065b7', '441' ],\n  [ '420', '080@066a1-090b7', '442' ],\n  [ '421', '080@091a1-096b6', '443' ],\n  [ '422', '080@096b6-136b4', '444' ],\n  [ '423', '080@136b5-142b7', '445' ],\n  [ '424', '080@143a1-167a5', '446' ],\n  [ '425', '080@167a6-171a1', '447' ],\n  [ '426', '080@171a2-176a2', '448' ],\n  [ '427', '080@176a2-180b7', '449' ],\n  [ '428', '080@181a1-231b5', '450' ],\n  [ '429', '080@231b6-260a2', '451' ],\n  [ '430', '080@260a3-304a7', '452' ],\n  [ '431', '080@304b1-343a1', '453' ],\n  [ '432', '081@001b1-012a7', '454' ],\n  [ '433', '081@012b1-014b4', '455' ],\n  [ '434', '081@014b4-016b5', '456' ],\n  [ '435', '081@016b5-027a6', '457' ],\n  [ '436', '081@027a6-029b1', '458' ],\n  [ '437', '081@029b1-042b3', '459' ],\n  [ '438', '081@042b3-043b6', '460' ],\n  [ '439', '081@043b7-045b6', '461' ],\n  [ '440', '081@045b6-086a7', '462' ],\n  [ '441', '081@086b1-089b7', '463' ],\n  [ '442', '081@090a1-148a6', '464' ],\n  [ '443', '081@148a6-157b7', '466' ],\n  [ '444', '081@158a1-207b7', '467' ],\n  [ '445', '081@208a1-277b3', '468' ],\n  [ '446', '081@277b3-281b7', '469' ],\n  [ '447', '081@282a1-286a6', '470' ],\n  [ '448', '081@286b1-295a3', '471' ],\n  [ '449', '081@295a4-309a6', '472' ],\n  [ '450', '082@001b1-035b7', '473' ],\n  [ '451', '082@036a1-058b3', '474' ],\n  [ '452', '082@058b3-103a3', '475' ],\n  [ '453', '082@103a3-331a5', '476' ],\n  [ '454', '083@001b1-003b2', '477' ],\n  [ '455', '083@003b2-008a4', '478' ],\n  [ '456', '083@008a4-012a5', '479' ],\n  [ '457', '083@012a6-015a4', '480' ],\n  [ '458', '083@015a5-030a7', '481' ],\n  [ '459', '083@030b1-036b3', '482' ],\n  [ '460a', '083@036b4-039b6', '483' ],\n  [ '460b', '083@039b6-039b7', '484' ],\n  [ '461', '083@040a1-065b6', '485' ],\n  [ '462', '083@065b6-068a1', '486' ],\n  [ '463', '083@068a1-069a7', '487' ],\n  [ '464', '083@069a7-090b4', '488' ],\n  [ '465', '083@090b4-093b7', '489' ],\n  [ '466', '083@094a1-134a7', '490' ],\n  [ '467', '083@134b1-151b4', '491' ],\n  [ '468', '083@151b4-164a1', '492' ],\n  [ '469', '083@164a1-167b5', '493' ],\n  [ '470', '083@167b5-173b3', '494' ],\n  [ '471', '083@173b3-174a2', '495' ],\n  [ '472', '083@174a2-174b7', '496' ],\n  [ '473', '083@175a1-185b7', '497' ],\n  [ '474', '083@186a1-214b7', '498' ],\n  [ '475', '083@215a1-244b7', '500' ],\n  [ '476', '083@245a1-247b4', '501' ],\n  [ '477', '083@247b4-303a7', '502' ],\n  [ '478', '083@303b1-336a3', '503' ],\n  [ '479', '084@001b1-142a7', '504' ],\n  [ '480', '084@142b1-274a5', '505' ],\n  [ '481', '085@001b1-010a1', '506' ],\n  [ '482', '085@010a1-058a7', '507' ],\n  [ '483', '085@058b1-096a3', '508' ],\n  [ '484', '085@096a3-096a7', '509' ],\n  [ '485', '085@096b1-146a7', '510' ],\n  [ '486', '085@146b1-150a7', '511' ],\n  [ '487', '085@150b1-173a4', '512' ],\n  [ '488', '085@173a4-265b7', '513' ],\n  [ '489', '085@266a1-272a7', '514' ],\n  [ '490', '086@001b1-082a7', '515' ],\n  [ '491', '086@082b1-083a7', '516' ],\n  [ '492', '086@083b1-119b5', '517' ],\n  [ '493', '086@119b5-151b1', '518' ],\n  [ '494', '086@151b2-260a7', '519' ],\n  [ '495', '086@261a1-322a7', '520' ],\n  [ '496', '087@001b1-156b7', '521' ],\n  [ '497', '087@157a1-158a6', '522' ],\n  [ '498', '087@158a6-167a3', '523' ],\n  [ '499', '087@167a3-172a7', '524' ],\n  [ '500', '087@172b1-176b7', '525' ],\n  [ '501', '087@177a1-181a2', '526' ],\n  [ '502', '087@181a2-247a7', '527' ],\n  [ '503', '087@248a1-273b7', '528' ],\n  [ '504', '087@274a1-283b7', '529' ],\n  [ '505a', '087@284a1-286a6', '530' ],\n  [ '505b', '087@286a6-286a7', '531' ],\n  [ '506', '087@286b1-309a6', '532' ],\n  [ '507', '088@001b1-007b3', '533' ],\n  [ '508', '088@007b3-024b6', '534' ],\n  [ '509', '088@024b6-025b1', '535' ],\n  [ '510', '088@025b1-035b3', '536' ],\n  [ '511', '088@035b4-039a1', '537' ],\n  [ '512', '088@039a1-042b7', '538' ],\n  [ '513', '088@043a1-044b1', '539' ],\n  [ '514', '088@044b2-046b6', '540' ],\n  [ '515', '088@046b6-048a6', '541' ],\n  [ '516', '088@048a6-050b2', '542' ],\n  [ '517', '088@050b2-054a5', '543' ],\n  [ '518', '088@054a5-056a2', '544' ],\n  [ '519', '088@056a2-058a6', '545' ],\n  [ '520', '088@058a7-059a4', '546' ],\n  [ '521', '088@059a4-059a7', '547' ],\n  [ '522', '088@059a7-060b4', '548' ],\n  [ '523', '088@060b4-062a1', '549' ],\n  [ '524', '088@062a1-062a6', '550' ],\n  [ '525', '088@062a6-071a1', '551' ],\n  [ '526', '088@071a1-071b4', '552' ],\n  [ '527', '088@071b4-085a7', '553' ],\n  [ '528', '088@085b1-090b3', '554' ],\n  [ '529', '088@090b3-092b6', '555' ],\n  [ '530', '088@092b6-094a7', '556' ],\n  [ '531', '088@094b1-095b3', '557' ],\n  [ '532', '088@095b4-099b3', '558' ],\n  [ '533', '088@099b3-099b4', '559' ],\n  [ '534', '088@099b4-099b7', '560' ],\n  [ '535', '088@099b7-100a2', '561' ],\n  [ '536', '088@100a2-100a3', '562' ],\n  [ '537', '088@100a3-100a5', '563' ],\n  [ '538', '088@100a5-100b3', '564' ],\n  [ '539a', '088@100b3-100b6', '565' ],\n  [ '539b', '088@100b6-100b7', '566' ],\n  [ '539c', '088@100b7-101a5', '567' ],\n  [ '540', '088@101a5-101b3', '568' ],\n  [ '541', '088@101b3-102a3', '569' ],\n  [ '542', '088@102a3-104b7', '570' ],\n  [ '543', '088@105a1-351a6', '571' ],\n  [ '544', '089@001b1-013a6', '572' ],\n  [ '545', '089@013a6-013b4', '573' ],\n  [ '546', '089@013b5-014a5', '574' ],\n  [ '547', '089@014a5-014b1', '575' ],\n  [ '548', '089@014b1-014b2', '576' ],\n  [ '549', '089@014b3-014b7', '577' ],\n  [ '550', '089@014b7-015a4', '578' ],\n  [ '551', '089@015a4-015b6', '579' ],\n  [ '552', '089@015b6-016a4', '580' ],\n  [ '553', '089@016a4-017b4', '581' ],\n  [ '554', '089@017b4-018b7', '582' ],\n  [ '555', '089@019a1-151a7', '583' ],\n  [ '556', '089@151b1-273a7', '584' ],\n  [ '557', '090@001b1-062a7', '585' ],\n  [ '558', '090@063a1-087b1', '586' ],\n  [ '559', '090@087b1-117a5', '587' ],\n  [ '560', '090@117a5-117b4', '588' ],\n  [ '561', '090@117b4-138b5', '589' ],\n  [ '562', '090@138b6-150b1', '590' ],\n  [ '563', '090@150b2-156a7', '591' ],\n  [ '564', '090@157a1-158b1', '592' ],\n  [ '565', '090@158b2-165b5', '593' ],\n  [ '566', '090@165b5-186a3', '594' ],\n  [ '567', '090@186a3-191b3', '595' ],\n  [ '568', '090@191b4-195a5', '596' ],\n  [ '569', '090@195a6-196b4', '597' ],\n  [ '570', '090@196b4-198a6', '598' ],\n  [ '571', '090@198a6-199a3', '599' ],\n  [ '572', '090@199a4-200a2', '600' ],\n  [ '573', '090@200a2-200a7', '601' ],\n  [ '574', '090@200a7-202a2', '602' ],\n  [ '575', '090@202a3-202b5', '603' ],\n  [ '576', '090@202b5-203a1', '604' ],\n  [ '577', '090@203a1-203a3', '605' ],\n  [ '578', '090@203a3-203a5', '606' ],\n  [ '579', '090@203a5-203b1', '607' ],\n  [ '580', '090@203b1-203b5', '608' ],\n  [ '581', '090@203b5-203b6', '609' ],\n  [ '582', '090@203b6-204a1', '610' ],\n  [ '583', '090@204a1-204a3', '611' ],\n  [ '584', '090@204a3-204a4', '612' ],\n  [ '585', '090@204a5-204a6', '613' ],\n  [ '586', '090@204a6-204b1', '614' ],\n  [ '588', '090@204b1-204b3', '616' ],\n  [ '589', '090@204b3-204b7', '617' ],\n  [ '590', '090@205a1-212b6', '618' ],\n  [ '591', '090@212b7-219a7', '619' ],\n  [ '592', '090@219a7-224b2', '620' ],\n  [ '593', '090@224b2-229b7', '621' ],\n  [ '594', '090@230a1-237b4', '622' ],\n  [ '595', '090@237b4-242a6', '623' ],\n  [ '596', '090@242a6-243b1', '624' ],\n  [ '597', '090@243b1-248a3', '625' ],\n  [ '598', '090@248a3-250a5', '626' ],\n  [ '599', '090@250a5-259b7', '627' ],\n  [ '600', '090@260a1-260a3', '628' ],\n  [ '601', '090@260a3-266b4', '629' ],\n  [ '602', '090@266b4-267a3', '630' ],\n  [ '603', '090@267a3-269a3', '631' ],\n  [ '604', '090@269a3-287a7', '632' ],\n  [ '604', '091@001b1-035b7', '632' ],\n  [ '605', '091@036a1-037a2', '633' ],\n  [ '606', '091@037a2-039a4', '634' ],\n  [ '607', '091@039a5-040b6', '635' ],\n  [ '608', '091@040b7-041b5', '636' ],\n  [ '609', '091@041b6-043a2', '637' ],\n  [ '610', '091@043a3-045a2', '638' ],\n  [ '611', '091@045a3-045a7', '639' ],\n  [ '612', '091@045b1-046b4', '640' ],\n  [ '613', '091@046b5-047a7', '641' ],\n  [ '614', '091@047b1-052a5', '642' ],\n  [ '615', '091@052a5-052b5', '643' ],\n  [ '616', '091@052b6-056a7', '644' ],\n  [ '617', '091@056a7-058b3', '645' ],\n  [ '618', '091@058b3-059a6', '646' ],\n  [ '619', '091@059a6-060b4', '647' ],\n  [ '620', '091@060b4-061a1', '648' ],\n  [ '621', '091@061a2-061b7', '649' ],\n  [ '622', '091@062a1-062a7', '650' ],\n  [ '623', '091@062b1-062b2', '651' ],\n  [ '624', '091@062b2-062b3', '652' ],\n  [ '625', '091@062b3-063a3', '653' ],\n  [ '626', '091@063a4-063a4', '654' ],\n  [ '627', '091@063a4-063a6', '655' ],\n  [ '628', '091@063a6-067a2', '656' ],\n  [ '629', '091@067a2-067b3', '657' ],\n  [ '630', '091@067b4-068a2', '658' ],\n  [ '631', '091@068a3-080b7', '659' ],\n  [ '632', '091@081a1-102b7', '660' ],\n  [ '633', '091@103a1-105a2', '661' ],\n  [ '634', '091@105a3-107a7', '662' ],\n  [ '635', '091@107b1-109a5', '663' ],\n  [ '636', '091@109a5-112a4', '664' ],\n  [ '637', '091@112a4-116a2', '665' ],\n  [ '638', '091@116a2-118b5', '666' ],\n  [ '639', '091@118b5-122a1', '667' ],\n  [ '640', '091@122a2-124a4', '668' ],\n  [ '641', '091@124a5-126a5', '669' ],\n  [ '642', '091@126a6-127b2', '670' ],\n  [ '643', '091@127b2-128a3', '671' ],\n  [ '644', '091@128a3-129a2', '672' ],\n  [ '645', '091@129a3-129b7', '673' ],\n  [ '646', '091@130a1-132b2', '674' ],\n  [ '647', '091@132b2-134a5', '675' ],\n  [ '648', '091@134a6-136a7', '676' ],\n  [ '649', '091@136a7-136b4', '677' ],\n  [ '650', '091@136b4-136b7', '678' ],\n  [ '651', '091@136b7-137a2', '679' ],\n  [ '652', '091@137a2-137a5', '680' ],\n  [ '653', '091@137a5-146a1', '682' ],\n  [ '654', '091@146a1-149a2', '683' ],\n  [ '655', '091@149a2-149b1', '684' ],\n  [ '656', '091@149b2-162b7', '685' ],\n  [ '657', '091@163a1-175b2', '686' ],\n  [ '658', '091@175b3-180a4', '687' ],\n  [ '659', '091@180a4-180b4', '688' ],\n  [ '660', '091@180b5-183b4', '689' ],\n  [ '661', '091@183b5-186a5', '690' ],\n  [ '662', '091@186a5-190a3', '692' ],\n  [ '663', '091@190a3-191a2', '693' ],\n  [ '664', '091@191a2-192b4', '694' ],\n  [ '665', '091@192b4-193a6', '695' ],\n  [ '666', '091@193a7-199a5', '696' ],\n  [ '667', '091@199a6-201b3', '697' ],\n  [ '668', '091@201b3-202a3', '698' ],\n  [ '669', '091@202a3-202a7', '699' ],\n  [ '670', '091@202b1-202b6', '700' ],\n  [ '671', '091@202b6-209b5', '701' ],\n  [ '672', '091@209b5-211a6', '702' ],\n  [ '673a', '091@211a6-211b1', '703' ],\n  [ '673b', '091@211b1-211b2', '704' ],\n  [ '674', '091@211b2-216a7', '705' ],\n  [ '675', '091@216a7-220b5', '706' ],\n  [ '676', '091@220b5-222b1', '707' ],\n  [ '677', '091@222b1-222b6', '708' ],\n  [ '678', '091@222b6-223a1', '709' ],\n  [ '679', '091@223a1-223a5', '710' ],\n  [ '680', '091@223a5-223a7', '711' ],\n  [ '681', '091@224a1-278a7', '712' ],\n  [ '682', '091@278b1-284a7', '713' ],\n  [ '683', '091@284b1-287a5', '714' ],\n  [ '684', '091@287b1-290a5', '715' ],\n  [ '685', '091@290a5-291a2', '716' ],\n  [ '686', '092@001b1-316a6', '717' ],\n  [ '686', '093@001b1-057b7', '717' ],\n  [ '687', '093@058a1-059b3', '718' ],\n  [ '688', '093@059b3-062a3', '719' ],\n  [ '689', '093@062a3-066a1', '720' ],\n  [ '690', '093@066a1-094a7', '721' ],\n  [ '691', '093@094b1-129b6', '722' ],\n  [ '692', '093@129b7-137a7', '723' ],\n  [ '693', '093@137b1-139b1', '724' ],\n  [ '694', '093@139b1-147b3', '725' ],\n  [ '695', '093@147b3-147b3', '726' ],\n  [ '696', '093@147b3-148a2', '727' ],\n  [ '697', '093@148a3-149a7', '728' ],\n  [ '698', '093@149b1-150a5', '729' ],\n  [ '699', '093@150a5-151b1', '730' ],\n  [ '700', '093@151b1-157b2', '731' ],\n  [ '701', '093@157b2-164b3', '732' ],\n  [ '702', '093@164b4-165b5', '733' ],\n  [ '703', '093@165b5-171a5', '734' ],\n  [ '704', '093@171a5-171b1', '735' ],\n  [ '705', '093@171b1-173a5', '736' ],\n  [ '706', '093@173a6-175a1', '737' ],\n  [ '707', '093@175a1-176b1', '738' ],\n  [ '708', '093@176b1-177b6', '739' ],\n  [ '709', '093@177b6-178a1', '740' ],\n  [ '710', '093@178a1-178a7', '741' ],\n  [ '711', '093@178a7-178b2', '742' ],\n  [ '712', '093@178b2-178b4', '743' ],\n  [ '713', '093@178b4-178b6', '744' ],\n  [ '714', '093@178b6-179a2', '745' ],\n  [ '715', '093@179a2-179a5', '746' ],\n  [ '716', '093@179a5-179a7', '747' ],\n  [ '717', '093@179b1-179b2', '748' ],\n  [ '718', '093@179b2-180a1', '749' ],\n  [ '719', '093@180a2-180a4', '750' ],\n  [ '720', '093@180a4-180a7', '751' ],\n  [ '721', '093@180b1-199b7', '752' ],\n  [ '722', '093@200a1-201b3', '753' ],\n  [ '723', '093@201b3-204a7', '754' ],\n  [ '724', '093@205a1-311a7', '755' ],\n  [ '724', '094@001b1-200a7', '755' ],\n  [ '725', '094@200b1-202a1', '756' ],\n  [ '726', '094@202a1-217a2', '757' ],\n  [ '727', '094@217a2-219a6', '758' ],\n  [ '728', '094@219a6-222a6', '759' ],\n  [ '729', '094@222a6-222a7', '760' ],\n  [ '730', '094@222a7-222b5', '761' ],\n  [ '731', '094@222b5-224b1', '762' ],\n  [ '732', '094@224b1-225a3', '763' ],\n  [ '733', '094@225a3-225b6', '764' ],\n  [ '734', '094@225b7-227a7', '765' ],\n  [ '735', '094@227a7-228a7', '766' ],\n  [ '736', '094@228b1-229a3', '767' ],\n  [ '737', '094@229a4-229b4', '768' ],\n  [ '738', '094@229b4-230a7', '769' ],\n  [ '739', '094@230a7-234b2', '770' ],\n  [ '740', '094@234b2-235a3', '771' ],\n  [ '741', '094@235a4-235b5', '772' ],\n  [ '742', '094@235b5-236a3', '773' ],\n  [ '743', '094@236a3-236b7', '774' ],\n  [ '744', '094@237a1-266a7', '775' ],\n  [ '745', '094@266b1-268a7', '776' ],\n  [ '746', '095@001b1-237b7', '777' ],\n  [ '747', '095@238a1-263a7', '778' ],\n  [ '748', '095@263b1-264b1', '779' ],\n  [ '749', '095@264b1-265b3', '780' ],\n  [ '750', '095@265b3-266b7', '781' ],\n  [ '751', '095@267a1-295a7', '782' ],\n  [ '752', '096@001b1-004b4', '783' ],\n  [ '753', '096@004b4-005a7', '784' ],\n  [ '754', '096@005a7-006a5', '785' ],\n  [ '755', '096@006a6-007b4', '786' ],\n  [ '756', '096@007b4-008a7', '787' ],\n  [ '757', '096@008a7-019a5', '788' ],\n  [ '758', '096@019a5-027b4', '789' ],\n  [ '759', '096@027b4-050a3', '790' ],\n  [ '760', '096@050a4-052a1', '791' ],\n  [ '761', '096@052a2-053a6', '792' ],\n  [ '762', '096@053a6-054a3', '793' ],\n  [ '763', '096@054a3-055b7', '794' ],\n  [ '764', '096@056a1-056b2', '795' ],\n  [ '765', '096@056b2-069a6', '796' ],\n  [ '766', '096@069a7-081b7', '797a' ],\n  [ '767', '096@081b7-088b7', '797b' ],\n  [ '768', '096@089a1-089b6', '798' ],\n  [ '769', '096@089b7-090a6', '799' ],\n  [ '770', '096@090a6-104a3', '800' ],\n  [ '771', '096@104a3-105b7', '801' ],\n  [ '772', '096@105b7-111b7', '802' ],\n  [ '773', '096@112a1-112b4', '803' ],\n  [ '774', '096@112b4-112b5', '804' ],\n  [ '775', '096@112b5-112b7', '805' ],\n  [ '776', '096@112b7-113a3', '806' ],\n  [ '777', '096@113a3-113b1', '807' ],\n  [ '778', '096@113b1-113b3', '808' ],\n  [ '779', '096@113b3-113b5', '809' ],\n  [ '780', '096@113b5-113b7', '810' ],\n  [ '781', '096@114a1-114a1', '811' ],\n  [ '782', '096@114a2-114a5', '812' ],\n  [ '783', '096@114a5-114a6', '813' ],\n  [ '784', '096@114a7-114b1', '814' ],\n  [ '785', '096@114b1-114b3', '815' ],\n  [ '786', '096@114b3-114b5', '816' ],\n  [ '787', '096@114b5-114b7', '817' ],\n  [ '788', '096@114b7-115a1', '818' ],\n  [ '789', '096@115a1-115a4', '819' ],\n  [ '790', '096@115a4-115a5', '820' ],\n  [ '791', '096@115a5-115a7', '821' ],\n  [ '792', '096@115b1-115b2', '822' ],\n  [ '793', '096@115b3-115b5', '823' ],\n  [ '794', '096@115b5-116a2', '824' ],\n  [ '795', '096@116a2-116a4', '825' ],\n  [ '796', '096@116a5-116a6', '826' ],\n  [ '797', '096@116a6-116b1', '827' ],\n  [ '798', '096@116b1-116b3', '828' ],\n  [ '799', '096@116b3-116b4', '829' ],\n  [ '800', '096@116b4-116b5', '830' ],\n  [ '801', '096@116b6-116b7', '831' ],\n  [ '802', '096@116b7-117a1', '832' ],\n  [ '803', '096@117a2-117a4', '833' ],\n  [ '804', '096@117a4-117a7', '834' ],\n  [ '805', '096@118a1-140b7', '835' ],\n  [ '806', '096@141a1-167b7', '836' ],\n  [ '807', '096@168a1-222b7', '837' ],\n  [ '808', '096@223a1-225b7', '838' ],\n  [ '809', '096@226a1-229a3', '839' ],\n  [ '810', '096@229a3-250b3', '840' ],\n  [ '811', '096@250b4-251a5', '841' ],\n  [ '812', '096@251a5-253a2', '842' ],\n  [ '813', '096@253a2-254a6', '843' ],\n  [ '814', '096@254a6-254b4', '844' ],\n  [ '815', '096@254b4-256a6', '845' ],\n  [ '816', '096@256a7-257a5', '846' ],\n  [ '817', '096@257a5-258b7', '847' ],\n  [ '818', '096@258b7-259b1', '848' ],\n  [ '819', '096@259b1-260a5', '849' ],\n  [ '820', '096@260a5-260b7', '850' ],\n  [ '821', '096@261a1-261b1', '851' ],\n  [ '822', '096@261b1-261b7', '852' ],\n  [ '823', '096@261b7-262a3', '853' ],\n  [ '824', '096@262a3-262a7', '854' ],\n  [ '825', '096@262a7-262b3', '855' ],\n  [ '826', '096@262b3-263b6', '856' ],\n  [ '827', '096@263b7-264a6', '857' ],\n  [ '828', '097@001b1-086a7', '1118' ],\n  [ '829', '097@086b1-290a7', '1119' ],\n  [ '830', '097@290b1-358a7', '1120' ],\n  [ '831', '098@001b1-110a7', '1121' ],\n  [ '832', '098@110b1-132a7', '1122' ],\n  [ '833', '098@132b1-198a7', '1123' ],\n  [ '834', '098@198b1-298b7', '1124' ],\n  [ '835', '098@299a1-311a7', '1125' ],\n  [ '836', '099@001b1-034b3', '1126' ],\n  [ '837', '099@034b3-060a4', '1127' ],\n  [ '838', '099@060a5-077a5', '1128' ],\n  [ '839', '099@077a6-129b7', '1129' ],\n  [ '840', '099@130a1-202a3', '1130' ],\n  [ '841a', '099@202a3-203a5', '1131' ],\n  [ '841b', '099@203a5-207b6', '1132' ],\n  [ '841c', '099@207b6-208b7', '1133' ],\n  [ '841d', '099@209a1-212a6', '1134' ],\n  [ '841e', '099@212a7-213b5', '1135' ],\n  [ '841f', '099@213b5-216a4', '1136' ],\n  [ '841g', '099@216a4-220a3', '1137' ],\n  [ '841h', '099@220a3-223b6', '1138' ],\n  [ '842', '099@223b6-253a5', '1139' ],\n  [ '843', '099@253a5-267b7', '1140' ],\n  [ '844', '099@268a1-287a7', '1141' ],\n  [ '845', '100@001b1-469a7', '1116' ],\n  [ '846', '101@001b1-003b6', '858' ],\n  [ '847', '101@003b6-054b7', '859' ],\n  [ '878', '101@011a6-114a2', '890' ],\n  [ '848', '101@055a1-057a7', '860' ],\n  [ '849', '101@057b1-062a6', '861' ],\n  [ '850', '101@062a6-064a2', '862' ],\n  [ '851', '101@064a3-064a7', '863' ],\n  [ '852', '101@065a1-068b7', '864' ],\n  [ '853', '101@069a1-072b1', '865' ],\n  [ '854', '101@072b1-074b5', '866' ],\n  [ '855', '101@074b6-076a5', '867' ],\n  [ '856', '101@076a6-077b7', '868' ],\n  [ '857', '101@077b7-079b5', '869' ],\n  [ '858', '101@079b5-085a7', '870' ],\n  [ '859', '101@085b1-087a1', '871' ],\n  [ '860', '101@087a1-087a2', '872' ],\n  [ '861', '101@087a2-087a6', '873' ],\n  [ '862', '101@087a6-087a7', '874' ],\n  [ '863', '101@087b1-087b4', '875' ],\n  [ '864', '101@087b4-088a2', '876' ],\n  [ '865', '101@088a2-088a5', '877' ],\n  [ '866', '101@088a5-088b4', '878' ],\n  [ '867', '101@088b4-088b6', '879' ],\n  [ '868', '101@088b6-089a2', '880' ],\n  [ '869', '101@089a2-089a3', '881' ],\n  [ '870', '101@089a3-089a4', '882' ],\n  [ '871', '101@089a4-092b7', '883' ],\n  [ '872', '101@092b7-095b7', '884' ],\n  [ '873', '101@096a1-100b5', '885' ],\n  [ '874', '101@100b5-103a2', '886' ],\n  [ '875', '101@103a2-104b5', '887' ],\n  [ '876', '101@104b6-107b3', '888' ],\n  [ '877', '101@107b3-111a6', '889' ],\n  [ '879', '101@114a3-117b1', '891' ],\n  [ '880', '101@117b2-119b6', '892' ],\n  [ '881', '101@119b7-122a2', '893' ],\n  [ '882', '101@122a2-123a2', '894' ],\n  [ '883', '101@123a2-129a3', '895' ],\n  [ '884', '101@129a3-135b3', '896' ],\n  [ '885', '101@135b3-159b1', '897' ],\n  [ '886', '101@159b1-161b3', '898' ],\n  [ '887', '101@161b3-163a2', '899' ],\n  [ '888', '101@163a2-165b1', '900' ],\n  [ '890', '101@165b1-165b4', '902' ],\n  [ '889', '101@165b4-166a4', '901' ],\n  [ '891', '101@166a5-166b4', '903' ],\n  [ '892', '101@166b4-167a2', '904' ],\n  [ '893', '101@167a3-167b3', '905' ],\n  [ '894', '101@167b3-167b4', '906' ],\n  [ '895', '101@167b5-168a2', '907' ],\n  [ '896', '101@168a2-168a6', '908' ],\n  [ '897', '101@168a6-205a5', '909' ],\n  [ '898', '101@205a5-213a6', '910' ],\n  [ '899', '101@213a6-215b1', '911' ],\n  [ '900', '101@215b1-217b2', '912' ],\n  [ '901', '101@217b2-223b7', '913' ],\n  [ '902', '101@223b7-226b3', '914' ],\n  [ '903', '101@226b4-228b3', '915' ],\n  [ '904', '101@228b3-230b7', '916' ],\n  [ '905', '101@231a1-232a7', '917' ],\n  [ '906', '101@232a7-233a5', '918' ],\n  [ '907', '101@233a5-239a3', '919' ],\n  [ '908', '101@239a3-240a1', '920' ],\n  [ '909', '101@240a2-241b4', '921' ],\n  [ '910', '101@241b4-242a4', '922' ],\n  [ '911', '101@242a4-242a7', '923' ],\n  [ '912', '101@242a7-242b3', '924' ],\n  [ '913', '101@242b3-244b5', '925' ],\n  [ '914', '101@244b6-254b7', '926' ],\n  [ '915', '101@255a1-260b1', '927' ],\n  [ '916', '101@260b1-261a4', '928' ],\n  [ '917', '101@261a5-262a2', '929' ],\n  [ '918', '101@262a2-262a7', '930' ],\n  [ '919', '101@262b1-264a3', '931' ],\n  [ '920', '101@264a3-264b7', '932' ],\n  [ '921', '101@265a1-265a7', '933' ],\n  [ '922', '101@265b1-267a7', '934' ],\n  [ '923', '101@267a7-268b6', '935' ],\n  [ '924', '101@268b7-271a4', '936' ],\n  [ '925', '101@271a5-272b4', '937' ],\n  [ '926', '101@272b4-273b4', '938' ],\n  [ '927', '101@273b4-276a1', '939' ],\n  [ '928', '101@276a1-277b4', '940' ],\n  [ '929', '101@277b4-279a7', '941' ],\n  [ '930', '101@279a7-279b7', '942' ],\n  [ '931', '101@279b7-280b2', '943' ],\n  [ '932', '101@280b2-280b5', '944' ],\n  [ '933', '101@280b6-281a2', '945' ],\n  [ '934', '101@281a2-281a4', '946' ],\n  [ '935', '101@281a4-281a7', '947' ],\n  [ '936', '101@281a7-281b6', '948' ],\n  [ '937', '101@281b6-281b7', '949' ],\n  [ '938', '101@282a1-282a4', '950' ],\n  [ '939', '101@282a4-282a6', '951' ],\n  [ '940', '101@282a6-282a7', '952' ],\n  [ '941', '101@282a7-282b2', '953' ],\n  [ '942', '101@282b2-282b3', '954' ],\n  [ '943', '101@282b4-282b4', '955' ],\n  [ '944', '101@282b5-282b6', '956' ],\n  [ '945', '101@282b6-283a5', '957' ],\n  [ '946', '102@001b1-030b5', '958' ],\n  [ '947', '102@030b5-041a7', '959' ],\n  [ '948', '102@041b1-042b1', '960' ],\n  [ '949', '102@042b1-043b6', '961' ],\n  [ '950', '102@043b6-045a1', '962' ],\n  [ '951', '102@045a2-045b7', '963' ],\n  [ '952', '102@045b7-046a1', '964' ],\n  [ '953', '102@046a1-046b6', '965' ],\n  [ '954', '102@046b7-049b7', '966' ],\n  [ '955', '102@050a1-050b3', '967' ],\n  [ '956', '102@050b3-051b4', '968' ],\n  [ '957', '102@051b4-053a6', '969' ],\n  [ '958', '102@053a6-055b5', '970' ],\n  [ '959', '102@055b5-056a5', '971' ],\n  [ '960', '102@056a5-056b5', '972' ],\n  [ '961', '102@056b5-057a7', '973' ],\n  [ '962', '102@057a7-057b2', '974' ],\n  [ '963', '102@057b2-058a7', '975' ],\n  [ '964', '102@058b1-079b7', '976' ],\n  [ '965', '102@080a1-081b5', '977' ],\n  [ '966', '102@081b5-083b1', '978' ],\n  [ '967', '102@083b2-084a4', '979' ],\n  [ '968', '102@084a4-085b3', '980' ],\n  [ '969', '102@085b3-086a6', '981' ],\n  [ '970', '102@086a6-086b7', '982' ],\n  [ '971', '102@087a1-087a7', '983' ],\n  [ '972', '102@087a7-089a4', '984' ],\n  [ '973', '102@089a4-090a3', '985' ],\n  [ '974', '102@090a3-092a7', '986' ],\n  [ '975', '102@092a7-095a7', '987' ],\n  [ '976', '102@095a7-096a1', '988' ],\n  [ '977', '102@096a1-096a7', '989' ],\n  [ '978', '102@096a7-096b3', '990' ],\n  [ '979', '102@096b3-099a2', '991' ],\n  [ '980', '102@099a2-099b7', '992' ],\n  [ '981', '102@099b7-100a3', '993' ],\n  [ '982', '102@100a3-110b6', '994' ],\n  [ '983', '102@110b7-119b7', '995' ],\n  [ '984', '102@120a1-124b7', '996' ],\n  [ '985', '102@124b7-133b2', '997' ],\n  [ '986', '102@133b3-138b2', '998' ],\n  [ '987', '102@138b2-141b7', '999' ],\n  [ '988', '102@142a1-143a2', '1000' ],\n  [ '989', '102@143a3-143b6', '1001' ],\n  [ '990', '102@143b6-144b4', '1002' ],\n  [ '991', '102@144b4-146b2', '1003' ],\n  [ '992', '102@146b2-147a4', '1004' ],\n  [ '993', '102@147a4-148a3', '1005' ],\n  [ '994', '102@148a3-149a4', '1006' ],\n  [ '995', '102@149a4-149b5', '1007' ],\n  [ '996', '102@149b6-150a4', '1008' ],\n  [ '997', '102@150a4-153a7', '1009' ],\n  [ '998', '102@153b1-156a2', '1010' ],\n  [ '999', '102@156a3-157b3', '1011' ],\n  [ '1000', '102@157b3-160a2', '1012' ],\n  [ '1001', '102@160a2-160a4', '1013' ],\n  [ '1002', '102@160a4-160b2', '1014' ],\n  [ '1003', '102@160b3-167a2', '1015' ],\n  [ '1004', '102@167a2-171a6', '1016' ],\n  [ '1005', '102@171a7-172a2', '1017' ],\n  [ '1006', '102@172a2-172b4', '1018' ],\n  [ '1007', '102@172b4-176b1', '1019' ],\n  [ '1008', '102@176b1-177b7', '1020' ],\n  [ '1009', '102@178a1-179a1', '1021' ],\n  [ '1010', '102@179a1-179a6', '1022' ],\n  [ '1011', '102@179a7-179b3', '1023a' ],\n  [ '1012', '102@179b4-179b5', '1023b' ],\n  [ '1013', '102@179b5-179b7', '1024' ],\n  [ '1014', '102@180a1-180b2', '1025' ],\n  [ '1015', '102@180b2-180b3', '1026' ],\n  [ '1016', '102@180b4-181a5', '1027' ],\n  [ '1017', '102@181a5-181a7', '1028' ],\n  [ '1018', '102@181a7-181b5', '1029' ],\n  [ '1019', '102@181b5-181b6', '1030' ],\n  [ '1020', '102@181b7-183a1', '1031' ],\n  [ '1021', '102@183a1-183a2', '1032' ],\n  [ '1022', '102@183a3-183a4', '1033' ],\n  [ '1023', '102@183a5-183a6', '1034' ],\n  [ '1024', '102@183a7-183b7', '1035' ],\n  [ '1025', '102@184a1-184a2', '1036' ],\n  [ '1026', '102@184a2-184a3', '1037' ],\n  [ '1027', '102@184a3-184a6', '1038' ],\n  [ '1028', '102@184a6-184b1', '1039' ],\n  [ '1029', '102@184b1-184b3', '1040' ],\n  [ '1030', '102@184b3-184b7', '1041' ],\n  [ '1031', '102@185a1-185a3', '1042' ],\n  [ '1032', '102@185a3-185a4', '1043' ],\n  [ '1033', '102@185a4-185a6', '1044' ],\n  [ '1034', '102@185a6-185b1', '1045' ],\n  [ '1035', '102@185b1-185b2', '1046' ],\n  [ '1036', '102@185b2-185b7', '1047' ],\n  [ '1037', '102@185b7-186a7', '1048' ],\n  [ '1038', '102@186a7-186b2', '1049' ],\n  [ '1039', '102@186b3-186b6', '1050' ],\n  [ '1040', '102@186b6-187a1', '1051' ],\n  [ '1041', '102@187a1-187a3', '1052' ],\n  [ '1042', '102@187a4-187a6', '1053' ],\n  [ '1043', '102@187a6-187b1', '1054' ],\n  [ '1044', '102@187b2-187b4', '1055' ],\n  [ '1045', '102@187b4-187b7', '1056' ],\n  [ '1046', '102@187b7-188a3', '1057' ],\n  [ '1047', '102@188a4-188a6', '1058' ],\n  [ '1048', '102@188a7-188b1', '1059' ],\n  [ '1049', '102@188b1-188b4', '1060' ],\n  [ '1050', '102@188b4-188b6', '1061' ],\n  [ '1051', '102@188b7-189a2', '1062' ],\n  [ '1052', '102@189a2-189a4', '1063' ],\n  [ '1053', '102@189a4-189a6', '1064' ],\n  [ '1054', '102@189a6-189a7', '1065' ],\n  [ '1055', '102@189b1-189b2', '1066' ],\n  [ '1056', '102@189b2-189b3', '1067' ],\n  [ '1057', '102@189b3-189b5', '1068' ],\n  [ '1058', '102@189b5-189b6', '1069' ],\n  [ '1059', '102@189b6-190a1', '1070' ],\n  [ '1060a', '102@190a1-190a2', '1071' ],\n  [ '1060b', '102@190a3-190a4', '1072' ],\n  [ '1061', '102@190a4-205b4', '1073' ],\n  [ '1062', '102@205b5-215b7', '1074' ],\n  [ '1063', '102@216a1-229b2', '1075' ],\n  [ '1064', '102@229b3-234b1', '1076' ],\n  [ '1065', '102@234b1-235a1', '1077' ],\n  [ '1066', '102@235a2-235b4', '1078' ],\n  [ '1067', '102@235b4-239a1', '1079' ],\n  [ '1068', '102@239a1-239b1', '1080a' ],\n  [ '1069', '102@239b1-239b1', '1080b' ],\n  [ '1070', '102@239b1-239b2', '1080c' ],\n  [ '1071', '102@239b2-239b2', '1080d' ],\n  [ '1072', '102@239b2-239b3', '1080e' ],\n  [ '1073', '102@239b3-239b4', '1080f' ],\n  [ '1074', '102@239b4-239b5', '1081' ],\n  [ '1075', '102@239b5-239b6', '1082' ],\n  [ '1076', '102@239b6-240a3', '1083' ],\n  [ '1077', '102@240a3-240a7', '1084' ],\n  [ '1078', '102@240b1-240b5', '1085' ],\n  [ '1079', '102@240b5-242b2', '1086' ],\n  [ '1080', '102@242b3-245a4', '1087' ],\n  [ '1081', '102@245a4-247a7', '1088' ],\n  [ '1082', '102@247a7-247b3', '1089' ],\n  [ '1083', '102@247b3-251a6', '1090' ],\n  [ '1084', '102@251a7-252a3', '1091' ],\n  [ '1085', '102@252a3-252b3', '1092' ],\n  [ '1086', '102@252b3-252b7', '1093' ],\n  [ '1087', '102@253a1-253a6', '1094' ],\n  [ '1088', '102@253a6-254b7', '1095' ],\n  [ '1089', '102@254b7-255a2', '1096' ],\n  [ '1090', '102@255a2-255b5', '1097' ],\n  [ '1091', '102@255b6-256a2', '1098' ],\n  [ '1092', '102@256a3-256b7', '1099' ],\n  [ '1093', '102@256b7-260b7', '1100' ],\n  [ '1094', '102@261a1-262b5', '1101' ],\n  [ '1095', '102@262b5-266a3', '1102' ],\n  [ '1096', '102@266a4-267a5', '1103' ],\n  [ '1097', '102@267a5-268b1', '1104' ],\n  [ '1098', '102@268b1-269b5', '1105' ],\n  [ '1099', '102@269b5-270a3', '1106' ],\n  [ '1100', '102@270a4-270b7', '1107' ],\n  [ '1101', '102@271a1-272b3', '1108' ],\n  [ '1102', '102@272b4-273a5', '1109' ],\n  [ '1103', '102@273a5-274b3', '1110' ],\n  [ '1104', '102@274b3-275a4', '1111' ],\n  [ '1105', '102@275a5-275b3', '1112' ],\n  [ '1106', '102@275b4-275b7', '1113' ],\n  [ '1107', '102@275b7-278a2', '1114' ],\n  [ '1108', '102@278a2-278a7', '1115' ],\n  [ '4568', '103@001b1-171a4', '1143' ] ];\ndPedurma.rcode=\"D\";\nmodule.exports=dPedurma;\n",
    "var hPedurma=[ [ '1_1', '001@001b1-001@020b7', '1_1' ],\n  [ '1_2', '001@020b7-001@033b6', '1_2' ],\n  [ '1_3', '001@033b6-001@047a3', '1_3' ],\n  [ '1_4', '001@047a3-001@063a1', '1_4' ],\n  [ '1_5', '001@063a1-001@088b2', '1_5' ],\n  [ '1_6', '001@088b2-001@105a6', '1_6' ],\n  [ '1_7', '001@105a6-001@121b6', '1_7' ],\n  [ '1_8', '001@121b6-001@138a7', '1_8' ],\n  [ '1_9', '001@138a7-001@155b3', '1_9' ],\n  [ '1_10', '001@155b3-001@173a7', '1_10' ],\n  [ '1_11', '001@173a7-001@192a6', '1_11' ],\n  [ '1_12', '001@192a6-001@213b5', '1_12' ],\n  [ '1_13', '001@213b5-001@231a4', '1_13' ],\n  [ '1_14', '001@231a4-001@248b2', '1_14' ],\n  [ '1_15', '001@248b2-001@269b3', '1_15' ],\n  [ '1_16', '001@269b3-001@289b3', '1_16' ],\n  [ '1_17', '001@289b3-001@306b1', '1_17' ],\n  [ '1_18', '001@306b1-001@325a2', '1_18' ],\n  [ '1_19', '001@325a2-001@343a2', '1_19' ],\n  [ '1_20', '001@343a2-001@361a3', '1_20' ],\n  [ '1_21', '001@361a3-002@001b1', '1_21' ],\n  [ '1_22', '002@001b1-002@019a5', '1_22' ],\n  [ '1_23', '002@019a5-002@037a4', '1_23' ],\n  [ '1_24', '002@037a4-002@055a7', '1_24' ],\n  [ '1_25', '002@055a7-002@073a7', '1_25' ],\n  [ '1_26', '002@073a7-002@092a3', '1_26' ],\n  [ '1_27', '002@092a3-002@110a6', '1_27' ],\n  [ '1_28', '002@110a6-002@125a5', '1_28' ],\n  [ '1_29', '002@125a5-002@140b1', '1_29' ],\n  [ '1_30', '002@140b1-002@154b3', '1_30' ],\n  [ '1_31', '002@154b3-002@167b4', '1_31' ],\n  [ '1_32', '002@167b4-002@181b1', '1_32' ],\n  [ '1_33', '002@181b1-002@196b6', '1_33' ],\n  [ '1_34', '002@196b6-002@211a7', '1_34' ],\n  [ '1_35', '002@211a7-002@225b7', '1_35' ],\n  [ '1_36', '002@225b7-002@256b5', '1_36' ],\n  [ '1_38', '002@256b5-002@272a4', '1_38' ],\n  [ '1_39', '002@272a4-002@285b5', '1_39' ],\n  [ '1_40', '002@285b5-002@298b2', '1_40' ],\n  [ '1_41', '002@298b2-002@312a5', '1_41' ],\n  [ '1_42', '002@312a5-002@326a7', '1_42' ],\n  [ '1_43', '002@326a7-002@339a3', '1_43' ],\n  [ '1_44', '002@339a3-002@353a6', '1_44' ],\n  [ '1_45', '002@353a6-002@368a7', '1_45' ],\n  [ '1_46', '002@368a7-002@383b3', '1_46' ],\n  [ '1_47', '002@383b3-002@398b4', '1_47' ],\n  [ '1_48', '002@398b4-002@401b2', '1_48' ],\n  [ '1_37', '002@401b2-002@413b1', '1_37' ],\n  [ '1_49', '002@413b1-002@431a8', '1_49' ],\n  [ '1_50', '002@431a8-002@446a1', '1_50' ],\n  [ '1_51', '002@446a1-002@460b6', '1_51' ],\n  [ '1_52', '002@460b6-002@477a8', '1_52' ],\n  [ '1_53', '002@477a8-002@492a4', '1_53' ],\n  [ '1_54', '002@492a4-003@001b1', '1_54' ],\n  [ '1_55', '003@001b1-003@016a3', '1_55' ],\n  [ '1_56', '003@016a3-003@029a6', '1_56' ],\n  [ '1_57', '003@029a6-003@044a4', '1_57' ],\n  [ '1_58', '003@044a4-003@057b1', '1_58' ],\n  [ '1_59', '003@057b1-003@071a4', '1_59' ],\n  [ '1_60', '003@071a4-003@085b8', '1_60' ],\n  [ '1_61', '003@085b8-003@100a7', '1_61' ],\n  [ '1_62', '003@100a7-003@117a1', '1_62' ],\n  [ '1_63', '003@117a1-003@132b1', '1_63' ],\n  [ '1_64', '003@132b1-003@145a2', '1_64' ],\n  [ '1_65', '003@145a2-003@158b3', '1_65' ],\n  [ '1_66', '003@158b3-003@172a2', '1_66' ],\n  [ '1_67', '003@172a2-003@184a1', '1_67' ],\n  [ '1_68', '003@184a1-003@199b3', '1_68' ],\n  [ '1_69', '003@199b3-003@214a2', '1_69' ],\n  [ '1_70', '003@214a2-003@230b4', '1_70' ],\n  [ '1_71', '003@230b4-003@250a1', '1_71' ],\n  [ '1_72', '003@250a1-003@265b5', '1_72' ],\n  [ '1_73', '003@265b5-003@280a3', '1_73' ],\n  [ '1_74', '003@280a3-003@295a3', '1_74' ],\n  [ '1_75', '003@295a3-003@312a1', '1_75' ],\n  [ '1_76', '003@312a1-003@328b3', '1_76' ],\n  [ '1_77', '003@328b3-003@347a2', '1_77' ],\n  [ '1_78', '003@347a2-003@364a7', '1_78' ],\n  [ '1_79', '003@364a7-003@381a7', '1_79' ],\n  [ '1_80', '003@381a7-003@401a4', '1_80' ],\n  [ '1_81', '003@401a4-003@417b6', '1_81' ],\n  [ '1_82', '003@417b6-004@001b1', '1_82' ],\n  [ '1_83', '004@001b1-004@019b6', '1_83' ],\n  [ '1_84', '004@019b6-004@036b1', '1_84' ],\n  [ '1_85', '004@036b1-004@052a6', '1_85' ],\n  [ '1_86', '004@052a6-004@068a2', '1_86' ],\n  [ '1_87', '004@068a2-004@084b2', '1_87' ],\n  [ '1_88', '004@084b2-004@102a3', '1_88' ],\n  [ '1_89', '004@102a3-004@120a7', '1_89' ],\n  [ '1_90', '004@120a7-004@137b2', '1_90' ],\n  [ '1_91', '004@137b2-004@153a6', '1_91' ],\n  [ '1_92', '004@153a6-004@171a5', '1_92' ],\n  [ '1_93', '004@171a5-004@187a5', '1_93' ],\n  [ '1_94', '004@187a5-004@203a1', '1_94' ],\n  [ '1_95', '004@203a1-004@217b3', '1_95' ],\n  [ '1_96', '004@217b3-004@233b1', '1_96' ],\n  [ '1_97', '004@233b1-004@249b5', '1_97' ],\n  [ '1_98', '004@249b5-004@264b1', '1_98' ],\n  [ '1_99', '004@264b1-004@280b4', '1_99' ],\n  [ '1_100', '004@280b4-004@303a1', '1_100' ],\n  [ '1_101', '004@303a1-004@313b6', '1_101' ],\n  [ '1_102', '004@313b6-004@328b1', '1_102' ],\n  [ '1_103', '004@328b1-004@344b7', '1_103' ],\n  [ '1_104', '004@344b7-004@360b5', '1_104' ],\n  [ '1_105', '004@360b5-004@376b5', '1_105' ],\n  [ '1_106', '004@376b5-004@393a3', '1_106' ],\n  [ '1_107', '004@393a3-004@409a6', '1_107' ],\n  [ '1_108', '004@409a6-004@423b2', '1_108' ],\n  [ '1_109', '004@423b2-012@137a5', '1_109' ],\n  [ '2_1', '005@001b1-005@016a7', '2_1' ],\n  [ '2_2', '005@016a7-004@423b2', '2_2' ],\n  [ '3_1', '005@030a6-005@050b3', '3_1' ],\n  [ '3_2', '005@050b3-005@068a5', '3_2' ],\n  [ '3_3', '005@068a5-005@086b5', '3_3' ],\n  [ '3_4', '005@086b5-005@106a6', '3_4' ],\n  [ '3_5', '005@106a6-005@124b3', '3_5' ],\n  [ '3_6', '005@124b3-005@142b1', '3_6' ],\n  [ '3_7', '005@142b1-005@159a1', '3_7' ],\n  [ '3_8', '005@159a1-005@177a7', '3_8' ],\n  [ '3_9', '005@177a7-005@195b7', '3_9' ],\n  [ '3_10', '005@195b7-005@215a6', '3_10' ],\n  [ '3_11', '005@215a6-005@230b5', '3_11' ],\n  [ '3_12', '005@230b5-005@248b5', '3_12' ],\n  [ '3_13', '005@248b5-005@265b1', '3_13' ],\n  [ '3_14', '005@265b1-005@282a7', '3_14' ],\n  [ '3_15', '005@282a7-005@301a2', '3_15' ],\n  [ '3_16', '005@301a2-005@318a6', '3_16' ],\n  [ '3_17', '005@318a6-005@336a1', '3_17' ],\n  [ '3_18', '005@336a1-005@355b1', '3_18' ],\n  [ '3_19', '005@355b1-005@376a1', '3_19' ],\n  [ '3_20', '005@376a1-005@394a5', '3_20' ],\n  [ '3_21', '005@394a5-006@001b1', '3_21' ],\n  [ '3_22', '006@001b1-006@023a1', '3_22' ],\n  [ '3_23', '006@023a1-006@039b7', '3_23' ],\n  [ '3_24', '006@039b7-006@058a4', '3_24' ],\n  [ '3_25', '006@058a4-006@075b5', '3_25' ],\n  [ '3_26', '006@075b5-006@092b4', '3_26' ],\n  [ '3_27', '006@092b4-006@111b1', '3_27' ],\n  [ '3_28', '006@111b1-006@129a6', '3_28' ],\n  [ '3_29', '006@129a6-006@146b3', '3_29' ],\n  [ '3_30', '006@146b3-006@165b5', '3_30' ],\n  [ '3_31', '006@165b5-006@186b6', '3_31' ],\n  [ '3_32', '006@186b6-006@207b4', '3_32' ],\n  [ '3_33', '006@207b4-006@228a1', '3_33' ],\n  [ '3_34', '006@228a1-006@248b5', '3_34' ],\n  [ '3_35', '006@248b5-006@272a7', '3_35' ],\n  [ '3_36', '006@272a7-006@293a2', '3_36' ],\n  [ '3_37', '006@293a2-006@311a5', '3_37' ],\n  [ '3_38', '006@311a5-006@330a4', '3_38' ],\n  [ '3_39', '006@330a4-006@346b2', '3_39' ],\n  [ '3_40', '006@346b2-006@364b7', '3_40' ],\n  [ '3_41', '006@364b7-006@383b7', '3_41' ],\n  [ '3_42', '006@383b7-007@001b1', '3_42' ],\n  [ '3_43', '007@001b1-007@023b6', '3_43' ],\n  [ '3_44', '007@023b6-007@048a1', '3_44' ],\n  [ '3_45', '007@048a1-007@069b2', '3_45' ],\n  [ '3_46', '007@069b2-007@093a5', '3_46' ],\n  [ '3_47', '007@093a5-007@115b7', '3_47' ],\n  [ '3_48', '007@115b7-007@136b1', '3_48' ],\n  [ '3_49', '007@136b1-007@158b1', '3_49' ],\n  [ '3_50', '007@158b1-007@179a7', '3_50' ],\n  [ '3_51', '007@179a7-007@199b3', '3_51' ],\n  [ '3_52', '007@199b3-007@217a6', '3_52' ],\n  [ '3_53', '007@217a6-007@236b3', '3_53' ],\n  [ '3_54', '007@236b3-007@254b1', '3_54' ],\n  [ '3_55', '007@254b1-007@275a4', '3_55' ],\n  [ '3_56', '007@275a4-007@297a5', '3_56' ],\n  [ '3_57', '007@297a5-007@317b3', '3_57' ],\n  [ '3_58', '007@317b3-007@337a7', '3_58' ],\n  [ '3_59', '007@337a7-007@359b6', '3_59' ],\n  [ '3_60', '007@359b6-007@381b4', '3_60' ],\n  [ '3_61', '007@381b4-007@401b3', '3_61' ],\n  [ '3_62', '007@401b3-008@001b1', '3_62' ],\n  [ '3_63', '008@001b1-008@022b4', '3_63' ],\n  [ '3_64', '008@022b4-008@038a7', '3_64' ],\n  [ '3_65', '008@038a7-008@059a7', '3_65' ],\n  [ '3_66', '008@059a7-008@081b2', '3_66' ],\n  [ '3_67', '008@081b2-008@103a6', '3_67' ],\n  [ '3_68', '008@103a6-008@125a6', '3_68' ],\n  [ '3_69', '008@125a6-008@143b3', '3_69' ],\n  [ '3_70', '008@143b3-008@161a6', '3_70' ],\n  [ '3_71', '008@161a6-008@178b3', '3_71' ],\n  [ '3_72', '008@178b3-008@196b1', '3_72' ],\n  [ '3_73', '008@196b1-008@214b3', '3_73' ],\n  [ '3_74', '008@214b3-008@230a6', '3_74' ],\n  [ '3_75', '008@230a6-008@245b1', '3_75' ],\n  [ '3_76', '008@245b1-008@260a1', '3_76' ],\n  [ '3_77', '008@260a1-008@274b5', '3_77' ],\n  [ '3_78', '008@274b5-008@288b7', '3_78' ],\n  [ '3_79', '008@288b7-008@305b6', '3_79' ],\n  [ '3_80', '008@305b6-008@324b3', '3_80' ],\n  [ '3_81', '008@324b3-008@341b4', '3_81' ],\n  [ '3_82', '008@341b4-008@362b7', '3_82' ],\n  [ '3_83', '008@362b7-005@016a7', '3_83' ],\n  [ '4_1', '009@001b2-009@018b2', '4_1' ],\n  [ '4_2', '009@018b2-008@362b7', '4_2' ],\n  [ '5_1', '009@035a6-009@051a3', '5_1' ],\n  [ '5_2', '009@051a3-009@065b3', '5_2' ],\n  [ '5_3', '009@065b3-009@081b7', '5_3' ],\n  [ '5_4', '009@081b7-009@097b2', '5_4' ],\n  [ '5_5', '009@097b2-009@115a6', '5_5' ],\n  [ '5_6', '009@115a6-009@132a7', '5_6' ],\n  [ '5_7', '009@132a7-009@148a7', '5_7' ],\n  [ '5_8', '009@148a7-009@164b4', '5_8' ],\n  [ '5_9', '009@164b4-009@180b3', '5_9' ],\n  [ '5_10', '009@180b3-009@198b3', '5_10' ],\n  [ '5_11', '009@198b3-009@215b3', '5_11' ],\n  [ '5_12', '009@215b3-009@231a5', '5_12' ],\n  [ '5_13', '009@231a5-009@246a3', '5_13' ],\n  [ '5_14', '009@246a3-009@260a3', '5_14' ],\n  [ '5_15', '009@260a3-009@277a7', '5_15' ],\n  [ '5_16', '009@277a7-009@292b2', '5_16' ],\n  [ '5_17', '009@292b2-009@306a5', '5_17' ],\n  [ '5_18', '009@306a5-009@319b6', '5_18' ],\n  [ '5_19', '009@319b6-009@332b7', '5_19' ],\n  [ '5_20', '009@332b7-009@348a2', '5_20' ],\n  [ '5_21', '009@348a2-009@361a7', '5_21' ],\n  [ '5_22', '009@361a7-009@365b4', '5_22' ],\n  [ '5_23', '009@365b4-009@389b5', '5_23' ],\n  [ '5_24', '009@389b5-009@403b5', '5_24' ],\n  [ '5_25', '009@403b5-009@417b5', '5_25' ],\n  [ '5_26', '009@417b5-009@432a2', '5_26' ],\n  [ '5_27', '009@432a2-009@446a5', '5_27' ],\n  [ '5_28', '009@446a5-009@018b2', '5_28' ],\n  [ '6_1', '010@001b1-010@019b5', '6_1' ],\n  [ '6_2', '010@019b5-010@038a7', '6_2' ],\n  [ '6_3', '010@038a7-010@060b5', '6_3' ],\n  [ '6_4', '010@060b5-010@076a6', '6_4' ],\n  [ '6_5', '010@076a6-010@094b2', '6_5' ],\n  [ '6_6', '010@094b2-010@112a7', '6_6' ],\n  [ '6_7', '010@112a7-010@130a7', '6_7' ],\n  [ '6_8', '010@130a7-010@148b7', '6_8' ],\n  [ '6_9', '010@148b7-010@166b1', '6_9' ],\n  [ '6_10', '010@166b1-010@187a7', '6_10' ],\n  [ '6_11', '010@187a7-010@207a5', '6_11' ],\n  [ '6_12', '010@207a5-010@225b6', '6_12' ],\n  [ '6_13', '010@225b6-010@242a6', '6_13' ],\n  [ '6_14', '010@242a6-010@257b4', '6_14' ],\n  [ '6_15', '010@257b4-010@273a6', '6_15' ],\n  [ '6_16', '010@273a6-010@292b2', '6_16' ],\n  [ '6_17', '010@292b2-010@310a6', '6_17' ],\n  [ '6_18', '010@310a6-010@328b3', '6_18' ],\n  [ '6_19', '010@328b3-010@345a4', '6_19' ],\n  [ '6_20', '010@345a4-010@363a7', '6_20' ],\n  [ '6_21', '010@363a7-010@379b6', '6_21' ],\n  [ '6_22', '010@379b6-010@394a7', '6_22' ],\n  [ '6_23', '010@394a7-010@410b5', '6_23' ],\n  [ '6_24', '010@410b5-010@423a4', '6_24' ],\n  [ '6_25', '010@423a4-010@435b7', '6_25' ],\n  [ '6_26', '010@435b7-010@449b5', '6_26' ],\n  [ '6_27', '010@449b5-011@001b1', '6_27' ],\n  [ '6_28', '011@001b1-011@019b4', '6_28' ],\n  [ '6_29', '011@019b4-011@036a1', '6_29' ],\n  [ '6_30', '011@036a1-011@054a7', '6_30' ],\n  [ '6_31', '011@054a7-011@074a8', '6_31' ],\n  [ '6_32', '011@074a8-011@089b6', '6_32' ],\n  [ '6_33', '011@089b6-011@104b1', '6_33' ],\n  [ '6_34', '011@104b1-011@131b2', '6_34' ],\n  [ '6_35', '011@131b2-011@149b6', '6_35' ],\n  [ '6_36', '011@149b6-011@170a4', '6_36' ],\n  [ '6_37', '011@170a4-011@185a2', '6_37' ],\n  [ '6_38', '011@185a2-011@204a6', '6_38' ],\n  [ '6_39', '011@204a6-011@218b6', '6_39' ],\n  [ '6_40', '011@218b6-011@229b7', '6_40' ],\n  [ '6_41', '011@229b7-011@242b3', '6_41' ],\n  [ '6_42', '011@242b3-011@259b7', '6_42' ],\n  [ '6_43', '011@259b7-011@279a2', '6_43' ],\n  [ '6_44', '011@279a2-011@293b4', '6_44' ],\n  [ '6_45', '011@293b4-011@307b5', '6_45' ],\n  [ '6_46', '011@307b5-011@319b5', '6_46' ],\n  [ '6_47', '011@319b5-011@333a3', '6_47' ],\n  [ '6_48', '011@333a3-011@346b4', '6_48' ],\n  [ '6_49', '011@346b4-011@362a3', '6_49' ],\n  [ '6_50', '011@362a3-011@376b1', '6_50' ],\n  [ '6_51', '011@376b1-011@392a6', '6_51' ],\n  [ '6_52', '011@392a6-011@408a6', '6_52' ],\n  [ '6_53', '011@408a6-011@421a3', '6_53' ],\n  [ '6_54', '011@421a3-011@435b2', '6_54' ],\n  [ '6_55', '011@435b2-011@450a5', '6_55' ],\n  [ '6_56', '011@450a5-011@465a2', '6_56' ],\n  [ '6_57', '011@465a2-011@480b3', '6_57' ],\n  [ '6_58', '011@480b3-011@496b6', '6_58' ],\n  [ '6_59', '011@496b6-009@446a5', '6_59' ],\n  [ '7_1', '012@001b1-012@017a4', '7_1' ],\n  [ '7_2', '012@017a4-012@030a4', '7_2' ],\n  [ '7_3', '012@030a4-012@043b1', '7_3' ],\n  [ '7_4', '012@043b1-012@057a1', '7_4' ],\n  [ '7_5', '012@057a1-012@070b2', '7_5' ],\n  [ '7_6', '012@070b2-012@082a7', '7_6' ],\n  [ '7_7', '012@082a7-012@092b7', '7_7' ],\n  [ '7_8', '012@092b7-012@103b3', '7_8' ],\n  [ '7_9', '012@103b3-012@115a2', '7_9' ],\n  [ '7_10', '012@115a2-012@125a6', '7_10' ],\n  [ '7_11', '012@125a6-012@137a5', '7_11' ],\n  [ '7_12', '012@137a5-011@496b6', '7_12' ],\n  [ '_1', '012@139a6-0', '19_1' ],\n  [ '8', '012@139a7-448a1', '8' ],\n  [ '_2', '012@156b6-012@171a1', '19_2' ],\n  [ '_3', '012@171a1-012@191a7', '19_3' ],\n  [ '_4', '012@191a7-012@207a7', '19_4' ],\n  [ '_5', '012@207a7-012@223b1', '19_5' ],\n  [ '_6', '012@223b1-012@240a3', '19_6' ],\n  [ '_7', '012@240a3-012@252a4', '19_7' ],\n  [ '_8', '012@252a4-012@262b7', '19_8' ],\n  [ '_9', '012@262b7-012@273a6', '19_9' ],\n  [ '_10', '012@273a6-012@286a6', '19_10' ],\n  [ '_11', '012@286a6-012@300b1', '19_11' ],\n  [ '_12', '012@300b1-012@315a5', '19_12' ],\n  [ '_13', '012@315a5-012@328b6', '19_13' ],\n  [ '_14', '012@328b6-012@343a1', '19_14' ],\n  [ '_15', '012@343a1-012@356a4', '19_15' ],\n  [ '_16', '012@356a4-012@369b4', '19_16' ],\n  [ '_17', '012@369b4-012@383b1', '19_17' ],\n  [ '_18', '012@383b1-012@398a3', '19_18' ],\n  [ '_19', '012@398a3-012@409a5', '19_19' ],\n  [ '_20', '012@409a5-012@420b3', '19_20' ],\n  [ '_21', '012@420b3-012@433a7', '19_21' ],\n  [ '_22', '012@433a7-0', '19_22' ],\n  [ '8', '013@001b1-453a3', '8' ],\n  [ '_30', '013@097b6-013@109b1', '19_30' ],\n  [ '_31', '013@109b1-013@123b3', '19_31' ],\n  [ '_32', '013@123b3-013@137a3', '19_32' ],\n  [ '_33', '013@137a3-013@149a4', '19_33' ],\n  [ '_34', '013@149a4-013@162a2', '19_34' ],\n  [ '_35', '013@162a2-013@177a2', '19_35' ],\n  [ '_36', '013@177a2-013@192b7', '19_36' ],\n  [ '_37', '013@192b7-013@208b4', '19_37' ],\n  [ '_38', '013@208b4-013@224b2', '19_38' ],\n  [ '_39', '013@224b2-013@240a1', '19_39' ],\n  [ '_40', '013@240a1-013@254b6', '19_40' ],\n  [ '_41', '013@254b6-013@267a5', '19_41' ],\n  [ '_42', '013@267a5-013@280b7', '19_42' ],\n  [ '_43', '013@280b7-013@292b7', '19_43' ],\n  [ '_44', '013@292b7-013@306a5', '19_44' ],\n  [ '_45', '013@306a5-013@320b4', '19_45' ],\n  [ '_46', '013@320b4-013@335b5', '19_46' ],\n  [ '_47', '013@335b5-013@351b7', '19_47' ],\n  [ '_48', '013@351b7-013@369b4', '19_48' ],\n  [ '_49', '013@369b4-013@388a3', '19_49' ],\n  [ '_50', '013@388a3-013@404a7', '19_50' ],\n  [ '_51', '013@404a7-013@424b3', '19_51' ],\n  [ '_52', '013@424b3-013@440b4', '19_52' ],\n  [ '_53', '013@440b4-0', '19_53' ],\n  [ '9_1', '014@001b4-014@025b5', '25_1' ],\n  [ '9_2', '014@025b5-014@048b7', '25_2' ],\n  [ '9_3', '014@048b7-014@077a2', '25_3' ],\n  [ '9_4', '014@077a2-014@098b6', '25_4' ],\n  [ '9_5', '014@098b6-014@118b5', '25_5' ],\n  [ '9_6', '014@118b5-014@142a6', '25_6' ],\n  [ '9_7', '014@142a6-014@160b3', '25_7' ],\n  [ '9_8', '014@160b3-014@182b5', '25_8' ],\n  [ '9_9', '014@182b5-014@204b6', '25_9' ],\n  [ '9_10', '014@204b6-014@226a5', '25_10' ],\n  [ '9_11', '014@226a5-014@247b3', '25_11' ],\n  [ '9_12', '014@247b3-014@273a4', '25_12' ],\n  [ '9_13', '014@273a4-014@292b4', '25_13' ],\n  [ '9_14', '014@292b4-014@311a3', '25_14' ],\n  [ '9_15', '014@311a3-014@330a5', '25_15' ],\n  [ '9_16', '014@330a5-014@350b6', '25_16' ],\n  [ '9_17', '014@350b6-014@373b2', '25_17' ],\n  [ '9_18', '014@373b2-014@395b3', '25_18' ],\n  [ '9_19', '014@395b3-014@430a7', '25_19' ],\n  [ '9_20', '014@430a7-014@460b3', '25_20' ],\n  [ '9_21', '014@460b3-014@479b3', '25_21' ],\n  [ '9_22', '014@479b3-014@503b7', '25_22' ],\n  [ '9_23', '014@503b7-014@523a2', '25_23' ],\n  [ '9_24', '014@523a2-015@001b1', '25_24' ],\n  [ '9_25', '015@001b1-015@024b2', '25_25' ],\n  [ '9_26', '015@024b2-015@045a5', '25_26' ],\n  [ '9_27', '015@045a5-015@065a4', '25_27' ],\n  [ '9_28', '015@065a4-015@082b1', '25_28' ],\n  [ '9_29', '015@082b1-015@099a2', '25_29' ],\n  [ '9_30', '015@099a2-015@116a5', '25_30' ],\n  [ '9_31', '015@116a5-015@135b7', '25_31' ],\n  [ '9_32', '015@135b7-015@152a2', '25_32' ],\n  [ '9_33', '015@152a2-015@165a1', '25_33' ],\n  [ '9_34', '015@165a1-015@182a5', '25_34' ],\n  [ '9_35', '015@182a5-015@204a1', '25_35' ],\n  [ '9_36', '015@204a1-015@220b3', '25_36' ],\n  [ '9_37', '015@220b3-015@241a7', '25_37' ],\n  [ '9_38', '015@241a7-015@265b1', '25_38' ],\n  [ '9_39', '015@265b1-015@288b3', '25_39' ],\n  [ '9_40', '015@288b3-015@309b5', '25_40' ],\n  [ '9_41', '015@309b5-015@329a3', '25_41' ],\n  [ '9_42', '015@329a3-015@350b4', '25_42' ],\n  [ '9_43', '015@350b4-015@369a3', '25_43' ],\n  [ '9_44', '015@369a3-015@391a7', '25_44' ],\n  [ '9_45', '015@391a7-015@418a2', '25_45' ],\n  [ '9_46', '015@418a2-015@439a7', '25_46' ],\n  [ '9_47', '015@439a7-015@460b3', '25_47' ],\n  [ '9_48', '015@460b3-015@479a5', '25_48' ],\n  [ '9_49', '015@479a5-015@497a5', '25_49' ],\n  [ '9_50', '015@497a5-015@515a2', '25_50' ],\n  [ '9_51', '015@515a2-016@001b1', '25_51' ],\n  [ '9_52', '016@001b1-016@022a2', '25_52' ],\n  [ '9_53', '016@022a2-016@039b5', '25_53' ],\n  [ '9_54', '016@039b5-016@060a4', '25_54' ],\n  [ '9_55', '016@060a4-016@079b7', '25_55' ],\n  [ '9_56', '016@079b7-016@098b2', '25_56' ],\n  [ '9_57', '016@098b2-016@116a5', '25_57' ],\n  [ '9_58', '016@116a5-016@139b7', '25_58' ],\n  [ '9_59', '016@139b7-016@166b2', '25_59' ],\n  [ '9_60', '016@166b2-016@193a7', '25_60' ],\n  [ '9_61', '016@193a7-016@210b6', '25_61' ],\n  [ '9_62', '016@210b6-016@229a4', '25_62' ],\n  [ '9_63', '016@229a4-016@252a6', '25_63' ],\n  [ '9_64', '016@252a6-016@273a4', '25_64' ],\n  [ '9_65', '016@273a4-016@292a5', '25_65' ],\n  [ '9_66', '016@292a5-016@309b7', '25_66' ],\n  [ '9_67', '016@309b7-016@326b1', '25_67' ],\n  [ '9_68', '016@326b1-016@346a4', '25_68' ],\n  [ '9_69', '016@346a4-016@366a1', '25_69' ],\n  [ '9_70', '016@366a1-016@387b1', '25_70' ],\n  [ '9_71', '016@387b1-016@410b4', '25_71' ],\n  [ '9_72', '016@410b4-016@434b5', '25_72' ],\n  [ '9_73', '016@434b5-016@456a5', '25_73' ],\n  [ '9_74', '016@456a5-016@475b4', '25_74' ],\n  [ '9_75', '016@475b4-016@497b7', '25_75' ],\n  [ '9_76', '016@497b7-016@519a2', '25_76' ],\n  [ '9_77', '016@519a2-016@536a2', '25_77' ],\n  [ '9_78', '016@536a2-017@001b1', '25_78' ],\n  [ '9_79', '017@001b1-017@022b3', '25_79' ],\n  [ '9_80', '017@022b3-017@051a2', '25_80' ],\n  [ '9_81', '017@051a2-017@076a5', '25_81' ],\n  [ '9_82', '017@076a5-017@101a3', '25_82' ],\n  [ '9_83', '017@101a3-017@125b1', '25_83' ],\n  [ '9_84', '017@125b1-017@147b7', '25_84' ],\n  [ '9_85', '017@147b7-017@171b4', '25_85' ],\n  [ '9_86', '017@171b4-017@194b4', '25_86' ],\n  [ '9_87', '017@194b4-017@214b4', '25_87' ],\n  [ '9_88', '017@214b4-017@242a5', '25_88' ],\n  [ '9_89', '017@242a5-017@259b5', '25_89' ],\n  [ '9_90', '017@259b5-017@279a6', '25_90' ],\n  [ '9_91', '017@279a6-017@299a5', '25_91' ],\n  [ '9_92', '017@299a5-017@315b5', '25_92' ],\n  [ '9_93', '017@315b5-017@335a6', '25_93' ],\n  [ '9_94', '017@335a6-017@354a6', '25_94' ],\n  [ '9_95', '017@354a6-017@373a5', '25_95' ],\n  [ '9_96', '017@373a5-017@390b7', '25_96' ],\n  [ '9_97', '017@390b7-017@411b2', '25_97' ],\n  [ '9_98', '017@411b2-017@432a3', '25_98' ],\n  [ '9_99', '017@432a3-017@447b4', '25_99' ],\n  [ '9_100', '017@447b4-017@467b5', '25_100' ],\n  [ '9_101', '017@467b5-017@482b1', '25_101' ],\n  [ '9_102', '017@482b1-018@001b1', '25_102' ],\n  [ '9_103', '018@001b1-018@024b6', '25_103' ],\n  [ '9_104', '018@024b6-018@043a5', '25_104' ],\n  [ '9_105', '018@043a5-018@060a4', '25_105' ],\n  [ '9_106', '018@060a4-018@076b2', '25_106' ],\n  [ '9_107', '018@076b2-018@096b1', '25_107' ],\n  [ '9_108', '018@096b1-018@117b4', '25_108' ],\n  [ '9_109', '018@117b4-018@137b6', '25_109' ],\n  [ '9_110', '018@137b6-018@159a5', '25_110' ],\n  [ '9_111', '018@159a5-018@180b3', '25_111' ],\n  [ '9_112', '018@180b3-018@199a5', '25_112' ],\n  [ '9_113', '018@199a5-018@213a4', '25_113' ],\n  [ '9_114', '018@213a4-018@232b2', '25_114' ],\n  [ '9_115', '018@232b2-018@253a3', '25_115' ],\n  [ '9_116', '018@253a3-018@271a6', '25_116' ],\n  [ '9_117', '018@271a6-018@310a2', '25_117' ],\n  [ '9_118', '018@310a2-018@327a6', '25_118' ],\n  [ '9_119', '018@327a6-018@345b2', '25_119' ],\n  [ '9_120', '018@345b2-018@362b6', '25_120' ],\n  [ '9_121', '018@362b6-018@383b2', '25_121' ],\n  [ '9_122', '018@383b2-018@402a6', '25_122' ],\n  [ '9_123', '018@402a6-018@423b7', '25_123' ],\n  [ '9_124', '018@423b7-018@444a3', '25_124' ],\n  [ '9_125', '018@444a3-018@465a1', '25_125' ],\n  [ '9_126', '018@465a1-018@488b3', '25_126' ],\n  [ '9_127', '018@488b3-018@509b5', '25_127' ],\n  [ '9_128', '018@509b5-018@527a4', '25_128' ],\n  [ '9_129', '018@527a4-019@001b1', '25_129' ],\n  [ '9_130', '019@001b1-019@046b7', '25_130' ],\n  [ '9_132', '019@046b7-019@070b4', '25_132' ],\n  [ '9_133', '019@070b4-019@089b5', '25_133' ],\n  [ '9_134', '019@089b5-019@109b1', '25_134' ],\n  [ '9_135', '019@109b1-019@130a2', '25_135' ],\n  [ '9_136', '019@130a2-019@152b2', '25_136' ],\n  [ '9_137', '019@152b2-019@172b7', '25_137' ],\n  [ '9_138', '019@172b7-019@194a5', '25_138' ],\n  [ '9_139', '019@194a5-019@211b5', '25_139' ],\n  [ '9_140', '019@211b5-019@229b5', '25_140' ],\n  [ '9_141', '019@229b5-019@248a2', '25_141' ],\n  [ '9_142', '019@248a2-019@268a4', '25_142' ],\n  [ '9_143', '019@268a4-019@287b7', '25_143' ],\n  [ '9_144', '019@287b7-019@308a3', '25_144' ],\n  [ '9_145', '019@308a3-019@326a7', '25_145' ],\n  [ '9_146', '019@326a7-019@351a7', '25_146' ],\n  [ '9_147', '019@351a7-019@375a3', '25_147' ],\n  [ '9_148', '019@375a3-019@397a1', '25_148' ],\n  [ '9_149', '019@397a1-019@418a7', '25_149' ],\n  [ '9_150', '019@418a7-019@441a5', '25_150' ],\n  [ '9_151', '019@441a5-019@473b6', '25_151' ],\n  [ '9_152', '019@473b6-019@499b7', '25_152' ],\n  [ '9_153', '019@499b7-020@001b1', '25_153' ],\n  [ '9_154', '020@001b1-020@036a7', '25_154' ],\n  [ '9_155', '020@036a7-020@069a3', '25_155' ],\n  [ '9_156', '020@069a3-020@100b2', '25_156' ],\n  [ '9_157', '020@100b2-020@121b7', '25_157' ],\n  [ '9_158', '020@121b7-020@143b4', '25_158' ],\n  [ '9_159', '020@143b4-020@168a4', '25_159' ],\n  [ '9_160', '020@168a4-020@192b5', '25_160' ],\n  [ '9_161', '020@192b5-020@217a3', '25_161' ],\n  [ '9_162', '020@217a3-020@241b4', '25_162' ],\n  [ '9_163', '020@241b4-020@266b3', '25_163' ],\n  [ '9_164', '020@266b3-020@291b6', '25_164' ],\n  [ '9_165', '020@291b6-020@316b6', '25_165' ],\n  [ '9_166', '020@316b6-020@342b1', '25_166' ],\n  [ '9_167', '020@342b1-020@366b6', '25_167' ],\n  [ '9_168', '020@366b6-020@386a4', '25_168' ],\n  [ '9_169', '020@386a4-020@407b7', '25_169' ],\n  [ '9_170', '020@407b7-020@428b1', '25_170' ],\n  [ '9_171', '020@428b1-020@449b6', '25_171' ],\n  [ '9_172', '020@449b6-020@472a2', '25_172' ],\n  [ '9_173', '020@472a2-020@493b4', '25_173' ],\n  [ '9_174', '020@493b4-020@514b7', '25_174' ],\n  [ '9_175', '020@514b7-021@001b1', '25_175' ],\n  [ '9_176', '021@001b1-021@023b6', '25_176' ],\n  [ '9_177', '021@023b6-021@040b6', '25_177' ],\n  [ '9_178', '021@040b6-021@058a6', '25_178' ],\n  [ '9_179', '021@058a6-021@079b3', '25_179' ],\n  [ '9_180', '021@079b3-021@095b3', '25_180' ],\n  [ '9_181', '021@095b3-021@118a3', '25_181' ],\n  [ '9_182', '021@118a3-021@134b2', '25_182' ],\n  [ '9_183', '021@134b2-021@151b1', '25_183' ],\n  [ '9_184', '021@151b1-021@168a7', '25_184' ],\n  [ '9_185', '021@168a7-021@188b1', '25_185' ],\n  [ '9_186', '021@188b1-021@210a4', '25_186' ],\n  [ '9_187', '021@210a4-021@232a1', '25_187' ],\n  [ '9_188', '021@232a1-021@252a3', '25_188' ],\n  [ '9_189', '021@252a3-021@267a4', '25_189' ],\n  [ '9_190', '021@267a4-021@285a2', '25_190' ],\n  [ '9_191', '021@285a2-021@305a2', '25_191' ],\n  [ '9_192', '021@305a2-021@331b3', '25_192' ],\n  [ '9_193', '021@331b3-021@366b3', '25_193' ],\n  [ '9_194', '021@366b3-021@395b2', '25_194' ],\n  [ '9_195', '021@395b2-021@415b7', '25_195' ],\n  [ '9_196', '021@415b7-021@435a3', '25_196' ],\n  [ '9_197', '021@435a3-021@458b3', '25_197' ],\n  [ '9_198', '021@458b3-021@477b7', '25_198' ],\n  [ '9_199', '021@477b7-021@494b4', '25_199' ],\n  [ '9_200', '021@494b4-021@516b7', '25_200' ],\n  [ '9_201', '021@516b7-021@537b4', '25_201' ],\n  [ '9_202', '021@537b4-022@001b1', '25_202' ],\n  [ '9_203', '022@001b1-022@021a2', '25_203' ],\n  [ '9_204', '022@021a2-022@041a1', '25_204' ],\n  [ '9_205', '022@041a1-022@062a5', '25_205' ],\n  [ '9_206', '022@062a5-022@078b1', '25_206' ],\n  [ '9_207', '022@078b1-022@101b5', '25_207' ],\n  [ '9_208', '022@101b5-022@122b1', '25_208' ],\n  [ '9_209', '022@122b1-022@141a7', '25_209' ],\n  [ '9_210', '022@141a7-022@160b6', '25_210' ],\n  [ '9_211', '022@160b6-022@184a3', '25_211' ],\n  [ '9_212', '022@184a3-022@204b6', '25_212' ],\n  [ '9_213', '022@204b6-022@227b7', '25_213' ],\n  [ '9_214', '022@227b7-022@248b4', '25_214' ],\n  [ '9_215', '022@248b4-022@267a6', '25_215' ],\n  [ '9_216', '022@267a6-022@284a7', '25_216' ],\n  [ '9_217', '022@284a7-022@302b2', '25_217' ],\n  [ '9_218', '022@302b2-022@322a1', '25_218' ],\n  [ '9_219', '022@322a1-022@339a3', '25_219' ],\n  [ '9_220', '022@339a3-022@358a6', '25_220' ],\n  [ '9_221', '022@358a6-022@376a3', '25_221' ],\n  [ '9_222', '022@376a3-022@395a5', '25_222' ],\n  [ '9_223', '022@395a5-022@419b7', '25_223' ],\n  [ '9_224', '022@419b7-022@442a6', '25_224' ],\n  [ '9_225', '022@442a6-022@460b6', '25_225' ],\n  [ '9_226', '022@460b6-022@481a1', '25_226' ],\n  [ '9_227', '022@481a1-022@502b6', '25_227' ],\n  [ '9_228', '022@502b6-023@001b1', '25_228' ],\n  [ '9_229', '023@001b1-023@021a6', '25_229' ],\n  [ '9_230', '023@021a6-023@046a5', '25_230' ],\n  [ '9_231', '023@046a5-023@065b3', '25_231' ],\n  [ '9_232', '023@065b3-023@082a2', '25_232' ],\n  [ '9_233', '023@082a2-023@102a4', '25_233' ],\n  [ '9_234', '023@102a4-023@123a5', '25_234' ],\n  [ '9_235', '023@123a5-023@143a7', '25_235' ],\n  [ '9_236', '023@143a7-023@158b7', '25_236' ],\n  [ '9_237', '023@158b7-023@180a3', '25_237' ],\n  [ '9_238', '023@180a3-023@208a4', '25_238' ],\n  [ '9_239', '023@208a4-023@228a1', '25_239' ],\n  [ '9_240', '023@228a1-023@248b6', '25_240' ],\n  [ '9_241', '023@248b6-023@264a1', '25_241' ],\n  [ '9_242', '023@264a1-023@278b5', '25_242' ],\n  [ '9_243', '023@278b5-023@298b2', '25_243' ],\n  [ '9_244', '023@298b2-023@317a2', '25_244' ],\n  [ '9_245', '023@317a2-023@341a6', '25_245' ],\n  [ '9_246', '023@341a6-023@361a1', '25_246' ],\n  [ '9_247', '023@361a1-023@382a6', '25_247' ],\n  [ '9_248', '023@382a6-023@403a7', '25_248' ],\n  [ '9_249', '023@403a7-023@421b6', '25_249' ],\n  [ '9_250', '023@421b6-023@438a4', '25_250' ],\n  [ '9_251', '023@438a4-023@461b3', '25_251' ],\n  [ '9_252', '023@461b3-023@482a7', '25_252' ],\n  [ '9_253', '023@482a7-023@505a1', '25_253' ],\n  [ '9_254', '023@505a1-024@001b1', '25_254' ],\n  [ '9_255', '024@001b1-024@023a6', '25_255' ],\n  [ '9_256', '024@023a6-024@044b4', '25_256' ],\n  [ '9_257', '024@044b4-024@062a4', '25_257' ],\n  [ '9_258', '024@062a4-024@081b1', '25_258' ],\n  [ '9_259', '024@081b1-024@104a5', '25_259' ],\n  [ '9_260', '024@104a5-024@133b2', '25_260' ],\n  [ '9_261', '024@133b2-024@156b2', '25_261' ],\n  [ '9_262', '024@156b2-024@183a3', '25_262' ],\n  [ '9_263', '024@183a3-024@206a3', '25_263' ],\n  [ '9_264', '024@206a3-024@229b7', '25_264' ],\n  [ '9_265', '024@229b7-024@256b7', '25_265' ],\n  [ '9_266', '024@256b7-024@285a3', '25_266' ],\n  [ '9_267', '024@285a3-024@302b2', '25_267' ],\n  [ '9_268', '024@302b2-024@333b1', '25_268' ],\n  [ '9_269', '024@333b1-024@364b3', '25_269' ],\n  [ '9_270', '024@364b3-024@391a6', '25_270' ],\n  [ '9_271', '024@391a6-024@416a3', '25_271' ],\n  [ '9_272', '024@416a3-024@436a2', '25_272' ],\n  [ '9_273', '024@436a2-024@457b2', '25_273' ],\n  [ '9_274', '024@457b2-024@480b3', '25_274' ],\n  [ '9_275', '024@480b3-024@501a2', '25_275' ],\n  [ '9_276', '024@501a2-024@524b5', '25_276' ],\n  [ '9_277', '024@524b5-025@001b1', '25_277' ],\n  [ '9_278', '025@001b1-025@015b6', '25_278' ],\n  [ '9_279', '025@015b6-025@038a5', '25_279' ],\n  [ '9_280', '025@038a5-025@060a2', '25_280' ],\n  [ '9_281', '025@060a2-025@083a1', '25_281' ],\n  [ '9_282', '025@083a1-025@102b7', '25_282' ],\n  [ '9_283', '025@102b7-025@129a7', '25_283' ],\n  [ '9_284', '025@129a7-025@155a4', '25_284' ],\n  [ '9_285', '025@155a4-025@181b6', '25_285' ],\n  [ '9_286', '025@181b6-025@205b1', '25_286' ],\n  [ '9_287', '025@205b1-025@233b1', '25_287' ],\n  [ '9_288', '025@233b1-025@253b2', '25_288' ],\n  [ '9_289', '025@253b2-025@270a6', '25_289' ],\n  [ '9_290', '025@270a6-025@286b4', '25_290' ],\n  [ '9_291', '025@286b4-025@301b4', '25_291' ],\n  [ '9_292', '025@301b4-025@318a7', '25_292' ],\n  [ '9_293', '025@318a7-025@334b3', '25_293' ],\n  [ '9_294', '025@334b3-025@351b1', '25_294' ],\n  [ '9_295', '025@351b1-025@372b1', '25_295' ],\n  [ '9_296', '025@372b1-025@391b2', '25_296' ],\n  [ '9_297', '025@391b2-025@415a6', '25_297' ],\n  [ '9_298', '025@415a6-025@432b6', '25_298' ],\n  [ '9_299', '025@432b6-025@453b4', '25_299' ],\n  [ '9_300', '025@453b4-012@252a4', '25_300' ],\n  [ '10_1', '026@001b4-026@023a4', '26_1' ],\n  [ '10_2', '026@023a4-026@043a3', '26_2' ],\n  [ '10_3', '026@043a3-026@064b2', '26_3' ],\n  [ '10_4', '026@064b2-026@085a1', '26_4' ],\n  [ '10_5', '026@085a1-026@104b2', '26_5' ],\n  [ '10_6', '026@104b2-026@125a5', '26_6' ],\n  [ '10_7', '026@125a5-026@148b1', '26_7' ],\n  [ '10_8', '026@148b1-026@168b2', '26_8' ],\n  [ '10_9', '026@168b2-026@187a1', '26_9' ],\n  [ '10_10', '026@187a1-026@205b7', '26_10' ],\n  [ '10_11', '026@205b7-026@227a3', '26_11' ],\n  [ '10_12', '026@227a3-026@248a3', '26_12' ],\n  [ '10_13', '026@248a3-026@270b3', '26_13' ],\n  [ '10_14', '026@270b3-026@293b1', '26_14' ],\n  [ '10_15', '026@293b1-026@313a1', '26_15' ],\n  [ '10_16', '026@313a1-026@332b5', '26_16' ],\n  [ '10_17', '026@332b5-026@353a3', '26_17' ],\n  [ '10_18', '026@353a3-026@375a5', '26_18' ],\n  [ '10_19', '026@375a5-026@394b1', '26_19' ],\n  [ '10_20', '026@394b1-026@413a7', '26_20' ],\n  [ '10_21', '026@413a7-026@435b1', '26_21' ],\n  [ '10_22', '026@435b1-026@457b1', '26_22' ],\n  [ '10_23', '026@457b1-026@477b2', '26_23' ],\n  [ '10_24', '026@477b2-026@497a5', '26_24' ],\n  [ '10_25', '026@497a5-026@518b3', '26_25' ],\n  [ '10_26', '026@518b3-026@537b5', '26_26' ],\n  [ '10_27', '026@537b5-027@001b2', '26_27' ],\n  [ '10_28', '027@001b2-027@020b6', '26_28' ],\n  [ '10_29', '027@020b6-027@042a6', '26_29' ],\n  [ '10_30', '027@042a6-027@069b7', '26_30' ],\n  [ '10_31', '027@069b7-027@090a3', '26_31' ],\n  [ '10_32', '027@090a3-027@112b1', '26_32' ],\n  [ '10_33', '027@112b1-027@133b1', '26_33' ],\n  [ '10_34', '027@133b1-027@156a1', '26_34' ],\n  [ '10_35', '027@156a1-027@177b2', '26_35' ],\n  [ '10_36', '027@177b2-027@199b3', '26_36' ],\n  [ '10_37', '027@199b3-027@224a2', '26_37' ],\n  [ '10_38', '027@224a2-027@246b5', '26_38' ],\n  [ '10_39', '027@246b5-027@268a3', '26_39' ],\n  [ '10_40', '027@268a3-027@289a3', '26_40' ],\n  [ '10_41', '027@289a3-027@310b2', '26_41' ],\n  [ '10_42', '027@310b2-027@331a3', '26_42' ],\n  [ '10_43', '027@331a3-027@350b4', '26_43' ],\n  [ '10_44', '027@350b4-027@368a5', '26_44' ],\n  [ '10_45', '027@368a5-027@388b6', '26_45' ],\n  [ '10_46', '027@388b6-027@407a4', '26_46' ],\n  [ '10_47', '027@407a4-027@426a4', '26_47' ],\n  [ '10_48', '027@426a4-027@449b1', '26_48' ],\n  [ '10_49', '027@449b1-027@475a3', '26_49' ],\n  [ '10_50', '027@475a3-027@501a7', '26_50' ],\n  [ '10_51', '027@501a7-027@524b5', '26_51' ],\n  [ '10_52', '027@524b5-028@001b2', '26_52' ],\n  [ '10_53', '028@001b2-028@025b7', '26_53' ],\n  [ '10_54', '028@025b7-028@054b2', '26_54' ],\n  [ '10_55', '028@054b2-028@077b3', '26_55' ],\n  [ '10_56', '028@077b3-028@101b7', '26_56' ],\n  [ '10_57', '028@101b7-028@123b6', '26_57' ],\n  [ '10_58', '028@123b6-028@146a2', '26_58' ],\n  [ '10_59', '028@146a2-028@167b4', '26_59' ],\n  [ '10_60', '028@167b4-028@187a4', '26_60' ],\n  [ '10_61', '028@187a4-028@210a5', '26_61' ],\n  [ '10_62', '028@210a5-028@231a5', '26_62' ],\n  [ '10_63', '028@231a5-028@254a5', '26_63' ],\n  [ '10_64', '028@254a5-028@275a4', '26_64' ],\n  [ '10_65', '028@275a4-028@297b5', '26_65' ],\n  [ '10_66', '028@297b5-028@318a2', '26_66' ],\n  [ '10_67', '028@318a2-028@335a6', '26_67' ],\n  [ '10_68', '028@335a6-028@353a4', '26_68' ],\n  [ '10_69', '028@353a4-028@370b2', '26_69' ],\n  [ '10_70', '028@370b2-028@390a4', '26_70' ],\n  [ '10_71', '028@390a4-028@407b2', '26_71' ],\n  [ '10_72', '028@407b2-028@426b1', '26_72' ],\n  [ '10_73', '028@426b1-028@445b4', '26_73' ],\n  [ '10_74', '028@445b4-028@465a6', '26_74' ],\n  [ '10_75', '028@465a6-028@483b3', '26_75' ],\n  [ '10_76', '028@483b3-028@499a6', '26_76' ],\n  [ '10_77', '028@499a6-028@517b2', '26_77' ],\n  [ '10_78', '028@517b2-012@262b7', '26_78' ],\n  [ '11_1', '029@001b4-029@027a7', '29_1' ],\n  [ '11_2', '029@027a7-029@048a3', '29_2' ],\n  [ '11_3', '029@048a3-029@074b4', '29_3' ],\n  [ '11_4', '029@074b4-029@096a7', '29_4' ],\n  [ '11_5', '029@096a7-029@119b4', '29_5' ],\n  [ '11_6', '029@119b4-029@141a2', '29_6' ],\n  [ '11_7', '029@141a2-029@164a7', '29_7' ],\n  [ '11_8', '029@164a7-029@189a3', '29_8' ],\n  [ '11_9', '029@189a3-029@211a2', '29_9' ],\n  [ '11_10', '029@211a2-029@233a3', '29_10' ],\n  [ '11_11', '029@233a3-029@252a4', '29_11' ],\n  [ '11_12', '029@252a4-029@270b4', '29_12' ],\n  [ '11_13', '029@270b4-029@290b3', '29_13' ],\n  [ '11_14', '029@290b3-029@308a2', '29_14' ],\n  [ '11_15', '029@308a2-029@330a5', '29_15' ],\n  [ '11_16', '029@330a5-029@350b7', '29_16' ],\n  [ '11_17', '029@350b7-029@371a7', '29_17' ],\n  [ '11_18', '029@371a7-029@392a2', '29_18' ],\n  [ '11_19', '029@392a2-029@410b5', '29_19' ],\n  [ '11_20', '029@410b5-029@427a5', '29_20' ],\n  [ '11_21', '029@427a5-029@450a2', '29_21' ],\n  [ '11_22', '029@450a2-029@476b6', '29_22' ],\n  [ '11_23', '029@476b6-029@498b6', '29_23' ],\n  [ '11_24', '029@498b6-012@273a6', '29_24' ],\n  [ '12_1', '030@002a1-030@023b4', '27_1' ],\n  [ '12_2', '030@023b4-030@044b5', '27_2' ],\n  [ '12_3', '030@044b5-030@063b7', '27_3' ],\n  [ '12_4', '030@063b7-030@083a3', '27_4' ],\n  [ '12_5', '030@083a3-030@105a1', '27_5' ],\n  [ '12_6', '030@105a1-030@126b5', '27_6' ],\n  [ '12_7', '030@126b5-030@149b6', '27_7' ],\n  [ '12_8', '030@149b6-030@173b5', '27_8' ],\n  [ '12_9', '030@173b5-030@202a5', '27_9' ],\n  [ '12_10', '030@202a5-030@219a4', '27_10' ],\n  [ '12_11', '030@219a4-030@235b6', '27_11' ],\n  [ '12_12', '030@235b6-030@254a7', '27_12' ],\n  [ '12_13', '030@254a7-030@277b4', '27_13' ],\n  [ '12_14', '030@277b4-030@297b4', '27_14' ],\n  [ '12_15', '030@297b4-030@315b2', '27_15' ],\n  [ '12_16', '030@315b2-030@336a7', '27_16' ],\n  [ '12_17', '030@336a7-030@357b3', '27_17' ],\n  [ '12_18', '030@357b3-030@378a4', '27_18' ],\n  [ '12_19', '030@378a4-030@395a5', '27_19' ],\n  [ '12_20', '030@395a5-030@412b5', '27_20' ],\n  [ '12_21', '030@412b5-030@432b7', '27_21' ],\n  [ '12_22', '030@432b7-031@001b2', '27_22' ],\n  [ '12_23', '031@001b2-031@020b1', '27_23' ],\n  [ '12_24', '031@020b1-031@038a5', '27_24' ],\n  [ '12_25', '031@038a5-031@054b5', '27_25' ],\n  [ '12_26', '031@054b5-031@074b4', '27_26' ],\n  [ '12_27', '031@074b4-031@092b5', '27_27' ],\n  [ '12_28', '031@092b5-031@111b5', '27_28' ],\n  [ '12_29', '031@111b5-031@129b1', '27_29' ],\n  [ '12_30', '031@129b1-031@149a7', '27_30' ],\n  [ '12_31', '031@149a7-031@166b7', '27_31' ],\n  [ '12_32', '031@166b7-031@190a2', '27_32' ],\n  [ '12_33', '031@190a2-031@209b3', '27_33' ],\n  [ '12_34', '031@209b3-031@230b2', '27_34' ],\n  [ '12_35', '031@230b2-031@248a7', '27_35' ],\n  [ '12_36', '031@248a7-031@272a4', '27_36' ],\n  [ '12_37', '031@272a4-031@294a7', '27_37' ],\n  [ '12_38', '031@294a7-031@317a2', '27_38' ],\n  [ '12_39', '031@317a2-031@338a2', '27_39' ],\n  [ '12_40', '031@338a2-031@360b2', '27_40' ],\n  [ '12_41', '031@360b2-031@386b7', '27_41' ],\n  [ '12_42', '031@386b7-031@407b3', '27_42' ],\n  [ '12_43', '031@407b3-031@430a1', '27_43' ],\n  [ '12_44', '031@430a1-032@001b1', '27_44' ],\n  [ '12_45', '032@001b1-032@022a1', '27_45' ],\n  [ '12_46', '032@022a1-032@040a6', '27_46' ],\n  [ '12_47', '032@040a6-032@060a6', '27_47' ],\n  [ '12_48', '032@060a6-032@079a7', '27_48' ],\n  [ '12_49', '032@079a7-032@096a2', '27_49' ],\n  [ '12_50', '032@096a2-032@116b7', '27_50' ],\n  [ '12_51', '032@116b7-032@135a2', '27_51' ],\n  [ '12_52', '032@135a2-032@157b2', '27_52' ],\n  [ '12_53', '032@157b2-032@180b4', '27_53' ],\n  [ '12_54', '032@180b4-032@200b6', '27_54' ],\n  [ '12_55', '032@200b6-032@220a5', '27_55' ],\n  [ '12_56', '032@220a5-032@237b1', '27_56' ],\n  [ '12_57', '032@237b1-032@253b3', '27_57' ],\n  [ '12_58', '032@253b3-032@280b4', '27_58' ],\n  [ '12_59', '032@280b4-032@298b1', '27_59' ],\n  [ '12_60', '032@298b1-012@286a6', '27_60' ],\n  [ '13_1', '032@317a6-032@333b6', '28_1' ],\n  [ '13_2', '032@333b6-032@351b7', '28_2' ],\n  [ '13_3', '032@351b7-032@367b4', '28_3' ],\n  [ '13_4', '032@367b4-032@386b6', '28_4' ],\n  [ '13_5', '032@386b6-032@403a2', '28_5' ],\n  [ '13_6', '032@403a2-032@419b2', '28_6' ],\n  [ '13_7', '032@419b2-032@437b4', '28_7' ],\n  [ '13_8', '032@437b4-033@001b1', '28_8' ],\n  [ '13_9', '033@001b1-033@019b5', '28_9' ],\n  [ '13_10', '033@019b5-033@037a3', '28_10' ],\n  [ '13_11', '033@037a3-033@053a3', '28_11' ],\n  [ '13_12', '033@053a3-033@071b4', '28_12' ],\n  [ '13_13', '033@071b4-033@088b1', '28_13' ],\n  [ '13_14', '033@088b1-033@104b2', '28_14' ],\n  [ '13_15', '033@104b2-033@123b4', '28_15' ],\n  [ '13_16', '033@123b4-033@139b6', '28_16' ],\n  [ '13_17', '033@139b6-033@158a6', '28_17' ],\n  [ '13_18', '033@158a6-033@176a4', '28_18' ],\n  [ '13_19', '033@176a4-033@194a4', '28_19' ],\n  [ '13_20', '033@194a4-033@209a7', '28_20' ],\n  [ '13_21', '033@209a7-033@223b6', '28_21' ],\n  [ '13_22', '033@223b6-033@244b6', '28_22' ],\n  [ '13_23', '033@244b6-033@264a4', '28_23' ],\n  [ '13_24', '033@264a4-033@282b2', '28_24' ],\n  [ '13_25', '033@282b2-033@300a5', '28_25' ],\n  [ '13_26', '033@300a5-033@318b1', '28_26' ],\n  [ '13_27', '033@318b1-033@336b6', '28_27' ],\n  [ '13_28', '033@336b6-033@354a3', '28_28' ],\n  [ '13_29', '033@354a3-033@372b2', '28_29' ],\n  [ '13_30', '033@372b2-033@389b5', '28_30' ],\n  [ '13_31', '033@389b5-033@404b7', '28_31' ],\n  [ '13_32', '033@404b7-033@422a1', '28_32' ],\n  [ '13_33', '033@422a1-033@441b4', '28_33' ],\n  [ '13_34', '033@441b4-012@300b1', '28_34' ],\n  [ '14_1', '034@001b3-034@020b7', '31_1' ],\n  [ '14_2', '034@020b7-034@041b4', '31_2' ],\n  [ '14_3', '034@041b4-034@065b1', '31_3' ],\n  [ '14_4', '034@065b1-034@083a5', '31_4' ],\n  [ '14_5', '034@083a5-034@102b7', '31_5' ],\n  [ '14_6', '034@102b7-012@315a5', '31_6' ],\n  [ '15_1', '034@123b2-034@145a1', '41_1' ],\n  [ '15_2', '034@145a1-012@328b6', '41_2' ],\n  [ '16', '034@163a1-189a2', '32' ],\n  [ '17', '034@189a2-215a4', '30' ],\n  [ '18', '034@215a4-235b7', '33' ],\n  [ '19', '034@236a1-246a7', '34' ],\n  [ '20', '034@246a7-248b7', '42' ],\n  [ '21', '034@248b7-252b2', '35' ],\n  [ '22', '034@252b2-253a1', '40' ],\n  [ '23', '034@253a1-255a5', '36' ],\n  [ '24', '034@255a5-257b5', '39' ],\n  [ '25', '034@257b5-259a6', '37' ],\n  [ '26', '034@259a6-261a3', '38' ],\n  [ '27', '034@261a3-263a3', '43' ],\n  [ '28', '034@263a3-264b6', '44' ],\n  [ '29', '034@264b6-265b4', '45' ],\n  [ '30', '034@265b4-266b1', '46' ],\n  [ '31', '034@266b1-267a7', '47' ],\n  [ '32', '034@268a1-273b1', '48' ],\n  [ '33', '034@273b1-388a5', '49' ],\n  [ '34', '034@388a5-403b5', '50' ],\n  [ '35', '034@403b5-409a6', '51' ],\n  [ '36', '034@409a6-420a2', '52' ],\n  [ '37', '034@420a2-421b2', '53' ],\n  [ '38', '034@421b2-430a5', '54' ],\n  [ '39', '034@430a5-434b7', '55' ],\n  [ '40', '034@434b7-438b3', '56' ],\n  [ '41', '034@438b3-440a3', '57' ],\n  [ '42', '034@440a3-441a2', '58' ],\n  [ '43', '034@441a2-441b6', '59' ],\n  [ '44', '034@441b6-443a3', '60' ],\n  [ '45', '035@001b1-068b3', '62' ],\n  [ '46', '035@068b3-151a7', '63' ],\n  [ '47', '035@151a7-313b7', '64' ],\n  [ '48', '035@313b7-367a4', '65' ],\n  [ '49', '035@367a4-418a7', '66' ],\n  [ '50', '036@001b1-115a1', '67' ],\n  [ '51', '036@115a2-229b1', '68' ],\n  [ '52', '036@229b1-268a4', '69' ],\n  [ '53', '036@268a4-303b7', '70' ],\n  [ '54', '036@303b7-322a4', '71' ],\n  [ '55', '036@322a4-420a7', '72' ],\n  [ '56', '037@001b1-380b5', '73' ],\n  [ '57', '037@380b5-399b2', '75' ],\n  [ '58', '037@399b2-448a5', '74' ],\n  [ '59', '038@001b1-085a5', '76' ],\n  [ '60', '038@085a5-358a7', '77' ],\n  [ '61', '038@358a7-458b3', '78' ],\n  [ '62', '038@458b3-508a4', '79' ],\n  [ '63', '039@001b1-050b6', '80' ],\n  [ '64', '039@050b6-075a1', '81' ],\n  [ '65', '039@075a1-102a4', '82' ],\n  [ '66', '039@102a4-152b6', '83' ],\n  [ '67', '039@152b6-222a2', '84' ],\n  [ '68', '039@222a2-246a2', '85' ],\n  [ '69', '039@246a2-278b7', '86' ],\n  [ '70', '039@278b7-319a2', '87' ],\n  [ '71', '039@319a2-339a5', '88' ],\n  [ '72', '039@339a5-355a2', '89' ],\n  [ '73', '039@355a2-372a3', '90' ],\n  [ '74', '039@372a3-381b3', '91' ],\n  [ '75', '039@381b3-387a1', '92' ],\n  [ '76', '039@387a1-411b1', '93' ],\n  [ '77', '039@411b1-442a7', '94' ],\n  [ '78', '039@442a7-449a4', '95' ],\n  [ '79', '039@449a4-478a7', '96' ],\n  [ '80', '040@001b1-075b5', '97' ],\n  [ '81', '040@075b5-079a6', '98' ],\n  [ '82', '040@079a6-139b7', '99' ],\n  [ '83', '040@139b7-175b3', '100' ],\n  [ '84', '040@175b3-189a5', '101' ],\n  [ '85', '040@189a5-207a3', '102' ],\n  [ '86', '040@207a3-211a5', '103' ],\n  [ '87', '040@211a6-260b5', '104' ],\n  [ '88', '040@260b5-298a4', '105' ],\n  [ '89', '040@298a4-309a2', '106' ],\n  [ '90', '040@309a2-350a5', '107' ],\n  [ '91', '040@350a5-418a6', '108' ],\n  [ '92', '040@418a6-454a4', '109' ],\n  [ '93', '040@454a4-488a4', '110' ],\n  [ '94', '041@001b1-378a4', '61' ],\n  [ '94', '042@001b1-359a4', '61' ],\n  [ '94', '043@001b1-386a3', '61' ],\n  [ '94', '044@001b1-370a7', '61' ],\n  [ '94', '045@001b1-390a7', '61' ],\n  [ '94', '046@001b1-341a6', '61' ],\n  [ '98', '046@391a1-416a2', '114' ],\n  [ '95_1', '047@001b4-047@023b4', '111_1' ],\n  [ '95_2', '047@023b4-047@044b7', '111_2' ],\n  [ '95_3', '047@044b7-047@066a5', '111_3' ],\n  [ '95_4', '047@066a5-047@086a5', '111_4' ],\n  [ '95_5', '047@086a5-047@105b3', '111_5' ],\n  [ '95_6', '047@105b3-047@124b4', '111_6' ],\n  [ '95_7', '047@124b4-047@145b7', '111_7' ],\n  [ '95_8', '047@145b7-047@165a7', '111_8' ],\n  [ '95_9', '047@165a7-047@187b2', '111_9' ],\n  [ '95_10', '047@187b2-047@208b4', '111_10' ],\n  [ '95_11', '047@208b4-047@232b1', '111_11' ],\n  [ '95_12', '047@232b1-047@255b7', '111_12' ],\n  [ '95_13', '047@255b7-047@279a4', '111_13' ],\n  [ '95_14', '047@279a4-047@302b2', '111_14' ],\n  [ '95_15', '047@302b2-047@323b3', '111_15' ],\n  [ '95_16', '047@323b3-047@345b1', '111_16' ],\n  [ '95_17', '047@345b1-047@368a2', '111_17' ],\n  [ '95_18', '047@368a2-047@388b2', '111_18' ],\n  [ '95_19', '047@388b2-047@411b2', '111_19' ],\n  [ '95_20', '047@411b2-047@433b3', '111_20' ],\n  [ '95_21', '047@433b3-047@454a7', '111_21' ],\n  [ '95_22', '047@454a7-047@477b5', '111_22' ],\n  [ '95_23', '047@477b5-047@500b7', '111_23' ],\n  [ '95_24', '047@500b7-047@525a3', '111_24' ],\n  [ '95_25', '047@525a3-047@550a3', '111_25' ],\n  [ '95_26', '047@550a3-046@416a2', '111_26' ],\n  [ '96_1', '048@001b2-048@021b2', '112_1' ],\n  [ '96_2', '048@021b2-048@041b2', '112_2' ],\n  [ '96_3', '048@041b2-048@060a5', '112_3' ],\n  [ '96_4', '048@060a5-048@078a7', '112_4' ],\n  [ '96_5', '048@078a7-048@098a1', '112_5' ],\n  [ '96_6', '048@098a1-048@114b7', '112_6' ],\n  [ '96_7', '048@114b7-048@132a3', '112_7' ],\n  [ '96_8', '048@132a3-048@148b2', '112_8' ],\n  [ '96_9', '048@148b2-048@167b3', '112_9' ],\n  [ '96_10', '048@167b3-048@191b3', '112_10' ],\n  [ '96_11', '048@191b3-048@212b5', '112_11' ],\n  [ '96_12', '048@212b5-048@235a2', '112_12' ],\n  [ '96_13', '048@235a2-048@255b7', '112_13' ],\n  [ '96_14', '048@255b7-048@276b4', '112_14' ],\n  [ '96_15', '048@276b4-048@294b4', '112_15' ],\n  [ '96_16', '048@294b4-048@313b6', '112_16' ],\n  [ '96_17', '048@313b6-048@330b2', '112_17' ],\n  [ '96_18', '048@330b2-047@550a3', '112_18' ],\n  [ '97_1', '048@352a7-048@370b2', '113_1' ],\n  [ '97_2', '048@370b2-048@330b2', '113_2' ],\n  [ '99', '048@416a2-446a3', '115' ],\n  [ '100', '048@446a3-520a2', '163' ],\n  [ '101', '048@520a2-522a3', '116' ],\n  [ '102_1', '049@001b4-049@022b7', '117_1' ],\n  [ '102_2', '049@022b7-049@043a7', '117_2' ],\n  [ '102_3', '049@043a7-049@064a3', '117_3' ],\n  [ '102_4', '049@064a3-049@084b6', '117_4' ],\n  [ '102_5', '049@084b6-049@103a2', '117_5' ],\n  [ '102_6', '049@103a2-049@122a4', '117_6' ],\n  [ '102_7', '049@122a4-049@141b1', '117_7' ],\n  [ '102_8', '049@141b1-049@158b5', '117_8' ],\n  [ '102_9', '049@158b5-049@177a1', '117_9' ],\n  [ '102_10', '049@177a1-049@194a3', '117_10' ],\n  [ '102_11', '049@194a3-049@212b5', '117_11' ],\n  [ '102_12', '049@212b5-049@233b4', '117_12' ],\n  [ '102_13', '049@233b4-049@255b3', '117_13' ],\n  [ '102_14', '049@255b3-049@276a2', '117_14' ],\n  [ '102_15', '049@276a2-049@295a5', '117_15' ],\n  [ '102_16', '049@295a5-049@315a2', '117_16' ],\n  [ '102_17', '049@315a2-049@333b1', '117_17' ],\n  [ '102_18', '049@333b1-049@354a2', '117_18' ],\n  [ '102_19', '049@354a2-049@372b6', '117_19' ],\n  [ '102_20', '049@372b6-049@391b4', '117_20' ],\n  [ '102_21', '049@391b4-049@411a7', '117_21' ],\n  [ '102_22', '049@411a7-049@430a2', '117_22' ],\n  [ '102_23', '049@430a2-049@449b2', '117_23' ],\n  [ '102_24', '049@449b2-049@469b4', '117_24' ],\n  [ '102_25', '049@469b4-048@522a3', '117_25' ],\n  [ '103_1', '049@483a5-049@501a3', '118_1' ],\n  [ '103_2', '049@501a3-049@517a7', '118_2' ],\n  [ '103_3', '049@517a7-049@469b4', '118_3' ],\n  [ '104_1', '050@001b2-050@023b5', '119_1' ],\n  [ '104_2', '050@023b5-050@045a4', '119_2' ],\n  [ '104_3', '050@045a4-050@064a2', '119_3' ],\n  [ '104_4', '050@064a2-050@083b5', '119_4' ],\n  [ '104_5', '050@083b5-050@103a1', '119_5' ],\n  [ '104_6', '050@103a1-050@123a2', '119_6' ],\n  [ '104_7', '050@123a2-050@141a7', '119_7' ],\n  [ '104_8', '050@141a7-050@162a7', '119_8' ],\n  [ '104_9', '050@162a7-050@183b3', '119_9' ],\n  [ '104_10', '050@183b3-050@204a3', '119_10' ],\n  [ '104_11', '050@204a3-050@224b7', '119_11' ],\n  [ '104_12', '050@224b7-050@246a6', '119_12' ],\n  [ '104_13', '050@246a6-050@266a5', '119_13' ],\n  [ '104_14', '050@266a5-050@286b6', '119_14' ],\n  [ '104_15', '050@286b6-050@305b7', '119_15' ],\n  [ '104_16', '050@305b7-050@324b6', '119_16' ],\n  [ '104_17', '050@324b6-050@341b7', '119_17' ],\n  [ '104_18', '050@341b7-049@517a7', '119_18' ],\n  [ '105_1', '050@353b2-050@374b5', '120_1' ],\n  [ '105_2', '050@374b5-050@393a3', '120_2' ],\n  [ '105_3', '050@393a3-050@409b1', '120_3' ],\n  [ '105_4', '050@409b1-050@341b7', '120_4' ],\n  [ '106', '050@426a3-442b2', '121' ],\n  [ '107', '050@442b2-444b2', '122' ],\n  [ '108', '050@444b2-447a4', '123' ],\n  [ '109_1', '051@001b2-051@030a1', '124_1' ],\n  [ '109_2', '051@030a1-051@085b5', '124_2' ],\n  [ '109_3', '051@085b5-050@447a4', '124_3' ],\n  [ '110_1', '051@088a1-051@108b3', '125_1' ],\n  [ '110_2', '051@108b3-051@130b3', '125_2' ],\n  [ '110_3', '051@130b3-051@155a1', '125_3' ],\n  [ '110_4', '051@155a1-051@177a6', '125_4' ],\n  [ '110_5', '051@177a6-051@204a7', '125_5' ],\n  [ '110_6', '051@204a7-051@231a7', '125_6' ],\n  [ '110_7', '051@231a7-051@254b4', '125_7' ],\n  [ '110_8', '051@254b4-051@277a4', '125_8' ],\n  [ '110_9', '051@277a4-051@085b5', '125_9' ],\n  [ '111_1', '051@307a5-051@326a7', '126_1' ],\n  [ '111_2', '051@326a7-051@346a3', '126_2' ],\n  [ '111_3', '051@346a3-051@364b2', '126_3' ],\n  [ '111_4', '051@364b2-051@386b5', '126_4' ],\n  [ '111_5', '051@386b5-051@404a4', '126_5' ],\n  [ '111_6', '051@404a4-051@420a2', '126_6' ],\n  [ '111_7', '051@420a2-051@439b7', '126_7' ],\n  [ '111_8', '051@439b7-051@277a4', '126_8' ],\n  [ '112', '051@462a2-473a7', '127' ],\n  [ '113_1', '052@001b2-052@030b5', '128_1' ],\n  [ '113_2', '052@030b5-052@050b3', '128_2' ],\n  [ '113_3', '052@050b3-052@070b2', '128_3' ],\n  [ '113_4', '052@070b2-051@473a7', '128_4' ],\n  [ '114_1', '052@086a3-052@102b1', '129_1' ],\n  [ '114_2', '052@102b1-052@121a3', '129_2' ],\n  [ '114_3', '052@121a3-052@141b4', '129_3' ],\n  [ '114_4', '052@141b4-052@164a5', '129_4' ],\n  [ '114_5', '052@164a5-052@186b1', '129_5' ],\n  [ '114_6', '052@186b1-052@070b2', '129_6' ],\n  [ '115_1', '052@209b6-052@225a5', '130_1' ],\n  [ '115_2', '052@225a5-052@240b5', '130_2' ],\n  [ '115_3', '052@240b5-052@259a3', '130_3' ],\n  [ '115_4', '052@259a3-052@275b5', '130_4' ],\n  [ '115_5', '052@275b5-052@294b1', '130_5' ],\n  [ '115_6', '052@294b1-052@311b7', '130_6' ],\n  [ '115_7', '052@311b7-052@328b3', '130_7' ],\n  [ '115_8', '052@328b3-052@347a6', '130_8' ],\n  [ '115_9', '052@347a6-052@362a5', '130_9' ],\n  [ '115_10', '052@362a5-052@379a1', '130_10' ],\n  [ '115_11', '052@379a1-052@394b4', '130_11' ],\n  [ '115_12', '052@394b4-052@415b1', '130_12' ],\n  [ '115_13', '052@415b1-052@433b6', '130_13' ],\n  [ '115_14', '052@433b6-052@457a1', '130_14' ],\n  [ '115_15', '052@457a1-052@186b1', '130_15' ],\n  [ '116_1', '053@001b2-053@020a1', '131_1' ],\n  [ '116_2', '053@020a1-053@038b2', '131_2' ],\n  [ '116_3', '053@038b2-053@061a2', '131_3' ],\n  [ '116_4', '053@061a2-053@079a3', '131_4' ],\n  [ '116_5', '053@079a3-053@096a5', '131_5' ],\n  [ '116_6', '053@096a5-053@118a3', '131_6' ],\n  [ '116_7', '053@118a3-053@140a5', '131_7' ],\n  [ '116_8', '053@140a5-053@162b7', '131_8' ],\n  [ '116_9', '053@162b7-053@186a7', '131_9' ],\n  [ '116_10', '053@186a7-053@209a1', '131_10' ],\n  [ '116_11', '053@209a1-053@232a2', '131_11' ],\n  [ '116_12', '053@232a2-053@260a2', '131_12' ],\n  [ '116_13', '053@260a2-052@457a1', '131_13' ],\n  [ '117', '053@285b3-307b6', '132' ],\n  [ '118', '053@307b6-314b2', '133' ],\n  [ '119_1', '053@314b3-053@332a7', '134_1' ],\n  [ '119_2', '053@332a7-053@349a5', '134_2' ],\n  [ '119_3', '053@349a5-053@368a1', '134_3' ],\n  [ '119_4', '053@368a1-053@314b2', '134_4' ],\n  [ '120_1', '053@388a6-053@403a6', '135_1' ],\n  [ '120_2', '053@403a6-053@419a1', '135_2' ],\n  [ '120_3', '053@419a1-053@435a5', '135_3' ],\n  [ '120_4', '053@435a5-053@368a1', '135_4' ],\n  [ '121', '053@451b4-464a5', '136' ],\n  [ '122_1', '054@001b3-054@021a4', '138_1' ],\n  [ '122_2', '054@021a4-054@038b4', '138_2' ],\n  [ '122_3', '054@038b4-054@058b7', '138_3' ],\n  [ '122_4', '054@058b7-054@074a6', '138_4' ],\n  [ '122_5', '054@074a6-054@091b2', '138_5' ],\n  [ '122_6', '054@091b2-054@108a6', '138_6' ],\n  [ '122_7', '054@108a6-054@125b1', '138_7' ],\n  [ '122_8', '054@125b1-054@143a3', '138_8' ],\n  [ '122_9', '054@143a3-054@160a3', '138_9' ],\n  [ '122_10', '054@160a3-054@177b4', '138_10' ],\n  [ '122_11', '054@177b4-054@193b3', '138_11' ],\n  [ '122_12', '054@193b3-054@208a7', '138_12' ],\n  [ '122_13', '054@208a7-053@464a5', '138_13' ],\n  [ '123', '054@222b5-225b6', '139' ],\n  [ '124', '054@225b7-226b5', '140' ],\n  [ '125_1', '054@226b5-054@251b1', '141_1' ],\n  [ '125_2', '054@251b1-054@272b7', '141_2' ],\n  [ '125_3', '054@272b7-054@296b1', '141_3' ],\n  [ '125_4', '054@296b1-054@226b5', '141_4' ],\n  [ '126_1', '054@321b6-054@340b3', '142_1' ],\n  [ '126_2', '054@340b3-054@358b2', '142_2' ],\n  [ '126_3', '054@358b2-054@377a2', '142_3' ],\n  [ '126_4', '054@377a2-054@392b7', '142_4' ],\n  [ '126_5', '054@392b7-054@408b1', '142_5' ],\n  [ '126_6', '054@408b1-054@425a6', '142_6' ],\n  [ '126_7', '054@425a6-054@296b1', '142_7' ],\n  [ '127', '054@443b2-444a3', '143' ],\n  [ '128', '054@444a3-448a7', '144' ],\n  [ '129_1', '055@001b4-055@020a6', '145_1' ],\n  [ '129_2', '055@020a6-055@039b3', '145_2' ],\n  [ '129_3', '055@039b3-055@056b4', '145_3' ],\n  [ '129_4', '055@056b4-055@075a2', '145_4' ],\n  [ '129_5', '055@075a2-055@093a4', '145_5' ],\n  [ '129_6', '055@093a4-055@114a4', '145_6' ],\n  [ '129_7', '055@114a4-055@133a6', '145_7' ],\n  [ '129_8', '055@133a6-055@148b2', '145_8' ],\n  [ '129_9', '055@148b2-055@164b7', '145_9' ],\n  [ '129_10', '055@164b7-055@183a2', '145_10' ],\n  [ '129_11', '055@183a2-055@199b2', '145_11' ],\n  [ '129_12', '055@199b2-055@216b7', '145_12' ],\n  [ '129_13', '055@216b7-055@237a6', '145_13' ],\n  [ '129_14', '055@237a6-055@253b7', '145_14' ],\n  [ '129_15', '055@253b7-054@448a7', '145_15' ],\n  [ '130', '055@269b4-275b2', '146' ],\n  [ '131_1', '055@275b3-055@295a6', '147_1' ],\n  [ '131_2', '055@295a6-055@313a6', '147_2' ],\n  [ '131_3', '055@313a6-055@275b2', '147_3' ],\n  [ '132', '055@334a5-367a2', '148' ],\n  [ '133_1', '055@367a3-055@385b4', '149_1' ],\n  [ '133_2', '055@385b4-055@367a2', '149_2' ],\n  [ '134_1', '055@403b7-055@423a4', '150_1' ],\n  [ '134_2', '055@423a4-055@445b5', '150_2' ],\n  [ '134_3', '055@445b5-055@465b4', '150_3' ],\n  [ '134_4', '055@465b4-055@484a2', '150_4' ],\n  [ '134_5', '055@484a2-055@385b4', '150_5' ],\n  [ '135_1', '056@001b3-056@018a2', '151_1' ],\n  [ '135_2', '056@018a2-056@032a3', '151_2' ],\n  [ '135_3', '056@032a3-056@048a7', '151_3' ],\n  [ '135_4', '056@048a7-056@062a7', '151_4' ],\n  [ '135_5', '056@062a7-056@076a5', '151_5' ],\n  [ '135_6', '056@076a5-056@091b1', '151_6' ],\n  [ '135_7', '056@091b1-055@484a2', '151_7' ],\n  [ '136_1', '056@106b6-056@124a7', '152_1' ],\n  [ '136_2', '056@124a7-056@145a4', '152_2' ],\n  [ '136_3', '056@145a4-056@164b2', '152_3' ],\n  [ '136_4', '056@164b2-056@091b1', '152_4' ],\n  [ '137_1', '056@186a6-056@204a2', '154_1' ],\n  [ '137_2', '056@204a2-056@223a3', '154_2' ],\n  [ '137_3', '056@223a3-056@164b2', '154_3' ],\n  [ '138_1', '056@241a4-056@260a3', '153_1' ],\n  [ '138_2', '056@260a3-056@223a3', '153_2' ],\n  [ '139', '056@276a5-289b2', '155' ],\n  [ '140_1', '056@289b4-056@304b3', '156_1' ],\n  [ '140_2', '056@304b3-056@322b2', '156_2' ],\n  [ '140_3', '056@322b2-056@337a7', '156_3' ],\n  [ '140_4', '056@337a7-056@353b3', '156_4' ],\n  [ '140_5', '056@353b3-056@370a3', '156_5' ],\n  [ '140_6', '056@370a3-056@390a4', '156_6' ],\n  [ '140_7', '056@390a4-056@404b1', '156_7' ],\n  [ '140_8', '056@404b1-056@289b2', '156_8' ],\n  [ '141', '056@432a7-450a3', '157' ],\n  [ '142', '056@450a3-464a1', '158' ],\n  [ '143', '056@464a1-465a3', '159' ],\n  [ '144', '057@001b1-010b6', '160' ],\n  [ '145', '057@010b6-011a7', '161' ],\n  [ '146_1', '057@011b1-057@033a7', '162_1' ],\n  [ '146_2', '057@033a7-057@011a7', '162_2' ],\n  [ '147', '057@057a3-153b6', '164' ],\n  [ '148_1', '057@153b7-057@173b5', '165_1' ],\n  [ '148_2', '057@173b5-057@195a7', '165_2' ],\n  [ '148_3', '057@195a7-057@224b7', '165_3' ],\n  [ '148_4', '057@224b7-057@250b2', '165_4' ],\n  [ '148_5', '057@250b2-057@274b2', '165_5' ],\n  [ '148_6', '057@274b2-057@299b1', '165_6' ],\n  [ '148_7', '057@299b1-057@153b6', '165_7' ],\n  [ '149_1', '057@319a6-057@340a2', '166_1' ],\n  [ '149_2', '057@340a2-057@362b5', '166_2' ],\n  [ '149_3', '057@362b5-057@379b5', '166_3' ],\n  [ '149_4', '057@379b5-057@397b2', '166_4' ],\n  [ '149_5', '057@397b2-057@412b5', '166_5' ],\n  [ '149_6', '057@412b5-057@427a5', '166_6' ],\n  [ '149_7', '057@427a5-057@445b7', '166_7' ],\n  [ '149_8', '057@445b7-057@299b1', '166_8' ],\n  [ '150', '057@460b7-462a1', '167' ],\n  [ '151', '057@462a1-463a2', '168' ],\n  [ '152', '057@463a2-484a2', '169' ],\n  [ '153_1', '058@001b3-058@020b3', '170_1' ],\n  [ '153_2', '058@020b3-058@039a7', '170_2' ],\n  [ '153_3', '058@039a7-058@057b1', '170_3' ],\n  [ '153_4', '058@057b1-058@074a5', '170_4' ],\n  [ '153_5', '058@074a5-058@090b2', '170_5' ],\n  [ '153_6', '058@090b2-058@108a1', '170_6' ],\n  [ '153_7', '058@108a1-058@127a3', '170_7' ],\n  [ '153_8', '058@127a3-058@143b7', '170_8' ],\n  [ '153_9', '058@143b7-058@162a7', '170_9' ],\n  [ '153_10', '058@162a7-057@484a2', '170_10' ],\n  [ '154_1', '058@180a4-058@200b7', '171_1' ],\n  [ '154_2', '058@200b7-058@219b7', '171_2' ],\n  [ '154_3', '058@219b7-058@238b6', '171_3' ],\n  [ '154_4', '058@238b6-058@255b1', '171_4' ],\n  [ '154_5', '058@255b1-058@273b7', '171_5' ],\n  [ '154_6', '058@273b7-058@287b4', '171_6' ],\n  [ '154_7', '058@287b4-058@162a7', '171_7' ],\n  [ '155', '058@303a2-313b1', '172' ],\n  [ '156', '058@313b2-314a4', '173' ],\n  [ '157', '058@314a4-383a3', '174' ],\n  [ '158_1', '058@383a4-058@401a3', '175_1' ],\n  [ '158_2', '058@401a3-058@418a3', '175_2' ],\n  [ '158_3', '058@418a3-058@439a2', '175_3' ],\n  [ '158_4', '058@439a2-058@460b5', '175_4' ],\n  [ '158_5', '058@460b5-058@383a3', '175_5' ],\n  [ '159', '059@001b1-016a2', '176' ],\n  [ '160', '059@016a2-034b7', '177' ],\n  [ '161_1', '059@035a1-059@056a2', '178_1' ],\n  [ '161_2', '059@056a2-059@076b3', '178_2' ],\n  [ '161_3', '059@076b3-059@097b6', '178_3' ],\n  [ '161_4', '059@097b6-059@117a7', '178_4' ],\n  [ '161_5', '059@117a7-059@137a4', '178_5' ],\n  [ '161_6', '059@137a4-059@034b7', '178_6' ],\n  [ '162_1', '059@159b1-059@179a5', '179_1' ],\n  [ '162_2', '059@179a5-059@199a1', '179_2' ],\n  [ '162_3', '059@199a1-059@137a4', '179_3' ],\n  [ '163', '059@221a3-227b4', '180' ],\n  [ '164', '059@227b4-252b1', '181' ],\n  [ '165', '059@252b1-264b5', '182' ],\n  [ '166', '059@264b5-271a6', '183' ],\n  [ '167', '059@271a6-277a5', '184' ],\n  [ '168_1', '059@277a6-059@294a1', '185_1' ],\n  [ '168_2', '059@294a1-059@312a5', '185_2' ],\n  [ '168_3', '059@312a5-059@277a5', '185_3' ],\n  [ '169_1', '059@333b5-059@353a1', '186_1' ],\n  [ '169_2', '059@353a1-059@370b6', '186_2' ],\n  [ '169_3', '059@370b6-059@389a5', '186_3' ],\n  [ '169_4', '059@389a5-059@312a5', '186_4' ],\n  [ '170_1', '059@412a6-059@433a6', '187_1' ],\n  [ '170_2', '059@433a6-059@452a6', '187_2' ],\n  [ '170_3', '059@452a6-059@473a7', '187_3' ],\n  [ '170_4', '059@473a7-059@389a5', '187_4' ],\n  [ '171', '059@490a3-495a4', '188' ],\n  [ '172', '059@495a5-502a2', '189' ],\n  [ '173', '060@001b1-008a5', '190' ],\n  [ '174', '060@008a5-011b5', '191' ],\n  [ '175_1', '060@011b5-060@039a5', '192_1' ],\n  [ '175_2', '060@039a5-060@070a3', '192_2' ],\n  [ '175_3', '060@070a3-060@097b3', '192_3' ],\n  [ '175_4', '060@097b3-060@011b5', '192_4' ],\n  [ '176_1', '060@122b6-060@143b4', '193_1' ],\n  [ '176_2', '060@143b4-060@164b7', '193_2' ],\n  [ '176_3', '060@164b7-060@185a6', '193_3' ],\n  [ '176_4', '060@185a6-060@206a6', '193_4' ],\n  [ '176_5', '060@206a6-060@228b2', '193_5' ],\n  [ '176_6', '060@228b2-060@250b1', '193_6' ],\n  [ '176_7', '060@250b1-060@097b3', '193_7' ],\n  [ '177_1', '060@270b1-060@285a3', '194_1' ],\n  [ '177_2', '060@285a3-060@307a7', '194_2' ],\n  [ '177_3', '060@307a7-060@333a7', '194_3' ],\n  [ '177_4', '060@333a7-060@361b2', '194_4' ],\n  [ '177_5', '060@361b2-060@250b1', '194_5' ],\n  [ '178', '060@376b3-377b5', '195' ],\n  [ '179', '060@377b6-384a2', '196' ],\n  [ '180_1', '060@384a2-060@402a1', '197_1' ],\n  [ '180_2', '060@402a1-060@384a2', '197_2' ],\n  [ '181_1', '060@420b4-060@436b2', '198_1' ],\n  [ '181_2', '060@436b2-060@454b3', '198_2' ],\n  [ '181_3', '060@454b3-060@402a1', '198_3' ],\n  [ '182_1', '061@001b3-061@025b3', '199_1' ],\n  [ '182_2', '061@025b3-061@050a2', '199_2' ],\n  [ '182_3', '061@050a2-061@068b7', '199_3' ],\n  [ '182_4', '061@068b7-061@086a2', '199_4' ],\n  [ '182_5', '061@086a2-061@103a6', '199_5' ],\n  [ '182_6', '061@103a6-060@454b3', '199_6' ],\n  [ '183', '061@122b7-151a5', '200' ],\n  [ '184', '061@151a5-153a6', '201' ],\n  [ '185', '061@153a6-167a3', '202' ],\n  [ '186_1', '061@167a4-061@187b5', '203_1' ],\n  [ '186_2', '061@187b5-061@206a3', '203_2' ],\n  [ '186_3', '061@206a3-061@167a3', '203_3' ],\n  [ '187', '061@226a2-248b5', '204' ],\n  [ '188_1', '061@248b6-061@265a5', '205_1' ],\n  [ '188_2', '061@265a5-061@284b5', '205_2' ],\n  [ '188_3', '061@284b5-061@248b5', '205_3' ],\n  [ '189', '061@300b6-314a6', '206' ],\n  [ '190', '061@314a6-316b5', '207' ],\n  [ '191_1', '061@316b6-061@337a1', '208_1' ],\n  [ '191_2', '061@337a1-061@316b5', '208_2' ],\n  [ '192', '061@356a7-386a5', '209' ],\n  [ '193', '061@386a5-390a5', '210' ],\n  [ '194', '061@390a6-396b7', '211' ],\n  [ '195', '061@396b7-397b6', '212' ],\n  [ '196', '061@397b7-420a7', '213' ],\n  [ '197', '061@420a7-428b1', '214' ],\n  [ '198', '061@428b1-433b5', '215' ],\n  [ '199_1', '061@433b5-061@451b6', '216_1' ],\n  [ '199_2', '061@451b6-061@433b5', '216_2' ],\n  [ '200', '061@468b1-478b3', '217' ],\n  [ '201', '061@478b3-486a3', '218' ],\n  [ '202_1', '062@001b3-062@020a2', '219_1' ],\n  [ '202_2', '062@020a2-062@036b2', '219_2' ],\n  [ '202_3', '062@036b2-062@053b1', '219_3' ],\n  [ '202_4', '062@053b1-062@075a4', '219_4' ],\n  [ '202_5', '062@075a4-061@486a3', '219_5' ],\n  [ '203', '062@097a3-119b7', '220' ],\n  [ '204', '062@119b7-125a2', '221' ],\n  [ '205', '062@125a2-142a3', '222' ],\n  [ '206', '062@142a3-144b6', '223' ],\n  [ '208_1', '062@144b6-062@144b6', '225_1' ],\n  [ '207', '062@144b6-147a3', '224' ],\n  [ '209', '062@169b1-173b4', '226' ],\n  [ '210', '062@173b4-180a3', '227' ],\n  [ '211', '062@180a3-192b1', '228' ],\n  [ '212', '062@192b1-195a2', '229' ],\n  [ '213', '062@195a2-196a6', '230' ],\n  [ '214_1', '062@196a7-062@218a6', '231_1' ],\n  [ '214_2', '062@218a6-062@231b6', '231_2' ],\n  [ '214_3', '062@231b6-062@248b6', '231_3' ],\n  [ '214_4', '062@248b6-062@265b1', '231_4' ],\n  [ '214_5', '062@265b1-062@282b5', '231_5' ],\n  [ '214_6', '062@282b5-062@196a6', '231_6' ],\n  [ '213_7', '062@299a7-062@195a2', '230_7' ],\n  [ '215', '062@315b5-320b4', '232' ],\n  [ '216', '062@320b4-322b7', '233' ],\n  [ '217_1', '062@323a2-062@340a7', '234_1' ],\n  [ '217_2', '062@340a7-062@357b6', '234_2' ],\n  [ '217_3', '062@357b6-062@375a3', '234_3' ],\n  [ '217_4', '062@375a3-062@392a6', '234_4' ],\n  [ '217_5', '062@392a6-062@322b7', '234_5' ],\n  [ '218', '062@413a7-438a7', '235' ],\n  [ '219', '062@438a7-461a1', '236' ],\n  [ '221_1', '062@461a1-062@461a1', '238_1' ],\n  [ '220', '062@461a1-477a6', '237' ],\n  [ '221_1', '063@001b3-063@019b4', '238_1' ],\n  [ '221_2', '063@019b4-063@036b1', '238_2' ],\n  [ '221_3', '063@036b1-063@055b1', '238_3' ],\n  [ '221_4', '063@055b1-063@075a5', '238_4' ],\n  [ '221_5', '063@075a5-063@093b5', '238_5' ],\n  [ '221_6', '063@093b5-063@112b5', '238_6' ],\n  [ '221_7', '063@112b5-062@461a1', '238_7' ],\n  [ '222', '063@130b4-141a3', '239' ],\n  [ '223_1', '063@141a3-063@156a4', '240_1' ],\n  [ '223_2', '063@156a4-063@170b2', '240_2' ],\n  [ '223_3', '063@170b2-063@184a5', '240_3' ],\n  [ '223_4', '063@184a5-063@197a7', '240_4' ],\n  [ '223_5', '063@197a7-063@141a3', '240_5' ],\n  [ '224_1', '063@208b5-063@227b6', '241_1' ],\n  [ '224_2', '063@227b6-063@247a5', '241_2' ],\n  [ '224_3', '063@247a5-063@197a7', '241_3' ],\n  [ '225', '063@267a6-282a5', '242' ],\n  [ '226', '063@282a5-284a5', '243' ],\n  [ '227', '063@284a5-287a2', '244' ],\n  [ '228', '063@287a2-305b5', '245' ],\n  [ '229_1', '063@305b5-063@326a4', '246_1' ],\n  [ '229_2', '063@326a4-063@346a5', '246_2' ],\n  [ '229_3', '063@346a5-063@305b5', '246_3' ],\n  [ '230_1', '063@364a4-063@386a1', '247_1' ],\n  [ '230_2', '063@386a1-063@409a1', '247_2' ],\n  [ '230_3', '063@409a1-063@346a5', '247_3' ],\n  [ '231_1', '063@428b3-063@446a5', '248_1' ],\n  [ '231_2', '063@446a5-063@462b3', '248_2' ],\n  [ '231_3', '063@462b3-063@409a1', '248_3' ],\n  [ '232', '064@001b1-180a6', '249' ],\n  [ '233', '064@180a6-337b7', '250' ],\n  [ '_1', '064@337b7-0', '_1' ],\n  [ '234', '064@337b7-386a3', '251' ],\n  [ '235', '064@386a3-392b5', '252' ],\n  [ '236', '064@392b5-412a7', '253' ],\n  [ '237', '064@412a7-448b3', '254' ],\n  [ '238', '064@448b3-466a7', '255' ],\n  [ '239', '065@001b1-154a2', '256' ],\n  [ '240', '065@154a2-371b5', '257' ],\n  [ '241', '065@371b6-465a1', '258' ],\n  [ '242', '065@465a1-467b1', '259' ],\n  [ '243', '065@467b1-472a7', '260' ],\n  [ '244', '066@001b1-023a6', '261' ],\n  [ '245', '066@023a6-041b7', '262' ],\n  [ '246', '066@041b7-050a3', '263' ],\n  [ '247', '066@050a3-064b6', '264' ],\n  [ '264_1', '066@060b4-066@064b6', '280_1' ],\n  [ '248', '066@064b6-070a6', '265' ],\n  [ '249', '066@070a6-090a3', '266' ],\n  [ '250', '066@090a3-091a4', '267' ],\n  [ '251', '066@091a4-092a1', '268' ],\n  [ '252', '066@092a1-093a1', '269' ],\n  [ '253', '066@093a2-106b7', '270' ],\n  [ '254', '066@107a1-108b5', '271' ],\n  [ '255', '066@108b5-109b1', '272' ],\n  [ '256', '066@109b1-114b6', '273' ],\n  [ '257', '066@114b6-145a3', '274' ],\n  [ '258', '066@145a3-385a5', '275' ],\n  [ '259', '066@385a5-595a7', '1117' ],\n  [ '260', '067@001b1-024a2', '276' ],\n  [ '261', '067@024a2-030b7', '277' ],\n  [ '262', '067@030b7-060b4', '278' ],\n  [ '263', '067@060b4-104b7', '279' ],\n  [ '265', '067@235a4-423a2', '281' ],\n  [ '266', '067@423a2-506a4', '282' ],\n  [ '267', '067@506a4-544a5', '283' ],\n  [ '268', '068@001b1-052b7', '284' ],\n  [ '269', '068@052b7-058a6', '285' ],\n  [ '270', '068@058a6-060b2', '286' ],\n  [ '271', '068@060b2-069b7', '287' ],\n  [ '272', '068@069b7-075b4', '288' ],\n  [ '273', '068@075b4-080b7', '289' ],\n  [ '274', '068@080b7-088a1', '290' ],\n  [ '275', '068@088a1-093a1', '291' ],\n  [ '276', '068@093a1-101b6', '292' ],\n  [ '277', '068@101b6-114b7', '293' ],\n  [ '278', '068@114b7-122b7', '294' ],\n  [ '279', '068@123a1-127a7', '295' ],\n  [ '280', '068@127a7-130b1', '296' ],\n  [ '281', '068@130b1-131a5', '297' ],\n  [ '282', '068@131a5-131b3', '298' ],\n  [ '284_1', '068@131b3-068@131b3', '300_1' ],\n  [ '283', '068@131b3-131b6', '299' ],\n  [ '285', '068@132b1-133b5', '301' ],\n  [ '286', '068@133b5-164a6', '302' ],\n  [ '287', '068@164a6-168a6', '303' ],\n  [ '288', '068@168a6-171a4', '304' ],\n  [ '289_1', '068@171a5-068@189a3', '305_1' ],\n  [ '289_2', '068@189a3-068@207b3', '305_2' ],\n  [ '289_3', '068@207b3-068@224b1', '305_3' ],\n  [ '289_4', '068@224b1-068@240a1', '305_4' ],\n  [ '289_5', '068@240a1-068@257a2', '305_5' ],\n  [ '289_6', '068@257a2-068@273b6', '305_6' ],\n  [ '289_7', '068@273b6-068@290a7', '305_7' ],\n  [ '289_8', '068@290a7-068@307b2', '305_8' ],\n  [ '289_9', '068@307b2-068@325b1', '305_9' ],\n  [ '289_10', '068@325b1-068@343b1', '305_10' ],\n  [ '289_11', '068@343b1-068@360b4', '305_11' ],\n  [ '289_12', '068@360b4-068@378a1', '305_12' ],\n  [ '289_13', '068@378a1-068@394b2', '305_13' ],\n  [ '289_14', '068@394b2-068@411a4', '305_14' ],\n  [ '289_15', '068@411a4-068@428a2', '305_15' ],\n  [ '289_16', '068@428a2-068@444b6', '305_16' ],\n  [ '289_17', '068@444b6-068@461b4', '305_17' ],\n  [ '289_18', '068@461b4-068@478b7', '305_18' ],\n  [ '289_19', '068@478b7-068@495b3', '305_19' ],\n  [ '289_20', '068@495b3-069@001b1', '305_20' ],\n  [ '289_21', '069@001b1-069@020a7', '305_21' ],\n  [ '289_22', '069@020a7-069@039b7', '305_22' ],\n  [ '289_23', '069@039b7-069@058b1', '305_23' ],\n  [ '289_24', '069@058b1-069@077a2', '305_24' ],\n  [ '289_25', '069@077a2-069@094a5', '305_25' ],\n  [ '289_26', '069@094a5-069@111b7', '305_26' ],\n  [ '289_27', '069@111b7-069@128b7', '305_27' ],\n  [ '289_28', '069@128b7-069@146b2', '305_28' ],\n  [ '289_29', '069@146b2-069@164b4', '305_29' ],\n  [ '289_30', '069@164b4-069@185a3', '305_30' ],\n  [ '289_31', '069@185a3-069@206a1', '305_31' ],\n  [ '289_32', '069@206a1-069@225b1', '305_32' ],\n  [ '289_33', '069@225b1-069@243b4', '305_33' ],\n  [ '289_34', '069@243b4-069@261a7', '305_34' ],\n  [ '289_35', '069@261a7-069@280a5', '305_35' ],\n  [ '289_36', '069@280a5-069@298b3', '305_36' ],\n  [ '289_37', '069@298b3-069@315b3', '305_37' ],\n  [ '289_38', '069@315b3-069@334b1', '305_38' ],\n  [ '289_39', '069@334b1-069@352b3', '305_39' ],\n  [ '289_40', '069@352b3-069@369a6', '305_40' ],\n  [ '289_41', '069@369a6-069@387b6', '305_41' ],\n  [ '289_42', '069@387b6-069@405b5', '305_42' ],\n  [ '289_43', '069@405b5-069@424b6', '305_43' ],\n  [ '289_44', '069@424b6-069@441b3', '305_44' ],\n  [ '289_45', '069@441b3-070@001b1', '305_45' ],\n  [ '289_46', '070@001b1-070@037b1', '305_46' ],\n  [ '289_47', '070@037b1-070@075b2', '305_47' ],\n  [ '289_48', '070@075b2-070@174b4', '305_48' ],\n  [ '289_49', '070@174b4-070@223b2', '305_49' ],\n  [ '289_50', '070@223b2-070@237b7', '305_50' ],\n  [ '289_51', '070@237b7-070@266b5', '305_51' ],\n  [ '289_52', '070@266b5-070@324a4', '305_52' ],\n  [ '289_53', '070@324a4-070@327a6', '305_53' ],\n  [ '289_54', '070@327a6-070@366b6', '305_54' ],\n  [ '289_55', '070@366b6-071@001b1', '305_55' ],\n  [ '289_56', '071@001b1-071@030a4', '305_56' ],\n  [ '289_57', '071@030a4-071@127b1', '305_57' ],\n  [ '289_58', '071@127b1-071@160b3', '305_58' ],\n  [ '289_59', '071@160b3-068@171a4', '305_59' ],\n  [ '291', '071@445a1-467b4', '306' ],\n  [ '292', '071@467b4-476b2', '307' ],\n  [ '293', '071@476b2-482a4', '308' ],\n  [ '294', '071@482a4-495a7', '309' ],\n  [ '295', '071@495a7-501a2', '310' ],\n  [ '296', '071@501a2-503b3', '311' ],\n  [ '297', '071@503b3-517b2', '312' ],\n  [ '298', '071@517b2-549b1', '313' ],\n  [ '299', '071@549b1-551b6', '314' ],\n  [ '_1', '071@551b6-0', '_1' ],\n  [ '300', '071@551b6-559a1', '315' ],\n  [ '301', '071@559a1-562b3', '316' ],\n  [ '302', '071@562b3-564a2', '317' ],\n  [ '303', '071@564a2-565a6', '318' ],\n  [ '304_1', '072@001b1-072@029b4', '319_1' ],\n  [ '304_2', '072@029b4-072@058a6', '319_2' ],\n  [ '304_3', '072@058a6-072@088b1', '319_3' ],\n  [ '304_4', '072@088b1-072@116b6', '319_4' ],\n  [ '304_5', '072@116b6-072@144a6', '319_5' ],\n  [ '304_6', '072@144a6-072@174a3', '319_6' ],\n  [ '304_7', '072@174a3-071@565a6', '319_7' ],\n  [ '305', '072@193b3-196a2', '320' ],\n  [ '306', '072@196a2-197a6', '321' ],\n  [ '307', '072@197a6-201b1', '322' ],\n  [ '308', '072@201b1-202b3', '323' ],\n  [ '309', '072@202b3-214a2', '324' ],\n  [ '310', '072@214a3-223b7', '325' ],\n  [ '311', '072@223b7-237b3', '326' ],\n  [ '312', '072@237b4-238b4', '327' ],\n  [ '313', '072@238b4-241a2', '328' ],\n  [ '315', '072@241b4-242a5', '329' ],\n  [ '316', '072@242a6-248a7', '330' ],\n  [ '317', '072@248a7-252a4', '331' ],\n  [ '318', '072@252a4-260b2', '332' ],\n  [ '319', '072@260b3-261b4', '333' ],\n  [ '320', '072@261b4-262b6', '334' ],\n  [ '321', '072@262b6-289a1', '335' ],\n  [ '322', '072@289a1-297a7', '336' ],\n  [ '323', '072@297a7-302a4', '337' ],\n  [ '324', '072@302a4-305a1', '338' ],\n  [ '325', '072@305a1-308b6', '339' ],\n  [ '326', '072@308b6-313b3', '340' ],\n  [ '327', '072@313b3-313b6', '341' ],\n  [ '329_1', '072@313b6-072@313b6', '343_1' ],\n  [ '328', '072@313b6-314a5', '342' ],\n  [ '330', '072@320b7-387b2', '344' ],\n  [ '331', '072@387b2-389a6', '345' ],\n  [ '332', '072@389a6-393b1', '346' ],\n  [ '333', '072@393b1-395b4', '347' ],\n  [ '334', '072@395b5-396b6', '348' ],\n  [ '335', '072@396b6-397b4', '349' ],\n  [ '336', '072@397b4-403a2', '350' ],\n  [ '337', '072@403a2-409b1', '351' ],\n  [ '338', '072@409b1-413b4', '352' ],\n  [ '339', '072@413b4-418b3', '353' ],\n  [ '340', '072@418b3-420a2', '354' ],\n  [ '341', '072@420a2-423a1', '355' ],\n  [ '342', '072@423a1-425b6', '356' ],\n  [ '343', '072@425b6-455a7', '359' ],\n  [ '344', '072@455a7-490b5', '357' ],\n  [ '345', '072@490b5-510a2', '358' ],\n  [ '346_1', '073@001b1-073@026b2', '360_1' ],\n  [ '346_2', '073@026b2-073@047b4', '360_2' ],\n  [ '346_3', '073@047b4-073@062b7', '360_3' ],\n  [ '346_4', '073@062b7-073@077b5', '360_4' ],\n  [ '346_5', '073@077b5-073@096a7', '360_5' ],\n  [ '346_6', '073@096a7-073@114a3', '360_6' ],\n  [ '346_7', '073@114a3-073@135b2', '360_7' ],\n  [ '346_8', '073@135b2-073@155a7', '360_8' ],\n  [ '346_9', '073@155a7-073@177a2', '360_9' ],\n  [ '346_10', '073@177a2-073@196a1', '360_10' ],\n  [ '346_11', '073@196a1-073@210b1', '360_11' ],\n  [ '346_12', '073@210b1-073@225a7', '360_12' ],\n  [ '346_13', '073@225a7-073@240b5', '360_13' ],\n  [ '346_14', '073@240b5-073@259a4', '360_14' ],\n  [ '346_15', '073@259a4-073@278b6', '360_15' ],\n  [ '346_16', '073@278b6-073@296a6', '360_16' ],\n  [ '346_17', '073@296a6-073@311a3', '360_17' ],\n  [ '346_18', '073@311a3-073@330a3', '360_18' ],\n  [ '346_19', '073@330a3-073@347b7', '360_19' ],\n  [ '346_20', '073@347b7-073@364b2', '360_20' ],\n  [ '346_21', '073@364b2-073@385a1', '360_21' ],\n  [ '346_22', '073@385a1-073@402a7', '360_22' ],\n  [ '346_23', '073@402a7-073@417b3', '360_23' ],\n  [ '346_24', '073@417b3-073@437b2', '360_24' ],\n  [ '346_25', '073@437b2-073@454a2', '360_25' ],\n  [ '346_26', '073@454a2-074@001b1', '360_26' ],\n  [ '346_27', '074@001b1-074@020b5', '360_27' ],\n  [ '346_28', '074@020b5-074@035b1', '360_28' ],\n  [ '346_29', '074@035b1-074@053b5', '360_29' ],\n  [ '346_30', '074@053b5-074@072b4', '360_30' ],\n  [ '346_31', '074@072b4-074@093b6', '360_31' ],\n  [ '346_32', '074@093b6-074@113a4', '360_32' ],\n  [ '346_33', '074@113a4-074@131a6', '360_33' ],\n  [ '346_34', '074@131a6-074@152b6', '360_34' ],\n  [ '346_35', '074@152b6-074@170a7', '360_35' ],\n  [ '346_36', '074@170a7-074@186b3', '360_36' ],\n  [ '346_37', '074@186b3-072@510a2', '360_37' ],\n  [ '347_1', '074@207b5-074@234b5', '361_1' ],\n  [ '347_2', '074@234b5-074@252a6', '361_2' ],\n  [ '347_3', '074@252a6-074@277a3', '361_3' ],\n  [ '347_4', '074@277a3-074@296b1', '361_4' ],\n  [ '347_5', '074@296b1-074@319b3', '361_5' ],\n  [ '347_6', '074@319b3-074@342a4', '361_6' ],\n  [ '347_7', '074@342a4-074@359b4', '361_7' ],\n  [ '347_8', '074@359b4-074@380b1', '361_8' ],\n  [ '347_9', '074@380b1-074@400a2', '361_9' ],\n  [ '347_10', '074@400a2-074@426a6', '361_10' ],\n  [ '347_11', '074@426a6-074@450a6', '361_11' ],\n  [ '347_12', '074@450a6-074@186b3', '361_12' ],\n  [ '348', '074@476b2-478b7', '362' ],\n  [ '349', '074@478b7-489b7', '383' ],\n  [ '350', '074@489b7-496a5', '384' ],\n  [ '351_1', '075@001b1-075@020a3', '363_1' ],\n  [ '351_2', '075@020a3-075@042a4', '363_2' ],\n  [ '351_3', '075@042a4-075@059b1', '363_3' ],\n  [ '351_4', '075@059b1-075@076a2', '363_4' ],\n  [ '351_5', '075@076a2-075@096b4', '363_5' ],\n  [ '351_6', '075@096b4-075@115b7', '363_6' ],\n  [ '351_7', '075@115b7-075@135a6', '363_7' ],\n  [ '351_8', '075@135a6-075@151a3', '363_8' ],\n  [ '351_9', '075@151a3-075@172b2', '363_9' ],\n  [ '351_10', '075@172b2-075@190a4', '363_10' ],\n  [ '351_11', '075@190a4-075@208b6', '363_11' ],\n  [ '351_12', '075@208b6-075@227b3', '363_12' ],\n  [ '351_13', '075@227b3-075@245b7', '363_13' ],\n  [ '351_14', '075@245b7-075@264a3', '363_14' ],\n  [ '351_15', '075@264a3-075@284a4', '363_15' ],\n  [ '351_16', '075@284a4-075@306a2', '363_16' ],\n  [ '351_17', '075@306a2-075@327a3', '363_17' ],\n  [ '351_18', '075@327a3-075@351a2', '363_18' ],\n  [ '351_19', '075@351a2-075@372a7', '363_19' ],\n  [ '351_20', '075@372a7-075@396a6', '363_20' ],\n  [ '351_21', '075@396a6-075@418a6', '363_21' ],\n  [ '351_22', '075@418a6-074@496a5', '363_22' ],\n  [ '352', '075@446a1-450a1', '364' ],\n  [ '353', '075@450a1-452b7', '365' ],\n  [ '354', '075@452b7-464a5', '366' ],\n  [ '355', '076@001b1-034b1', '367' ],\n  [ '360', '076@011a5-135b6', '372' ],\n  [ '356', '076@034b1-049a6', '368' ],\n  [ '357', '076@049a7-079a4', '369' ],\n  [ '358', '076@079a4-087b7', '370' ],\n  [ '359', '076@087b7-111a4', '371' ],\n  [ '361_1', '076@135b6-076@162a2', '373_1' ],\n  [ '361_2', '076@162a2-076@187a4', '373_2' ],\n  [ '361_3', '076@187a4-076@211a6', '373_3' ],\n  [ '361_4', '076@211a6-076@236a5', '373_4' ],\n  [ '361_5', '076@236a5-076@258b4', '373_5' ],\n  [ '361_6', '076@258b4-076@292a2', '373_6' ],\n  [ '361_7', '076@292a2-076@111a4', '373_7' ],\n  [ '362', '076@314a1-330b7', '374' ],\n  [ '363', '076@331a1-342a6', '375' ],\n  [ '364', '076@342a6-349a7', '376' ],\n  [ '365', '076@349a7-367b7', '377' ],\n  [ '366', '076@367b7-435b2', '378' ],\n  [ '367', '076@435b2-442a7', '380' ],\n  [ '368_1', '077@001b4-077@021a5', '137_1' ],\n  [ '368_2', '077@021a5-077@038b1', '137_2' ],\n  [ '368_3', '077@038b1-077@058a4', '137_3' ],\n  [ '368_4', '077@058a4-077@077b1', '137_4' ],\n  [ '368_5', '077@077b1-077@095a6', '137_5' ],\n  [ '368_6', '077@095a6-077@112a7', '137_6' ],\n  [ '368_7', '077@112a7-077@132a1', '137_7' ],\n  [ '368_8', '077@132a1-077@151b7', '137_8' ],\n  [ '368_9', '077@151b7-077@172b4', '137_9' ],\n  [ '368_10', '077@172b4-077@188b3', '137_10' ],\n  [ '368_11', '077@188b3-077@207a7', '137_11' ],\n  [ '368_12', '077@207a7-077@226b5', '137_12' ],\n  [ '368_13', '077@226b5-077@245a6', '137_13' ],\n  [ '368_14', '077@245a6-077@264b3', '137_14' ],\n  [ '368_15', '077@264b3-077@282a2', '137_15' ],\n  [ '368_16', '077@282a2-077@299b5', '137_16' ],\n  [ '368_17', '077@299b5-077@316b7', '137_17' ],\n  [ '368_18', '077@316b7-077@335a1', '137_18' ],\n  [ '368_19', '077@335a1-077@352b5', '137_19' ],\n  [ '368_20', '077@352b5-077@373b6', '137_20' ],\n  [ '368_21', '077@373b6-077@391a1', '137_21' ],\n  [ '368_22', '077@391a1-077@409a1', '137_22' ],\n  [ '368_23', '077@409a1-077@425a2', '137_23' ],\n  [ '368_24', '077@425a2-077@442b4', '137_24' ],\n  [ '368_25', '077@442b4-077@459b6', '137_25' ],\n  [ '368_26', '077@459b6-077@479a2', '137_26' ],\n  [ '368_27', '077@479a2-077@500b3', '137_27' ],\n  [ '368_28', '077@500b3-078@001b2', '137_28' ],\n  [ '368_29', '078@001b2-078@020b3', '137_29' ],\n  [ '368_30', '078@020b3-078@038a6', '137_30' ],\n  [ '368_31', '078@038a6-078@056a7', '137_31' ],\n  [ '368_32', '078@056a7-078@076a3', '137_32' ],\n  [ '368_33', '078@076a3-078@095a4', '137_33' ],\n  [ '368_34', '078@095a4-078@114b1', '137_34' ],\n  [ '368_35', '078@114b1-078@134a7', '137_35' ],\n  [ '368_36', '078@134a7-078@154b4', '137_36' ],\n  [ '368_37', '078@154b4-078@174b1', '137_37' ],\n  [ '368_38', '078@174b1-078@194b1', '137_38' ],\n  [ '368_39', '078@194b1-078@216a6', '137_39' ],\n  [ '368_40', '078@216a6-078@236b3', '137_40' ],\n  [ '368_41', '078@236b3-078@257b6', '137_41' ],\n  [ '368_42', '078@257b6-078@275a3', '137_42' ],\n  [ '368_43', '078@275a3-078@292b6', '137_43' ],\n  [ '368_44', '078@292b6-078@310b6', '137_44' ],\n  [ '368_45', '078@310b6-078@328a5', '137_45' ],\n  [ '368_46', '078@328a5-078@346a4', '137_46' ],\n  [ '368_47', '078@346a4-078@364a2', '137_47' ],\n  [ '368_48', '078@364a2-078@383a5', '137_48' ],\n  [ '368_49', '078@383a5-078@403a2', '137_49' ],\n  [ '368_50', '078@403a2-078@419b6', '137_50' ],\n  [ '368_51', '078@419b6-078@435a7', '137_51' ],\n  [ '368_52', '078@435a7-078@456a3', '137_52' ],\n  [ '368_53', '078@456a3-078@476b1', '137_53' ],\n  [ '368_54', '078@476b1-078@495a7', '137_54' ],\n  [ '368_55', '078@495a7-078@514b1', '137_55' ],\n  [ '368_56', '078@514b1-076@442a7', '137_56' ],\n  [ '369', '079@001b1-019a3', '385' ],\n  [ '370', '079@019a4-028b5', '386' ],\n  [ '371', '079@028b5-186b3', '387' ],\n  [ '372', '079@186b3-209a6', '388' ],\n  [ '374', '079@237b4-240a5', '389' ],\n  [ '375', '079@240a5-246a5', '390' ],\n  [ '376', '079@246a5-307a5', '391' ],\n  [ '377', '079@307a5-334b7', '392' ],\n  [ '378a', '079@334b7-353b3', '440a' ],\n  [ '378b', '079@353b3-379a1', '440b' ],\n  [ '379', '079@379a1-433b1', '441' ],\n  [ '380', '079@433b1-472b7', '442' ],\n  [ '381', '079@472b7-482a1', '443' ],\n  [ '382', '080@001b1-066a7', '444' ],\n  [ '383', '080@066a7-076a2', '445' ],\n  [ '384', '080@076a2-131b4', '393' ],\n  [ '385', '080@131b4-327b6', '394' ],\n  [ '386', '080@327b6-518b7', '395' ],\n  [ '387', '080@519a1-539a3', '396' ],\n  [ '388a', '080@539a3-554b7', '403a' ],\n  [ '388b', '080@554b7-557a5', '403b' ],\n  [ '389', '081@001b1-071b7', '398' ],\n  [ '390', '081@072a1-266a3', '397' ],\n  [ '391', '081@266a3-314a1', '399' ],\n  [ '392', '081@314a1-325b3', '402' ],\n  [ '393', '081@325b3-326b1', '404' ],\n  [ '394', '081@326b2-342b3', '400' ],\n  [ '395', '081@342b3-354b2', '401' ],\n  [ '396', '081@354b2-482a6', '405a' ],\n  [ '397', '081@482a6-520b4', '405b' ],\n  [ '398', '081@520b4-566a7', '439' ],\n  [ '399', '082@001b1-005b6', '437' ],\n  [ '400', '082@005b6-043b1', '446' ],\n  [ '401', '082@043b1-049a4', '447' ],\n  [ '402', '082@049a4-056b4', '448' ],\n  [ '403', '082@056b4-064b2', '449' ],\n  [ '404', '082@064b2-135b3', '450' ],\n  [ '405', '082@135b3-174a2', '451' ],\n  [ '406', '082@174a3-237b3', '452' ],\n  [ '407', '082@237b3-254b2', '454' ],\n  [ '408', '082@254b2-257b6', '456' ],\n  [ '409', '082@257b6-261a6', '455' ],\n  [ '410', '082@261a7-278a7', '457' ],\n  [ '411', '082@278a7-299b5', '459' ],\n  [ '412', '082@299b5-301a6', '460' ],\n  [ '413', '082@301a6-305a1', '461' ],\n  [ '414', '082@305a1-369a7', '462' ],\n  [ '415', '082@369a7-431b6', '453' ],\n  [ '416a', '082@431b7-521b2', '465' ],\n  [ '416b', '082@521b2-536a6', '466' ],\n  [ '417', '083@001b1-105b1', '468' ],\n  [ '418', '083@105b1-181b1', '467' ],\n  [ '419', '083@181b1-187b3', '470' ],\n  [ '420', '083@187b3-193b4', '469' ],\n  [ '421', '083@193b4-196a4', '477' ],\n  [ '422', '083@196a4-202b2', '478' ],\n  [ '423', '083@202b2-208a6', '479' ],\n  [ '424', '083@208a6-212b1', '480' ],\n  [ '425', '083@212b1-234b5', '481' ],\n  [ '426', '083@234b5-243a3', '482' ],\n  [ '427', '083@243a4-247b1', '483' ],\n  [ '428', '083@247b1-247b3', '484' ],\n  [ '429', '083@247b3-284a2', '485' ],\n  [ '430', '083@284a2-287a3', '486' ],\n  [ '431', '083@287a3-347a5', '490' ],\n  [ '432', '083@347a5-373a2', '491' ],\n  [ '433', '083@373a2-389a7', '497' ],\n  [ '434', '083@389a7-407a7', '492' ],\n  [ '435', '083@407a7-416b6', '494' ],\n  [ '436', '083@416b6-422a3', '493' ],\n  [ '437', '083@422a3-422b6', '495' ],\n  [ '439', '083@423a5-424b6', '633' ],\n  [ '440', '083@424b6-468b1', '499' ],\n  [ '441', '083@468b1-516a1', '500' ],\n  [ '442', '083@516a1-520a7', '501' ],\n  [ '443', '083@520a7-522b1', '487' ],\n  [ '444', '083@522b1-552b5', '488' ],\n  [ '445', '083@552b5-557a3', '489' ],\n  [ '446', '084@001b1-092b5', '502' ],\n  [ '447', '084@092b5-320a1', '504' ],\n  [ '448', '084@320a1-520a5', '505' ],\n  [ '449', '085@001b1-014b5', '506' ],\n  [ '450', '085@014b5-089b5', '507' ],\n  [ '451', '085@089b5-096a7', '511' ],\n  [ '452', '085@096a7-097a2', '509' ],\n  [ '453', '085@097a2-135b6', '512' ],\n  [ '454', '085@135b6-288a2', '513' ],\n  [ '455', '085@288a2-299a3', '514' ],\n  [ '456', '085@299a3-353b5', '517' ],\n  [ '457', '085@353b5-412b5', '508' ],\n  [ '458', '085@412b5-493a7', '510' ],\n  [ '459', '086@001b1-120b6', '515' ],\n  [ '460', '086@120b6-122a7', '516' ],\n  [ '461', '086@122a7-176b1', '518' ],\n  [ '462', '086@176b1-341a4', '519' ],\n  [ '463', '086@341a4-354a6', '523' ],\n  [ '464', '086@354a6-362a5', '524' ],\n  [ '465', '086@362a5-456a6', '520' ],\n  [ '466', '087@001b1-258a4', '521' ],\n  [ '467', '087@258a4-265a6', '525' ],\n  [ '468', '087@265a7-267a2', '779' ],\n  [ '469', '087@267a2-273a5', '526' ],\n  [ '470', '087@273a5-380b3', '527' ],\n  [ '471', '087@380b3-419a3', '528' ],\n  [ '472', '087@419a3-433b2', '529' ],\n  [ '473', '087@433b2-437a2', '530' ],\n  [ '474', '087@437a3-437a4', '531' ],\n  [ '475', '087@437a4-437b1', '834' ],\n  [ '476', '087@437b1-473b5', '532' ],\n  [ '477', '087@473b5-503a6', '534' ],\n  [ '478', '087@503a6-504b2', '535' ],\n  [ '479', '087@504b2-514a5', '533' ],\n  [ '480', '088@001b1-008a6', '656' ],\n  [ '481', '088@008a6-008b1', '559' ],\n  [ '482', '088@008b1-008b7', '560' ],\n  [ '483', '088@008b7-009a5', '680' ],\n  [ '484', '088@009a5-009b2', '711' ],\n  [ '485', '088@009b2-009b3', '562' ],\n  [ '486', '088@009b3-012b7', '540' ],\n  [ '487', '088@012b7-015a2', '541' ],\n  [ '488', '088@015a2-017a6', '539' ],\n  [ '489', '088@017a7-022b2', '537' ],\n  [ '490', '088@022b3-028b7', '538' ],\n  [ '491', '088@028b7-029a7', '708' ],\n  [ '492', '088@029b1-029b4', '709' ],\n  [ '493', '088@029b4-030a1', '561' ],\n  [ '494', '088@030a1-030a3', '563' ],\n  [ '495', '088@030a3-036a2', '543' ],\n  [ '496', '088@036a2-040b5', '570' ],\n  [ '497', '088@040b5-042a5', '672' ],\n  [ '498', '088@042a5-045a1', '556' ],\n  [ '499', '088@045a2-047a2', '557' ],\n  [ '500', '088@047a2-053b2', '558' ],\n  [ '501', '088@053b3-448b3', '571' ],\n  [ '502', '088@448b3-468a6', '572' ],\n  [ '503', '088@468a6-469a6', '579' ],\n  [ '504', '088@469a6-469b7', '580' ],\n  [ '505', '088@469b7-470b2', '573' ],\n  [ '506', '088@470b2-471a7', '574' ],\n  [ '507', '088@471b1-471b3', '576' ],\n  [ '508', '088@471b3-472a3', '577' ],\n  [ '509', '088@472a3-472a7', '575' ],\n  [ '510', '088@472a7-472b6', '578' ],\n  [ '511', '088@472b7-475b5', '581' ],\n  [ '512', '088@475b5-478a5', '582' ],\n  [ '513', '089@001b1-215b2', '583' ],\n  [ '514', '089@215b2-405b1', '584' ],\n  [ '515', '089@405b1-504a7', '585' ],\n  [ '516', '089@504a7-543a4', '586' ],\n  [ '517', '090@001b1-052a6', '587' ],\n  [ '518', '090@052a6-085b3', '589' ],\n  [ '519', '090@085b3-103a7', '590' ],\n  [ '520', '090@103a7-112b6', '591' ],\n  [ '521', '090@112b6-114b1', '592' ],\n  [ '522', '090@114b1-126a3', '593' ],\n  [ '523', '090@126a3-158a4', '594' ],\n  [ '524', '090@158a4-159b5', '766' ],\n  [ '525', '090@159b5-160b5', '767' ],\n  [ '526', '090@160b6-173b1', '789' ],\n  [ '527', '090@173b1-174b2', '641' ],\n  [ '528', '090@174b2-175b4', '599' ],\n  [ '529', '090@175b4-178a6', '598' ],\n  [ '530', '090@178a6-179a5', '763' ],\n  [ '531', '090@179a5-185a2', '596' ],\n  [ '532', '090@185a2-193b6', '595' ],\n  [ '533', '090@193b6-194b1', '588' ],\n  [ '534', '090@194b1-202b4', '554' ],\n  [ '535', '090@202b4-204b4', '522' ],\n  [ '536', '090@204b4-211b4', '623' ],\n  [ '537', '090@211b4-218b5', '625' ],\n  [ '538', '090@218b5-230a7', '622' ],\n  [ '539', '090@230a7-233b2', '626' ],\n  [ '540', '090@233b2-235a5', '624' ],\n  [ '541', '090@235a5-246b4', '618' ],\n  [ '542', '090@246b4-255b2', '619' ],\n  [ '543', '090@255b2-262b3', '620' ],\n  [ '544', '090@262b3-270a2', '621' ],\n  [ '545', '090@270a2-284a3', '627' ],\n  [ '546', '090@284a3-284b7', '650' ],\n  [ '547', '090@284b7-285a2', '652' ],\n  [ '548', '090@285a2-285b5', '653' ],\n  [ '549', '090@285b5-286a6', '648' ],\n  [ '550', '090@286a6-287b5', '649' ],\n  [ '551', '090@287b5-288b4', '657' ],\n  [ '552', '090@288b5-289b3', '643' ],\n  [ '553', '090@289b3-290a5', '741' ],\n  [ '554', '090@290a5-291b1', '673' ],\n  [ '555', '090@291b1-292b1', '787' ],\n  [ '556', '090@292b1-309a1', '536' ],\n  [ '557', '090@309a1-319a4', '629' ],\n  [ '558', '090@319a4-319b6', '630' ],\n  [ '559', '090@319b6-323b1', '545' ],\n  [ '560', '090@323b1-324b6', '546' ],\n  [ '561', '090@324b6-325a3', '547' ],\n  [ '562', '090@325a3-325a7', '628' ],\n  [ '563', '090@325a7-325b2', '1070' ],\n  [ '564', '090@325b2-326b5', '636' ],\n  [ '565', '090@326b6-326b7', '681' ],\n  [ '566', '090@326b7-327a3', '679' ],\n  [ '567', '090@327a3-327a6', '678' ],\n  [ '568', '090@327a6-327b2', '742' ],\n  [ '569', '090@327b3-327b5', '743' ],\n  [ '570', '090@327b5-328a2', '744' ],\n  [ '571', '090@328a2-328a6', '745' ],\n  [ '572', '090@328a6-328b3', '746' ],\n  [ '573', '090@328b3-328b5', '748' ],\n  [ '574', '090@328b5-329b1', '564' ],\n  [ '575', '090@329b1-330a2', '710' ],\n  [ '576', '090@330a2-330b2', '601' ],\n  [ '577', '090@330b2-331a6', '768' ],\n  [ '578', '090@331a6-331b3', '751' ],\n  [ '579', '090@331b3-332a3', '773' ],\n  [ '580', '090@332a3-332a7', '565' ],\n  [ '581', '090@332a7-411b6', '632' ],\n  [ '582', '090@411b6-414b3', '602' ],\n  [ '583', '090@414b3-417b1', '544' ],\n  [ '584', '090@417b1-419b5', '765' ],\n  [ '585', '090@419b5-420b6', '646' ],\n  [ '586', '090@420b6-423a6', '635' ],\n  [ '587', '090@423a6-425a7', '637' ],\n  [ '588', '090@425a7-426a2', '550' ],\n  [ '589', '090@426a2-426a6', '740' ],\n  [ '590', '090@426a6-428b1', '739' ],\n  [ '591', '090@428b1-430b5', '597' ],\n  [ '592', '090@430b5-432b7', '647' ],\n  [ '593', '090@432b7-433b3', '658' ],\n  [ '594', '090@433b3-436b6', '638' ],\n  [ '595', '090@436b6-438b7', '640' ],\n  [ '596', '090@438b7-441a4', '549' ],\n  [ '597', '090@441a4-444b1', '634' ],\n  [ '598', '090@444b1-452a6', '642' ],\n  [ '599', '090@452a6-457a5', '683' ],\n  [ '600', '090@457a5-457b5', '639' ],\n  [ '601', '090@457b5-458b5', '552' ],\n  [ '602', '090@458b6-459b7', '603' ],\n  [ '603', '090@459b7-463a4', '661' ],\n  [ '604', '090@463a4-466a5', '631' ],\n  [ '605', '090@466a5-469b3', '542' ],\n  [ '606', '090@469b3-473a5', '555' ],\n  [ '607', '090@473a5-473a6', '654' ],\n  [ '608', '090@473a6-473b6', '749' ],\n  [ '609', '090@473b6-476a5', '762' ],\n  [ '610', '090@476a5-476a7', '655' ],\n  [ '611', '091@001b1-025b7', '659' ],\n  [ '612', '091@025b7-062a4', '660' ],\n  [ '613', '091@062a4-066a1', '662' ],\n  [ '614', '091@066a1-068b5', '663' ],\n  [ '615', '091@068b5-073b2', '664' ],\n  [ '616', '091@073b2-079b3', '665' ],\n  [ '617', '091@079b3-083b6', '666' ],\n  [ '618', '091@083b6-089a1', '667' ],\n  [ '619', '091@089a1-092b3', '668' ],\n  [ '620', '091@092b3-095b6', '669' ],\n  [ '621', '091@095b7-097b6', '670' ],\n  [ '622', '091@097b6-098b5', '671' ],\n  [ '623', '091@098b5-101b4', '801' ],\n  [ '624', '091@101b4-124b1', '685' ],\n  [ '625', '091@124b1-147b5', '686' ],\n  [ '626', '091@147b5-156a3', '687' ],\n  [ '627', '091@156a3-157a1', '688' ],\n  [ '628', '091@157a1-167a3', '696' ],\n  [ '629', '091@167a3-168b1', '695' ],\n  [ '630', '091@168b1-173a2', '690' ],\n  [ '631', '091@173a2-177a5', '691' ],\n  [ '632', '091@177a5-184a1', '692' ],\n  [ '633a', '091@184a1-185b3', '693' ],\n  [ '633b', '091@185b3-188b7', '694' ],\n  [ '634', '091@188b7-192b1', '697' ],\n  [ '635', '091@192b1-193a5', '698' ],\n  [ '636', '091@193a5-193b5', '700' ],\n  [ '637', '091@193b5-194a4', '699' ],\n  [ '638', '091@194a4-205a2', '701' ],\n  [ '639', '091@205a2-207b2', '702' ],\n  [ '640', '091@207b2-207b5', '703' ],\n  [ '641', '091@207b5-213b7', '644' ],\n  [ '642', '091@213b7-214b2', '568' ],\n  [ '643', '091@214b2-215a2', '677' ],\n  [ '644', '091@215a2-217b7', '675' ],\n  [ '645', '091@218a1-222a5', '674' ],\n  [ '646', '091@222a5-226a1', '676' ],\n  [ '647', '091@226a1-234b2', '705' ],\n  [ '648', '091@234b2-241b5', '706' ],\n  [ '649', '091@241b5-244b5', '707' ],\n  [ '650', '091@244b5-244b6', '704' ],\n  [ '651', '091@244b7-336b5', '712' ],\n  [ '652', '091@336b5-340a1', '718' ],\n  [ '653', '091@340a1-392b3', '721' ],\n  [ '654', '091@392b3-454b5', '722' ],\n  [ '655', '091@454b5-468b1', '723' ],\n  [ '656', '091@468b1-472a3', '724' ],\n  [ '657', '091@472a3-472a7', '726' ],\n  [ '658', '091@472a7-476a2', '719' ],\n  [ '659', '091@476a2-481a6', '720' ],\n  [ '660', '091@481a6-483a3', '728' ],\n  [ '661', '091@483a4-485b2', '753' ],\n  [ '663', '092@001b1-003a2', '727' ],\n  [ '664', '092@003a2-015a3', '732' ],\n  [ '665', '092@015a4-023b7', '731' ],\n  [ '666', '092@023b7-027b4', '730' ],\n  [ '667', '092@027b4-028b7', '764' ],\n  [ '668', '092@028b7-031b7', '736' ],\n  [ '669', '092@032a1-032b4', '799' ],\n  [ '670', '092@032b5-035a6', '738' ],\n  [ '671', '092@035a6-037a6', '733' ],\n  [ '672', '092@037a6-047a2', '734' ],\n  [ '673', '092@047a2-047a7', '735' ],\n  [ '674', '092@047a7-048b4', '729' ],\n  [ '675', '092@048b4-051a6', '756' ],\n  [ '676', '092@051a6-075b6', '757' ],\n  [ '677', '092@075b6-079a5', '758' ],\n  [ '678', '092@079a6-083b3', '759' ],\n  [ '679', '092@083b4-092a3', '870' ],\n  [ '680', '092@092a3-092a5', '760' ],\n  [ '681', '092@092a5-092b6', '761' ],\n  [ '682', '092@092b6-101b5', '713' ],\n  [ '683', '092@101b5-102b6', '769' ],\n  [ '684', '092@102b6-109a4', '770' ],\n  [ '685', '092@109a4-110a4', '771' ],\n  [ '686', '092@110a4-111a3', '772' ],\n  [ '687', '092@111a3-157b1', '775' ],\n  [ '688', '092@157b1-197a5', '778' ],\n  [ '689', '092@197a5-429a2', '717' ],\n  [ '689', '093@001b1-360b7', '717' ],\n  [ '690', '093@361a1-362a7', '774' ],\n  [ '691', '093@362a7-457a6', '777' ],\n  [ '691', '094@001b1-283a3', '777' ],\n  [ '692', '094@283a4-285a2', '780' ],\n  [ '693', '094@285a3-287a5', '781' ],\n  [ '694', '094@287a5-335a1', '782' ],\n  [ '695', '094@335a1-339b4', '783' ],\n  [ '696', '094@339b4-340b6', '784' ],\n  [ '697', '094@340b6-342a4', '785' ],\n  [ '698', '094@342a4-375a3', '790' ],\n  [ '699', '094@375a3-377b6', '791' ],\n  [ '700', '094@377b6-380b1', '794' ],\n  [ '701', '094@380b1-382a6', '792' ],\n  [ '702', '094@382a6-383b1', '793' ],\n  [ '703', '094@383b1-385b2', '786' ],\n  [ '704', '094@385b2-401b2', '788' ],\n  [ '705', '094@401b2-402a5', '684' ],\n  [ '706', '094@402a5-421a5', '797a' ],\n  [ '707', '095@001b1-014a5', '797b' ],\n  [ '708', '095@014a5-015b4', '798' ],\n  [ '709', '095@015b4-016b2', '569' ],\n  [ '710', '095@016b2-039a6', '800' ],\n  [ '711', '095@039a6-420a3', '755' ],\n  [ '711', '096@001b1-096a6', '755' ],\n  [ '712', '096@096a6-097a6', '795' ],\n  [ '713', '096@097a6-117b7', '796' ],\n  [ '714', '096@117b7-126a6', '802' ],\n  [ '715', '096@126a6-127b1', '803' ],\n  [ '716', '096@127b1-127b3', '804' ],\n  [ '717', '096@127b3-127b5', '805' ],\n  [ '718', '096@127b5-128a3', '806' ],\n  [ '719', '096@128a3-128b3', '807' ],\n  [ '720', '096@128b3-128b6', '808' ],\n  [ '721', '096@128b6-129a3', '809' ],\n  [ '722', '096@129a3-129a7', '810' ],\n  [ '723', '096@129a7-129b1', '811' ],\n  [ '724', '096@129b1-130a4', '567' ],\n  [ '725', '096@130a5-132a5', '548' ],\n  [ '726', '096@132a5-132a7', '813' ],\n  [ '727', '096@132a7-132b2', '814' ],\n  [ '728', '096@132b2-132b4', '815' ],\n  [ '729', '096@132b4-132b7', '816' ],\n  [ '730', '096@132b7-133a2', '817' ],\n  [ '731', '096@133a2-133a3', '818' ],\n  [ '732', '096@133a3-133a7', '819' ],\n  [ '733', '096@133b1-133b2', '820' ],\n  [ '734', '096@133b2-133b5', '821' ],\n  [ '735', '096@133b5-133b7', '822' ],\n  [ '736', '096@133b7-134a3', '823' ],\n  [ '737', '096@134a3-134b1', '824' ],\n  [ '738', '096@134b1-134b3', '825' ],\n  [ '739', '096@134b3-134b4', '826' ],\n  [ '740', '096@134b5-134b7', '827' ],\n  [ '741', '096@134b7-135a2', '828' ],\n  [ '742', '096@135a2-135a4', '829' ],\n  [ '743', '096@135a4-135a6', '830' ],\n  [ '744', '096@135a6-135b1', '831' ],\n  [ '745', '096@135b1-135b3', '832' ],\n  [ '746', '096@135b3-135b6', '833' ],\n  [ '747', '096@135b6-136a3', '604' ],\n  [ '748', '096@136a3-136b1', '605' ],\n  [ '749', '096@136b1-136b4', '606' ],\n  [ '750', '096@136b4-137a1', '607' ],\n  [ '751', '096@137a1-137b3', '608' ],\n  [ '752', '096@137b3-137b4', '609' ],\n  [ '753', '096@137b4-138a1', '610' ],\n  [ '754', '096@138a1-138a4', '611' ],\n  [ '755', '096@138a4-138a6', '612' ],\n  [ '756', '096@138a6-138b2', '613' ],\n  [ '757', '096@138b2-138b4', '614' ],\n  [ '758', '096@138b4-138b5', '615' ],\n  [ '759', '096@138b6-138b7', '616' ],\n  [ '760', '096@138b7-139b3', '617' ],\n  [ '761', '096@139b3-177a5', '835' ],\n  [ '762', '096@177a6-220a7', '836' ],\n  [ '763', '096@220a7-224b6', '838' ],\n  [ '764', '096@224b6-306a6', '837' ],\n  [ '766', '096@311b3-316a6', '839' ],\n  [ '767', '096@316a6-348b2', '840' ],\n  [ '768', '096@348b3-349a7', '841' ],\n  [ '769', '096@349a7-352a1', '842' ],\n  [ '770', '096@352a1-353b5', '843' ],\n  [ '771', '096@353b5-354a5', '844' ],\n  [ '772', '096@354a5-356b4', '845' ],\n  [ '773', '096@356b4-358a1', '846' ],\n  [ '774', '096@358a1-360a7', '847' ],\n  [ '775', '096@360a7-361a4', '848' ],\n  [ '776', '096@361a4-362a4', '849' ],\n  [ '777', '096@362a5-363a3', '850' ],\n  [ '778', '096@363a4-363b7', '851' ],\n  [ '779', '096@363b7-364b1', '852' ],\n  [ '780', '096@364b1-364b5', '853' ],\n  [ '781', '096@364b5-365a3', '854' ],\n  [ '782', '096@365a4-365b1', '855' ],\n  [ '783', '096@365b1-367a6', '856' ],\n  [ '784', '096@367a6-367b6', '857' ],\n  [ '785', '096@367b7-371a3', '458' ],\n  [ '786', '096@371a3-376a2', '463' ],\n  [ '787', '096@376a2-424a7', '473' ],\n  [ '788', '096@424a7-454b1', '474' ],\n  [ '789', '096@454b1-517a7', '475' ],\n  [ '790', '096@517a7-518b3', '600' ],\n  [ '791', '096@518b3-531a7', '682' ],\n  [ '792', '097@001b1-123a6', '1118' ],\n  [ '793', '097@123a6-422b4', '1119' ],\n  [ '794', '097@422b4-522a6', '1120' ],\n  [ '795', '098@001b1-176a7', '1121' ],\n  [ '796', '098@176a7-213a4', '1122' ],\n  [ '797', '098@213a4-323a5', '1123' ],\n  [ '798', '098@323a5-472b6', '1124' ],\n  [ '799', '098@472b7-492a1', '1125' ],\n  [ '800', '099@001b1-049b1', '1126' ],\n  [ '801', '099@049b1-086b1', '1127' ],\n  [ '802', '099@086b1-112a6', '1128' ],\n  [ '803', '099@112a6-188b5', '1129' ],\n  [ '804', '099@188b5-297a3', '1130' ],\n  [ '805a', '099@297a3-299a1', '1131' ],\n  [ '805b', '099@299a1-306a2', '1132' ],\n  [ '805c', '099@306a2-307b3', '1133' ],\n  [ '805d', '099@307b3-312b4', '1134' ],\n  [ '805e', '099@312b4-314b4', '1135' ],\n  [ '805f', '099@314b4-318a4', '1136' ],\n  [ '805g', '099@318a4-323b4', '1137' ],\n  [ '805h', '099@323b4-329a5', '1138' ],\n  [ '806', '099@329a5-372b3', '1139' ],\n  [ '807', '099@372b3-394b6', '1140' ],\n  [ '808', '099@394b6-425a5', '1141' ],\n  [ '810', '100@001a1-049a7', '1151' ],\n  [ '809', '100@001a1-510a6', '1152' ] ];\nhPedurma.rcode=\"H\";\nmodule.exports=hPedurma;",
    "module.exports={dPedurma:require(\"./dPedurma\"),hPedurma:require(\"./hPedurma\"),jPedurma:require(\"./jPedurma\")};",
    "var jPedurma=[ [ '1_1', '001@001b1-001@017b8', '1_1' ],\n  [ '1_2', '001@017b8-001@027b4', '1_2' ],\n  [ '1_3', '001@027b4-001@037b3', '1_3' ],\n  [ '1_4', '001@037b3-001@047a2', '1_4' ],\n  [ '1_5', '001@047a2-001@067a8', '1_5' ],\n  [ '1_6', '001@067a8-001@079a1', '1_6' ],\n  [ '1_7', '001@079a1-001@090b6', '1_7' ],\n  [ '1_8', '001@090b6-001@102b5', '1_8' ],\n  [ '1_9', '001@102b5-001@115a2', '1_9' ],\n  [ '1_10', '001@115a2-001@128a3', '1_10' ],\n  [ '1_11', '001@128a3-001@140b6', '1_11' ],\n  [ '1_12', '001@140b6-001@155b2', '1_12' ],\n  [ '1_13', '001@155b2-001@168a2', '1_13' ],\n  [ '1_14', '001@168a2-001@181b8', '1_14' ],\n  [ '1_15', '001@181b8-001@197a7', '1_15' ],\n  [ '1_16', '001@197a7-001@212a5', '1_16' ],\n  [ '1_17', '001@212a5-001@224b1', '1_17' ],\n  [ '1_18', '001@224b1-001@238a8', '1_18' ],\n  [ '1_19', '001@238a8-001@251a8', '1_19' ],\n  [ '1_20', '001@251a8-001@264a5', '1_20' ],\n  [ '1_21', '001@264a5-001@278a1', '1_21' ],\n  [ '1_22', '001@278a1-001@290a1', '1_22' ],\n  [ '1_23', '001@290a1-001@302b2', '1_23' ],\n  [ '1_24', '001@302b2-002@001b1', '1_24' ],\n  [ '1_25', '002@001b1-002@013b5', '1_25' ],\n  [ '1_26', '002@013b5-002@026a8', '1_26' ],\n  [ '1_27', '002@026a8-002@039a1', '1_27' ],\n  [ '1_28', '002@039a1-002@049a6', '1_28' ],\n  [ '1_29', '002@049a6-002@059b4', '1_29' ],\n  [ '1_30', '002@059b4-002@069b5', '1_30' ],\n  [ '1_31', '002@069b5-002@078b6', '1_31' ],\n  [ '1_32', '002@078b6-002@088b3', '1_32' ],\n  [ '1_33', '002@088b3-002@099a8', '1_33' ],\n  [ '1_34', '002@099a8-002@109b2', '1_34' ],\n  [ '1_35', '002@109b2-002@119b5', '1_35' ],\n  [ '1_36', '002@119b5-002@130b6', '1_36' ],\n  [ '1_37', '002@130b6-002@141b1', '1_37' ],\n  [ '1_38', '002@141b1-002@153a1', '1_38' ],\n  [ '1_39', '002@153a1-002@163a7', '1_39' ],\n  [ '1_40', '002@163a7-002@172b6', '1_40' ],\n  [ '1_41', '002@172b6-002@182a7', '1_41' ],\n  [ '1_42', '002@182a7-002@192a8', '1_42' ],\n  [ '1_43', '002@192a8-002@201a1', '1_43' ],\n  [ '1_44', '002@201a1-002@210b3', '1_44' ],\n  [ '1_45', '002@210b3-002@221a3', '1_45' ],\n  [ '1_46', '002@221a3-002@231b4', '1_46' ],\n  [ '1_47', '002@231b4-002@242b1', '1_47' ],\n  [ '1_48', '002@242b1-002@252b5', '1_48' ],\n  [ '1_49', '002@252b5-002@264b7', '1_49' ],\n  [ '1_50', '002@264b7-002@276b2', '1_50' ],\n  [ '1_51', '002@276b2-002@286b4', '1_51' ],\n  [ '1_52', '002@286b4-002@299a1', '1_52' ],\n  [ '1_53', '002@299a1-002@309b6', '1_53' ],\n  [ '1_54', '002@309b6-003@001b1', '1_54' ],\n  [ '1_55', '003@001b1-003@011a3', '1_55' ],\n  [ '1_56', '003@011a3-003@021a2', '1_56' ],\n  [ '1_57', '003@021a2-003@031b5', '1_57' ],\n  [ '1_58', '003@031b5-003@041a6', '1_58' ],\n  [ '1_59', '003@041a6-003@051a7', '1_59' ],\n  [ '1_60', '003@051a7-003@062a4', '1_60' ],\n  [ '1_61', '003@062a4-003@072b3', '1_61' ],\n  [ '1_62', '003@072b3-003@084a8', '1_62' ],\n  [ '1_63', '003@084a8-003@095b2', '1_63' ],\n  [ '1_64', '003@095b2-003@103b3', '1_64' ],\n  [ '1_65', '003@103b3-003@112b4', '1_65' ],\n  [ '1_66', '003@112b4-003@121b5', '1_66' ],\n  [ '1_67', '003@121b5-003@131a1', '1_67' ],\n  [ '1_68', '003@131a1-003@143a4', '1_68' ],\n  [ '1_69', '003@143a4-003@154b2', '1_69' ],\n  [ '1_70', '003@154b2-003@167b7', '1_70' ],\n  [ '1_71', '003@167b7-003@183b1', '1_71' ],\n  [ '1_72', '003@183b1-003@195a2', '1_72' ],\n  [ '1_73', '003@195a2-003@205b3', '1_73' ],\n  [ '1_74', '003@205b3-003@216a4', '1_74' ],\n  [ '1_75', '003@216a4-003@228a2', '1_75' ],\n  [ '1_76', '003@228a2-003@239a2', '1_76' ],\n  [ '1_77', '003@239a2-003@251b3', '1_77' ],\n  [ '1_78', '003@251b3-003@264b1', '1_78' ],\n  [ '1_79', '003@264b1-003@277b3', '1_79' ],\n  [ '1_80', '003@277b3-003@291a2', '1_80' ],\n  [ '1_81', '003@291a2-003@302b4', '1_81' ],\n  [ '1_82', '003@302b4-004@001b1', '1_82' ],\n  [ '1_83', '004@001b1-004@015a5', '1_83' ],\n  [ '1_84', '004@015a5-004@027b2', '1_84' ],\n  [ '1_85', '004@027b2-004@039a2', '1_85' ],\n  [ '1_86', '004@039a2-004@050a3', '1_86' ],\n  [ '1_87', '004@050a3-004@063a1', '1_87' ],\n  [ '1_88', '004@063a1-004@075b7', '1_88' ],\n  [ '1_89', '004@075b7-004@089a3', '1_89' ],\n  [ '1_90', '004@089a3-004@101a7', '1_90' ],\n  [ '1_91', '004@101a7-004@112b3', '1_91' ],\n  [ '1_92', '004@112b3-004@125a7', '1_92' ],\n  [ '1_93', '004@125a7-004@137a2', '1_93' ],\n  [ '1_94', '004@137a2-004@148a8', '1_94' ],\n  [ '1_95', '004@148a8-004@159b1', '1_95' ],\n  [ '1_96', '004@159b1-004@170b8', '1_96' ],\n  [ '1_97', '004@170b8-004@182a2', '1_97' ],\n  [ '1_98', '004@182a2-004@192a1', '1_98' ],\n  [ '1_99', '004@192a1-004@203a4', '1_99' ],\n  [ '1_100', '004@203a4-004@214b2', '1_100' ],\n  [ '1_101', '004@214b2-004@225a2', '1_101' ],\n  [ '1_102', '004@225a2-004@234b4', '1_102' ],\n  [ '1_103', '004@234b4-004@245b1', '1_103' ],\n  [ '1_104', '004@245b1-004@255b2', '1_104' ],\n  [ '1_105', '004@255b2-004@265b7', '1_105' ],\n  [ '1_106', '004@265b7-004@276b6', '1_106' ],\n  [ '1_107', '004@276b6-004@287b7', '1_107' ],\n  [ '1_108', '004@287b7-004@297b2', '1_108' ],\n  [ '1_109', '004@297b2-004@306a6', '1_109' ],\n  [ '2_1', '005@001b1-005@011b6', '2_1' ],\n  [ '2_2', '005@011b6-005@021b4', '2_2' ],\n  [ '3_1', '005@021b4-005@036a4', '3_1' ],\n  [ '3_2', '005@036a4-005@049a6', '3_2' ],\n  [ '3_3', '005@049a6-005@063a3', '3_3' ],\n  [ '3_4', '005@063a3-005@077b1', '3_4' ],\n  [ '3_5', '005@077b1-005@090b3', '3_5' ],\n  [ '3_6', '005@090b3-005@103b4', '3_6' ],\n  [ '3_7', '005@103b4-005@115a6', '3_7' ],\n  [ '3_8', '005@115a6-005@127b5', '3_8' ],\n  [ '3_9', '005@127b5-005@140b4', '3_9' ],\n  [ '3_10', '005@140b4-005@154b5', '3_10' ],\n  [ '3_11', '005@154b5-005@165b7', '3_11' ],\n  [ '3_12', '005@165b7-005@178b4', '3_12' ],\n  [ '3_13', '005@178b4-005@191a2', '3_13' ],\n  [ '3_14', '005@191a2-005@203b3', '3_14' ],\n  [ '3_15', '005@203b3-005@217a4', '3_15' ],\n  [ '3_16', '005@217a4-005@230a1', '3_16' ],\n  [ '3_17', '005@230a1-005@242b7', '3_17' ],\n  [ '3_18', '005@242b7-005@256b7', '3_18' ],\n  [ '3_19', '005@256b7-005@272a1', '3_19' ],\n  [ '3_20', '005@272a1-005@285b5', '3_20' ],\n  [ '3_21', '005@285b5-006@001b1', '3_21' ],\n  [ '3_22', '006@001b1-006@016a2', '3_22' ],\n  [ '3_23', '006@016a2-006@028a5', '3_23' ],\n  [ '3_24', '006@028a5-006@041a7', '3_24' ],\n  [ '3_25', '006@041a7-006@054a6', '3_25' ],\n  [ '3_26', '006@054a6-006@066a7', '3_26' ],\n  [ '3_27', '006@066a7-006@079b8', '3_27' ],\n  [ '3_28', '006@079b8-006@093a1', '3_28' ],\n  [ '3_29', '006@093a1-006@105b2', '3_29' ],\n  [ '3_30', '006@105b2-006@119b1', '3_30' ],\n  [ '3_31', '006@119b1-006@134b6', '3_31' ],\n  [ '3_32', '006@134b6-006@148b8', '3_32' ],\n  [ '3_33', '006@148b8-006@163a3', '3_33' ],\n  [ '3_34', '006@163a3-006@177b8', '3_34' ],\n  [ '3_35', '006@177b8-006@194a5', '3_35' ],\n  [ '3_36', '006@194a5-006@208b2', '3_36' ],\n  [ '3_37', '006@208b2-006@221b1', '3_37' ],\n  [ '3_38', '006@221b1-006@235a8', '3_38' ],\n  [ '3_39', '006@235a8-006@246b6', '3_39' ],\n  [ '3_40', '006@246b6-006@258b6', '3_40' ],\n  [ '3_41', '006@258b6-006@271a8', '3_41' ],\n  [ '3_42', '006@271a8-007@001b1', '3_42' ],\n  [ '3_43', '007@001b1-007@016a1', '3_43' ],\n  [ '3_44', '007@016a1-007@031b5', '3_44' ],\n  [ '3_45', '007@031b5-007@046b8', '3_45' ],\n  [ '3_46', '007@046b8-007@063b3', '3_46' ],\n  [ '3_47', '007@063b3-007@079a8', '3_47' ],\n  [ '3_48', '007@079a8-007@093a5', '3_48' ],\n  [ '3_49', '007@093a5-007@108a8', '3_49' ],\n  [ '3_50', '007@108a8-007@122b2', '3_50' ],\n  [ '3_51', '007@122b2-007@135b8', '3_51' ],\n  [ '3_52', '007@135b8-007@148b4', '3_52' ],\n  [ '3_53', '007@148b4-007@162a7', '3_53' ],\n  [ '3_54', '007@162a7-007@174b7', '3_54' ],\n  [ '3_55', '007@174b7-007@190a3', '3_55' ],\n  [ '3_56', '007@190a3-007@205a4', '3_56' ],\n  [ '3_57', '007@205a4-007@220a1', '3_57' ],\n  [ '3_58', '007@220a1-007@233b8', '3_58' ],\n  [ '3_59', '007@233b8-007@250a1', '3_59' ],\n  [ '3_60', '007@250a1-007@265b5', '3_60' ],\n  [ '3_61', '007@265b5-007@280b6', '3_61' ],\n  [ '3_62', '007@280b6-008@001b1', '3_62' ],\n  [ '3_63', '008@001b1-008@015b1', '3_63' ],\n  [ '3_64', '008@015b1-008@027a2', '3_64' ],\n  [ '3_65', '008@027a2-008@041a5', '3_65' ],\n  [ '3_66', '008@041a5-008@057a3', '3_66' ],\n  [ '3_67', '008@057a3-008@072b4', '3_67' ],\n  [ '3_68', '008@072b4-008@087b8', '3_68' ],\n  [ '3_69', '008@087b8-008@099b7', '3_69' ],\n  [ '3_70', '008@099b7-008@111b4', '3_70' ],\n  [ '3_71', '008@111b4-008@123b3', '3_71' ],\n  [ '3_72', '008@123b3-008@136a1', '3_72' ],\n  [ '3_73', '008@136a1-008@148a4', '3_73' ],\n  [ '3_74', '008@148a4-008@159a2', '3_74' ],\n  [ '3_75', '008@159a2-008@169a7', '3_75' ],\n  [ '3_76', '008@169a7-008@179a7', '3_76' ],\n  [ '3_77', '008@179a7-008@189b8', '3_77' ],\n  [ '3_78', '008@189b8-008@199a6', '3_78' ],\n  [ '3_79', '008@199a6-008@210b8', '3_79' ],\n  [ '3_80', '008@210b8-008@223a6', '3_80' ],\n  [ '3_81', '008@223a6-008@234b3', '3_81' ],\n  [ '3_82', '008@234b3-008@248b4', '3_82' ],\n  [ '3_83', '008@248b4-008@264a6', '3_83' ],\n  [ '4_1', '009@001b1-009@012b4', '4_1' ],\n  [ '4_2', '009@012b4-009@024a8', '4_2' ],\n  [ '5_1', '009@025b1-009@036a8', '5_1' ],\n  [ '5_2', '009@036a8-009@046a6', '5_2' ],\n  [ '5_3', '009@046a6-009@057a5', '5_3' ],\n  [ '5_4', '009@057a5-009@067b1', '5_4' ],\n  [ '5_5', '009@067b1-009@079a7', '5_5' ],\n  [ '5_6', '009@079a7-009@091a2', '5_6' ],\n  [ '5_7', '009@091a2-009@102a4', '5_7' ],\n  [ '5_8', '009@102a4-009@113b2', '5_8' ],\n  [ '5_9', '009@113b2-009@124b1', '5_9' ],\n  [ '5_10', '009@124b1-009@136b6', '5_10' ],\n  [ '5_11', '009@136b6-009@148b6', '5_11' ],\n  [ '5_12', '009@148b6-009@159b8', '5_12' ],\n  [ '5_13', '009@159b8-009@170b4', '5_13' ],\n  [ '5_14', '009@170b4-009@181a5', '5_14' ],\n  [ '5_15', '009@181a5-009@192a2', '5_15' ],\n  [ '5_16', '009@192a2-009@203b1', '5_16' ],\n  [ '5_17', '009@203b1-009@212b8', '5_17' ],\n  [ '5_18', '009@212b8-009@222a5', '5_18' ],\n  [ '5_19', '009@222a5-009@231a1', '5_19' ],\n  [ '5_20', '009@231a1-009@241b2', '5_20' ],\n  [ '5_21', '009@241b2-009@250b7', '5_21' ],\n  [ '5_22', '009@250b7-009@260b4', '5_22' ],\n  [ '5_23', '009@260b4-009@270a8', '5_23' ],\n  [ '5_24', '009@270a8-009@280b1', '5_24' ],\n  [ '5_25', '009@280b1-009@290b3', '5_25' ],\n  [ '5_26', '009@290b3-009@301a3', '5_26' ],\n  [ '5_27', '009@301a3-009@311a7', '5_27' ],\n  [ '5_28', '009@311a7-009@326a7', '5_28' ],\n  [ '6_1', '010@001b2-010@014a5', '6_1' ],\n  [ '6_2', '010@014a5-010@028a7', '6_2' ],\n  [ '6_3', '010@028a7-010@044b5', '6_3' ],\n  [ '6_4', '010@044b5-010@055b8', '6_4' ],\n  [ '6_5', '010@055b8-010@068b6', '6_5' ],\n  [ '6_6', '010@068b6-010@081a6', '6_6' ],\n  [ '6_7', '010@081a6-010@093b8', '6_7' ],\n  [ '6_8', '010@093b8-010@106b1', '6_8' ],\n  [ '6_9', '010@106b1-010@118a7', '6_9' ],\n  [ '6_10', '010@118a7-010@132b3', '6_10' ],\n  [ '6_11', '010@132b3-010@145a5', '6_11' ],\n  [ '6_12', '010@145a5-010@157b7', '6_12' ],\n  [ '6_13', '010@157b7-010@170a3', '6_13' ],\n  [ '6_14', '010@170a3-010@181b7', '6_14' ],\n  [ '6_15', '010@181b7-010@194a1', '6_15' ],\n  [ '6_16', '010@194a1-010@207b1', '6_16' ],\n  [ '6_17', '010@207b1-010@220a2', '6_17' ],\n  [ '6_18', '010@220a2-010@233a4', '6_18' ],\n  [ '6_19', '010@233a4-010@244b8', '6_19' ],\n  [ '6_20', '010@244b8-010@258a1', '6_20' ],\n  [ '6_21', '010@258a1-010@269a1', '6_21' ],\n  [ '6_22', '010@269a1-010@279a8', '6_22' ],\n  [ '6_23', '010@279a8-010@291b1', '6_23' ],\n  [ '6_24', '010@291b1-010@300a8', '6_24' ],\n  [ '6_25', '010@300a8-010@309b3', '6_25' ],\n  [ '6_26', '010@309b3-010@319b1', '6_26' ],\n  [ '6_27', '010@319b1-011@001b1', '6_27' ],\n  [ '6_28', '011@001b1-011@012b6', '6_28' ],\n  [ '6_29', '011@012b6-011@022b7', '6_29' ],\n  [ '6_30', '011@022b7-011@034b4', '6_30' ],\n  [ '6_31', '011@034b4-011@047b3', '6_31' ],\n  [ '6_32', '011@047b3-011@057b5', '6_32' ],\n  [ '6_33', '011@057b5-011@067b2', '6_33' ],\n  [ '6_34', '011@067b2-011@085b7', '6_34' ],\n  [ '6_35', '011@085b7-011@098a7', '6_35' ],\n  [ '6_36', '011@098a7-011@111a1', '6_36' ],\n  [ '6_37', '011@111a1-011@120a6', '6_37' ],\n  [ '6_38', '011@120a6-011@132b4', '6_38' ],\n  [ '6_39', '011@132b4-011@142b1', '6_39' ],\n  [ '6_40', '011@142b1-011@149a7', '6_40' ],\n  [ '6_41', '011@149a7-011@157b6', '6_41' ],\n  [ '6_42', '011@157b6-011@169b4', '6_42' ],\n  [ '6_43', '011@169b4-011@181b8', '6_43' ],\n  [ '6_44', '011@181b8-011@191a3', '6_44' ],\n  [ '6_45', '011@191a3-011@200a6', '6_45' ],\n  [ '6_46', '011@200a6-011@208a3', '6_46' ],\n  [ '6_47', '011@208a3-011@217a2', '6_47' ],\n  [ '6_48', '011@217a2-011@226a7', '6_48' ],\n  [ '6_49', '011@226a7-011@236b8', '6_49' ],\n  [ '6_50', '011@236b8-011@246a4', '6_50' ],\n  [ '6_51', '011@246a4-011@256a6', '6_51' ],\n  [ '6_52', '011@256a6-011@266b3', '6_52' ],\n  [ '6_53', '011@266b3-011@274b8', '6_53' ],\n  [ '6_54', '011@274b8-011@283b7', '6_54' ],\n  [ '6_55', '011@283b7-011@293a5', '6_55' ],\n  [ '6_56', '011@293a5-011@302b6', '6_56' ],\n  [ '6_57', '011@302b6-011@313a2', '6_57' ],\n  [ '6_58', '011@313a2-011@323b7', '6_58' ],\n  [ '6_59', '011@323b7-011@332a4', '6_59' ],\n  [ '7_1', '012@001b1-012@011b6', '7_1' ],\n  [ '7_2', '012@011b6-012@020b7', '7_2' ],\n  [ '7_3', '012@020b7-012@028b3', '7_3' ],\n  [ '7_4', '012@028b3-012@038b2', '7_4' ],\n  [ '7_5', '012@038b2-012@047b3', '7_5' ],\n  [ '7_6', '012@047b3-012@055b1', '7_6' ],\n  [ '7_7', '012@055b1-012@062b4', '7_7' ],\n  [ '7_8', '012@062b4-012@069b5', '7_8' ],\n  [ '7_9', '012@069b5-012@077a6', '7_9' ],\n  [ '7_10', '012@077a6-012@084a4', '7_10' ],\n  [ '7_11', '012@084a4-012@092b1', '7_11' ],\n  [ '7_12', '012@092b1-012@093b8', '7_12' ],\n  [ '8_1', '012@094a1-013@347a5', '19_1' ],\n  [ '8a', '012@094a1-297a7', '8' ],\n  [ '8_2', '012@106a5-012@115a6', '19_2' ],\n  [ '8_3', '012@115a6-012@128b2', '19_3' ],\n  [ '8_4', '012@128b2-012@138b4', '19_4' ],\n  [ '8_5', '012@138b4-012@149a2', '19_5' ],\n  [ '8_6', '012@149a2-012@159b5', '19_6' ],\n  [ '8_7', '012@159b5-012@167b8', '19_7' ],\n  [ '8_8', '012@167b8-012@175a6', '19_8' ],\n  [ '8_9', '012@175a6-012@182a6', '19_9' ],\n  [ '8_10', '012@182a6-012@190b6', '19_10' ],\n  [ '8_11', '012@190b6-012@200a3', '19_11' ],\n  [ '8_12', '012@200a3-012@209b6', '19_12' ],\n  [ '8_13', '012@209b6-012@218b3', '19_13' ],\n  [ '8_14', '012@218b3-012@227a8', '19_14' ],\n  [ '8_15', '012@227a8-012@236a5', '19_15' ],\n  [ '8_16', '012@236a5-012@245b7', '19_16' ],\n  [ '8_17', '012@245b7-012@255a1', '19_17' ],\n  [ '8_18', '012@255a1-012@264a5', '19_18' ],\n  [ '8_19', '012@264a5-012@271b1', '19_19' ],\n  [ '8_20', '012@271b1-012@279a4', '19_20' ],\n  [ '8_21', '012@279a4-012@287b5', '19_21' ],\n  [ '8_22', '012@287b5-013@347a5', '19_22' ],\n  [ '8a', '013@001b1-321a6', '8' ],\n  [ '8_30', '013@066b1-013@073b6', '19_30' ],\n  [ '8_31', '013@073b6-013@083a7', '19_31' ],\n  [ '8_32', '013@083a7-013@092b5', '19_32' ],\n  [ '8_33', '013@092b5-013@101a3', '19_33' ],\n  [ '8_34', '013@101a3-013@110a7', '19_34' ],\n  [ '8_35', '013@110a7-013@121a5', '19_35' ],\n  [ '8_36', '013@121a5-013@132b4', '19_36' ],\n  [ '8_37', '013@132b4-013@143a8', '19_37' ],\n  [ '8_38', '013@143a8-013@153b6', '19_38' ],\n  [ '8_39', '013@153b6-013@164a3', '19_39' ],\n  [ '8_40', '013@164a3-013@175a1', '19_40' ],\n  [ '8_41', '013@175a1-013@183b2', '19_41' ],\n  [ '8_42', '013@183b2-013@193b5', '19_42' ],\n  [ '8_43', '013@193b5-013@203a3', '19_43' ],\n  [ '8_44', '013@203a3-013@213a7', '19_44' ],\n  [ '8_45', '013@213a7-013@224a4', '19_45' ],\n  [ '8_46', '013@224a4-013@235b8', '19_46' ],\n  [ '8_47', '013@235b8-013@247b3', '19_47' ],\n  [ '8_48', '013@247b3-013@259b8', '19_48' ],\n  [ '8_49', '013@259b8-013@272b5', '19_49' ],\n  [ '8_50', '013@272b5-013@284a2', '19_50' ],\n  [ '8_51', '013@284a2-013@298a2', '19_51' ],\n  [ '8_52', '013@298a2-013@309b1', '19_52' ],\n  [ '8_53', '013@309b1-013@347a5', '19_53' ],\n  [ '8b', '013@321a6-324b7', '9' ],\n  [ '8c', '013@324b8-326a4', '10' ],\n  [ '8d', '013@326a4-327b1', '11' ],\n  [ '8e', '013@327b1-329b2', '12' ],\n  [ '8f', '013@329b2-334b5', '13' ],\n  [ '8g', '013@334b5-336a6', '14' ],\n  [ '8h', '013@336a7-336b5', '15' ],\n  [ '8i', '013@336b5-337b4', '16' ],\n  [ '8j', '013@337b4-339a8', '17' ],\n  [ '8k', '013@339b1-340a1', '18' ],\n  [ '8m', '013@342a2-342a8', '20' ],\n  [ '8n', '013@342a8-343a1', '21a' ],\n  [ '8o', '013@343a1-343b3', '21b' ],\n  [ '8p', '013@343b3-344a6', '21c' ],\n  [ '8q', '013@344a6-345a4', '22' ],\n  [ '8r', '013@345a4-345b6', '23' ],\n  [ '8s', '013@345b6-347a5', '24' ],\n  [ '9_1', '014@002a3-014@019a3', '25_1' ],\n  [ '9_2', '014@019a3-014@035a5', '25_2' ],\n  [ '9_3', '014@035a5-014@054b8', '25_3' ],\n  [ '9_4', '014@054b8-014@070a2', '25_4' ],\n  [ '9_5', '014@070a2-014@084b8', '25_5' ],\n  [ '9_6', '014@084b8-014@103a7', '25_6' ],\n  [ '9_7', '014@103a7-014@115b3', '25_7' ],\n  [ '9_8', '014@115b3-014@131b3', '25_8' ],\n  [ '9_9', '014@131b3-014@149a1', '25_9' ],\n  [ '9_10', '014@149a1-014@166b1', '25_10' ],\n  [ '9_11', '014@166b1-014@182a4', '25_11' ],\n  [ '9_12', '014@182a4-014@202b3', '25_12' ],\n  [ '9_13', '014@202b3-014@217b4', '25_13' ],\n  [ '9_14', '014@217b4-014@231a2', '25_14' ],\n  [ '9_15', '014@231a2-014@244b3', '25_15' ],\n  [ '9_16', '014@244b3-014@261a8', '25_16' ],\n  [ '9_17', '014@261a8-015@001b1', '25_17' ],\n  [ '9_18', '015@001b1-015@017a4', '25_18' ],\n  [ '9_19', '015@017a4-015@039a7', '25_19' ],\n  [ '9_20', '015@039a7-015@061b7', '25_20' ],\n  [ '9_21', '015@061b7-015@075a5', '25_21' ],\n  [ '9_22', '015@075a5-015@092a8', '25_22' ],\n  [ '9_23', '015@092a8-015@106b7', '25_23' ],\n  [ '9_24', '015@106b7-015@122a2', '25_24' ],\n  [ '9_25', '015@122a2-015@139b4', '25_25' ],\n  [ '9_26', '015@139b4-015@155b7', '25_26' ],\n  [ '9_27', '015@155b7-015@170a3', '25_27' ],\n  [ '9_28', '015@170a3-015@183a4', '25_28' ],\n  [ '9_29', '015@183a4-015@195a6', '25_29' ],\n  [ '9_30', '015@195a6-015@208a6', '25_30' ],\n  [ '9_31', '015@208a6-015@223b4', '25_31' ],\n  [ '9_32', '015@223b4-015@235b3', '25_32' ],\n  [ '9_33', '015@235b3-015@245a3', '25_33' ],\n  [ '9_34', '015@245a3-015@258a7', '25_34' ],\n  [ '9_35', '015@258a7-016@001b1', '25_35' ],\n  [ '9_36', '016@001b1-016@013a6', '25_36' ],\n  [ '9_37', '016@013a6-016@027a5', '25_37' ],\n  [ '9_38', '016@027a5-016@043a2', '25_38' ],\n  [ '9_39', '016@043a2-016@059a5', '25_39' ],\n  [ '9_40', '016@059a5-016@075a2', '25_40' ],\n  [ '9_41', '016@075a2-016@090a1', '25_41' ],\n  [ '9_42', '016@090a1-016@105a6', '25_42' ],\n  [ '9_43', '016@105a6-016@118a2', '25_43' ],\n  [ '9_44', '016@118a2-016@129b6', '25_44' ],\n  [ '9_45', '016@129b6-016@149b2', '25_45' ],\n  [ '9_46', '016@149b2-016@165b1', '25_46' ],\n  [ '9_47', '016@165b1-016@181a8', '25_47' ],\n  [ '9_48', '016@181a8-016@195a8', '25_48' ],\n  [ '9_49', '016@195a8-016@208b5', '25_49' ],\n  [ '9_50', '016@208b5-016@222b3', '25_50' ],\n  [ '9_51', '016@222b3-016@238b4', '25_51' ],\n  [ '9_52', '016@238b4-016@252b8', '25_52' ],\n  [ '9_53', '016@252b8-016@265b4', '25_53' ],\n  [ '9_54', '016@265b4-017@001b1', '25_54' ],\n  [ '9_55', '017@001b1-017@015a7', '25_55' ],\n  [ '9_56', '017@015a7-017@029a1', '25_56' ],\n  [ '9_57', '017@029a1-017@041b4', '25_57' ],\n  [ '9_58', '017@041b4-017@059a2', '25_58' ],\n  [ '9_59', '017@059a2-017@078a3', '25_59' ],\n  [ '9_60', '017@078a3-017@097b3', '25_60' ],\n  [ '9_61', '017@097b3-017@109b1', '25_61' ],\n  [ '9_62', '017@109b1-017@122a1', '25_62' ],\n  [ '9_63', '017@122a1-017@135a1', '25_63' ],\n  [ '9_64', '017@135a1-017@150b5', '25_64' ],\n  [ '9_65', '017@150b5-017@164a2', '25_65' ],\n  [ '9_66', '017@164a2-017@176b8', '25_66' ],\n  [ '9_67', '017@176b8-017@190a5', '25_67' ],\n  [ '9_68', '017@190a5-017@205a1', '25_68' ],\n  [ '9_69', '017@205a1-017@218a6', '25_69' ],\n  [ '9_70', '017@218a6-017@231a5', '25_70' ],\n  [ '9_71', '017@231a5-017@246b8', '25_71' ],\n  [ '9_72', '017@246b8-017@264a4', '25_72' ],\n  [ '9_73', '017@264a4-018@001b1', '25_73' ],\n  [ '9_74', '018@001b1-018@015b8', '25_74' ],\n  [ '9_75', '018@015b8-018@032b4', '25_75' ],\n  [ '9_76', '018@032b4-018@049a8', '25_76' ],\n  [ '9_77', '018@049a8-018@062b2', '25_77' ],\n  [ '9_78', '018@062b2-018@084b1', '25_78' ],\n  [ '9_79', '018@084b1-018@100a8', '25_79' ],\n  [ '9_80', '018@100a8-018@119a2', '25_80' ],\n  [ '9_81', '018@119a2-018@138b6', '25_81' ],\n  [ '9_82', '018@138b6-018@157a6', '25_82' ],\n  [ '9_83', '018@157a6-018@177a5', '25_83' ],\n  [ '9_84', '018@177a5-018@194b4', '25_84' ],\n  [ '9_85', '018@194b4-018@211b8', '25_85' ],\n  [ '9_86', '018@211b8-018@229b8', '25_86' ],\n  [ '9_87', '018@229b8-018@244b7', '25_87' ],\n  [ '9_88', '018@244b7-018@266a5', '25_88' ],\n  [ '9_89', '018@266a5-018@281a1', '25_89' ],\n  [ '9_90', '018@281a1-018@297b1', '25_90' ],\n  [ '9_91', '018@297b1-019@001b1', '25_91' ],\n  [ '9_92', '019@001b1-019@014b7', '25_92' ],\n  [ '9_93', '019@014b7-019@030a1', '25_93' ],\n  [ '9_94', '019@030a1-019@044a7', '25_94' ],\n  [ '9_95', '019@044a7-019@060a1', '25_95' ],\n  [ '9_96', '019@060a1-019@073b3', '25_96' ],\n  [ '9_97', '019@073b3-019@085b6', '25_97' ],\n  [ '9_98', '019@085b6-019@102b3', '25_98' ],\n  [ '9_99', '019@102b3-019@116a6', '25_99' ],\n  [ '9_100', '019@116a6-019@132a6', '25_100' ],\n  [ '9_101', '019@132a6-019@143b7', '25_101' ],\n  [ '9_102', '019@143b7-019@162b7', '25_102' ],\n  [ '9_103', '019@162b7-019@179b5', '25_103' ],\n  [ '9_104', '019@179b5-019@193b4', '25_104' ],\n  [ '9_105', '019@193b4-019@206a3', '25_105' ],\n  [ '9_106', '019@206a3-019@217b7', '25_106' ],\n  [ '9_107', '019@217b7-019@233a3', '25_107' ],\n  [ '9_108', '019@233a3-019@249b4', '25_108' ],\n  [ '9_109', '019@249b4-019@265b2', '25_109' ],\n  [ '9_110', '019@265b2-019@282a2', '25_110' ],\n  [ '9_111', '019@282a2-020@001b1', '25_111' ],\n  [ '9_112', '020@001b1-020@016a8', '25_112' ],\n  [ '9_113', '020@016a8-020@026b8', '25_113' ],\n  [ '9_114', '020@026b8-020@042a3', '25_114' ],\n  [ '9_115', '020@042a3-020@058a2', '25_115' ],\n  [ '9_116', '020@058a2-020@069a1', '25_116' ],\n  [ '9_117', '020@069a1-020@082b8', '25_117' ],\n  [ '9_118', '020@082b8-020@096b8', '25_118' ],\n  [ '9_119', '020@096b8-020@112a5', '25_119' ],\n  [ '9_120', '020@112a5-020@125a3', '25_120' ],\n  [ '9_121', '020@125a3-020@140b6', '25_121' ],\n  [ '9_122', '020@140b6-020@155a6', '25_122' ],\n  [ '9_123', '020@155a6-020@173a2', '25_123' ],\n  [ '9_124', '020@173a2-020@187b5', '25_124' ],\n  [ '9_125', '020@187b5-020@203b5', '25_125' ],\n  [ '9_126', '020@203b5-020@220b4', '25_126' ],\n  [ '9_127', '020@220b4-020@238a7', '25_127' ],\n  [ '9_128', '020@238a7-020@251b6', '25_128' ],\n  [ '9_129', '020@251b6-020@264b4', '25_129' ],\n  [ '9_130', '020@264b4-021@001b1', '25_130' ],\n  [ '9_132', '021@001b1-021@018b5', '25_132' ],\n  [ '9_133', '021@018b5-021@033a2', '25_133' ],\n  [ '9_134', '021@033a2-021@047b4', '25_134' ],\n  [ '9_135', '021@047b4-021@063a1', '25_135' ],\n  [ '9_136', '021@063a1-021@079b2', '25_136' ],\n  [ '9_137', '021@079b2-021@094a1', '25_137' ],\n  [ '9_138', '021@094a1-021@109a2', '25_138' ],\n  [ '9_139', '021@109a2-021@122a7', '25_139' ],\n  [ '9_140', '021@122a7-021@135b6', '25_140' ],\n  [ '9_141', '021@135b6-021@150a4', '25_141' ],\n  [ '9_142', '021@150a4-021@165a3', '25_142' ],\n  [ '9_143', '021@165a3-021@180a5', '25_143' ],\n  [ '9_144', '021@180a5-021@195b5', '25_144' ],\n  [ '9_145', '021@195b5-021@209b3', '25_145' ],\n  [ '9_146', '021@209b3-021@228b6', '25_146' ],\n  [ '9_147', '021@228b6-021@246a1', '25_147' ],\n  [ '9_148', '021@246a1-021@261b3', '25_148' ],\n  [ '9_149', '021@261b3-021@277a3', '25_149' ],\n  [ '9_150', '021@277a3-022@001b1', '25_150' ],\n  [ '9_151', '022@001b1-022@025a6', '25_151' ],\n  [ '9_152', '022@025a6-022@044a8', '25_152' ],\n  [ '9_153', '022@044a8-022@070a1', '25_153' ],\n  [ '9_154', '022@070a1-022@094b6', '25_154' ],\n  [ '9_155', '022@094b6-022@118b6', '25_155' ],\n  [ '9_156', '022@118b6-022@140b6', '25_156' ],\n  [ '9_157', '022@140b6-022@157a2', '25_157' ],\n  [ '9_158', '022@157a2-022@174b7', '25_158' ],\n  [ '9_159', '022@174b7-022@193b1', '25_159' ],\n  [ '9_160', '022@193b1-022@212a4', '25_160' ],\n  [ '9_161', '022@212a4-022@232a5', '25_161' ],\n  [ '9_162', '022@232a5-022@251a6', '25_162' ],\n  [ '9_163', '022@251a6-022@269b7', '25_163' ],\n  [ '9_164', '022@269b7-022@288b4', '25_164' ],\n  [ '9_165', '022@288b4-022@307a5', '25_165' ],\n  [ '9_166', '022@307a5-023@001b1', '25_166' ],\n  [ '9_167', '023@001b1-023@020a2', '25_167' ],\n  [ '9_168', '023@020a2-023@034a5', '25_168' ],\n  [ '9_169', '023@034a5-023@050b6', '25_169' ],\n  [ '9_170', '023@050b6-023@066a4', '25_170' ],\n  [ '9_171', '023@066a4-023@082a1', '25_171' ],\n  [ '9_172', '023@082a1-023@098b4', '25_172' ],\n  [ '9_173', '023@098b4-023@115a5', '25_173' ],\n  [ '9_174', '023@115a5-023@130b6', '25_174' ],\n  [ '9_175', '023@130b6-023@147a4', '25_175' ],\n  [ '9_176', '023@147a4-023@163a5', '25_176' ],\n  [ '9_177', '023@163a5-023@176b5', '25_177' ],\n  [ '9_178', '023@176b5-023@190a6', '25_178' ],\n  [ '9_179', '023@190a6-023@206a2', '25_179' ],\n  [ '9_180', '023@206a2-023@218a7', '25_180' ],\n  [ '9_181', '023@218a7-023@235b8', '25_181' ],\n  [ '9_182', '023@235b8-023@248b3', '25_182' ],\n  [ '9_183', '023@248b3-023@262b5', '25_183' ],\n  [ '9_184', '023@262b5-023@276b1', '25_184' ],\n  [ '9_185', '023@276b1-024@001b1', '25_185' ],\n  [ '9_186', '024@001b1-024@018a7', '25_186' ],\n  [ '9_187', '024@018a7-024@035b1', '25_187' ],\n  [ '9_188', '024@035b1-024@052a4', '25_188' ],\n  [ '9_189', '024@052a4-024@063b1', '25_189' ],\n  [ '9_190', '024@063b1-024@077b7', '25_190' ],\n  [ '9_191', '024@077b7-024@115a1', '25_191' ],\n  [ '9_193', '024@115a1-024@134a7', '25_193' ],\n  [ '9_194', '024@134a7-024@150b5', '25_194' ],\n  [ '9_195', '024@150b5-024@165b4', '25_195' ],\n  [ '9_196', '024@165b4-024@180a4', '25_196' ],\n  [ '9_197', '024@180a4-024@197b5', '25_197' ],\n  [ '9_198', '024@197b5-024@212a7', '25_198' ],\n  [ '9_199', '024@212a7-024@225a2', '25_199' ],\n  [ '9_200', '024@225a2-024@242a4', '25_200' ],\n  [ '9_201', '024@242a4-024@258b5', '25_201' ],\n  [ '9_202', '024@258b5-024@277a7', '25_202' ],\n  [ '9_203', '024@277a7-024@291a2', '25_203' ],\n  [ '9_204', '024@291a2-024@94a18', '25_204' ],\n  [ '9_192', '024@94a18-025@001b1', '25_192' ],\n  [ '9_205', '025@001b1-025@020a3', '25_205' ],\n  [ '9_206', '025@020a3-025@033b1', '25_206' ],\n  [ '9_207', '025@033b1-025@053a1', '25_207' ],\n  [ '9_208', '025@053a1-025@069a7', '25_208' ],\n  [ '9_209', '025@069a7-025@084b1', '25_209' ],\n  [ '9_210', '025@084b1-025@099b2', '25_210' ],\n  [ '9_211', '025@099b2-025@117b4', '25_211' ],\n  [ '9_212', '025@117b4-025@133b3', '25_212' ],\n  [ '9_213', '025@133b3-025@150a8', '25_213' ],\n  [ '9_214', '025@150a8-025@167a5', '25_214' ],\n  [ '9_215', '025@167a5-025@182a1', '25_215' ],\n  [ '9_216', '025@182a1-025@194b4', '25_216' ],\n  [ '9_217', '025@194b4-025@208a3', '25_217' ],\n  [ '9_218', '025@208a3-025@222b7', '25_218' ],\n  [ '9_219', '025@222b7-025@237a6', '25_219' ],\n  [ '9_220', '025@237a6-025@253a5', '25_220' ],\n  [ '9_221', '025@253a5-025@267a4', '25_221' ],\n  [ '9_222', '025@267a4-025@282a6', '25_222' ],\n  [ '9_223', '025@282a6-025@298b8', '25_223' ],\n  [ '9_224', '025@298b8-026@001b1', '25_224' ],\n  [ '9_225', '026@001b1-026@016b3', '25_225' ],\n  [ '9_226', '026@016b3-026@031b5', '25_226' ],\n  [ '9_227', '026@031b5-026@047b6', '25_227' ],\n  [ '9_228', '026@047b6-026@062a1', '25_228' ],\n  [ '9_229', '026@062a1-026@076b2', '25_229' ],\n  [ '9_230', '026@076b2-026@096a5', '25_230' ],\n  [ '9_231', '026@096a5-026@112a1', '25_231' ],\n  [ '9_232', '026@112a1-026@124b4', '25_232' ],\n  [ '9_233', '026@124b4-026@141a4', '25_233' ],\n  [ '9_234', '026@141a4-026@159a1', '25_234' ],\n  [ '9_235', '026@159a1-026@175b8', '25_235' ],\n  [ '9_236', '026@175b8-026@189a3', '25_236' ],\n  [ '9_237', '026@189a3-026@205b1', '25_237' ],\n  [ '9_238', '026@205b1-026@226b8', '25_238' ],\n  [ '9_239', '026@226b8-026@243a2', '25_239' ],\n  [ '9_240', '026@243a2-026@260a5', '25_240' ],\n  [ '9_241', '026@260a5-026@272a8', '25_241' ],\n  [ '9_242', '026@272a8-026@284b8', '25_242' ],\n  [ '9_243', '026@284b8-026@300a8', '25_243' ],\n  [ '9_244', '026@300a8-027@001b1', '25_244' ],\n  [ '9_245', '027@001b1-027@020b5', '25_245' ],\n  [ '9_246', '027@020b5-027@035b2', '25_246' ],\n  [ '9_247', '027@035b2-027@051a6', '25_247' ],\n  [ '9_248', '027@051a6-027@065b8', '25_248' ],\n  [ '9_249', '027@065b8-027@077b7', '25_249' ],\n  [ '9_250', '027@077b7-027@089a8', '25_250' ],\n  [ '9_251', '027@089a8-027@106a1', '25_251' ],\n  [ '9_252', '027@106a1-027@121a7', '25_252' ],\n  [ '9_253', '027@121a7-027@137a5', '25_253' ],\n  [ '9_254', '027@137a5-027@153a6', '25_254' ],\n  [ '9_255', '027@153a6-027@167b1', '25_255' ],\n  [ '9_256', '027@167b1-027@184a2', '25_256' ],\n  [ '9_257', '027@184a2-027@198a6', '25_257' ],\n  [ '9_258', '027@198a6-027@214b5', '25_258' ],\n  [ '9_259', '027@214b5-027@232b1', '25_259' ],\n  [ '9_260', '027@232b1-027@255b3', '25_260' ],\n  [ '9_261', '027@255b3-027@270b2', '25_261' ],\n  [ '9_262', '027@270b2-027@289a2', '25_262' ],\n  [ '9_263', '027@289a2-028@001b1', '25_263' ],\n  [ '9_264', '028@001b1-028@020b1', '25_264' ],\n  [ '9_265', '028@020b1-028@041b1', '25_265' ],\n  [ '9_266', '028@041b1-028@062b5', '25_266' ],\n  [ '9_267', '028@062b5-028@075a3', '25_267' ],\n  [ '9_268', '028@075a3-028@096b8', '25_268' ],\n  [ '9_269', '028@096b8-028@118b4', '25_269' ],\n  [ '9_270', '028@118b4-028@138b2', '25_270' ],\n  [ '9_271', '028@138b2-028@156b1', '25_271' ],\n  [ '9_272', '028@156b1-028@171b4', '25_272' ],\n  [ '9_273', '028@171b4-028@187a6', '25_273' ],\n  [ '9_274', '028@187a6-028@203b3', '25_274' ],\n  [ '9_275', '028@203b3-028@218a4', '25_275' ],\n  [ '9_276', '028@218a4-028@235a5', '25_276' ],\n  [ '9_277', '028@235a5-028@246a1', '25_277' ],\n  [ '9_278', '028@246a1-028@255b4', '25_278' ],\n  [ '9_279', '028@255b4-028@273a3', '25_279' ],\n  [ '9_280', '028@273a3-028@290a4', '25_280' ],\n  [ '9_281', '028@290a4-029@001b1', '25_281' ],\n  [ '9_282', '029@001b1-029@018a1', '25_282' ],\n  [ '9_283', '029@018a1-029@040b1', '25_283' ],\n  [ '9_284', '029@040b1-029@062b5', '25_284' ],\n  [ '9_285', '029@062b5-029@083b6', '25_285' ],\n  [ '9_286', '029@083b6-029@101b8', '25_286' ],\n  [ '9_287', '029@101b8-029@124a1', '25_287' ],\n  [ '9_288', '029@124a1-029@139b8', '25_288' ],\n  [ '9_289', '029@139b8-029@153a8', '25_289' ],\n  [ '9_290', '029@153a8-029@166a5', '25_290' ],\n  [ '9_291', '029@166a5-029@178a2', '25_291' ],\n  [ '9_292', '029@178a2-029@190b3', '25_292' ],\n  [ '9_293', '029@190b3-029@203a3', '25_293' ],\n  [ '9_294', '029@203a3-029@216a7', '25_294' ],\n  [ '9_295', '029@216a7-029@232b3', '25_295' ],\n  [ '9_296', '029@232b3-029@247b4', '25_296' ],\n  [ '9_297', '029@247b4-029@266b2', '25_297' ],\n  [ '9_298', '029@266b2-029@280a3', '25_298' ],\n  [ '9_299', '029@280a3-029@296a2', '25_299' ],\n  [ '9_300', '029@296a2-029@311a3', '25_300' ],\n  [ '10_1', '030@001b2-030@015b5', '26_1' ],\n  [ '10_2', '030@015b5-030@029b2', '26_2' ],\n  [ '10_3', '030@029b2-030@044b6', '26_3' ],\n  [ '10_4', '030@044b6-030@059b4', '26_4' ],\n  [ '10_5', '030@059b4-030@074a6', '26_5' ],\n  [ '10_6', '030@074a6-030@089a2', '26_6' ],\n  [ '10_7', '030@089a2-030@105a7', '26_7' ],\n  [ '10_8', '030@105a7-030@119b3', '26_8' ],\n  [ '10_9', '030@119b3-030@132b8', '26_9' ],\n  [ '10_10', '030@132b8-030@147a3', '26_10' ],\n  [ '10_11', '030@147a3-030@162a6', '26_11' ],\n  [ '10_12', '030@162a6-030@177a4', '26_12' ],\n  [ '10_13', '030@177a4-030@193b6', '26_13' ],\n  [ '10_14', '030@193b6-030@210a4', '26_14' ],\n  [ '10_15', '030@210a4-030@223b8', '26_15' ],\n  [ '10_16', '030@223b8-030@237a4', '26_16' ],\n  [ '10_17', '030@237a4-030@251b1', '26_17' ],\n  [ '10_18', '030@251b1-030@267a2', '26_18' ],\n  [ '10_19', '030@267a2-030@280b5', '26_19' ],\n  [ '10_20', '030@280b5-031@001b1', '26_20' ],\n  [ '10_21', '031@001b1-031@017a8', '26_21' ],\n  [ '10_22', '031@017a8-031@032b8', '26_22' ],\n  [ '10_23', '031@032b8-031@047b7', '26_23' ],\n  [ '10_24', '031@047b7-031@061b7', '26_24' ],\n  [ '10_25', '031@061b7-031@077a8', '26_25' ],\n  [ '10_26', '031@077a8-031@092a1', '26_26' ],\n  [ '10_27', '031@092a1-031@105a8', '26_27' ],\n  [ '10_28', '031@105a8-031@119b8', '26_28' ],\n  [ '10_29', '031@119b8-031@137a6', '26_29' ],\n  [ '10_30', '031@137a6-031@157a3', '26_30' ],\n  [ '10_31', '031@157a3-031@171a1', '26_31' ],\n  [ '10_32', '031@171a1-031@186a6', '26_32' ],\n  [ '10_33', '031@186a6-031@200a7', '26_33' ],\n  [ '10_34', '031@200a7-031@215a6', '26_34' ],\n  [ '10_35', '031@215a6-031@230b5', '26_35' ],\n  [ '10_36', '031@230b5-031@246b2', '26_36' ],\n  [ '10_37', '031@246b2-031@263a3', '26_37' ],\n  [ '10_38', '031@263a3-031@280b2', '26_38' ],\n  [ '10_39', '031@280b2-031@296b5', '26_39' ],\n  [ '10_40', '031@296b5-032@001b1', '26_40' ],\n  [ '10_41', '032@001b1-032@015b2', '26_41' ],\n  [ '10_42', '032@015b2-032@030a1', '26_42' ],\n  [ '10_43', '032@030a1-032@043a2', '26_43' ],\n  [ '10_44', '032@043a2-032@054b7', '26_44' ],\n  [ '10_45', '032@054b7-032@069a6', '26_45' ],\n  [ '10_46', '032@069a6-032@081a8', '26_46' ],\n  [ '10_47', '032@081a8-032@094b7', '26_47' ],\n  [ '10_48', '032@094b7-032@111a2', '26_48' ],\n  [ '10_49', '032@111a2-032@128a2', '26_49' ],\n  [ '10_50', '032@128a2-032@146a6', '26_50' ],\n  [ '10_51', '032@146a6-032@162b7', '26_51' ],\n  [ '10_52', '032@162b7-032@179a5', '26_52' ],\n  [ '10_53', '032@179a5-032@195b7', '26_53' ],\n  [ '10_54', '032@195b7-032@216a1', '26_54' ],\n  [ '10_55', '032@216a1-032@231b8', '26_55' ],\n  [ '10_56', '032@231b8-032@249b4', '26_56' ],\n  [ '10_57', '032@249b4-032@264b5', '26_57' ],\n  [ '10_58', '032@264b5-032@280a6', '26_58' ],\n  [ '10_59', '032@280a6-033@001b1', '26_59' ],\n  [ '10_60', '033@001b1-033@015b6', '26_60' ],\n  [ '10_61', '033@015b6-033@031b7', '26_61' ],\n  [ '10_62', '033@031b7-033@046b3', '26_62' ],\n  [ '10_63', '033@046b3-033@063a1', '26_63' ],\n  [ '10_64', '033@063a1-033@078b3', '26_64' ],\n  [ '10_65', '033@078b3-033@095b4', '26_65' ],\n  [ '10_66', '033@095b4-033@111b3', '26_66' ],\n  [ '10_67', '033@111b3-033@124a8', '26_67' ],\n  [ '10_68', '033@124a8-033@138a2', '26_68' ],\n  [ '10_69', '033@138a2-033@151a6', '26_69' ],\n  [ '10_70', '033@151a6-033@165b8', '26_70' ],\n  [ '10_71', '033@165b8-033@179a1', '26_71' ],\n  [ '10_72', '033@179a1-033@192b6', '26_72' ],\n  [ '10_73', '033@192b6-033@206a7', '26_73' ],\n  [ '10_74', '033@206a7-033@220a6', '26_74' ],\n  [ '10_75', '033@220a6-033@233a1', '26_75' ],\n  [ '10_76', '033@233a1-033@244a2', '26_76' ],\n  [ '10_77', '033@244a2-033@256b7', '26_77' ],\n  [ '10_78', '033@256b7-033@271a9', '26_78' ],\n  [ '11_1', '034@001b3-034@015a6', '27_1' ],\n  [ '11_2', '034@015a6-034@030a4', '27_2' ],\n  [ '11_3', '034@030a4-034@044a3', '27_3' ],\n  [ '11_4', '034@044a3-034@057b6', '27_4' ],\n  [ '11_5', '034@057b6-034@072b2', '27_5' ],\n  [ '11_6', '034@072b2-034@087a3', '27_6' ],\n  [ '11_7', '034@087a3-034@102a5', '27_7' ],\n  [ '11_8', '034@102a5-034@117b8', '27_8' ],\n  [ '11_9', '034@117b8-034@136b6', '27_9' ],\n  [ '11_10', '034@136b6-034@148b6', '27_10' ],\n  [ '11_11', '034@148b6-034@161a6', '27_11' ],\n  [ '11_12', '034@161a6-034@175b8', '27_12' ],\n  [ '11_13', '034@175b8-034@192b5', '27_13' ],\n  [ '11_14', '034@192b5-034@206b4', '27_14' ],\n  [ '11_15', '034@206b4-034@219a5', '27_15' ],\n  [ '11_16', '034@219a5-034@234a4', '27_16' ],\n  [ '11_17', '034@234a4-034@248a8', '27_17' ],\n  [ '11_18', '034@248a8-034@262b7', '27_18' ],\n  [ '11_19', '034@262b7-034@274b5', '27_19' ],\n  [ '11_20', '034@274b5-034@286b1', '27_20' ],\n  [ '11_21', '034@286b1-034@299b5', '27_21' ],\n  [ '11_22', '034@299b5-035@001b1', '27_22' ],\n  [ '11_23', '035@001b1-035@014b4', '27_23' ],\n  [ '11_24', '035@014b4-035@028b3', '27_24' ],\n  [ '11_25', '035@028b3-035@041a5', '27_25' ],\n  [ '11_26', '035@041a5-035@056a1', '27_26' ],\n  [ '11_27', '035@056a1-035@069b3', '27_27' ],\n  [ '11_28', '035@069b3-035@082b8', '27_28' ],\n  [ '11_29', '035@082b8-035@096b2', '27_29' ],\n  [ '11_30', '035@096b2-035@110a8', '27_30' ],\n  [ '11_31', '035@110a8-035@122a7', '27_31' ],\n  [ '11_32', '035@122a7-035@137b4', '27_32' ],\n  [ '11_33', '035@137b4-035@151a8', '27_33' ],\n  [ '11_34', '035@151a8-035@166a4', '27_34' ],\n  [ '11_35', '035@166a4-035@178a2', '27_35' ],\n  [ '11_36', '035@178a2-035@194a2', '27_36' ],\n  [ '11_37', '035@194a2-035@210a4', '27_37' ],\n  [ '11_38', '035@210a4-035@225a3', '27_38' ],\n  [ '11_39', '035@225a3-035@240a4', '27_39' ],\n  [ '11_40', '035@240a4-035@255a4', '27_40' ],\n  [ '11_41', '035@255a4-035@275a4', '27_41' ],\n  [ '11_42', '035@275a4-035@290b3', '27_42' ],\n  [ '11_43', '035@290b3-035@306a3', '27_43' ],\n  [ '11_44', '035@306a3-036@001b1', '27_44' ],\n  [ '11_45', '036@001b1-036@014a4', '27_45' ],\n  [ '11_46', '036@014a4-036@026b5', '27_46' ],\n  [ '11_47', '036@026b5-036@040b3', '27_47' ],\n  [ '11_48', '036@040b3-036@054a1', '27_48' ],\n  [ '11_49', '036@054a1-036@064b6', '27_49' ],\n  [ '11_50', '036@064b6-036@078b6', '27_50' ],\n  [ '11_51', '036@078b6-036@090b5', '27_51' ],\n  [ '11_52', '036@090b5-036@105b3', '27_52' ],\n  [ '11_53', '036@105b3-036@120a6', '27_53' ],\n  [ '11_54', '036@120a6-036@133a3', '27_54' ],\n  [ '11_55', '036@133a3-036@146b3', '27_55' ],\n  [ '11_56', '036@146b3-036@158a5', '27_56' ],\n  [ '11_57', '036@158a5-036@169a5', '27_57' ],\n  [ '11_58', '036@169a5-036@187a6', '27_58' ],\n  [ '11_59', '036@187a6-036@199a4', '27_59' ],\n  [ '11_60', '036@199a4-035@320a7', '27_60' ],\n  [ '', '037@001a1-251a3', '305' ],\n  [ '12_1', '037@001b1-037@012b2', '28_1' ],\n  [ '12_2', '037@012b2-037@024b2', '28_2' ],\n  [ '12_3', '037@024b2-037@034b7', '28_3' ],\n  [ '12_4', '037@034b7-037@046b8', '28_4' ],\n  [ '12_5', '037@046b8-037@057b8', '28_5' ],\n  [ '12_6', '037@057b8-037@069a1', '28_6' ],\n  [ '12_7', '037@069a1-037@080a8', '28_7' ],\n  [ '12_8', '037@080a8-037@093b1', '28_8' ],\n  [ '12_9', '037@093b1-037@105a3', '28_9' ],\n  [ '12_10', '037@105a3-037@116a2', '28_10' ],\n  [ '12_11', '037@116a2-037@127a5', '28_11' ],\n  [ '12_12', '037@127a5-037@139b6', '28_12' ],\n  [ '12_13', '037@139b6-037@151a2', '28_13' ],\n  [ '12_14', '037@151a2-037@162a7', '28_14' ],\n  [ '12_15', '037@162a7-037@175a5', '28_15' ],\n  [ '12_16', '037@175a5-037@186a6', '28_16' ],\n  [ '12_17', '037@186a6-037@198b7', '28_17' ],\n  [ '12_18', '037@198b7-037@210b8', '28_18' ],\n  [ '12_19', '037@210b8-037@222b5', '28_19' ],\n  [ '12_20', '037@222b5-037@232b6', '28_20' ],\n  [ '12_21', '037@232b6-037@242b6', '28_21' ],\n  [ '12_22', '037@242b6-037@257a2', '28_22' ],\n  [ '12_23', '037@257a2-037@270a6', '28_23' ],\n  [ '12_24', '037@270a6-037@282b8', '28_24' ],\n  [ '12_25', '037@282b8-037@295a1', '28_25' ],\n  [ '12_26', '037@295a1-037@306b4', '28_26' ],\n  [ '12_27', '037@306b4-037@318b6', '28_27' ],\n  [ '12_28', '037@318b6-037@330b5', '28_28' ],\n  [ '12_29', '037@330b5-037@343a3', '28_29' ],\n  [ '12_30', '037@343a3-037@354b1', '28_30' ],\n  [ '12_31', '037@354b1-037@364b1', '28_31' ],\n  [ '12_32', '037@364b1-037@375a8', '28_32' ],\n  [ '12_33', '037@375a8-037@387b8', '28_33' ],\n  [ '12_34', '037@387b8-036@092a8', '28_34' ],\n  [ '13_1', '038@001b2-038@016b6', '29_1' ],\n  [ '13_2', '038@016b6-038@028b8', '29_2' ],\n  [ '13_3', '038@028b8-038@044b5', '29_3' ],\n  [ '13_4', '038@044b5-038@057b8', '29_4' ],\n  [ '13_5', '038@057b8-038@072a3', '29_5' ],\n  [ '13_6', '038@072a3-038@084a6', '29_6' ],\n  [ '13_7', '038@084a6-038@097b8', '29_7' ],\n  [ '13_8', '038@097b8-038@111b4', '29_8' ],\n  [ '13_9', '038@111b4-038@125a1', '29_9' ],\n  [ '13_10', '038@125a1-038@138a3', '29_10' ],\n  [ '13_11', '038@138a3-038@149a2', '29_11' ],\n  [ '13_12', '038@149a2-038@159b3', '29_12' ],\n  [ '13_13', '038@159b3-038@170b8', '29_13' ],\n  [ '13_14', '038@170b8-038@181a2', '29_14' ],\n  [ '13_15', '038@181a2-038@194a4', '29_15' ],\n  [ '13_16', '038@194a4-038@206b5', '29_16' ],\n  [ '13_17', '038@206b5-038@219a2', '29_17' ],\n  [ '13_18', '038@219a2-038@231b1', '29_18' ],\n  [ '13_19', '038@231b1-038@242a7', '29_19' ],\n  [ '13_20', '038@242a7-038@251b5', '29_20' ],\n  [ '13_21', '038@251b5-038@264b4', '29_21' ],\n  [ '13_22', '038@264b4-038@279b4', '29_22' ],\n  [ '13_23', '038@279b4-038@291a5', '29_23' ],\n  [ '13_24', '038@291a5-038@305a2', '29_24' ],\n  [ '14', '039@001b1-020a8', '30' ],\n  [ '15_1', '039@020b2-039@033b2', '31_1' ],\n  [ '15_2', '039@033b2-039@048a6', '31_2' ],\n  [ '15_3', '039@048a6-039@064b7', '31_3' ],\n  [ '15_4', '039@064b7-039@077b1', '31_4' ],\n  [ '15_5', '039@077b1-039@091a1', '31_5' ],\n  [ '15_6', '039@091a1-039@105b8', '31_6' ],\n  [ '16_1', '039@106a1-039@120b5', '41_1' ],\n  [ '16_2', '039@120b5-039@133b7', '41_2' ],\n  [ '17', '039@133b7-151b8', '32' ],\n  [ '18', '039@151b8-164b8', '33' ],\n  [ '19', '039@164b8-167a6', '35' ],\n  [ '20', '039@167a6-167b4', '40' ],\n  [ '21', '039@167b4-169a2', '43' ],\n  [ '22', '039@169a2-170a4', '44' ],\n  [ '23', '039@170a4-170b5', '45' ],\n  [ '24', '039@170b5-171a6', '46' ],\n  [ '25', '039@171a6-172a1', '47' ],\n  [ '26', '039@172a1-174b8', '48' ],\n  [ '27', '039@175a1-248b7', '49' ],\n  [ '28', '039@248b7-258b7', '50' ],\n  [ '29', '039@258b7-262b4', '51' ],\n  [ '30', '039@262b4-269b6', '52' ],\n  [ '31', '039@269b6-270b5', '53' ],\n  [ '32', '039@270b5-276b2', '54' ],\n  [ '33', '039@276b2-279b2', '55' ],\n  [ '34', '039@279b2-282a2', '56' ],\n  [ '35', '039@282a2-283a1', '57' ],\n  [ '36', '039@283a2-283b2', '58' ],\n  [ '37', '039@283b2-284a2', '59' ],\n  [ '38', '039@284a3-285a6', '60' ],\n  [ '39_1', '040@001b2-040@014b2', '111_1' ],\n  [ '39_2', '040@014b2-040@026b1', '111_2' ],\n  [ '39_3', '040@026b1-040@038a6', '111_3' ],\n  [ '39_4', '040@038a6-040@049b7', '111_4' ],\n  [ '39_5', '040@049b7-040@061a4', '111_5' ],\n  [ '39_6', '040@061a4-040@073a4', '111_6' ],\n  [ '39_7', '040@073a4-040@086b7', '111_7' ],\n  [ '39_8', '040@086b7-040@098b8', '111_8' ],\n  [ '39_9', '040@098b8-040@113a2', '111_9' ],\n  [ '39_10', '040@113a2-040@127a1', '111_10' ],\n  [ '39_11', '040@127a1-040@142a8', '111_11' ],\n  [ '39_12', '040@142a8-040@157a7', '111_12' ],\n  [ '39_13', '040@157a7-040@172a1', '111_13' ],\n  [ '39_14', '040@172a1-040@185b8', '111_14' ],\n  [ '39_15', '040@185b8-040@199a1', '111_15' ],\n  [ '39_16', '040@199a1-040@212a7', '111_16' ],\n  [ '39_17', '040@212a7-040@226a6', '111_17' ],\n  [ '39_18', '040@226a6-040@238b8', '111_18' ],\n  [ '39_19', '040@238b8-040@252b8', '111_19' ],\n  [ '39_20', '040@252b8-040@266b8', '111_20' ],\n  [ '39_21', '040@266b8-040@279b7', '111_21' ],\n  [ '39_22', '040@279b7-040@295a5', '111_22' ],\n  [ '39_23', '040@295a5-040@310b5', '111_23' ],\n  [ '39_24', '040@310b5-040@326b1', '111_24' ],\n  [ '39_25', '040@326b1-040@342a2', '111_25' ],\n  [ '39_26', '040@342a2-040@308a6', '111_26' ],\n  [ '40_1', '041@001b2-041@014a2', '112_1' ],\n  [ '40_2', '041@014a2-041@028a3', '112_2' ],\n  [ '40_3', '041@028a3-041@041b7', '112_3' ],\n  [ '40_4', '041@041b7-041@055a5', '112_4' ],\n  [ '40_5', '041@055a5-041@069a7', '112_5' ],\n  [ '40_6', '041@069a7-041@081b5', '112_6' ],\n  [ '40_7', '041@081b5-041@093b2', '112_7' ],\n  [ '40_8', '041@093b2-041@104b6', '112_8' ],\n  [ '40_9', '041@104b6-041@117a8', '112_9' ],\n  [ '40_10', '041@117a8-041@133a7', '112_10' ],\n  [ '40_11', '041@133a7-041@147a6', '112_11' ],\n  [ '40_12', '041@147a6-041@162a6', '112_12' ],\n  [ '40_13', '041@162a6-041@177b7', '112_13' ],\n  [ '40_14', '041@177b7-041@192b4', '112_14' ],\n  [ '40_15', '041@192b4-041@206a4', '112_15' ],\n  [ '40_16', '041@206a4-041@219b5', '112_16' ],\n  [ '40_17', '041@219b5-041@231a8', '112_17' ],\n  [ '40_18', '041@231a8-041@246b6', '112_18' ],\n  [ '41_1', '041@247a1-041@259b4', '113_1' ],\n  [ '41_2', '041@259b4-041@273b8', '113_2' ],\n  [ '42', '041@274a1-290b8', '114' ],\n  [ '43', '041@291a1-311a8', '115' ],\n  [ '44_1', '042@001b4-042@014b1', '117_1' ],\n  [ '44_2', '042@014b1-042@026a1', '117_2' ],\n  [ '44_3', '042@026a1-042@037b5', '117_3' ],\n  [ '44_4', '042@037b5-042@049b8', '117_4' ],\n  [ '44_5', '042@049b8-042@060b6', '117_5' ],\n  [ '44_6', '042@060b6-042@072a5', '117_6' ],\n  [ '44_7', '042@072a5-042@083b3', '117_7' ],\n  [ '44_8', '042@083b3-042@093b5', '117_8' ],\n  [ '44_9', '042@093b5-042@104a2', '117_9' ],\n  [ '44_10', '042@104a2-042@114a7', '117_10' ],\n  [ '44_11', '042@114a7-042@125b5', '117_11' ],\n  [ '44_12', '042@125b5-042@138b5', '117_12' ],\n  [ '44_13', '042@138b5-042@151b5', '117_13' ],\n  [ '44_14', '042@151b5-042@164a5', '117_14' ],\n  [ '44_15', '042@164a5-042@175b3', '117_15' ],\n  [ '44_16', '042@175b3-042@187b4', '117_16' ],\n  [ '44_17', '042@187b4-042@199a2', '117_17' ],\n  [ '44_18', '042@199a2-042@211a7', '117_18' ],\n  [ '44_19', '042@211a7-042@222a5', '117_19' ],\n  [ '44_20', '042@222a5-042@233b2', '117_20' ],\n  [ '44_21', '042@233b2-042@245b7', '117_21' ],\n  [ '44_22', '042@245b7-042@257a7', '117_22' ],\n  [ '44_23', '042@257a7-042@269a6', '117_23' ],\n  [ '44_24', '042@269a6-042@281b7', '117_24' ],\n  [ '44_25', '042@281b7-042@290a8', '117_25' ],\n  [ '45_1', '042@290b1-042@302a3', '118_1' ],\n  [ '45_2', '042@302a3-042@312b2', '118_2' ],\n  [ '45_3', '042@312b2-042@323a8', '118_3' ],\n  [ '46_1', '043@001b2-043@016a6', '119_1' ],\n  [ '46_2', '043@016a6-043@031a3', '119_2' ],\n  [ '46_3', '043@031a3-043@046a1', '119_3' ],\n  [ '46_4', '043@046a1-043@060b3', '119_4' ],\n  [ '46_5', '043@060b3-043@074a5', '119_5' ],\n  [ '46_6', '043@074a5-043@087a7', '119_6' ],\n  [ '46_7', '043@087a7-043@099b3', '119_7' ],\n  [ '46_8', '043@099b3-043@113b8', '119_8' ],\n  [ '46_9', '043@113b8-043@126b2', '119_9' ],\n  [ '46_10', '043@126b2-043@138b8', '119_10' ],\n  [ '46_11', '043@138b8-043@153a7', '119_11' ],\n  [ '46_12', '043@153a7-043@166b6', '119_12' ],\n  [ '46_13', '043@166b6-043@180b2', '119_13' ],\n  [ '46_14', '043@180b2-043@194b5', '119_14' ],\n  [ '46_15', '043@194b5-043@207b4', '119_15' ],\n  [ '46_16', '043@207b4-043@220a5', '119_16' ],\n  [ '46_17', '043@220a5-043@232a4', '119_17' ],\n  [ '46_18', '043@232a4-043@239b8', '119_18' ],\n  [ '47_1', '043@240a1-043@254a5', '120_1' ],\n  [ '47_2', '043@254a5-043@267a1', '120_2' ],\n  [ '47_3', '043@267a1-043@278a6', '120_3' ],\n  [ '47_4', '043@278a6-043@289b7', '120_4' ],\n  [ '48', '043@290a1-300b8', '121' ],\n  [ '49', '043@301a1-302a7', '122' ],\n  [ '50', '043@302a8-304a8', '123' ],\n  [ '51_1', '044@001b1-044@020a1', '124_1' ],\n  [ '51_2', '044@020a1-044@040a1', '124_2' ],\n  [ '51_3', '044@040a1-044@059b8', '124_3' ],\n  [ '52_1', '044@060a1-044@074b1', '125_1' ],\n  [ '52_2', '044@074b1-044@089a8', '125_2' ],\n  [ '52_3', '044@089a8-044@105b7', '125_3' ],\n  [ '52_4', '044@105b7-044@121a1', '125_4' ],\n  [ '52_5', '044@121a1-044@138b7', '125_5' ],\n  [ '52_6', '044@138b7-044@156a8', '125_6' ],\n  [ '52_7', '044@156a8-044@171b5', '125_7' ],\n  [ '52_8', '044@171b5-044@186b8', '125_8' ],\n  [ '52_9', '044@186b8-0', '125_9' ],\n  [ '53_1', '044@207b2-044@220a7', '126_1' ],\n  [ '53_2', '044@220a7-044@233b2', '126_2' ],\n  [ '53_3', '044@233b2-044@245b6', '126_3' ],\n  [ '53_4', '044@245b6-044@260a2', '126_4' ],\n  [ '53_5', '044@260a2-044@270b7', '126_5' ],\n  [ '53_6', '044@270b7-044@281a1', '126_6' ],\n  [ '53_7', '044@281a1-044@293a5', '126_7' ],\n  [ '53_8', '044@293a5-044@306b1', '126_8' ],\n  [ '54', '044@306b1-313a8', '127' ],\n  [ '55_1', '045@001b2-045@022a1', '128_1' ],\n  [ '55_2', '045@022a1-045@035a8', '128_2' ],\n  [ '55_3', '045@035a8-045@049b5', '128_3' ],\n  [ '55_4', '045@049b5-045@061a1', '128_4' ],\n  [ '56_1', '045@061a2-045@071b2', '129_1' ],\n  [ '56_2', '045@071b2-045@084a1', '129_2' ],\n  [ '56_3', '045@084a1-045@097b1', '129_3' ],\n  [ '56_4', '045@097b1-045@112a1', '129_4' ],\n  [ '56_5', '045@112a1-045@126a2', '129_5' ],\n  [ '56_6', '045@126a2-045@141a2', '129_6' ],\n  [ '57_1', '045@141a2-045@151a7', '130_1' ],\n  [ '57_2', '045@151a7-045@162a3', '130_2' ],\n  [ '57_3', '045@162a3-045@174b2', '130_3' ],\n  [ '57_4', '045@174b2-045@185b3', '130_4' ],\n  [ '57_5', '045@185b3-045@197b5', '130_5' ],\n  [ '57_6', '045@197b5-045@209a4', '130_6' ],\n  [ '57_7', '045@209a4-045@220a4', '130_7' ],\n  [ '57_8', '045@220a4-045@232b3', '130_8' ],\n  [ '57_9', '045@232b3-045@242b4', '130_9' ],\n  [ '57_10', '045@242b4-045@254a2', '130_10' ],\n  [ '57_11', '045@254a2-045@265a1', '130_11' ],\n  [ '57_12', '045@265a1-045@278a4', '130_12' ],\n  [ '57_13', '045@278a4-045@289a8', '130_13' ],\n  [ '57_14', '045@289a8-045@303a2', '130_14' ],\n  [ '57_15', '045@303a2-045@313a8', '130_15' ],\n  [ '58_1', '046@001b2-046@014a1', '131_1' ],\n  [ '58_2', '046@014a1-046@027b3', '131_2' ],\n  [ '58_3', '046@027b3-046@044a7', '131_3' ],\n  [ '58_4', '046@044a7-046@056b6', '131_4' ],\n  [ '58_5', '046@056b6-046@068b7', '131_5' ],\n  [ '58_6', '046@068b7-046@083b8', '131_6' ],\n  [ '58_7', '046@083b8-046@098b8', '131_7' ],\n  [ '58_8', '046@098b8-046@113b5', '131_8' ],\n  [ '58_9', '046@113b5-046@129b8', '131_9' ],\n  [ '58_10', '046@129b8-046@145b4', '131_10' ],\n  [ '58_11', '046@145b4-046@161a1', '131_11' ],\n  [ '58_12', '046@161a1-046@180b1', '131_12' ],\n  [ '58_13', '046@180b1-046@198a2', '131_13' ],\n  [ '59', '046@198a2-212b3', '132' ],\n  [ '60', '046@212b3-217a1', '133' ],\n  [ '61_1', '046@217a2-046@228a4', '134_1' ],\n  [ '61_2', '046@228a4-046@239a5', '134_2' ],\n  [ '61_3', '046@239a5-046@251b2', '134_3' ],\n  [ '61_4', '046@251b2-046@265a6', '134_4' ],\n  [ '62_1', '046@265a7-046@275a5', '135_1' ],\n  [ '62_2', '046@275a5-046@285a7', '135_2' ],\n  [ '62_3', '046@285a7-046@295b8', '135_3' ],\n  [ '62_4', '046@295b8-046@307b8', '135_4' ],\n  [ '63', '046@308a1-316a8', '136' ],\n  [ '64_1', '047@001b1-047@015a1', '137_1' ],\n  [ '64_2', '047@015a1-047@027a1', '137_2' ],\n  [ '64_3', '047@027a1-047@040a5', '137_3' ],\n  [ '64_4', '047@040a5-047@053a8', '137_4' ],\n  [ '64_5', '047@053a8-047@065b7', '137_5' ],\n  [ '64_6', '047@065b7-047@077b5', '137_6' ],\n  [ '64_7', '047@077b5-047@091a7', '137_7' ],\n  [ '64_8', '047@091a7-047@105b1', '137_8' ],\n  [ '64_9', '047@105b1-047@120a8', '137_9' ],\n  [ '64_10', '047@120a8-047@131b4', '137_10' ],\n  [ '64_11', '047@131b4-047@145a1', '137_11' ],\n  [ '64_12', '047@145a1-047@159a2', '137_12' ],\n  [ '64_13', '047@159a2-047@172a1', '137_13' ],\n  [ '64_14', '047@172a1-047@185a6', '137_14' ],\n  [ '64_15', '047@185a6-047@196a7', '137_15' ],\n  [ '64_16', '047@196a7-047@208b2', '137_16' ],\n  [ '64_17', '047@208b2-047@220b8', '137_17' ],\n  [ '64_18', '047@220b8-047@232b8', '137_18' ],\n  [ '64_19', '047@232b8-047@245a3', '137_19' ],\n  [ '64_20', '047@245a3-047@259a4', '137_20' ],\n  [ '64_21', '047@259a4-047@270b4', '137_21' ],\n  [ '64_22', '047@270b4-047@282a3', '137_22' ],\n  [ '64_23', '047@282a3-047@292a8', '137_23' ],\n  [ '64_24', '047@292a8-047@303b7', '137_24' ],\n  [ '64_25', '047@303b7-047@315b8', '137_25' ],\n  [ '64_26', '047@315b8-047@328a8', '137_26' ],\n  [ '64_27', '047@328a8-047@343b1', '137_27' ],\n  [ '64_28', '047@343b1-048@001b1', '137_28' ],\n  [ '64_29', '048@001b1-048@013a7', '137_29' ],\n  [ '64_30', '048@013a7-048@025a3', '137_30' ],\n  [ '64_31', '048@025a3-048@036b4', '137_31' ],\n  [ '64_32', '048@036b4-048@049a5', '137_32' ],\n  [ '64_33', '048@049a5-048@062a2', '137_33' ],\n  [ '64_34', '048@062a2-048@074b4', '137_34' ],\n  [ '64_35', '048@074b4-048@086a2', '137_35' ],\n  [ '64_36', '048@086a2-048@097b4', '137_36' ],\n  [ '64_37', '048@097b4-048@109a8', '137_37' ],\n  [ '64_38', '048@109a8-048@122a1', '137_38' ],\n  [ '64_39', '048@122a1-048@135b6', '137_39' ],\n  [ '64_40', '048@135b6-048@148b7', '137_40' ],\n  [ '64_41', '048@148b7-048@162a7', '137_41' ],\n  [ '64_42', '048@162a7-048@172b4', '137_42' ],\n  [ '64_43', '048@172b4-048@183b4', '137_43' ],\n  [ '64_44', '048@183b4-048@195a3', '137_44' ],\n  [ '64_45', '048@195a3-048@206b2', '137_45' ],\n  [ '64_46', '048@206b2-048@218a8', '137_46' ],\n  [ '64_47', '048@218a8-048@229b1', '137_47' ],\n  [ '64_48', '048@229b1-048@241b3', '137_48' ],\n  [ '64_49', '048@241b3-048@253b2', '137_49' ],\n  [ '64_50', '048@253b2-048@264a4', '137_50' ],\n  [ '64_51', '048@264a4-048@274a6', '137_51' ],\n  [ '64_52', '048@274a6-048@287a1', '137_52' ],\n  [ '64_53', '048@287a1-048@299b8', '137_53' ],\n  [ '64_54', '048@299b8-048@311a7', '137_54' ],\n  [ '64_55', '048@311a7-048@323a3', '137_55' ],\n  [ '64_56', '048@323a3-048@332a7', '137_56' ],\n  [ '65_1', '049@001b3-049@014b3', '138_1' ],\n  [ '65_2', '049@014b3-049@026b2', '138_2' ],\n  [ '65_3', '049@026b2-049@040a7', '138_3' ],\n  [ '65_4', '049@040a7-049@050b6', '138_4' ],\n  [ '65_5', '049@050b6-049@062b2', '138_5' ],\n  [ '65_6', '049@062b2-049@073a6', '138_6' ],\n  [ '65_7', '049@073a6-049@084a2', '138_7' ],\n  [ '65_8', '049@084a2-049@095a3', '138_8' ],\n  [ '65_9', '049@095a3-049@106a6', '138_9' ],\n  [ '65_10', '049@106a6-049@116b1', '138_10' ],\n  [ '65_11', '049@116b1-049@127a1', '138_11' ],\n  [ '65_12', '049@127a1-049@137a2', '138_12' ],\n  [ '65_13', '049@137a2-0', '138_13' ],\n  [ '66', '049@147b7-148b5', '139' ],\n  [ '67', '049@148b5-149a6', '140' ],\n  [ '68_1', '049@149a5-049@163a6', '141_1' ],\n  [ '68_2', '049@163a6-049@175b2', '141_2' ],\n  [ '68_3', '049@175b2-049@189a7', '141_3' ],\n  [ '68_4', '049@189a7-049@204a2', '141_4' ],\n  [ '69_1', '049@204a2-049@214b7', '142_1' ],\n  [ '69_2', '049@214b7-049@225b7', '142_2' ],\n  [ '69_3', '049@225b7-049@237a6', '142_3' ],\n  [ '69_4', '049@237a6-049@247a6', '142_4' ],\n  [ '69_5', '049@247a6-049@256b6', '142_5' ],\n  [ '69_6', '049@256b6-049@267a1', '142_6' ],\n  [ '69_7', '049@267a1-049@278a8', '142_7' ],\n  [ '70', '049@278a8-279a8', '143' ],\n  [ '71', '049@279a8-282a8', '144' ],\n  [ '72_1', '050@001b3-050@013a8', '145_1' ],\n  [ '72_2', '050@013a8-050@026b7', '145_2' ],\n  [ '72_3', '050@026b7-050@038a7', '145_3' ],\n  [ '72_4', '050@038a7-050@050b1', '145_4' ],\n  [ '72_5', '050@050b1-050@062a8', '145_5' ],\n  [ '72_6', '050@062a8-050@076b1', '145_6' ],\n  [ '72_7', '050@076b1-050@089a3', '145_7' ],\n  [ '72_8', '050@089a3-050@099b1', '145_8' ],\n  [ '72_9', '050@099b1-050@110a7', '145_9' ],\n  [ '72_10', '050@110a7-050@122b4', '145_10' ],\n  [ '72_11', '050@122b4-050@133b6', '145_11' ],\n  [ '72_12', '050@133b6-050@145b2', '145_12' ],\n  [ '72_13', '050@145b2-050@159b1', '145_13' ],\n  [ '72_14', '050@159b1-050@170a3', '145_14' ],\n  [ '72_15', '050@170a3-050@180a4', '145_15' ],\n  [ '73', '050@180b1-184a2', '146' ],\n  [ '74_1', '050@184a3-050@195b4', '147_1' ],\n  [ '74_2', '050@195b4-050@206a5', '147_2' ],\n  [ '74_3', '050@206a5-050@218b4', '147_3' ],\n  [ '75', '050@218b5-239b6', '148' ],\n  [ '76_1', '050@240a1-050@253a4', '149_1' ],\n  [ '76_2', '050@253a4-050@265a7', '149_2' ],\n  [ '77_1', '050@265a8-050@278a4', '150_1' ],\n  [ '77_2', '050@278a4-050@292b5', '150_2' ],\n  [ '77_3', '050@292b5-050@305a4', '150_3' ],\n  [ '77_4', '050@305a4-050@317a8', '150_4' ],\n  [ '77_5', '050@317a8-050@331a7', '150_5' ],\n  [ '78_1', '051@001b3-051@012b4', '151_1' ],\n  [ '78_2', '051@012b4-051@023a2', '151_2' ],\n  [ '78_3', '051@023a2-051@034b4', '151_3' ],\n  [ '78_4', '051@034b4-051@045a1', '151_4' ],\n  [ '78_5', '051@045a1-051@055a1', '151_5' ],\n  [ '78_6', '051@055a1-051@065b6', '151_6' ],\n  [ '78_7', '051@065b6-051@076b8', '151_7' ],\n  [ '79_1', '051@077a1-051@089a7', '152_1' ],\n  [ '79_2', '051@089a7-051@104a1', '152_2' ],\n  [ '79_3', '051@104a1-051@116b4', '152_3' ],\n  [ '79_4', '051@116b4-051@131a6', '152_4' ],\n  [ '80_1', '051@131a7-051@144b7', '153_1' ],\n  [ '80_2', '051@144b7-051@156a7', '153_2' ],\n  [ '81_1', '051@156a8-051@169b1', '154_1' ],\n  [ '81_2', '051@169b1-051@183a1', '154_2' ],\n  [ '81_3', '051@183a1-051@196a2', '154_3' ],\n  [ '82', '051@196a2-204b8', '155' ],\n  [ '83_1', '051@205a1-051@214a2', '156_1' ],\n  [ '83_2', '051@214a2-051@225a1', '156_2' ],\n  [ '83_3', '051@225a1-051@234b4', '156_3' ],\n  [ '83_4', '051@234b4-051@245a6', '156_4' ],\n  [ '83_5', '051@245a6-051@255b3', '156_5' ],\n  [ '83_6', '051@255b3-051@269a8', '156_6' ],\n  [ '83_7', '051@269a8-051@279a7', '156_7' ],\n  [ '83_8', '051@279a7-051@299b7', '156_8' ],\n  [ '84', '051@299b7-311a6', '157' ],\n  [ '85', '051@311a7-320b4', '158' ],\n  [ '86', '051@320b4-321a8', '159' ],\n  [ '87', '052@001b1-006a4', '160' ],\n  [ '88', '052@006a5-006b4', '161' ],\n  [ '89_1', '052@006b5-052@018b6', '162_1' ],\n  [ '89_2', '052@018b6-052@033b4', '162_2' ],\n  [ '90', '052@033b4-093a6', '164' ],\n  [ '91_1', '052@093a7-052@105b8', '165_1' ],\n  [ '91_2', '052@105b8-052@119a6', '165_2' ],\n  [ '91_3', '052@119a6-052@136b1', '165_3' ],\n  [ '91_4', '052@136b1-052@151a4', '165_4' ],\n  [ '91_5', '052@151a4-052@164b1', '165_5' ],\n  [ '91_6', '052@164b1-052@178a4', '165_6' ],\n  [ '91_7', '052@178a4-0', '165_7' ],\n  [ '92_1', '052@189b7-052@201b5', '166_1' ],\n  [ '92_2', '052@201b5-052@215b3', '166_2' ],\n  [ '92_3', '052@215b3-052@226b2', '166_3' ],\n  [ '92_4', '052@226b2-052@238a5', '166_4' ],\n  [ '92_5', '052@238a5-052@248a2', '166_5' ],\n  [ '92_6', '052@248a2-052@257a2', '166_6' ],\n  [ '92_7', '052@257a2-052@268b4', '166_7' ],\n  [ '92_8', '052@268b4-052@277b5', '166_8' ],\n  [ '93', '052@277b5-278a7', '167' ],\n  [ '94', '052@278a8-279a2', '168' ],\n  [ '95', '052@279a2-292a7', '169' ],\n  [ '96_1', '053@001b3-053@015a2', '170_1' ],\n  [ '96_2', '053@015a2-053@029a1', '170_2' ],\n  [ '96_3', '053@029a1-053@042b1', '170_3' ],\n  [ '96_4', '053@042b1-053@054b7', '170_4' ],\n  [ '96_5', '053@054b7-053@066a3', '170_5' ],\n  [ '96_6', '053@066a3-053@078b1', '170_6' ],\n  [ '96_7', '053@078b1-053@092b1', '170_7' ],\n  [ '96_8', '053@092b1-053@104b2', '170_8' ],\n  [ '96_9', '053@104b2-053@118a8', '170_9' ],\n  [ '96_10', '053@118a8-053@130b6', '170_10' ],\n  [ '97_1', '053@130b7-053@145b5', '171_1' ],\n  [ '97_2', '053@145b5-053@159a8', '171_2' ],\n  [ '97_3', '053@159a8-053@173b8', '171_3' ],\n  [ '97_4', '053@173b8-053@187a4', '171_4' ],\n  [ '97_5', '053@187a4-053@199a8', '171_5' ],\n  [ '97_6', '053@199a8-053@209a4', '171_6' ],\n  [ '97_7', '053@209a4-053@222a1', '171_7' ],\n  [ '98', '053@222a1-230b3', '172' ],\n  [ '99', '053@230b3-231a5', '173' ],\n  [ '100', '053@231a5-285a1', '174' ],\n  [ '101_1', '053@285a2-053@298a4', '175_1' ],\n  [ '101_2', '053@298a4-053@310b7', '175_2' ],\n  [ '101_3', '053@310b7-053@326a8', '175_3' ],\n  [ '101_4', '053@326a8-053@343a4', '175_4' ],\n  [ '101_5', '053@343a4-053@359a8', '175_5' ],\n  [ '102', '054@001b1-010b3', '176' ],\n  [ '103', '054@010b3-023a4', '177' ],\n  [ '104_1', '054@023a5-054@037b4', '178_1' ],\n  [ '104_2', '054@037b4-054@051b8', '178_2' ],\n  [ '104_3', '054@051b8-054@065b6', '178_3' ],\n  [ '104_4', '054@065b6-054@078b5', '178_4' ],\n  [ '104_5', '054@078b5-054@091b3', '178_5' ],\n  [ '104_6', '054@091b3-059@100b7', '178_6' ],\n  [ '105_1', '054@106a3-054@118b7', '179_1' ],\n  [ '105_2', '054@118b7-054@130b8', '179_2' ],\n  [ '105_3', '054@130b8-054@144a7', '179_3' ],\n  [ '106', '054@144a7-148b2', '180' ],\n  [ '107', '054@148b2-163b8', '181' ],\n  [ '108', '054@164a1-171a6', '182' ],\n  [ '109', '054@171a6-175a6', '183' ],\n  [ '110', '054@175a6-178b4', '184' ],\n  [ '111_1', '054@178b5-054@188b1', '185_1' ],\n  [ '111_2', '054@188b1-054@200b1', '185_2' ],\n  [ '111_3', '054@200b1-054@213b5', '185_3' ],\n  [ '112_1', '054@213b1-054@225b2', '186_1' ],\n  [ '112_2', '054@225b2-054@236b2', '186_2' ],\n  [ '112_3', '054@236b2-054@247b1', '186_3' ],\n  [ '112_4', '054@247b1-054@260a5', '186_4' ],\n  [ '113_1', '054@260a6-054@272a7', '187_1' ],\n  [ '113_2', '054@272a7-054@283a8', '187_2' ],\n  [ '113_3', '054@283a8-054@295a8', '187_3' ],\n  [ '113_4', '054@295a8-054@305a1', '187_4' ],\n  [ '114', '054@305a1-307b7', '188' ],\n  [ '115', '054@307b8-312a3', '189' ],\n  [ '116', '055@001b1-005b2', '190' ],\n  [ '117', '055@005b3-007b5', '191' ],\n  [ '118_1', '055@007b6-055@026a8', '192_1' ],\n  [ '118_2', '055@026a8-055@046a7', '192_2' ],\n  [ '118_3', '055@046a7-055@064a6', '192_3' ],\n  [ '118_4', '055@064a6-055@080b5', '192_4' ],\n  [ '119_1', '055@080b6-055@094a6', '193_1' ],\n  [ '119_2', '055@094a6-055@107b6', '193_2' ],\n  [ '119_3', '055@107b6-055@122b4', '193_3' ],\n  [ '119_4', '055@122b4-055@138a8', '193_4' ],\n  [ '119_5', '055@138a8-055@154b3', '193_5' ],\n  [ '119_6', '055@154b3-055@170a7', '193_6' ],\n  [ '119_7', '055@170a7-055@184a7', '193_7' ],\n  [ '120_1', '055@184a8-055@195a7', '194_1' ],\n  [ '120_2', '055@195a7-055@211a4', '194_2' ],\n  [ '120_3', '055@211a4-055@229b3', '194_3' ],\n  [ '120_4', '055@229b3-055@249b3', '194_4' ],\n  [ '120_5', '055@249b3-055@260a3', '194_5' ],\n  [ '121', '055@260a3-261a1', '195' ],\n  [ '122', '055@261a1-265a6', '196' ],\n  [ '123_1', '055@265a8-055@278a4', '197_1' ],\n  [ '123_2', '055@278a4-055@291a3', '197_2' ],\n  [ '124_1', '055@291a4-055@302a5', '198_1' ],\n  [ '124_2', '055@302a5-055@314b6', '198_2' ],\n  [ '124_3', '055@314b6-055@325a7', '198_3' ],\n  [ '125_1', '056@001b3-056@090b1', '199_1' ],\n  [ '127', '056@011a4-112b2', '201' ],\n  [ '125_2', '056@019a4-056@037b2', '199_2' ],\n  [ '125_3', '056@037b2-056@051b4', '199_3' ],\n  [ '125_4', '056@051b4-056@064b1', '199_4' ],\n  [ '125_5', '056@064b1-056@076b5', '199_5' ],\n  [ '125_6', '056@076b5-056@090b1', '199_6' ],\n  [ '126', '056@090b1-111a4', '200' ],\n  [ '128', '056@112b2-122b1', '202' ],\n  [ '129_1', '056@122b2-056@137a5', '203_1' ],\n  [ '129_2', '056@137a5-056@150a1', '203_2' ],\n  [ '129_3', '056@150a1-056@164a8', '203_3' ],\n  [ '130', '056@164b1-180a8', '204' ],\n  [ '131_1', '056@180b1-056@192a4', '205_1' ],\n  [ '131_2', '056@192a4-056@206b1', '205_2' ],\n  [ '131_3', '056@206b1-056@217b8', '205_3' ],\n  [ '132', '056@217b8-227a6', '206' ],\n  [ '133', '056@227a7-229a1', '207' ],\n  [ '134_1', '056@229a2-056@242a7', '208_1' ],\n  [ '134_2', '056@242a7-056@254b8', '208_2' ],\n  [ '135', '056@255a1-275a4', '209' ],\n  [ '136', '056@275a5-277b6', '210' ],\n  [ '137', '056@277b7-282a3', '211' ],\n  [ '138', '056@282a3-282b5', '212' ],\n  [ '139', '056@282b5-298b3', '213' ],\n  [ '140', '056@298b3-304a3', '214' ],\n  [ '141', '056@304a3-307b3', '215' ],\n  [ '142_1', '056@307b4-056@319b3', '216_1' ],\n  [ '142_2', '056@319b3-056@331a3', '216_2' ],\n  [ '143', '056@331a4-336a8', '218' ],\n  [ '144_1', '057@001b2-057@014a6', '219_1' ],\n  [ '144_2', '057@014a6-057@026b8', '219_2' ],\n  [ '144_3', '057@026b8-057@039b8', '219_3' ],\n  [ '144_4', '057@039b8-057@056b2', '219_4' ],\n  [ '144_5', '057@056b2-057@072b8', '219_5' ],\n  [ '145', '057@072b8-089a3', '220' ],\n  [ '146', '057@089a4-092b6', '221' ],\n  [ '147', '057@092b6-104b1', '222' ],\n  [ '148', '057@104b1-106a7', '223' ],\n  [ '150_1', '057@106a7-057@124a7', '225_1' ],\n  [ '149', '057@106a7-108a2', '224' ],\n  [ '151', '057@124a7-127a6', '226' ],\n  [ '152', '057@127a6-131b7', '227' ],\n  [ '153', '057@131b7-140a8', '228' ],\n  [ '154', '057@140a8-142a7', '229' ],\n  [ '155', '057@142a7-143b8', '230' ],\n  [ '156_1', '057@144a1-057@160a2', '231_1' ],\n  [ '156_2', '057@160a2-057@169a8', '231_2' ],\n  [ '156_3', '057@169a8-057@181b6', '231_3' ],\n  [ '156_4', '057@181b6-057@193b4', '231_4' ],\n  [ '156_5', '057@193b4-057@206a6', '231_5' ],\n  [ '156_6', '057@206a6-0', '231_6' ],\n  [ '155_7', '057@218a3-057@143b8', '230_7' ],\n  [ '157', '057@229b4-233a3', '232' ],\n  [ '158', '057@233a3-234b2', '233' ],\n  [ '159_1', '057@234b3-057@245b7', '234_1' ],\n  [ '159_2', '057@245b7-057@257a7', '234_2' ],\n  [ '159_3', '057@257a7-057@269b2', '234_3' ],\n  [ '159_4', '057@269b2-057@281a5', '234_4' ],\n  [ '159_5', '057@281a5-0', '234_5' ],\n  [ '160', '057@295a7-311b4', '235' ],\n  [ '161', '057@311b4-327b4', '236' ],\n  [ '163_1', '057@327b4-058@086b8', '238_1' ],\n  [ '162', '057@327b4-339a8', '237' ],\n  [ '163_1', '058@001b2-058@013a6', '238_1' ],\n  [ '163_2', '058@013a6-058@024b6', '238_2' ],\n  [ '163_3', '058@024b6-058@037a5', '238_3' ],\n  [ '163_4', '058@037a5-058@050a2', '238_4' ],\n  [ '163_5', '058@050a2-058@061b8', '238_5' ],\n  [ '163_6', '058@061b8-058@074a3', '238_6' ],\n  [ '163_7', '058@074a3-058@086b8', '238_7' ],\n  [ '164', '058@087a1-093b8', '239' ],\n  [ '165_1', '058@094a1-058@104b8', '240_1' ],\n  [ '165_2', '058@104b8-058@115a1', '240_2' ],\n  [ '165_3', '058@115a1-058@124b5', '240_3' ],\n  [ '165_4', '058@124b5-058@134a4', '240_4' ],\n  [ '165_5', '058@134a4-058@142a1', '240_5' ],\n  [ '166_1', '058@142a2-058@155b7', '241_1' ],\n  [ '166_2', '058@155b7-058@169b7', '241_2' ],\n  [ '166_3', '058@169b7-058@184b3', '241_3' ],\n  [ '167', '058@184b4-195b1', '242' ],\n  [ '168', '058@195b1-196b8', '243' ],\n  [ '169', '058@197a1-198b8', '244' ],\n  [ '170', '058@199a1-211b7', '245' ],\n  [ '171_1', '058@211b8-058@225b2', '246_1' ],\n  [ '171_2', '058@225b2-058@239a7', '246_2' ],\n  [ '171_3', '058@239a7-058@252a3', '246_3' ],\n  [ '172_1', '058@252a3-058@267a5', '247_1' ],\n  [ '172_2', '058@267a5-058@282b5', '247_2' ],\n  [ '172_3', '058@282b5-058@295b2', '247_3' ],\n  [ '173_1', '058@295b3-058@307b3', '248_1' ],\n  [ '173_2', '058@307b3-058@319b7', '248_2' ],\n  [ '173_3', '058@319b7-058@331a6', '248_3' ],\n  [ '174', '059@001b1-134b7', '249' ],\n  [ '175', '059@134b8-257b4', '250' ],\n  [ '176_1', '059@257b4-059@300b1', '_1' ],\n  [ '176a', '059@257b4-295a3', '251' ],\n  [ '176b', '059@295a4-300b1', '252' ],\n  [ '177', '059@300b1-315a6', '253' ],\n  [ '178', '059@315a6-342a1', '254' ],\n  [ '179', '059@342a1-355a7', '255' ],\n  [ '180', '060@001b1-108a8', '256' ],\n  [ '181', '060@108b1-262a3', '257' ],\n  [ '182', '060@262a3-330b4', '258' ],\n  [ '183', '060@330b5-332b2', '259' ],\n  [ '184', '060@332b2-336a8', '260' ],\n  [ '185', '061@001b1-016a7', '261' ],\n  [ '186', '061@016a8-029b8', '262' ],\n  [ '187', '061@030a1-035b6', '263' ],\n  [ '188', '061@035b7-043b5', '264' ],\n  [ '189', '061@043b6-047b3', '265' ],\n  [ '190', '061@047b4-061a2', '266' ],\n  [ '191', '061@061a2-061b4', '267' ],\n  [ '192', '061@061b4-062a5', '268' ],\n  [ '193', '061@062a5-062b7', '269' ],\n  [ '194', '061@062b8-072a2', '270' ],\n  [ '195', '061@072a3-073a6', '271' ],\n  [ '196', '061@073a6-073b5', '272' ],\n  [ '197', '061@073b6-077a2', '273' ],\n  [ '198', '061@077a2-095b8', '274' ],\n  [ '199', '061@096a1-261b3', '275' ],\n  [ '200', '061@261b4-276b6', '276' ],\n  [ '201', '061@276b7-281b4', '277' ],\n  [ '202a', '061@281b5-302a6', '278' ],\n  [ '203_1', '061@302a7-062@091a3', '280_1' ],\n  [ '202b', '061@302a7-331a7', '279' ],\n  [ '204', '062@091a3-222a6', '281' ],\n  [ '205', '062@222a6-279a2', '282' ],\n  [ '206', '062@279a2-305a2', '283' ],\n  [ '207', '062@305a2-340a7', '284' ],\n  [ '208', '063@001b1-005a4', '285' ],\n  [ '209', '063@005a4-006b3', '286' ],\n  [ '210', '063@006b3-013a4', '287' ],\n  [ '211', '063@013a4-017a6', '288' ],\n  [ '212', '063@017a6-021a3', '289' ],\n  [ '213', '063@021a3-025b8', '290' ],\n  [ '214', '063@026a1-029a8', '291' ],\n  [ '215', '063@029a8-035b2', '292' ],\n  [ '216', '063@035b2-044b1', '293' ],\n  [ '217', '063@044b1-049b6', '294' ],\n  [ '218', '063@049b7-052b6', '295' ],\n  [ '219', '063@052b6-054b6', '296' ],\n  [ '220', '063@054b6-055a8', '297' ],\n  [ '221', '063@055a8-055b3', '298' ],\n  [ '223_1', '063@055b3-063@056a3', '300_1' ],\n  [ '222', '063@055b3-055b6', '299' ],\n  [ '224', '063@056a4-057a2', '301' ],\n  [ '225', '063@057a2-076b8', '302' ],\n  [ '226', '063@077a1-079b5', '303' ],\n  [ '227', '063@079b5-081b7', '304' ],\n  [ '228_1', '063@082a1-063@094a6', '305_1' ],\n  [ '228_2', '063@094a6-063@107a3', '305_2' ],\n  [ '228_3', '063@107a3-063@118b4', '305_3' ],\n  [ '228_4', '063@118b4-063@130a2', '305_4' ],\n  [ '228_5', '063@130a2-063@142b6', '305_5' ],\n  [ '228_6', '063@142b6-063@155a3', '305_6' ],\n  [ '228_7', '063@155a3-063@167b2', '305_7' ],\n  [ '228_8', '063@167b2-063@180a3', '305_8' ],\n  [ '228_9', '063@180a3-063@193a5', '305_9' ],\n  [ '228_10', '063@193a5-063@206b6', '305_10' ],\n  [ '228_11', '063@206b6-063@219b4', '305_11' ],\n  [ '228_12', '063@219b4-063@232a7', '305_12' ],\n  [ '228_13', '063@232a7-063@244a3', '305_13' ],\n  [ '228_14', '063@244a3-063@256a4', '305_14' ],\n  [ '228_15', '063@256a4-063@268b7', '305_15' ],\n  [ '228_16', '063@268b7-063@280b7', '305_16' ],\n  [ '228_17', '063@280b7-063@293a5', '305_17' ],\n  [ '228_18', '063@293a5-063@305b5', '305_18' ],\n  [ '228_19', '063@305b5-063@317a8', '305_19' ],\n  [ '228_20', '063@317a8-064@001b1', '305_20' ],\n  [ '228_21', '064@001b1-064@013b1', '305_21' ],\n  [ '228_22', '064@013b1-064@025b4', '305_22' ],\n  [ '228_23', '064@025b4-064@037a1', '305_23' ],\n  [ '228_24', '064@037a1-064@049b2', '305_24' ],\n  [ '228_25', '064@049b2-064@061b7', '305_25' ],\n  [ '228_26', '064@061b7-064@074b1', '305_26' ],\n  [ '228_27', '064@074b1-064@087a2', '305_27' ],\n  [ '228_28', '064@087a2-064@099b7', '305_28' ],\n  [ '228_29', '064@099b7-064@119a1', '305_29' ],\n  [ '228_30', '064@119a1-064@132a2', '305_30' ],\n  [ '228_31', '064@132a2-064@145a3', '305_31' ],\n  [ '228_32', '064@145a3-064@157b1', '305_32' ],\n  [ '228_33', '064@157b1-064@169a4', '305_33' ],\n  [ '228_34', '064@169a4-064@182a2', '305_34' ],\n  [ '228_35', '064@182a2-064@195b5', '305_35' ],\n  [ '228_36', '064@195b5-064@208b4', '305_36' ],\n  [ '228_37', '064@208b4-064@225a5', '305_37' ],\n  [ '228_38', '064@225a5-064@238b3', '305_38' ],\n  [ '228_39', '064@238b3-064@251a4', '305_39' ],\n  [ '228_40', '064@251a4-064@262b4', '305_40' ],\n  [ '228_41', '064@262b4-064@274b8', '305_41' ],\n  [ '228_42', '064@274b8-064@287a4', '305_42' ],\n  [ '228_43', '064@287a4-064@299b8', '305_43' ],\n  [ '228_44', '064@299b8-064@311a3', '305_44' ],\n  [ '228_45', '064@311a3-065@001b1', '305_45' ],\n  [ '228_46', '065@001b1-065@023b4', '305_46' ],\n  [ '228_47', '065@023b4-065@047b2', '305_47' ],\n  [ '228_48', '065@047b2-065@108b1', '305_48' ],\n  [ '228_49', '065@108b1-065@139b8', '305_49' ],\n  [ '228_50', '065@139b8-065@149a2', '305_50' ],\n  [ '228_51', '065@149a2-065@167b6', '305_51' ],\n  [ '228_52', '065@167b6-065@208b1', '305_52' ],\n  [ '228_53', '065@208b1-065@210b2', '305_53' ],\n  [ '228_54', '065@210b2-065@238a6', '305_54' ],\n  [ '228_55', '065@238a6-066@001a1', '305_55' ],\n  [ '228_56', '066@001a1-066@020a7', '305_56' ],\n  [ '228_57', '066@020a7-066@086a5', '305_57' ],\n  [ '228_58', '066@086a5-066@111b2', '305_58' ],\n  [ '228_59', '066@111b2-066@251b1', '305_59' ],\n  [ '229', '066@251b2-267b8', '306' ],\n  [ '230', '066@268a1-275a1', '307' ],\n  [ '231', '066@275a1-278b7', '308' ],\n  [ '232', '066@278b8-288a2', '309' ],\n  [ '233', '066@288a3-292a1', '310' ],\n  [ '234', '066@292a1-293b8', '311' ],\n  [ '235', '066@294a1-303b1', '312' ],\n  [ '236', '066@303b1-326a1', '313' ],\n  [ '237', '066@326a1-327b3', '314' ],\n  [ '238a', '066@327b3-332b3', '315' ],\n  [ '238_1', '066@327b4-066@335a5', '_1' ],\n  [ '238b', '066@332b3-335a5', '316' ],\n  [ '239', '066@335a5-336a6', '317' ],\n  [ '240', '066@336a7-337a7', '318' ],\n  [ '241_1', '067@001b2-067@021a1', '319_1' ],\n  [ '241_2', '067@021a1-067@041a1', '319_2' ],\n  [ '241_3', '067@041a1-067@061a1', '319_3' ],\n  [ '241_4', '067@061a1-067@081a1', '319_4' ],\n  [ '241_5', '067@081a1-067@101a1', '319_5' ],\n  [ '241_6', '067@101a1-067@121a1', '319_6' ],\n  [ '241_7', '067@121a1-067@134a5', '319_7' ],\n  [ '242', '067@134a6-135b7', '320' ],\n  [ '243', '067@135b7-136b5', '321' ],\n  [ '244', '067@136b6-139b2', '322' ],\n  [ '245', '067@139b3-140a7', '323' ],\n  [ '246', '067@140a7-152b8', '324' ],\n  [ '247', '067@152b8-159b5', '325' ],\n  [ '248', '067@159b6-169a4', '326' ],\n  [ '249', '067@169a5-169b8', '327' ],\n  [ '250', '067@169b8-171a6', '328' ],\n  [ '251', '067@171a6-171b4', '329' ],\n  [ '252', '067@171b5-175b3', '330' ],\n  [ '253', '067@175b4-178a2', '331' ],\n  [ '254', '067@178a2-183b5', '332' ],\n  [ '255', '067@183b6-184b1', '333' ],\n  [ '256', '067@184b1-185a5', '334' ],\n  [ '257', '067@185a5-202b1', '335' ],\n  [ '258', '067@202b2-208a2', '336' ],\n  [ '259', '067@208a2-211a5', '337' ],\n  [ '260', '067@211a5-213a3', '338' ],\n  [ '261', '067@213a3-215b2', '339' ],\n  [ '262', '067@215b2-218a7', '340' ],\n  [ '263', '067@218a7-218b1', '341' ],\n  [ '265_1', '067@218b2-067@223a3', '343_1' ],\n  [ '264', '067@218b2-218b5', '342' ],\n  [ '266', '067@223a3-270a2', '344' ],\n  [ '267', '067@270a3-271a7', '345' ],\n  [ '268', '067@271a7-274a5', '346' ],\n  [ '269', '067@274a5-275b6', '347' ],\n  [ '270', '067@275b7-276b3', '348' ],\n  [ '271', '067@276b3-277a5', '349' ],\n  [ '272', '067@277a5-281a1', '350' ],\n  [ '273', '067@281a1-285b1', '351' ],\n  [ '274', '067@285b1-288b2', '352' ],\n  [ '275', '067@288b2-291b7', '353' ],\n  [ '276', '067@291b7-292b5', '354' ],\n  [ '277', '067@292b5-294b2', '355' ],\n  [ '278', '067@294b3-316b1', '357' ],\n  [ '279', '067@316b1-328a8', '358' ],\n  [ '280_1', '068@001b1-068@018a5', '360_1' ],\n  [ '280_2', '068@018a5-068@034b1', '360_2' ],\n  [ '280_3', '068@034b1-068@046a1', '360_3' ],\n  [ '280_4', '068@046a1-068@057a2', '360_4' ],\n  [ '280_5', '068@057a2-068@070a7', '360_5' ],\n  [ '280_6', '068@070a7-068@082a7', '360_6' ],\n  [ '280_7', '068@082a7-068@097b1', '360_7' ],\n  [ '280_8', '068@097b1-068@111a8', '360_8' ],\n  [ '280_9', '068@111a8-068@126b6', '360_9' ],\n  [ '280_10', '068@126b6-068@140a6', '360_10' ],\n  [ '280_11', '068@140a6-068@150b3', '360_11' ],\n  [ '280_12', '068@150b3-068@161a6', '360_12' ],\n  [ '280_13', '068@161a6-068@171b8', '360_13' ],\n  [ '280_14', '068@171b8-068@184b1', '360_14' ],\n  [ '280_15', '068@184b1-068@198a3', '360_15' ],\n  [ '280_16', '068@198a3-068@210a7', '360_16' ],\n  [ '280_17', '068@210a7-068@220b5', '360_17' ],\n  [ '280_18', '068@220b5-068@233a8', '360_18' ],\n  [ '280_19', '068@233a8-068@245a5', '360_19' ],\n  [ '280_20', '068@245a5-068@256a4', '360_20' ],\n  [ '280_21', '068@256a4-068@269b7', '360_21' ],\n  [ '280_22', '068@269b7-068@283a1', '360_22' ],\n  [ '280_23', '068@283a1-068@293b2', '360_23' ],\n  [ '280_24', '068@293b2-068@307b5', '360_24' ],\n  [ '280_25', '068@307b5-068@319a5', '360_25' ],\n  [ '280_26', '068@319a5-069@001b1', '360_26' ],\n  [ '280_27', '069@001b1-069@014b4', '360_27' ],\n  [ '280_28', '069@014b4-069@025b1', '360_28' ],\n  [ '280_29', '069@025b1-069@038b2', '360_29' ],\n  [ '280_30', '069@038b2-069@052b8', '360_30' ],\n  [ '280_31', '069@052b8-069@067b6', '360_31' ],\n  [ '280_32', '069@067b6-069@082a8', '360_32' ],\n  [ '280_33', '069@082a8-069@095b6', '360_33' ],\n  [ '280_34', '069@095b6-069@111a2', '360_34' ],\n  [ '280_35', '069@111a2-069@122b4', '360_35' ],\n  [ '280_36', '069@122b4-069@133b7', '360_36' ],\n  [ '280_37', '069@133b7-069@147b6', '360_37' ],\n  [ '281_1', '069@148b1-069@165a4', '361_1' ],\n  [ '281_2', '069@165a4-069@177a6', '361_2' ],\n  [ '281_3', '069@177a6-069@194a2', '361_3' ],\n  [ '281_4', '069@194a2-069@208a2', '361_4' ],\n  [ '281_5', '069@208a2-069@225b3', '361_5' ],\n  [ '281_6', '069@225b3-069@240b3', '361_6' ],\n  [ '281_7', '069@240b3-069@253b2', '361_7' ],\n  [ '281_8', '069@253b2-069@267b7', '361_8' ],\n  [ '281_9', '069@267b7-069@281a3', '361_9' ],\n  [ '281_10', '069@281a3-069@300a2', '361_10' ],\n  [ '281_11', '069@300a2-069@315b5', '361_11' ],\n  [ '281_12', '069@315b5-069@333a5', '361_12' ],\n  [ '282_1', '070@001b2-070@013b4', '363_1' ],\n  [ '282_2', '070@013b4-070@029a5', '363_2' ],\n  [ '282_3', '070@029a5-070@041b3', '363_3' ],\n  [ '282_4', '070@041b3-070@053b7', '363_4' ],\n  [ '282_5', '070@053b7-070@068b2', '363_5' ],\n  [ '282_6', '070@068b2-070@080b6', '363_6' ],\n  [ '282_7', '070@080b6-070@094b3', '363_7' ],\n  [ '282_8', '070@094b3-070@105b4', '363_8' ],\n  [ '282_9', '070@105b4-070@120b7', '363_9' ],\n  [ '282_10', '070@120b7-070@132a5', '363_10' ],\n  [ '282_11', '070@132a5-070@144b7', '363_11' ],\n  [ '282_12', '070@144b7-070@158a1', '363_12' ],\n  [ '282_13', '070@158a1-070@170b5', '363_13' ],\n  [ '282_14', '070@170b5-070@183b5', '363_14' ],\n  [ '282_15', '070@183b5-070@197b6', '363_15' ],\n  [ '282_16', '070@197b6-070@212a8', '363_16' ],\n  [ '282_17', '070@212a8-070@226a8', '363_17' ],\n  [ '282_18', '070@226a8-070@243b4', '363_18' ],\n  [ '282_19', '070@243b4-070@258a5', '363_19' ],\n  [ '282_20', '070@258a5-070@274a3', '363_20' ],\n  [ '282_21', '070@274a3-070@290a3', '363_21' ],\n  [ '282_22', '070@290a3-070@309b7', '363_22' ],\n  [ '283', '070@309b7-313b5', '364' ],\n  [ '284', '070@313b6-315b5', '365' ],\n  [ '285', '070@315b6-323a8', '366' ],\n  [ '286', '071@001b1-022b3', '367' ],\n  [ '287', '071@022b4-032a8', '368' ],\n  [ '288', '071@032b1-052b6', '369' ],\n  [ '289', '071@052b7-058b4', '370' ],\n  [ '290', '071@058b4-074b4', '371' ],\n  [ '291', '071@074b4-091b5', '372' ],\n  [ '292_1', '071@091b6-071@107b5', '373_1' ],\n  [ '292_2', '071@107b5-071@123b3', '373_2' ],\n  [ '292_3', '071@123b3-071@138b2', '373_3' ],\n  [ '292_4', '071@138b2-071@153b6', '373_4' ],\n  [ '292_5', '071@153b6-071@168b1', '373_5' ],\n  [ '292_6', '071@168b1-071@189b7', '373_6' ],\n  [ '292_7', '071@189b7-071@203b8', '373_7' ],\n  [ '293', '071@204a1-215b8', '374' ],\n  [ '294', '071@215b8-224a1', '375' ],\n  [ '295', '071@224a1-229a2', '376' ],\n  [ '296', '071@229a2-242a2', '377' ],\n  [ '297', '071@242a2-289b8', '378' ],\n  [ '298', '071@289b8-294a7', '380' ],\n  [ '299', '072@001b1-274a6', '61' ],\n  [ '299', '073@001b1-285a5', '61' ],\n  [ '299', '074@001b1-302a7', '61' ],\n  [ '299', '075@001b1-257b3', '61' ],\n  [ '299', '076@001b1-296a3', '61' ],\n  [ '299', '077@001b1-281a6', '61' ],\n  [ '300', '078@001b1-051a3', '62' ],\n  [ '301', '078@051a3-112b6', '63' ],\n  [ '302', '078@112b6-235b6', '64' ],\n  [ '303', '078@235b6-276a2', '65' ],\n  [ '304', '078@276a3-316a8', '66' ],\n  [ '305', '079@001b1-077b3', '67' ],\n  [ '306', '079@077b4-161b8', '68' ],\n  [ '307', '079@161b8-189b8', '69' ],\n  [ '308', '079@189b8-213b1', '70' ],\n  [ '309', '079@213b1-225b7', '71' ],\n  [ '310', '079@225b8-295a2', '72' ],\n  [ '311', '079@295a2-340a3', '73' ],\n  [ '311', '080@001b1-252a6', '73' ],\n  [ '312', '080@252a6-288b6', '74' ],\n  [ '313', '080@288b6-302a5', '75' ],\n  [ '314', '080@302a6-357a2', '76' ],\n  [ '315', '081@001b1-188a4', '77' ],\n  [ '316', '081@188a4-257a5', '78' ],\n  [ '317', '081@257a5-291b2', '79' ],\n  [ '318', '081@291b3-327a8', '80' ],\n  [ '319', '082@001b1-019b3', '81' ],\n  [ '320', '082@019b4-038b8', '82' ],\n  [ '321', '082@039a1-077a7', '83' ],\n  [ '322', '082@077a7-128b7', '84' ],\n  [ '323', '082@128b8-147b3', '85' ],\n  [ '324', '082@147b3-172a4', '86' ],\n  [ '325', '082@172a4-203b1', '87' ],\n  [ '326', '082@203b1-218a7', '88' ],\n  [ '327', '082@218a7-229a8', '89' ],\n  [ '328', '082@229a8-241b5', '90' ],\n  [ '329', '082@241b5-248b8', '91' ],\n  [ '330', '082@249a1-253a5', '92' ],\n  [ '331', '082@253a6-272a1', '93' ],\n  [ '332', '082@272a2-295b5', '94' ],\n  [ '333', '082@295b5-300b7', '95' ],\n  [ '334', '082@300b7-322b7', '96' ],\n  [ '335', '082@322b7-351a8', '97' ],\n  [ '335', '083@001b1-027a3', '97' ],\n  [ '336', '083@027a3-029b8', '98' ],\n  [ '337', '083@030a1-074b6', '99' ],\n  [ '338', '083@074b6-102b7', '100' ],\n  [ '339', '083@102b7-113a1', '101' ],\n  [ '340', '083@113a1-125b4', '102' ],\n  [ '341', '083@125b5-128b5', '103' ],\n  [ '342', '083@128b5-164b6', '104' ],\n  [ '343', '083@164b6-189b5', '105' ],\n  [ '344', '083@189b5-197a3', '106' ],\n  [ '345', '083@197a3-226a8', '107' ],\n  [ '346', '083@226a8-277a1', '108' ],\n  [ '347', '083@277a1-303a4', '109' ],\n  [ '348', '083@303a4-327a7', '110' ],\n  [ '349', '084@001b1-014a4', '385' ],\n  [ '350', '084@015a1-024a2', '386' ],\n  [ '351', '084@025a1-144a5', '387' ],\n  [ '352a', '084@145a1-161b5', '388' ],\n  [ '352b', '084@161b6-164a1', '389' ],\n  [ '353', '084@164a1-168a5', '390' ],\n  [ '354a', '084@168a5-213a2', '391' ],\n  [ '354b', '084@213a2-234b7', '392' ],\n  [ '355a', '084@235a1-248a8', '440a' ],\n  [ '355b', '084@248a8-266a4', '440b' ],\n  [ '356', '084@266a4-304b6', '441' ],\n  [ '357', '084@304b6-334a3', '442' ],\n  [ '358', '085@001b1-007b1', '443' ],\n  [ '359', '085@007b2-048a5', '444' ],\n  [ '360', '085@048a5-054b7', '445' ],\n  [ '361', '085@055a1-090b8', '393' ],\n  [ '362', '085@091a1-221b8', '394' ],\n  [ '363', '085@222a1-348b8', '395' ],\n  [ '364', '085@349a1-362a2', '396' ],\n  [ '365', '086@001b1-145b8', '397' ],\n  [ '366', '086@146a1-197b8', '398' ],\n  [ '367', '086@198a1-232b2', '399' ],\n  [ '368a', '086@232b2-240b8', '402' ],\n  [ '368b', '086@241a1-252a7', '400' ],\n  [ '369', '086@252a8-261a7', '401' ],\n  [ '370', '086@261a7-262a1', '404' ],\n  [ '371a', '086@262a1-358a3', '405a' ],\n  [ '371b', '086@358a3-386a8', '405b' ],\n  [ '372', '087@001b1-004a2', '406' ],\n  [ '373', '087@004a2-012a2', '407' ],\n  [ '374', '087@012a2-015b1', '408' ],\n  [ '375', '087@015b1-018a3', '409' ],\n  [ '376', '087@018a3-019b2', '410' ],\n  [ '377', '087@019b2-024b8', '411' ],\n  [ '378', '087@024b8-030a7', '412' ],\n  [ '379', '087@030a7-033a5', '413' ],\n  [ '380', '087@033a6-036b1', '414' ],\n  [ '381', '087@036b1-038a1', '415' ],\n  [ '382', '087@038a1-039b2', '416' ],\n  [ '383', '087@039b2-041a4', '417' ],\n  [ '384', '087@041a4-042b3', '418' ],\n  [ '385', '087@042b3-045b7', '419' ],\n  [ '386', '087@045b7-047b1', '420' ],\n  [ '387', '087@047b1-048b3', '421' ],\n  [ '388', '087@048b4-050a8', '422' ],\n  [ '389', '087@050b1-052a6', '423' ],\n  [ '390', '087@052a6-054b3', '424' ],\n  [ '391', '087@054b3-056b7', '425' ],\n  [ '392', '087@056b8-058b6', '426' ],\n  [ '393', '087@058b6-060a1', '427' ],\n  [ '394', '087@060a1-063b2', '428' ],\n  [ '395', '087@063b3-065a6', '429' ],\n  [ '396', '087@065a6-066b5', '431' ],\n  [ '397', '087@066b5-067b3', '432' ],\n  [ '398', '087@067b3-069a1', '430' ],\n  [ '399', '087@069a2-070b8', '434' ],\n  [ '400', '087@071a1-072b8', '433' ],\n  [ '401', '087@072b8-077b8', '436' ],\n  [ '402', '087@078a1-080a3', '437' ],\n  [ '403', '087@080a3-082a4', '438' ],\n  [ '404', '087@082a4-093a7', '403a' ],\n  [ '405', '087@093a7-095a4', '403b' ],\n  [ '406', '087@095a4-126a5', '439' ],\n  [ '407', '087@126a6-152a3', '446' ],\n  [ '408a', '087@152a3-155b5', '447' ],\n  [ '408b', '087@155b5-160b5', '448' ],\n  [ '409', '087@160b5-165b5', '449' ],\n  [ '410', '087@165b5-216b3', '450' ],\n  [ '411', '087@216b3-243a7', '451' ],\n  [ '412', '087@243a7-285b7', '452' ],\n  [ '413', '087@285b7-327a8', '453' ],\n  [ '414a', '088@001b1-013a8', '454' ],\n  [ '414b', '088@013b1-015b8', '456' ],\n  [ '414c', '088@016a1-018a7', '455' ],\n  [ '415', '088@018b1-030a2', '457' ],\n  [ '416', '088@030a2-032a8', '458' ],\n  [ '417', '088@032b1-046b4', '459' ],\n  [ '418', '088@046b5-048a3', '460' ],\n  [ '419', '088@048a4-050a6', '461' ],\n  [ '420', '088@050a8-093b8', '462' ],\n  [ '421', '088@094a1-097b8', '463' ],\n  [ '422', '088@098a1-165b7', '464' ],\n  [ '423', '088@165b7-177a4', '466' ],\n  [ '424', '088@177a5-252a6', '468' ],\n  [ '425', '088@252b1-306a6', '467' ],\n  [ '426', '088@306a7-310b4', '470' ],\n  [ '427', '088@310b4-315a1', '469' ],\n  [ '428', '088@315a1-337a6', '474' ],\n  [ '429', '088@337b1-371a6', '473' ],\n  [ '430', '089@001b1-044a6', '475' ],\n  [ '431', '089@044b1-283a8', '476' ],\n  [ '432', '089@283b1-285a5', '477' ],\n  [ '433', '089@285a5-290a2', '478' ],\n  [ '434', '089@290a3-294a8', '479' ],\n  [ '435', '089@294b1-297b2', '480' ],\n  [ '436', '089@297b3-314a8', '481' ],\n  [ '437', '089@314b1-320a5', '482' ],\n  [ '438a', '089@320a5-323a7', '483' ],\n  [ '438b', '089@323a7-323a8', '484' ],\n  [ '439', '090@001b1-028b8', '485' ],\n  [ '440', '090@029a1-030b8', '487' ],\n  [ '441', '090@031a1-053a8', '488' ],\n  [ '442', '090@054a1-056a1', '486' ],\n  [ '443', '090@056a1-058b8', '489' ],\n  [ '444', '090@059a1-102a8', '490' ],\n  [ '445', '090@102b1-119b3', '491' ],\n  [ '446', '090@119b3-131a4', '497' ],\n  [ '447', '090@131a5-144a1', '492' ],\n  [ '448', '090@144a1-150b6', '494' ],\n  [ '449', '090@151a1-154b2', '493' ],\n  [ '450', '090@154b2-155a1', '495' ],\n  [ '451', '090@155a1-186b8', '498' ],\n  [ '452', '090@187a1-190b8', '501' ],\n  [ '453', '090@191a1-250a8', '502' ],\n  [ '454a', '091@001b1-159b7', '504' ],\n  [ '454b', '091@159b8-297a8', '505' ],\n  [ '454c', '091@297b1-306a8', '506' ],\n  [ '455', '092@001b1-053b1', '507' ],\n  [ '456a', '092@053b1-095b1', '508' ],\n  [ '456b', '092@095b1-095b8', '509' ],\n  [ '457', '092@095b8-151a8', '510' ],\n  [ '458', '092@151b1-155b8', '511' ],\n  [ '459', '092@156a1-181a5', '512' ],\n  [ '460', '092@181a5-285b5', '513' ],\n  [ '461', '092@285b5-293b7', '514' ],\n  [ '462', '092@293b8-333a5', '517' ],\n  [ '463', '093@001b1-081b8', '515' ],\n  [ '464', '093@082a1-082b7', '516' ],\n  [ '465', '093@083a1-117a8', '518' ],\n  [ '466', '093@117b1-229b8', '519' ],\n  [ '467', '093@230a1-293b2', '520' ],\n  [ '468', '093@293b2-303b6', '523' ],\n  [ '469', '093@303b6-309b8', '524' ],\n  [ '470', '094@001b1-163b7', '521' ],\n  [ '471', '094@163b7-168b4', '525' ],\n  [ '472', '094@168b4-169b8', '779' ],\n  [ '473', '094@170a1-174b2', '526' ],\n  [ '474', '094@174b3-245b8', '527' ],\n  [ '475', '094@246a1-271b8', '528' ],\n  [ '476', '094@272a1-280b6', '529' ],\n  [ '477', '094@280b7-283b2', '530' ],\n  [ '478', '094@283b2-303a7', '532' ],\n  [ '479a', '095@001b1-002b2', '535' ],\n  [ '479b', '095@002b2-003a3', '630' ],\n  [ '480a', '095@003a3-009b1', '533' ],\n  [ '480b', '095@009b1-013b1', '656' ],\n  [ '481', '095@013b1-013b2', '559' ],\n  [ '482', '095@013b3-013b7', '560' ],\n  [ '483', '095@013b8-014a4', '680' ],\n  [ '485a', '095@015a5-015a8', '711' ],\n  [ '485b', '095@015a8-017a3', '541' ],\n  [ '486', '095@017a3-019b4', '540' ],\n  [ '487', '095@019b4-021a6', '539' ],\n  [ '488', '095@021a6-025a1', '537' ],\n  [ '489', '095@025a1-029a4', '538' ],\n  [ '490a', '095@029a4-029b2', '708' ],\n  [ '490b', '095@029b2-029b5', '709' ],\n  [ '491', '095@029b5-029b8', '561' ],\n  [ '492', '095@029b8-030a1', '562' ],\n  [ '493', '095@030a2-030a3', '563' ],\n  [ '494', '095@030a3-033b4', '543' ],\n  [ '495', '095@033b4-036b3', '570' ],\n  [ '496', '095@036b3-037b4', '672' ],\n  [ '497', '095@037b4-039b1', '556' ],\n  [ '498', '095@039b1-040b7', '557' ],\n  [ '499', '095@040b7-045a4', '558' ],\n  [ '500', '095@045a5-305a8', '571' ],\n  [ '501', '096@001b1-014a5', '572' ],\n  [ '502', '096@014a5-014b8', '579' ],\n  [ '503', '096@014b8-015a8', '580' ],\n  [ '504', '096@015b1-015b8', '573' ],\n  [ '505', '096@015b8-016b1', '574' ],\n  [ '506', '096@016b2-016b5', '575' ],\n  [ '507', '096@016b6-016b7', '576' ],\n  [ '508', '096@017a1-017a5', '577' ],\n  [ '509', '096@017a5-017a8', '578' ],\n  [ '510', '096@018a1-019b3', '581' ],\n  [ '511', '096@019b3-020b8', '582' ],\n  [ '512', '096@021a1-167b8', '583' ],\n  [ '513', '096@168a1-302a8', '584' ],\n  [ '514', '097@001b1-067a7', '585' ],\n  [ '515', '097@068a1-094a8', '586' ],\n  [ '516', '097@095a1-125b7', '587' ],\n  [ '517', '097@125b7-147b6', '589' ],\n  [ '518', '097@147b6-159b3', '590' ],\n  [ '519', '097@159b3-166a8', '591' ],\n  [ '520', '097@167a1-168b5', '592' ],\n  [ '521a', '097@168b5-176a4', '593' ],\n  [ '521b', '097@176a4-196b1', '594' ],\n  [ '521c', '097@196b1-197b1', '766' ],\n  [ '522', '097@197b1-198a4', '767' ],\n  [ '523', '097@198a4-206a8', '789' ],\n  [ '524', '097@206a8-207a3', '641' ],\n  [ '525', '097@207a4-207b8', '599' ],\n  [ '526', '097@208a1-209b4', '598' ],\n  [ '527', '097@209b4-210a5', '763' ],\n  [ '528', '097@210a6-215b8', '595' ],\n  [ '529', '097@216a1-219b6', '596' ],\n  [ '530', '097@219b6-220a5', '588' ],\n  [ '531', '097@220a6-225b1', '554' ],\n  [ '532', '097@225b1-226b8', '522' ],\n  [ '533', '097@227a1-231b7', '623' ],\n  [ '534a', '097@231b7-236b8', '625' ],\n  [ '534b', '097@237a1-244b8', '622' ],\n  [ '535', '097@244b8-247a4', '626' ],\n  [ '536', '097@247a4-248a7', '624' ],\n  [ '537', '097@248a7-257a3', '618' ],\n  [ '538a', '097@257a4-263a7', '619' ],\n  [ '538b', '097@263a7-268a6', '620' ],\n  [ '538c', '097@268a6-274a3', '621' ],\n  [ '539', '097@274a3-282b6', '627' ],\n  [ '540a', '097@282b7-283a7', '650' ],\n  [ '540b', '097@283a8-283b1', '651' ],\n  [ '541', '097@283b1-284a2', '653' ],\n  [ '542', '097@284a3-284a4', '652' ],\n  [ '543', '097@284a4-284b2', '648' ],\n  [ '544', '097@284b2-284b3', '654' ],\n  [ '545', '097@284b3-285b2', '649' ],\n  [ '546', '097@285b3-286a5', '657' ],\n  [ '547', '097@286a5-286b6', '643' ],\n  [ '548a', '097@286b6-287a5', '741' ],\n  [ '548b', '097@287a5-288b3', '548' ],\n  [ '548c', '097@288b3-299a7', '536' ],\n  [ '549', '097@299a7-306a3', '629' ],\n  [ '550', '097@306a4-308b3', '545' ],\n  [ '551', '097@308b3-309b2', '546' ],\n  [ '552', '097@309b2-309b5', '547' ],\n  [ '553', '097@309b6-309b7', '804' ],\n  [ '554', '097@309b7-310a2', '628' ],\n  [ '555', '097@310a2-310a3', '531' ],\n  [ '556a', '097@310a3-310a5', '805' ],\n  [ '556b', '097@310a5-310b1', '806' ],\n  [ '556c', '097@310b1-310b7', '807' ],\n  [ '557', '097@310b7-311a1', '808' ],\n  [ '558', '097@311a1-311a3', '679' ],\n  [ '559', '097@311a3-311a6', '751' ],\n  [ '560', '097@311a6-311b5', '749' ],\n  [ '561a', '097@311b6-311b8', '750' ],\n  [ '561b', '097@312a1-312a4', '678' ],\n  [ '562a', '097@312a4-312a6', '742' ],\n  [ '562b', '097@312a7-312b1', '743' ],\n  [ '562c', '097@312b1-312b4', '744' ],\n  [ '562d', '097@312b4-312b7', '745' ],\n  [ '563', '097@312b7-313a2', '746' ],\n  [ '564', '097@313a3-313a6', '747' ],\n  [ '565', '097@313a6-313a8', '748' ],\n  [ '566', '097@313a8-313b3', '809' ],\n  [ '567', '097@313b3-313b5', '810' ],\n  [ '568', '097@313b5-313b6', '811' ],\n  [ '569', '097@313b7-314a5', '567' ],\n  [ '570', '097@314a5-314a8', '812' ],\n  [ '571', '097@314b1-314b2', '813' ],\n  [ '572', '097@314b2-314b4', '814' ],\n  [ '573', '097@314b4-314b6', '815' ],\n  [ '574', '097@314b6-315a1', '816' ],\n  [ '575', '097@315a1-315a2', '817' ],\n  [ '576', '097@315a2-315a3', '818' ],\n  [ '577', '097@315a4-315a7', '819' ],\n  [ '578', '097@315a7-315a8', '820' ],\n  [ '579', '097@315a8-315b3', '821' ],\n  [ '580', '097@315b3-315b5', '822' ],\n  [ '581', '097@315b5-315b8', '823' ],\n  [ '582', '097@315b8-316a4', '824' ],\n  [ '583', '097@316a4-316a7', '825' ],\n  [ '584', '097@316a7-316a8', '826' ],\n  [ '585', '097@316a8-316b2', '827' ],\n  [ '586', '097@316b3-316b5', '828' ],\n  [ '587', '097@316b5-316b6', '829' ],\n  [ '588', '097@316b6-316b8', '830' ],\n  [ '589', '097@316b8-317a2', '831' ],\n  [ '590', '097@317a2-317a3', '832' ],\n  [ '591', '097@317a4-317a6', '833' ],\n  [ '594', '097@317b2-317b6', '773' ],\n  [ '595', '097@317b6-317b8', '604' ],\n  [ '596', '097@317b8-318a4', '605' ],\n  [ '597', '097@318a4-318a6', '606' ],\n  [ '598', '097@318a6-318b1', '607' ],\n  [ '599', '097@318b1-319a1', '608' ],\n  [ '600', '097@319a1-319a2', '609' ],\n  [ '601', '097@319a2-319a5', '610' ],\n  [ '602', '097@319a5-319a8', '611' ],\n  [ '603', '097@319a8-319b1', '612' ],\n  [ '604', '097@319b1-319b4', '613' ],\n  [ '605', '097@319b4-319b5', '614' ],\n  [ '606', '097@319b6-319b6', '615' ],\n  [ '607', '097@319b6-319b8', '616' ],\n  [ '608', '097@319b8-320a7', '617' ],\n  [ '609b', '098@001b1-8@1b1', '565' ],\n  [ '609a', '098@001b1-8@1b1', '564' ],\n  [ '610', '098@001b1-8@1b1', '710' ],\n  [ '611', '098@002a4-002b2', '601' ],\n  [ '612', '098@002b3-003a4', '768' ],\n  [ '613a', '098@003a4-003a6', '655' ],\n  [ '613b', '098@003a6-004a2', '803' ],\n  [ '614a', '098@004a3-056b8', '632' ],\n  [ '614b', '098@056b8-058b3', '602' ],\n  [ '614c', '098@058b3-060a5', '544' ],\n  [ '614d', '098@060a5-061b1', '765' ],\n  [ '615', '098@061b1-062a3', '646' ],\n  [ '616', '098@062a3-063a6', '635' ],\n  [ '617a', '098@063a6-064b2', '739' ],\n  [ '617b', '098@064b2-064b7', '550' ],\n  [ '617c', '098@064b7-065a2', '740' ],\n  [ '618', '098@065a2-066a6', '637' ],\n  [ '619', '098@066a6-067b4', '597' ],\n  [ '620', '098@067b5-069a5', '647' ],\n  [ '621', '098@069a5-070a6', '636' ],\n  [ '622', '098@070a6-070b6', '658' ],\n  [ '623', '098@070b6-072a5', '638' ],\n  [ '624', '098@072a6-073b5', '640' ],\n  [ '625', '098@073b6-075a6', '549' ],\n  [ '626', '098@075a7-077b2', '634' ],\n  [ '627', '098@077b2-082b2', '642' ],\n  [ '628', '098@082b2-085b4', '683' ],\n  [ '629', '098@085b4-086a1', '639' ],\n  [ '630', '098@086a1-086b5', '552' ],\n  [ '631', '098@086b5-087b1', '603' ],\n  [ '632', '098@087b1-089b3', '661' ],\n  [ '633', '098@089b4-091b2', '631' ],\n  [ '634', '098@091b2-093b4', '542' ],\n  [ '635', '098@093b4-096a2', '555' ],\n  [ '636', '098@096a2-110b3', '659' ],\n  [ '637', '098@110b3-134a7', '660' ],\n  [ '638', '098@134a8-137a3', '662' ],\n  [ '639', '098@137a3-139a4', '663' ],\n  [ '640', '098@139a4-142a1', '664' ],\n  [ '641', '098@142a1-145b5', '665' ],\n  [ '642', '098@145b5-148a5', '666' ],\n  [ '643', '098@148a5-151b1', '667' ],\n  [ '644', '098@151b1-153b7', '668' ],\n  [ '645', '098@153b7-155b8', '669' ],\n  [ '646', '098@155b8-157b5', '737' ],\n  [ '647', '098@157b6-159a1', '670' ],\n  [ '648', '098@159a2-159b2', '671' ],\n  [ '649', '098@159b2-161a8', '801' ],\n  [ '650', '098@161a8-170a5', '682' ],\n  [ '651', '098@170a5-184b4', '685' ],\n  [ '652', '098@184b4-198b3', '686' ],\n  [ '653', '098@198b3-203b3', '687' ],\n  [ '654', '098@203b3-204a4', '688' ],\n  [ '655', '098@204a4-210a7', '696' ],\n  [ '656', '098@210a8-211a4', '695' ],\n  [ '657', '098@211a5-214b4', '689' ],\n  [ '658', '098@214b4-217b4', '690' ],\n  [ '659a', '098@217b4-222a3', '692' ],\n  [ '659b', '098@222a3-223a5', '693' ],\n  [ '660', '098@223a5-225a5', '694' ],\n  [ '661', '098@225a5-228a1', '697' ],\n  [ '662', '098@228a1-228a8', '698' ],\n  [ '663', '098@228b1-228b7', '700' ],\n  [ '664', '098@228b7-229a4', '699' ],\n  [ '665', '098@229a4-236a2', '701' ],\n  [ '666a', '098@236a2-237b4', '702' ],\n  [ '666b', '098@237b4-237b6', '703' ],\n  [ '667', '098@237b6-241a8', '644' ],\n  [ '668', '098@241b1-241b6', '568' ],\n  [ '669', '098@241b7-242a3', '677' ],\n  [ '670', '098@242a3-243a1', '673' ],\n  [ '671', '098@243a1-244b4', '675' ],\n  [ '672', '098@244b5-247a6', '674' ],\n  [ '673', '098@247a6-249b2', '676' ],\n  [ '674a', '098@249b3-249b6', '834' ],\n  [ '675a', '098@250a3-250a4', '704' ],\n  [ '675b', '098@250a4-255b1', '705' ],\n  [ '675c', '098@255b1-259b7', '706' ],\n  [ '676', '098@259b7-261b6', '707' ],\n  [ '677', '098@261b7-317a8', '712' ],\n  [ '678', '099@001b1-273a7', '717' ],\n  [ '679', '099@273b1-280b7', '713' ],\n  [ '680', '099@285a1-286b8', '718' ],\n  [ '682', '099@295a1-332a8', '722' ],\n  [ '684', '100@001a8-011b7', '727' ],\n  [ '685', '100@001b7-012a2', '726' ],\n  [ '683b', '100@002a1-011a7', '723' ],\n  [ '686', '100@012a2-014a5', '724' ],\n  [ '687', '100@014a6-023a3', '725' ],\n  [ '688', '100@023a4-030b5', '732' ],\n  [ '689', '100@030b5-036a3', '731' ],\n  [ '690', '100@036a3-038b1', '730' ],\n  [ '691', '100@038b1-039b6', '728' ],\n  [ '692', '100@039b6-040b3', '764' ],\n  [ '693', '100@040b3-043b8', '754' ],\n  [ '694', '100@044a1-045b4', '736' ],\n  [ '695', '100@045b5-046a5', '799' ],\n  [ '696', '100@046a5-047a3', '600' ],\n  [ '697', '100@047a4-048b5', '738' ],\n  [ '698', '100@048b5-049b8', '733' ],\n  [ '699', '100@050a1-055b7', '734' ],\n  [ '700', '100@055b7-056a3', '735' ],\n  [ '701', '100@056a3-056b8', '729' ],\n  [ '702', '100@056b8-058a8', '756' ],\n  [ '703', '100@058b1-074b1', '757' ],\n  [ '704', '100@074b1-076b5', '758' ],\n  [ '705a', '100@076b6-079b7', '759' ],\n  [ '705b', '100@079b7-080a1', '760' ],\n  [ '706', '100@080a1-080b3', '761' ],\n  [ '707', '100@080b3-082a4', '762' ],\n  [ '708', '100@082a5-082b7', '569' ],\n  [ '709', '100@082b7-083b3', '769' ],\n  [ '710', '100@083b4-087b8', '770' ],\n  [ '711a', '100@087b8-088b3', '771' ],\n  [ '711b', '100@088b3-089a6', '772' ],\n  [ '712', '100@089a7-090a6', '774' ],\n  [ '713', '100@090a6-331a8', '777' ],\n  [ '714', '101@001b1-034b8', '775' ],\n  [ '715', '101@035a1-063a8', '778' ],\n  [ '716', '101@063b1-064b5', '780' ],\n  [ '717', '101@064b6-066a5', '781' ],\n  [ '718', '101@066a5-096a4', '782' ],\n  [ '719', '101@096a4-099b1', '783' ],\n  [ '720', '101@099b1-100a6', '784' ],\n  [ '721', '101@100a6-101a6', '785' ],\n  [ '722', '101@101a6-126a1', '790' ],\n  [ '723a', '101@126a1-128a3', '791' ],\n  [ '723b', '101@128a3-129b2', '792' ],\n  [ '723c', '101@129b3-130b1', '793' ],\n  [ '723d', '101@130b2-132b2', '794' ],\n  [ '724', '101@132b3-144b6', '788' ],\n  [ '726', '101@145a2-146a4', '633' ],\n  [ '727', '101@146a5-147b6', '786' ],\n  [ '728', '101@147b6-148b3', '787' ],\n  [ '729', '101@148b3-149a2', '684' ],\n  [ '730', '101@149a2-149b5', '795' ],\n  [ '731', '101@149b5-163b3', '796' ],\n  [ '733', '101@171b6-172b5', '798' ],\n  [ '734', '101@172b5-186b7', '800' ],\n  [ '735', '101@186b7-193a2', '802' ],\n  [ '736', '101@193a2-218b5', '835' ],\n  [ '737', '101@218b6-246a3', '836' ],\n  [ '738', '101@246a3-249a3', '838' ],\n  [ '739', '101@249a3-303a1', '837' ],\n  [ '740a', '101@303a2-306a1', '839' ],\n  [ '740b', '101@306a2-327a4', '840' ],\n  [ '740c', '101@327a4-327b5', '841' ],\n  [ '741', '101@327b5-329b2', '842' ],\n  [ '742', '101@329b3-330b6', '843' ],\n  [ '743', '101@330b6-331a4', '844' ],\n  [ '744a', '101@331a5-333a1', '845' ],\n  [ '744b', '101@333a1-333b8', '846' ],\n  [ '745a', '101@333b8-335b4', '847' ],\n  [ '745b', '101@335b4-336a6', '848' ],\n  [ '745c', '101@336a6-337a3', '849' ],\n  [ '745d', '101@337a3-337b6', '850' ],\n  [ '745e', '101@337b7-338a8', '851' ],\n  [ '745f', '101@338b1-338b8', '852' ],\n  [ '745g', '101@338b8-339a4', '853' ],\n  [ '745h', '101@339a4-339b1', '854' ],\n  [ '745i', '101@339b1-339b5', '855' ],\n  [ '745', '101@339b5-341a5', '856' ],\n  [ '745k', '101@341a5-341b3', '857' ],\n  [ '746', '102@001b1-084a8', '1118' ],\n  [ '747', '102@084b1-280b5', '1119' ],\n  [ '748', '102@280b5-347a8', '1120' ],\n  [ '749', '103@001b1-106a8', '1121' ],\n  [ '750', '103@106b1-128a4', '1122' ],\n  [ '751', '103@128a5-194b6', '1123' ],\n  [ '752', '103@194b7-294b6', '1124' ],\n  [ '753', '103@294b6-307a8', '1125' ],\n  [ '754', '104@001b1-030b8', '1126' ],\n  [ '755', '104@030b8-055b3', '1127' ],\n  [ '756', '104@055b3-071b7', '1128' ],\n  [ '757', '104@071b7-120a7', '1129' ],\n  [ '758', '104@120a7-187a5', '1130' ],\n  [ '759a', '104@187a5-188a5', '1131' ],\n  [ '759b', '104@188a5-192a4', '1132' ],\n  [ '759c', '104@192a4-193a4', '1133' ],\n  [ '759d', '104@193a4-196a3', '1134' ],\n  [ '759e', '104@196a3-197a6', '1135' ],\n  [ '759f', '104@197a6-199a7', '1136' ],\n  [ '759g', '104@199a7-202b1', '1137' ],\n  [ '759h', '104@202b1-205b3', '1138' ],\n  [ '760', '104@205b3-231a1', '1139' ],\n  [ '761', '104@231a2-246a5', '1140' ],\n  [ '762', '104@247a1-266a8', '1141' ],\n  [ '763', '105@001b1-304a6', '1142' ],\n  [ '764', '106@001b1-003b6', '858' ],\n  [ '765', '106@003b6-053b6', '163' ],\n  [ '765', '106@003b6-053b6', '859' ],\n  [ '766', '106@053b6-055a6', '860' ],\n  [ '767', '106@055a6-061a1', '861' ],\n  [ '768', '106@061a1-062b8', '862' ],\n  [ '769', '106@062b8-063a5', '863' ],\n  [ '770', '106@063a6-067a8', '864' ],\n  [ '771', '106@067a8-070b8', '865' ],\n  [ '772', '106@070b8-073a5', '866' ],\n  [ '773', '106@073a5-074b7', '867' ],\n  [ '774', '106@074b7-076b1', '868' ],\n  [ '775', '106@076b1-078a7', '869' ],\n  [ '776', '106@078a8-083b6', '870' ],\n  [ '777', '106@083b7-085a7', '871' ],\n  [ '778', '106@085a7-085b1', '872' ],\n  [ '779', '106@085b1-085b5', '873' ],\n  [ '780', '106@085b5-085b6', '874' ],\n  [ '781', '106@085b7-086a3', '875' ],\n  [ '782', '106@086a3-086b1', '876' ],\n  [ '783', '106@086b1-086b4', '877' ],\n  [ '784', '106@086b4-087a3', '878' ],\n  [ '785', '106@087a3-087a5', '879' ],\n  [ '786', '106@087a5-087a8', '880' ],\n  [ '787', '106@087a8-087b1', '881' ],\n  [ '789', '106@087b1-087b3', '882' ],\n  [ '790', '106@087b3-091a8', '883' ],\n  [ '791', '106@091a8-094b1', '884' ],\n  [ '792', '106@094b1-098b7', '885' ],\n  [ '793', '106@098b7-101a5', '886' ],\n  [ '794', '106@101a5-103a2', '887' ],\n  [ '795', '106@103a2-106a2', '888' ],\n  [ '796', '106@106a2-109b6', '889' ],\n  [ '797a', '106@109b6-112b1', '890' ],\n  [ '797b', '106@112b1-115b8', '891' ],\n  [ '798', '106@115b8-118b1', '892' ],\n  [ '799', '106@118b1-120b5', '893' ],\n  [ '800', '106@120b5-121b4', '894' ],\n  [ '801', '106@121b4-127b5', '895' ],\n  [ '802', '106@127b5-134b1', '896' ],\n  [ '803', '106@134b1-159b2', '897' ],\n  [ '804', '106@159b2-161b6', '898' ],\n  [ '805', '106@161b6-163a6', '899' ],\n  [ '806', '106@163a6-165b5', '900' ],\n  [ '807', '106@165b5-165b8', '901' ],\n  [ '808', '106@165b8-166b1', '902' ],\n  [ '809', '106@166b1-166b8', '903' ],\n  [ '810', '106@167a1-167a7', '904' ],\n  [ '811', '106@167a7-167b8', '905' ],\n  [ '812', '106@168a1-168a2', '906' ],\n  [ '813', '106@168a2-168a8', '907' ],\n  [ '814', '106@168a8-168b5', '908' ],\n  [ '815', '106@168b5-205b7', '909' ],\n  [ '816', '106@205b7-213b3', '910' ],\n  [ '817', '106@213b3-215b3', '911' ],\n  [ '818', '106@215b3-217b2', '912' ],\n  [ '819', '106@217b2-223a6', '913' ],\n  [ '820', '106@223a6-225b8', '914' ],\n  [ '821', '106@226a1-227b6', '915' ],\n  [ '822', '106@227b6-230a2', '916' ],\n  [ '823', '106@230a2-231a7', '917' ],\n  [ '824', '106@231a7-232a4', '918' ],\n  [ '825', '106@232a4-237a5', '919' ],\n  [ '826', '106@237a5-238a1', '920' ],\n  [ '827a', '106@238a1-239b1', '921' ],\n  [ '827b', '106@239b1-239b7', '922' ],\n  [ '828', '106@239b7-240a2', '923' ],\n  [ '829', '106@240a2-240a6', '924' ],\n  [ '830', '106@240a6-242a5', '925' ],\n  [ '831', '106@242a5-251a5', '926' ],\n  [ '832', '106@251a5-256a3', '927' ],\n  [ '833', '106@256a4-256b7', '928' ],\n  [ '834', '106@256b7-257b2', '929' ],\n  [ '835', '106@257b3-257b8', '930' ],\n  [ '836', '106@257b8-259a8', '931' ],\n  [ '837', '106@259a8-260a5', '932' ],\n  [ '838', '106@260a5-260b4', '933' ],\n  [ '839', '106@260b4-262b1', '934' ],\n  [ '840', '106@262b1-263b6', '935' ],\n  [ '841', '106@263b6-265b7', '936' ],\n  [ '842', '106@265b7-267a3', '937' ],\n  [ '843', '106@267a3-268a2', '938' ],\n  [ '844', '106@268a2-270a3', '939' ],\n  [ '845', '106@270a3-271b2', '940' ],\n  [ '846', '106@271b2-273a1', '941' ],\n  [ '847', '106@273a1-273a8', '942' ],\n  [ '848', '106@273a8-274a2', '943' ],\n  [ '849', '106@274a2-274a4', '944' ],\n  [ '850', '106@274a5-274a8', '945' ],\n  [ '851', '106@274a8-274b2', '946' ],\n  [ '852', '106@274b2-274b5', '947' ],\n  [ '853', '106@274b5-275a3', '948' ],\n  [ '854', '106@275a3-275a4', '949' ],\n  [ '855', '106@275a4-275a7', '950' ],\n  [ '856', '106@275a7-275b1', '951' ],\n  [ '857', '106@275b1-275b3', '952' ],\n  [ '858', '106@275b3-275b5', '953' ],\n  [ '859', '106@275b5-275b6', '954' ],\n  [ '860', '106@275b6-275b7', '955' ],\n  [ '861', '106@275b7-276a1', '956' ],\n  [ '862', '106@276a1-276a8', '957' ],\n  [ '863', '107@001b1-027b1', '958' ],\n  [ '864', '107@027b1-037b4', '959' ],\n  [ '865', '107@037b4-038b5', '960' ],\n  [ '866', '107@038b5-040a2', '961' ],\n  [ '867', '107@040a2-041a4', '962' ],\n  [ '868', '107@041a5-042a2', '963' ],\n  [ '869', '107@042a3-042a4', '964' ],\n  [ '870', '107@042a4-043a2', '965' ],\n  [ '871', '107@043a2-046a1', '966' ],\n  [ '872', '107@046a1-046b4', '967' ],\n  [ '873', '107@046b4-047b4', '968' ],\n  [ '874', '107@047b4-049a2', '969' ],\n  [ '875', '107@049a3-051a2', '970' ],\n  [ '876', '107@051a2-051a8', '971' ],\n  [ '877', '107@051b1-052a1', '972' ],\n  [ '878', '107@052a1-052b2', '973' ],\n  [ '879', '107@052b3-052b5', '974' ],\n  [ '880', '107@052b5-053b3', '975' ],\n  [ '881', '107@053b3-073b7', '976' ],\n  [ '882', '107@073b7-075b1', '977' ],\n  [ '883', '107@075b1-077a3', '978' ],\n  [ '884', '107@077a3-077b5', '979' ],\n  [ '885', '107@077b5-079a2', '980' ],\n  [ '886', '107@079a2-079b3', '981' ],\n  [ '887', '107@079b3-080a3', '982' ],\n  [ '888', '107@080a3-080b1', '983' ],\n  [ '889', '107@080b2-082a3', '984' ],\n  [ '890', '107@082a3-082b8', '985' ],\n  [ '891', '107@082b8-085a2', '986' ],\n  [ '892', '107@085a2-087b7', '987' ],\n  [ '893', '107@087b7-088a7', '988' ],\n  [ '894', '107@088a7-088b5', '989' ],\n  [ '895', '107@088b5-088b8', '990' ],\n  [ '896', '107@088b8-091a3', '991' ],\n  [ '897a', '107@091a3-091b7', '992' ],\n  [ '897b', '107@091b7-092a2', '993' ],\n  [ '898', '107@092a2-101b5', '994' ],\n  [ '899', '107@101b5-110a4', '995' ],\n  [ '900', '107@110a4-114b3', '996' ],\n  [ '901', '107@114b3-122a3', '997' ],\n  [ '902', '107@122a3-126a8', '998' ],\n  [ '903', '107@126b1-129a8', '999' ],\n  [ '904', '107@129b1-130b1', '1000' ],\n  [ '905', '107@130b1-131a3', '1001' ],\n  [ '906', '107@131a3-131b8', '1002' ],\n  [ '907', '107@131b8-133b1', '1003' ],\n  [ '908', '107@133b2-134a2', '1004' ],\n  [ '909', '107@134a2-134b7', '1005' ],\n  [ '910', '107@134b7-135b6', '1006' ],\n  [ '911', '107@135b6-136a6', '1007' ],\n  [ '912', '107@136a6-136b3', '1008' ],\n  [ '913', '107@136b3-139a7', '1009' ],\n  [ '914', '107@139a7-141b4', '1010' ],\n  [ '915', '107@141b5-143a1', '1011' ],\n  [ '916a', '107@143a2-145a3', '1012' ],\n  [ '916b', '107@145a4-145a5', '1013' ],\n  [ '917', '107@145a5-145b3', '1014' ],\n  [ '918a', '107@145b3-151a6', '1015' ],\n  [ '918b', '107@151a6-154b8', '1016' ],\n  [ '919', '107@154b8-155b3', '1017' ],\n  [ '920', '107@155b3-156a4', '1018' ],\n  [ '921', '107@156a4-160a1', '1019' ],\n  [ '922', '107@160a2-161a7', '1020' ],\n  [ '923', '107@161a8-162a7', '1021' ],\n  [ '924', '107@162a8-162b6', '1022' ],\n  [ '925a', '107@162b6-163a3', '1023a' ],\n  [ '925b', '107@163a3-163a5', '1023b' ],\n  [ '926', '107@163a5-163a8', '1024' ],\n  [ '927a', '107@163a8-163b8', '1025' ],\n  [ '927b', '107@163b8-164a2', '1026' ],\n  [ '928', '107@164a2-164b3', '1027' ],\n  [ '929', '107@164b3-164b5', '1028' ],\n  [ '930a', '107@164b5-165a2', '1029' ],\n  [ '930b', '107@165a3-165a4', '1030' ],\n  [ '931', '107@165a4-166a3', '1031' ],\n  [ '932', '107@166a4-166a5', '1032' ],\n  [ '933', '107@166a5-166a7', '1033' ],\n  [ '934', '107@166a7-166b1', '1034' ],\n  [ '935', '107@166b2-167a2', '1035' ],\n  [ '936', '107@167a2-167a4', '1036' ],\n  [ '937', '107@167a4-167a5', '1037' ],\n  [ '938', '107@167a5-167a8', '1038' ],\n  [ '939a', '107@167a8-167b1', '1039' ],\n  [ '939b', '107@167b1-167b3', '1040' ],\n  [ '939c', '107@167b3-167b8', '1041' ],\n  [ '940a', '107@167b8-168a1', '1042' ],\n  [ '940b', '107@168a1-168a2', '1043' ],\n  [ '941a', '107@168a2-168a4', '1044' ],\n  [ '941b', '107@168a4-168a6', '1045' ],\n  [ '942', '107@168a6-168a7', '1046' ],\n  [ '943', '107@168a7-168b4', '1047' ],\n  [ '944', '107@168b4-169a4', '1048' ],\n  [ '945a', '107@169a4-169a7', '1049' ],\n  [ '945b', '107@169a7-169b2', '1050' ],\n  [ '946a', '107@169b2-169b4', '1051' ],\n  [ '946b', '107@169b4-169b7', '1052' ],\n  [ '947a', '107@169b7-170a2', '1053' ],\n  [ '947b', '107@170a2-170a4', '1054' ],\n  [ '948a', '107@170a5-170a7', '1055' ],\n  [ '948b', '107@170a8-170b3', '1056' ],\n  [ '948c', '107@170b3-170b6', '1057' ],\n  [ '949a', '107@170b6-171a1', '1058' ],\n  [ '949b', '107@171a1-171a3', '1059' ],\n  [ '950a', '107@171a3-171a5', '1060' ],\n  [ '950b', '107@171a5-171a7', '1061' ],\n  [ '951a', '107@171a8-171b2', '1062' ],\n  [ '951b', '107@171b2-171b4', '1063' ],\n  [ '952', '107@171b4-171b6', '1064' ],\n  [ '953', '107@171b6-171b8', '1065' ],\n  [ '954', '107@171b8-172a1', '1066' ],\n  [ '955', '107@172a1-172a2', '1067' ],\n  [ '956', '107@172a2-172a4', '1068' ],\n  [ '957', '107@172a4-172a5', '1069' ],\n  [ '958', '107@172a5-172a7', '1070' ],\n  [ '959a', '107@172a7-172a8', '1071' ],\n  [ '959b', '107@172a8-172b2', '1072' ],\n  [ '960', '107@172b2-185b5', '1073' ],\n  [ '961', '107@185b5-194a3', '1074' ],\n  [ '962', '107@194a4-206b2', '1075' ],\n  [ '963', '107@206b2-211a2', '1076' ],\n  [ '964', '107@211a2-211b3', '1077' ],\n  [ '965', '107@211b3-212a5', '1078' ],\n  [ '966', '107@212a5-215a4', '1079' ],\n  [ '967', '107@215a4-215b3', '1080a' ],\n  [ '968', '107@215b3-215b4', '1080b' ],\n  [ '969', '107@215b4-215b4', '1080c' ],\n  [ '970', '107@215b4-215b5', '1080d' ],\n  [ '971', '107@215b5-215b5', '1080e' ],\n  [ '972', '107@215b5-215b6', '1080f' ],\n  [ '973', '107@215b6-215b7', '1081' ],\n  [ '974', '107@215b7-216a1', '1082' ],\n  [ '975', '107@216a1-216a4', '1083' ],\n  [ '976', '107@216a4-216a8', '1084' ],\n  [ '977a', '107@216b1-216b6', '1085' ],\n  [ '977b', '107@216b6-218a7', '1086' ],\n  [ '978', '107@218a8-220b4', '1087' ],\n  [ '979', '107@220b4-222b5', '1088' ],\n  [ '980', '107@222b6-222b8', '1089' ],\n  [ '981', '107@223a1-226a6', '1090' ],\n  [ '982', '107@226a7-227a2', '1091' ],\n  [ '983a', '107@227a2-227b1', '1092' ],\n  [ '983b', '107@227b1-227b6', '1093' ],\n  [ '984', '107@227b6-228a4', '1094' ],\n  [ '985', '107@228a5-229b5', '1095' ],\n  [ '986', '107@229b6-229b7', '1096' ],\n  [ '987', '107@229b8-230b3', '1097' ],\n  [ '988', '107@230b3-230b7', '1098' ],\n  [ '989', '107@230b8-231b6', '1099' ],\n  [ '990', '107@231b7-235b2', '1100' ],\n  [ '991', '107@235b2-237a4', '1101' ],\n  [ '992', '107@237a4-240a2', '1102' ],\n  [ '993', '107@240a3-241a2', '1103' ],\n  [ '994', '107@241a2-242a3', '1104' ],\n  [ '995', '107@242a3-243a5', '1105' ],\n  [ '996', '107@243a5-243b2', '1106' ],\n  [ '997', '107@243b2-244a5', '1107' ],\n  [ '998', '107@244a5-245b4', '1108' ],\n  [ '999', '107@245b4-246a3', '1109' ],\n  [ '1000', '107@246a4-247a5', '1110' ],\n  [ '1001', '107@247a5-247b6', '1111' ],\n  [ '1002', '107@247b6-248a3', '1112' ],\n  [ '1003', '107@248a3-248a6', '1113' ],\n  [ '1004', '107@248a6-249b8', '1114' ],\n  [ '1005', '107@250a1-250a6', '1115' ],\n  [ '1006', '108@001b1-102b5', '1116' ],\n  [ '1007', '109@001a1-021b7', '1146' ] ];\njPedurma.rcode=\"J\";\nmodule.exports=jPedurma;",
    "var dosearch=function(volpage,from,to) {\n  var tmp=fromVolpage(volpage,from,to);\n    //corresFromVolpage= [經號],[範圍],[對照經號],[對照範圍],[對照行],[K經號]\n  if(tmp){\n\t  var parse_tmp=parseVolPage(tmp);\n\t  var corresPage=snap2realpage(parse_tmp);\n\t  return corresPage.vol+\".\"+corresPage.page+corresPage.side;\n\t} else {\n\t\tconsole.log(\"no corres page\");\n\t\treturn \"\";\n\t}\n}\n\nvar fromVolpage=function(volpage,from,to){\n  //var volpage=document.getElementById(\"input\").value;\n  var out=[];\n  var range=findRange(volpage,from);//range=[J經號,J範圍,K經號]\n  if(range) {\n  \tvar corres_range=findCorresRange(range[2],to);//corres_range=[D經號,D範圍,下一項D經號,下一項D範圍]\n  } else return null;\n  //算J和D的範圍\n  if(corres_range.length != 0 ){\n    var vRange=countRange(range[1],range[3],range[0],range[2]);\n    //vRange input為D範圍, 下一項D範圍, D經, 下一項D經 //output為[vStart,vEnd-vStart]\n    var corres_vRange=countRange(corres_range[0][1],corres_range[corres_range.length-1][1]);//[vStart,vEnd-vStart]\n    var corresLine=countCorresLine(volpage,vRange[1],corres_vRange[1],vRange[0],corres_vRange[0]);\n\n    //out.push([range[0]],[range[1]],[corres_range[0][0]],[corres_range[0][1]],[corresLine],[range[2]]);\n          // [經號],[範圍],[對照經號],[對照範圍],[對照行],[K經號]\n    return corresLine;\n  } else return null;\n}\n\nvar countCorresLine=function(volpage,range,corres_range,start,corres_start){//volpage=使用者輸入的volpage\n\tvar Vline=volpb2vl(volpage);\n\tvar corres_vLine=(range*corres_start+corres_range*(Vline-start))/range;//對照的虛擬行\n\tcorres_vLine=Math.floor(corres_vLine);\n\tvar corresLine=vl2volpb(corres_vLine);//對照的虛擬行轉回volpage\n\treturn corresLine;\n}\n\nvar countRange=function(Range){//range=034@020a1-103b7\n\tvar m=Range.split(\"-\");\n\tvar start=m[0];\n\tvar vStart=volpb2vl(start);\n\tif (m[1].match(\"@\")) var end=m[1];\n\telse {\n\t\tvar end=start.substr(0,start.indexOf(\"@\")+1)+m[1];\n\t}\n\tvar vEnd=volpb2vl(end);\n\tvar vRange=[vStart,vEnd-vStart];\n\t\n\treturn vRange;\n}\n\nvar findCorresRange=function(KJing,to){\n\tvar out=[];\n\tfor(var i=0; i<to.length; i++){\n\t\tif(KJing == to[i][2]){\n\t\t\tout.push([to[i][0],to[i][1]]);\n\t\t}\n\t}\n\treturn out;\n}\n\nvar findRange=function(volpage,from){\n\tvar out=[];\n\tvar Pedurma=startline2vline(from);\n\t//將輸入轉為vline，找出此行所在的範圍\n\t//for(var i=0; i<input.length; i++){}\n\tvar input_vline=volpb2vl(volpage);\n\tfor(var k=0; k<Pedurma.length; k++){\n\t\tif(input_vline < Pedurma[k][1]){\n\t\t\tout=from[k-1];//此行所在的範圍的[J經錄,J範圍,K經錄]\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn out;\n}\n\n//Pedurma的起始行轉vline\nvar startline2vline=function(from){\n\tvar out=[];\n\tfor(var j=0; j<from.length; j++){\n\t\tvar p=from[j][1].split(\"-\");\n\t\tvar start=p[0];\n\t\tvar start_vline=volpb2vl(start);\n\t\tout.push([from[j][0],start_vline]);//[經號,起始行的vline]\n\t}\n\treturn out;\n}\n\nvar rvp2Vline=function(){\n\tvar out=[];\n\tvar pageRange=rvp2rvp();\n\tfor(var i=0;i<pageRange.length; i++){\n\t\tvar s=parseVolPage(pageRange[i][1]);\n\t\tout.push(s);\n\t}\n\treturn out;\n}\n\nvar parseVolPage=function(str){\n\tvar s=str.match(/(\\d+)[@.](\\d+)([abcd]*)(\\d*)/);\n\t//var s=str.match(/(\\d+)[@.](\\d+)([abcd])(\\d*)-*(\\d*)([abcd]*)(\\d*)/);\n\tif(!s){\n\t\tconsole.log(\"error!\",str);\n\t\treturn null;\n\t}\n\treturn {vol:parseInt(s[1]),page:parseInt(s[2]),side:s[3] || \"x\",line:parseInt(s[4]||\"8\")};\n\t//return {vol:parseInt(s[1]),page:parseInt(s[2]),side:s[3],line:parseInt(s[4]||\"1\"),page2:parseInt(s[5]),side2:s[6],line2:parseInt(s[7]||\"1\")};\n}\n\nvar parseVolPageRange=function(str){\n\tvar s=str.match(/(\\d+)[@.](\\d+)([abcd]*)(\\d*)-(\\d+)([abcd]*)(\\d*)/);\n\t//var s=str.match(/(\\d+)[@.](\\d+)([abcd])(\\d*)-*(\\d*)([abcd]*)(\\d*)/);\n\tif(!s){\n\t\tconsole.log(\"error!\",str);\n\t\treturn null;\n\t}\n\treturn {vol:parseInt(s[1]),page:parseInt(s[2]),side:s[3] || \"x\",line:parseInt(s[4]||\"1\"),page2:parseInt(s[5]),side2:s[6] || \"x\",line2:parseInt(s[7]||\"1\")};\t\n}\n\nvar volpb2vl=function(str){\n\tvar out=[];\n\tvar volpage=parseVolPage(str);\n\tif(! volpage){console.log(str); return 0;}\n\tif(volpage[\"side\"]==\"a\"){var side=1;}\n\telse if(volpage[\"side\"]==\"b\"){side=2;}\n\telse if(volpage[\"side\"]==\"c\"){side=3;}\n\telse if(volpage[\"side\"]==\"d\"){side=4;}\n\telse {side=0;}\n\t\n\tvar vline=volpage[\"vol\"]*500*4*10+volpage[\"page\"]*4*10+side*10+volpage[\"line\"];\n\t\n\treturn vline;\n}\n\nvar vl2volpb=function(vline){\n\tvar vol=Math.floor(vline/(500*4*10));\n\tvar page_p=vline%(500*4*10);\n\tvar page=Math.floor(page_p/(4*10));\n\tvar side_p=page_p%(4*10);\n\tvar side=Math.floor(side_p/10);\n\tvar line=side_p%10;\n\tif(side==0){side=\"a\";}\n\telse if(side==1){side=\"b\";}\n\telse if(side==2){side=\"c\";}\n\telse if(side==3){side=\"d\";}\n\tvar volpb=vol+\".\"+page+side+line;\n\n\treturn volpb;\n}\n\nvar searchNameCh=function(KJing,from,to){\n\t//判斷輸入是J版本還是D版本再依其版本取得K\n\t//在pedurma_taisho從K值轉換成中文經號\n\tvar result=[];\n\tfor(var i=0;i<pedurma_taisho.length;i++){\n\t\tif(KJing==pedurma_taisho[i][0]){\n\t\t\tvar taisho=pedurma_taisho[i][1].split(\",\");  ////對照到中有多個經時\n\n\t\t\tfor(var j=0;j<taisho.length;j++){\n\t\t\t\t//回去taishonames找到該項，得到中文經名\n\t\t\t\tvar taishoNumName=taisho2taishoName(taisho[j]);//[T01n0001,經名]\n\t\t\t\t//將中文經名加上超連結\n\t\t\t\tresult.push(addLink(taishoNumName[0],taishoNumName[1]));\n\t\t\t}\n\t\t\tdocument.getElementById(\"nameCh\").innerHTML=result.join(\"、\");\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n\n\nvar taisho2taishoName=function(taisho){ //把pedurma_taisho裡的taisho號碼轉換為經名\n\tfor(var i=0;i<taishonames.length;i++){\n\t\tvar taishoNum=parseInt(taishonames[i][0].substr(4,4));//taishonames[i][0].length-4\n\t\tif(parseInt(taisho) == taishoNum){\n\t\t\treturn taishonames[i];//[T01n0001,經名]\n\t\t}\n\t}\n}\n\nvar addLink=function(link,name){\n\tif(link.match(/T0.n0220/)){\n\t\tlink=link.substr(0,link.length-1);\n\t}\n\treturn '<a target=_new href=\"http://tripitaka.cbeta.org/'+link+'\">'+name+\"</a>\";\n}\n\nvar showImage=function(corresline,to){//corresline:對照行(分開成物件的對照行)\n\t//去掉行數 把vol page side 湊成檔名\n\tvar filename=id2imageFileName(corresline);//[函號(用來進入該函資料夾),檔名]\n\t//var Line=\"volpage:\"+corresline.vol+\", page:\"+corresline.page+\", side:\"+corresline.side+\", line:\"+corresline.line;\n\t//return '<a target=_new href=\"http://dharma-treasure.org/kangyur_images/'+longnames[to.rcode].toLowerCase()+'/'+filename[0]+'/'+filename[1]+'\">'+Line+\"</a>\";\n\treturn '<img src=\"http://dharma-treasure.org/kangyur_images/'+longnames[to.rcode].toLowerCase()+'/'+filename[0]+'/'+filename[1]+'\"></a>';\n}\n\nvar id2imageFileName=function(id){\n\t//var id=parseVolPage(corresline);\n\tvar realpage=snap2realpage(id);\n\tvar p=\"00\"+realpage.vol;\n\tvar nameVol=p.substr(p.length-3);\n\tvar q=\"00\"+realpage.page;\n\tvar namePageSide=q.substr(q.length-3)+realpage.side;\n\tvar filename=[nameVol,nameVol+\"-\"+namePageSide+\".jpg\"];\n\n\treturn filename;\n}\n\nvar snap2realpage=function(id){\n\tif(id.side == \"c\"){\n\t\tid.side=id.side.replace(\"c\",\"b\");\n\t}\n\telse if(id.side == \"d\"){\n\t\tid.page=id.page+1;\n\t\tid.side=\"a\";\n\t}\n\n\treturn id;\n}\n\n\n\n\nvar corres_api={dosearch:dosearch}\nmodule.exports=corres_api;",
    "var React=require(\"react\");\nvar Defbox = React.createClass({displayName: \"Defbox\",\n  getInitialState: function() {\n    return {openBox:false,id:0,ch:\"\"};\n  }, \n  openDialog:function() {\n   if(this.props.openBox) this.refs.dictdialog.getDOMNode().classList.add(\"opened\");\n  },\n  closeDialog:function() {\n    //this.refs.dictdialog.getDOMNode().classList.remove(\"opened\");\n    $(\"span[vpos]\").removeClass(\"scrolled\");\n    this.setState({openBox:false});\n    //this.props.popStack(this.props.terms.length,true);\n  },\n  componentWillReceiveProps: function(nextprops) {\n    //if(nextprops.vpos != this.prpos.vpos)\n    $(\"span[vpos]\").removeClass(\"scrolled\");\n    $(\"span[vpos='\"+nextprops.vpos+\"']\").addClass(\"scrolled\");\n    this.setState({openBox:nextprops.openBox});\n    // if(this.props.vpos != nextProps.vpos) this.setState({openBox:nextprops.openBox});\n    // else this.setState({openBox:false})\n  },\n  todosearch: function(e) {\n    //this.props.ids.push(e.target.id);\n    var ch=e.target.textContent;\n    //this.props.dosearch(e);\n  },\n  renderTerm: function(item,termIndex) {\n    var parsedItem=item.join(\"<br>\");\n    return (\n    React.createElement(\"div\", {\"data-term\": item[0], onClick: this.todosearch}, \n      React.createElement(\"div\", {dangerouslySetInnerHTML: {__html: parsedItem}})\n    )\n    )\n  },\n  render: function() {\n    var topOffset=0, leftOffset=0;\n    var d=this.props.def || [[\"no result\"]];\n    var def=d.map(this.renderTerm);\n   // this.openDialog();\n    var opened=this.state.openBox?\" opened\":\"\";\n\n    if($(\".text-content\").width()-this.props.clickedChPos.left<500) leftOffset=-500;\n    if($(\".text-content\").height()-this.props.clickedChPos.top<200) topOffset=-230;\n\n    var boxPos={\n      left:this.props.clickedChPos.left+leftOffset,\n      top:this.props.clickedChPos.top+topOffset+25\n    };\n    return (\n      React.createElement(\"div\", null, \n        React.createElement(\"div\", {className: \"modalDialog\"+opened, ref: \"dictdialog\", style: boxPos}, \n        React.createElement(\"a\", {href: \"#\", onClick: this.closeDialog, \n          title: \"Close\", className: \"modalClose\"}, \" X \"), \n        def\n        )\n      )\n      );\n  }\n});\nmodule.exports=Defbox;",
    "var entries=require(\"./entries.js\");\nvar mahavyutpatti=require(\"extra\").mahavyutpatti;\nvar indexes=require(\"./indexes.js\");\n\nvar indexOfSorted=function (array, obj) { \n    var low = 0,\n    high = array.length-1;\n    while (low < high) {\n      var mid = (low + high) >> 1;\n      array[mid] < obj ? low = mid + 1 : high = mid;\n    }\n    if(array[low] != obj) return null;\n    return low;\n }\nvar exhaustiveFind=function(tofind) {\n    var out=[];\n    var f=tofind.split(/[་།]/);\n    for(var i=0; i<f.length; i++){\n      if(f[i]){\n        for(var j=i+1;j<f.length; j++){\n          var term=[];\n          term.push(f[i]);\n          for(var k=i+1; k<j; k++){\n            term.push(f[k]);\n          }\n          var index=indexOfSorted(entries,term.join(\"་\")+\"་\");\n          if(index) out.push(mahavyutpatti[indexes[index]]);\n        }\n      }\n    }\n    //out.length != 0 ? this.setState({tofind:tofind,def:out}) : this.setState({tofind:tofind,def:null});\n    //console.log(out);\n    return out;\n }\n\n\nvar dict_api={exhaustiveFind:exhaustiveFind};\nmodule.exports=dict_api;",
    "var entries=[\n \"bcu pa dang po la\",\n \"་ཀུན་ཤེས་པ་ཐོབ་པར་བྱེད་\",\n \"་དད་པའི་གསོ་སྦྱོང་བགྱི་བར་གསོལ་བ་འདེབས་སོ་གསོལ་བ་ཡང་མཁྱེན་པར་གསོལ་ལོ་\",\n \"་འདོམ་\",\n \"ཀ་ཀ་ནི་མགྲོན་བུ་ཉི་ཤུའི་རིན་ (འགྲོན་བུ་ཉི་ཤུའི་རིན་)\",\n \"ཀ་ཀ་རི་\",\n \"ཀ་ཏྱའི་བུ་ཆེན་པོ་\",\n \"ཀ་ཏྱའི་བུ་ནོག་ཅན\",\n \"ཀ་དམ་བ་\",\n \"ཀ་དམ་བ་ཀའི་མེ་ཏོག་\",\n \"ཀ་ནི་སྐ་\",\n \"ཀ་པི་ཏ་\",\n \"ཀ་བ་\",\n \"ཀ་བ་དང་ཉེ་བའི་ཀ་བའི་གྲོང་\",\n \"ཀ་བའམ་གཟུ་བ་\",\n \"ཀ་ཞུ་\",\n \"ཀ་རྟེན་\",\n \"ཀ་ལ་པིང་ཀའི་སྒྲ་དབྱངས་\",\n \"ཀ་ལན་ད་ཀ་གནས་པ་\",\n \"ཀ་ལིང་ག་\",\n \"ཀ་ལིང་གའི་རྒྱལ་པོ་\",\n \"ཀར་ཤ་པ་ན་\",\n \"ཀར་ཤ་པ་ན་མགྲོན་བུ་སྟོང་དྲུག་བརྒྱའི་རིན་\",\n \"ཀཱ་ཙ་ལིན་དའི་གོས་\",\n \"ཀིམ་ཤུ་ཀ་\",\n \"ཀུ་ཅོ་\",\n \"ཀུ་བ་\",\n \"ཀུ་མུ་ད་\",\n \"ཀུ་ར་བ་ཀ་\",\n \"ཀུ་རུ་པིན་དའམ་ཞ་ཉེ་\",\n \"ཀུ་ཤ་\",\n \"ཀུ་ཤ་གཙང་བསྲེལ་\",\n \"ཀུ་ཤ་ཆེན་པོ་\",\n \"ཀུ་ཤའི་གྲོང་ཁྱེར་\",\n \"ཀུ་ཤུ་ཤིང་\",\n \"ཀུན་གཞིའི་རྣམ་པར་ཤེས་པ་\",\n \"ཀུན་གྱི་དཀྱིལ་\",\n \"ཀུན་ཏུ་གནོད་པར་གྱུར་པའམ་ཀུན་ཏུ་གཙེས་པ་\",\n \"ཀུན་ཏུ་ཆགས་པ་\",\n \"ཀུན་ཏུ་ཐ་སྙད་འདོགས་པ་\",\n \"ཀུན་ཏུ་བཀོད་པ་རྒྱ་མཚོའི་སྤྱོད་པ་ལ་རྣམ་པར་ལྟ་བ་\",\n \"ཀུན་ཏུ་བཟང་པོ་\",\n \"ཀུན་ཏུ་བཟང་མོ་\",\n \"ཀུན་ཏུ་བརྟགས་པ་\",\n \"ཀུན་ཏུ་བསུང་\",\n \"ཀུན་ཏུ་མིག་\",\n \"ཀུན་ཏུ་མྱོང་བར་འགྱུར་\",\n \"ཀུན་ཏུ་འཁྱམ་པ་\",\n \"ཀུན་ཏུ་འགྲོ་བའི་རྒྱུ་\",\n \"ཀུན་ཏུ་འདོད་ཆགས་པ་\",\n \"ཀུན་ཏུ་འབྱུང་བའམ་རྒྱུའམ་སྤྱོད་པ་\",\n \"ཀུན་ཏུ་འཛིན་པ་\",\n \"ཀུན་ཏུ་འོད་\",\n \"ཀུན་ཏུ་འོད་\",\n \"ཀུན་ཏུ་རབ་ཏུ་གཡོས\",\n \"ཀུན་ཏུ་རབ་ཏུ་ཆེམ་ཆེམ་\",\n \"ཀུན་ཏུ་རབ་ཏུ་མཆེད་ཅིང་འབར་\",\n \"ཀུན་ཏུ་རབ་ཏུ་འཁྲུགས་\",\n \"ཀུན་ཏུ་རབ་ཏུ་འགུལ་\",\n \"ཀུན་ཏུ་རབ་ཏུ་འབར་\",\n \"ཀུན་ཏུ་རབ་ཏུ་འུར་འུར་\",\n \"ཀུན་ཏུ་རབ་ཏུ་ལྡེག་\",\n \"ཀུན་ཏུ་རྒྱས་པར་བྱེད་པ་\",\n \"ཀུན་ཏུ་རྒྱུ་\",\n \"ཀུན་ཏུ་རྒྱུ་གནས་ལྷས་ཀྱི་བུ་\",\n \"ཀུན་ཏུ་རྗེས་སུ་ཚོལ་བ་\",\n \"ཀུན་ཏུ་རྟོག་པའི་རྙོག་མེད་པ\",\n \"ཀུན་ཏུ་ལྟ་བའམ་མདུན་དུ་ལྟ་བ་\",\n \"ཀུན་ཏུ་ཤེས་པར་བྱ་བ་\",\n \"ཀུན་ཏུ་ཤེས་པར་བྱེད་པ་\",\n \"ཀུན་ཏུ་སོ་སོར་མྱོང་བར་འགྱུར་\",\n \"ཀུན་ཏུ་སྐྱོ་བ་\",\n \"ཀུན་ཏུ་སྣང་བ་\",\n \"ཀུན་ཏུ་སྣང་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཀུན་ཏུ་སྤྱོད་པ་གཙང་བ་\",\n \"ཀུན་ཏུ་སྤྱོད་པའི་བློ་གྲོས་\",\n \"ཀུན་ཏུ་སྤྱོད་ལམ་\",\n \"ཀུན་ཏུ་སྦྱིན་པའི་འོས་སུ་གྱུར་བ་\",\n \"ཀུན་ཏུ་སྦྱོར་བ་\",\n \"ཀུན་དགའ་བའི་གཏམ་སྣ་ཚོགས་བྱས་ནས་\",\n \"ཀུན་དགའ་བོ་\",\n \"ཀུན་དགའ་བོ་\",\n \"ཀུན་དགའ་ར་བ་\",\n \"ཀུན་དགའ་ར་བ་བ་\",\n \"ཀུན་དམ་\",\n \"ཀུན་ནས་དཀྲིས་པ་\",\n \"ཀུན་ནས་མནར་སེམས་\",\n \"ཀུན་ནས་མཛེས་པ་\",\n \"ཀུན་ནས་མཛེས་པ་\",\n \"ཀུན་ནས་འཁོར་ཡུག་ (ཀུན་ནས་སམ་ཁོར་ཡུག་)\",\n \"ཀུན་ནས་ལྡང་བ་\",\n \"ཀུན་ནས་སམ་ཡོངས་སུ་བསྐོར་བ་\",\n \"ཀུན་ནས་སམ་ལེགས་པར་རམ་ཡོངས་སུ་བསྐྱེད་པ་\",\n \"ཀུན་ནས་སྦགས་པའམ་མ་བྱོ་པའམ་མ་བཀྲུས་པའམ་ཆགས་པའམ་འབྲེལ་བ་\",\n \"ཀུན་ནས་སློང་བ་པོ་\",\n \"ཀུན་ནས་སློང་བའམ་ཀུན་ནས་ལྡང་བྱེད་\",\n \"ཀུན་བརྗོད་པའི་་ཆོ་འཕྲུལ་\",\n \"ཀུན་བརྟགས་པ་\",\n \"ཀུན་བརྟགས་པའི་མཚན་ཉིད་\",\n \"ཀུན་འགྱེད་གཞོན་ནུ་\",\n \"ཀུན་འབྱུང་བ་\",\n \"ཀུན་འབྱུང་བ་སྤངས་\",\n \"ཀུན་འབྱུང་ལ་ཆོས་ཤེས་པ་\",\n \"ཀུན་འབྱུང་ལ་ཆོས་ཤེས་པའི་བཟོད་པ་\",\n \"ཀུན་འབྱུང་ལ་རྗེས་སུ་རྟོགས་པའི་ཤེས་པ་\",\n \"ཀུན་འབྱུང་ལ་རྗེས་སུ་རྟོགས་པའི་ཤེས་པའི་བཟོད་པ་\",\n \"ཀུན་འབྱུང་ཤེས་པ་\",\n \"ཀུན་འཛིན་མ་\",\n \"ཀུན་རྫོབ་ཀྱི་བདེན་པ་\",\n \"ཀུན་རྫོབ་ཤེས་པ་\",\n \"ཀུན་ལ་གྲགས་པ་\",\n \"ཀུན་ཤེས་ཀཽཎྜིཉ་\",\n \"ཀུན་ཤེས་པ་དང་ལྡན་པའི་དབང་པོ་\",\n \"ཀུན་ཤེས་པའི་དབང་པོ་\",\n \"ཀུན་ཤེས་པར་གྱིས་ཤིག་\",\n \"ཀུན་སྐྱོབས་\",\n \"ཀུན་སྟོབས་ཕྲག་བརྒྱ་ན་རྣམ་པར་བརྡ་ཤེས་ལྡན་ཞེས་བྱའོ་\",\n \"ཀེ་ཀེ་རུ་\",\n \"ཀེ་ཤ་ར་\",\n \"ཀེའུ་\",\n \"ཀོ་ཀོ་གླང་པོ་ཆེའི་ལྟ་བུ་\",\n \"ཀོ་ལྤགས་ཀྱི་གཞི་\",\n \"ཀོ་ལྤགས་མཁན་\",\n \"ཀོ་ལྤགས་མཁན་ནམ་ལྷམ་མཁན་\",\n \"ཀོ་ས་ལཱ\",\n \"ཀོ་སྐོ་\",\n \"ཀོ་སྐོ་ཕག་གི་ལྟ་བུ་\",\n \"ཀོ་སྐོ་བ་ལང་གི་ལྟ་བུ་\",\n \"ཀོ་སྐོ་བོང་བུའི་ལྟ་བུ་\",\n \"ཀོ་སྐོ་རྟའི་ལྟ་བུ་\",\n \"ཀོ་སྐོ་སྤྲེའུའི་ལྟ་བུ་\",\n \"ཀོའུ་ཤི་ཀ (བརྒྱ་བྱིན)\",\n \"ཀོས་མེད་\",\n \"ཀོོ་ཤམ་བི་\",\n \"ཀྭའི\",\n \"ཀྱང་ངམ་ཡང་\",\n \"ཀྱི་ཧུད་དམ་ཀྱེ་མ\",\n \"ཀྱི་ཧུད་དམ་ཨེ་མ་ཀྱི་ཧུད\",\n \"ཀྱི་ཧུད་ཟེར་བ་\",\n \"ཀྱེ་\",\n \"ཀྱེ་\",\n \"ཀྱེ་\",\n \"ཀྱེ་མ་\",\n \"ཀྱེ་མ་གྲོགས་པོ་དག་\",\n \"ཀྱེ་མ་འཇིག་རྟེན་གནས་པ་འདི་ནི་ཕན་ཚུན་རྩོད་པས་ཡོངས་སུ་ཟིན་ཅིང་གནོད་སེམས་ཀྱིས་ཐ་བ་དང་ཞེ་སྡང་ལ་ཞུགས་པར་གཟིགས་\",\n \"ཀྱེ་མ་འཇིག་རྟེན་གནས་པ་འདི་ནི་ཕྱིན་ཅི་ལོག་དང་ལྡན་ཞིང་ལམ་ཉམ་ང་བར་ཞུགས་པ་ལམ་གོལ་བ་ལ་གནས་པ་\",\n \"ཀྱེ་མ་འཇིག་རྟེན་གནས་པ་འདི་ནི་བརྐམ་ཞིང་འདོད་པས་ཟིལ་གྱིས་ནོན་པ་སྟེ་་ཆོག་མི་ཤེས་ཤིང་གཞན་གྱི་ནོར་ལ་འཕྲོག་པ་\",\n \"ཀྱེ་མ་སེམས་ཅན་འདི་དག་ནི་ཁྱིམ་གི་གནས་ནས་སྡུག་བསྔལ་གྱི་སྣོད་ཀུན་ནས་ཉོན་མོངས་པ་ཅན་རྟག་ཏུ་དགའ་བ་\",\n \"ཀྱེ་མ་སེམས་ཅན་འདི་དག་ནི་ཆོག་མི་ཤེས་པ་སྟེ་རྙེད་པ་དང་བཀུར་སྟི་དང་ཚིགས་སུ་བཅད་པ་ལ་སྤྱོད་ཀྱང་བདག་ཅག་ནི་ཆོག་ཤེས་པའོ་སྙམ་དུ་འཛིན་པ་\",\n \"ཀྱེ་མ་སེམས་ཅན་འདི་དག་ནི་མི་རིགས་པས་འཚོ་བ་སྟེ་གཅིག་ལ་གཅིག་འདྲིད་པར་གནས་པ་\",\n \"ཀྱེ་མ་སེམས་ཅན་འདི་རྣམས་ནི་ནོར་དང་འབྲུ་དང་ཁྱིམ་དང་བུ་དང་ཆུང་མ་ལ་སྲེད་པས་འཁོལ་བ་སྟེ་སྙིང་པོ་མེད་པ་ལ་སྙིང་པོར་འདུ་ཤེས་པ་\",\n \"ཀྱེ་མའམ་ཀྱེ་ཧུད་དམ་མ་ལའམ་ཇི་ཡང་རུང་\",\n \"ཀྲི་ཀི་རྒྱལ་པོ་\",\n \"ཀྲུང་ཀྲུང་\",\n \"ཀླ་ཀློ་\",\n \"ཀླ་མ་\",\n \"ཀླད་པ་\",\n \"ཀླད་རྒྱས་\",\n \"ཀླད་རྒྱས་འཐོགས་པ་\",\n \"ཀླན་ཀ་མི་ཚོལ་བ་\",\n \"ཀླན་ཀ་ཚོལ་བའི་བསམ་པ་\",\n \"ཀླུ་\",\n \"ཀླུ་བདག་\",\n \"ཀླུ་ཤིང་\",\n \"ཀླུ་སྒྲུབ་\",\n \"ཀླུང་ངམ་འབབ་ཆུ་\",\n \"ཀླུའམ་སྦྲུལ་\",\n \"ཀླུའམ་སྦྲུལ་\",\n \"ཀླུའམ་སྦྲུལ་\",\n \"ཀླུའཱི་རྒྱལ་པོ་སྲིན་བུ་\",\n \"ཀླུའི་དབང་པོའི་སྒྲ་\",\n \"ཀླུའི་རྒྱལ་པོ་ཀམ་བ་ལ་\",\n \"ཀླུའི་རྒྱལ་པོ་ཀམ་བ་ལ་དང་ཨ་ཤྭ་ཏ་ར་གཉིས་\",\n \"ཀླུའི་རྒྱལ་པོ་ཁྲ་\",\n \"ཀླུའི་རྒྱལ་པོ་གཟི་ཅན་\",\n \"ཀླུའི་རྒྱལ་པོ་གསལ་མཐོང་\",\n \"ཀླུའི་རྒྱལ་པོ་གླང་པོ་ཆེ་\",\n \"ཀླུའི་རྒྱལ་པོ་གླང་པོ་ཆེའི་མཆན་\",\n \"ཀླུའི་རྒྱལ་པོ་ཆུ་ལྷ་\",\n \"ཀླུའི་རྒྱལ་པོ་ཆུ་སྲིན་\",\n \"ཀླུའི་རྒྱལ་པོ་ཆུང་ཟད་པ་\",\n \"ཀླུའི་རྒྱལ་པོ་ཉ་ལྕིབས་\",\n \"ཀླུའི་རྒྱལ་པོ་ཉེ་དབང་\",\n \"ཀླུའི་རྒྱལ་པོ་ཉེ་ནག་\",\n \"ཀླུའི་རྒྱལ་པོ་དཀར་གསལ་\",\n \"ཀླུའི་རྒྱལ་པོ་དགའ་དང་ཉེ་དགའ་གཉིས་\",\n \"ཀླུའི་རྒྱལ་པོ་དགའ་བ་\",\n \"ཀླུའི་རྒྱལ་པོ་དུག་ཅན་\",\n \"ཀླུའི་རྒྱལ་པོ་དུང་\",\n \"ཀླུའི་རྒྱལ་པོ་དུང་སྐྱོང་\",\n \"ཀླུའི་རྒྱལ་པོ་དུས་ཅན་\",\n \"ཀླུའི་རྒྱལ་པོ་ནག་པོ་\",\n \"ཀླུའི་རྒྱལ་པོ་ནོར་རྒྱས་་\",\n \"ཀླུའི་རྒྱལ་པོ་པད་མ་\",\n \"ཀླུའི་རྒྱལ་པོ་པད་མ་ཆེན་པོ་\",\n \"ཀླུའི་རྒྱལ་པོ་བཀྲ་ཤིས་\",\n \"ཀླུའི་རྒྱལ་པོ་བདེ་བྱེད་\",\n \"ཀླུའི་རྒྱལ་པོ་བཞིན་ལེགས་\",\n \"ཀླུའི་རྒྱལ་པོ་བསགས་རྒྱས་\",\n \"ཀླུའི་རྒྱལ་པོ་བྲག་ལག་\",\n \"ཀླུའི་རྒྱལ་པོ་བློ་ཅན་\",\n \"ཀླུའི་རྒྱལ་པོ་མ་ཉམས་པ་\",\n \"ཀླུའི་རྒྱལ་པོ་མ་དྲོས་པ་\",\n \"ཀླུའི་རྒྱལ་པོ་མ་དྲོས་པས་ཞུས་བ་\",\n \"ཀླུའི་རྒྱལ་པོ་མཐའ་ཡས་\",\n \"ཀླུའི་རྒྱལ་པོ་མི་དང་ཉེ་\",\n \"ཀླུའི་རྒྱལ་པོ་མིག་བཀྲ་་\",\n \"ཀླུའི་རྒྱལ་པོ་མེ་ལོང་གདོང་\",\n \"ཀླུའི་རྒྱལ་པོ་ཙམ་པར་སྐྱེས་\",\n \"ཀླུའི་རྒྱལ་པོ་འགྲོ་ལྡིང་\",\n \"ཀླུའི་རྒྱལ་པོ་འཇོག་པ་\",\n \"ཀླུའི་རྒྱལ་པོ་འཕང་བ་\",\n \"ཀླུའི་རྒྱལ་པོ་འཕང་བ་\",\n \"ཀླུའི་རྒྱལ་པོ་འཕེལ་བ་པོ་\",\n \"ཀླུའི་རྒྱལ་པོ་ཡོངས་སུ་བརྩེགས་པ་\",\n \"ཀླུའི་རྒྱལ་པོ་རབ་བཟང་\",\n \"ཀླུའི་རྒྱལ་པོ་རི་བོ་\",\n \"ཀླུའི་རྒྱལ་པོ་རིགས་ལྡན་\",\n \"ཀླུའི་རྒྱལ་པོ་རིས་བཀྲ་\",\n \"ཀླུའི་རྒྱལ་པོ་རྒྱ་མཚོ་\",\n \"ཀླུའི་རྒྱལ་པོ་རྒྱས་བྱེད་\",\n \"ཀླུའི་རྒྱལ་པོ་རྟོགས་པའི་བུ་\",\n \"ཀླུའི་རྒྱལ་པོ་རྣམ་པར་བྱེད་\",\n \"ཀླུའི་རྒྱལ་པོ་རྩིབས་ར་\",\n \"ཀླུའི་རྒྱལ་པོ་ལག་བཟང་\",\n \"ཀླུའི་རྒྱལ་པོ་ལུག་\",\n \"ཀླུའི་རྒྱལ་པོ་ལུག་དང་འདུ་བ་གཉིས་\",\n \"ཀླུའི་རྒྱལ་པོ་ལུག་མདོག་\",\n \"ཀླུའི་རྒྱལ་པོ་ལྔ་ལེན་\",\n \"ཀླུའི་རྒྱལ་པོ་ལྷག་མ་\",\n \"ཀླུའི་རྒྱལ་པོ་ཤིན་ཏུ་ཐར་བྱེད་\",\n \"ཀླུའི་རྒྱལ་པོ་ཤིན་ཏུ་མཐོང་བ་\",\n \"ཀླུའི་རྒྱལ་པོ་སེན་མོ་ཅན་\",\n \"ཀླུའི་རྒྱལ་པོ་སེར་སྐྱ་\",\n \"ཀླུའི་རྒྱལ་པོ་སོག་མ་མེད་\",\n \"ཀླུའི་རྒྱལ་པོ་སྐྱ་བསེང་\",\n \"ཀླུའི་རྒྱལ་པོ་སྐྱ་བོ་\",\n \"ཀླུའི་རྒྱལ་པོ་སྒྲ་འབྱིན་\",\n \"ཀླུའི་རྒྱལ་པོ་སྒྲ་སྒྲོགས་་\",\n \"ཀླུའི་རྒྱལ་པོ་སྟོབས་ཀྱི་རྒྱུ་\",\n \"ཀླུའི་རྒྱལ་པོ་སྟོབས་ཅན་\",\n \"ཀླུའི་རྒྱལ་པོ་སྟོབས་མེད་\",\n \"ཀླུའི་རྒྱལ་པོ་སྟོབས་ལྷ་\",\n \"ཀླུའི་རྒྱལ་པོ་སྤོས་འཛིན་\",\n \"ཀླུའི་རྒྱལ་པོ་སྤྱད་སྲེལ་\",\n \"ཀླུའི་རྒྱལ་པོ་ཧུ་ལུ་རུ་\",\n \"ཀླུའི་རྒྱལ་པོ་ཨ་མྲའི་བུ་\",\n \"ཀླུའི་རྒྱལ་པོ་ཨུཏ་པ་ལ་\",\n \"ཀླུའི་རྒྱལ་པོ་ཨེ་ལ་འདབ་\",\n \"ཀླུའི་རྒྱལ་པོའི་མིང་ལ་\",\n \"ཀླུས་བོད་\",\n \"ཀློག་ཏུ་བཅུག་པའམ་སློབ་ཏུ་བཅུག་པ་\",\n \"ཀློག་པ་\",\n \"ཀློག་པའི་སློབ་དཔོན་\",\n \"ཁ་\",\n \"ཁ་\",\n \"ཁ་ཁམ་གྱིས་བཀང་སྟེ་མི་སྨྲ་\",\n \"ཁ་གཟར་\",\n \"ཁ་གསག་\",\n \"ཁ་ཅིག་\",\n \"ཁ་ཅིག་གམ་ལ་ལ་\",\n \"ཁ་ཏོན་བྱང་བ་\",\n \"ཁ་ཏོན་བྱེད་པ\",\n \"ཁ་དུམ་པ་\",\n \"ཁ་དོག་གི་གཟུགས་\",\n \"ཁ་དོག་ངན་པ་\",\n \"ཁ་དོག་ངན་བའམ་མདོག་མི་སྡུག་པ་\",\n \"ཁ་དོག་བཟང་པོ་\",\n \"ཁ་དོག་བཟང་པོ་རྒྱས་པ་མཆོག་དང་ལྡན་པ་\",\n \"ཁ་དོག་མཐའ་ཡས་པ་\",\n \"ཁ་དོག་འདྲ་བའམ་ལྟ་བུ་\",\n \"ཁ་དོག་རན་པ་\",\n \"ཁ་ན་མ་ཐོ་བ་དང་བཅས་པ་\",\n \"ཁ་ན་མ་ཐོ་བ་མི་མངའ་བ་\",\n \"ཁ་ན་མ་ཐོ་བ་མེད་པ་\",\n \"ཁ་བ་\",\n \"ཁ་མ་བསྒྱུར་བའི་གོས་གྱོན་པ་\",\n \"ཁ་ཟས་ལ་བརྐམ་པར་འགྱུར་\",\n \"ཁ་ཟེར་བ་\",\n \"ཁ་འོག་ཏུ་ལུས་འཁྲུས་པ་\",\n \"ཁ་རན་\",\n \"ཁ་རན་ནམ་ཁ་ཁྱེར་\",\n \"ཁ་སྤུ་\",\n \"ཁ་སྲན་ཆུང་ངུ་\",\n \"ཁང་ཁྱིམ་\",\n \"ཁང་ཁྱིམ་\",\n \"ཁང་ཆེན་\",\n \"ཁང་པ་\",\n \"ཁང་པ་\",\n \"ཁང་པ་བརྩེགས་པ་\",\n \"ཁང་པ་ཟླུམ་པོ་\",\n \"ཁང་པ་རལ་ཞིང་གྲུམ་པ་\",\n \"ཁང་པའམ་ཁང་བཟང་\",\n \"ཁང་སྟེང་\",\n \"ཁབ་\",\n \"ཁབ་རལ་\",\n \"ཁབ་རལ་འཆོས་པ་\",\n \"ཁབ་ལོང་\",\n \"ཁམ་\",\n \"ཁམ་\",\n \"ཁམ་གྱི་ཟས་\",\n \"ཁམ་མ་གཟས་པར་ཁ་མི་གདང་\",\n \"ཁམ་འཕྲོ་མི་བཅད་\",\n \"ཁམ་རན་པ་\",\n \"ཁམ་ཧ་ཅང་ཆུང་བ་ཡང་མ་ཡིན་\",\n \"ཁམ་ཧ་ཅང་ཆེན་པོ་མ་ཡིན་\",\n \"ཁམས་ཀྱི་ཚོགས་\",\n \"ཁམས་ཀྱི་རྒྱལ་པོའམ་རྒྱལ་ཕྲན་\",\n \"ཁམས་གསུམ་ལ་མ་ཆགས་པ་\",\n \"ཁམས་ངན་པ་\",\n \"ཁམས་བཅུ་བརྒྱད་ཀྱི་མིང་ལ་\",\n \"ཁམས་བཟང་པོ་\",\n \"ཁམས་བར་པ་\",\n \"ཁམས་རྣམས་དང་མི་ལྡན་པ་\",\n \"ཁམས་སུ་གཏོགས་པ་\",\n \"ཁམས་སྣ་ཚོགས་མཁྱེན་པའི་སྟོབས་\",\n \"ཁའི་གྲྭ་\",\n \"ཁར་དཀྲོལ\",\n \"ཁས་བླང་བར་འོས་པ་\",\n \"ཁས་འཆེ་བའི་དགེ་སློང་\",\n \"ཁུ་བ་འབྱིན་པ་\",\n \"ཁུ་བའམ་ཞུ་བའམ་གཤེར་བ་\",\n \"ཁུ་བྱུག་\",\n \"ཁུ་ཚུར (ལྟག་དབྱུག)\",\n \"ཁུ་ཚུར་\",\n \"ཁུ་ཚུར་\",\n \"ཁུག་རྟ་\",\n \"ཁུག་རྣ་\",\n \"ཁུག་རྣ་(ཁུག་སྣ)\",\n \"ཁུག་སྣ་ (ཁུག་རྣ་)\",\n \"ཁུང་ངམ་དོང་\",\n \"ཁུང་ངམ་དོང་\",\n \"ཁུད་པའམ་རྫོངས་\",\n \"ཁུར་གྱིས་དུབ་པ་\",\n \"ཁུར་བ་\",\n \"ཁུར་བོར་བ་\",\n \"ཁུར་སྐྱ་\",\n \"ཁེངས་པའམ་རེངས་པ་\",\n \"ཁེབས་པའམ་གཡོགས་པའམ་སྐུ་གཡོལ་བ་\",\n \"ཁོག་པ\",\n \"ཁོང་ཁྲོ་བ་\",\n \"ཁོང་དུ་ཆུད་པ་\",\n \"ཁོང་དུ་ཆུད་པར་དཀའ་བ\",\n \"ཁོང་དུ་ཆུད་པར་དཀའ་བ་\",\n \"ཁོང་ནས་འཁྲུག་པ་\",\n \"ཁོང་སྟོང་\",\n \"ཁོངས་མྱགས་ཤིང་ཕྱིར་འཛག་པ་\",\n \"ཁོར་ཁོར་ཡུག་ཏུ་དཔག་ཚད་ཕྱེད་པ་\",\n \"ཁོར་ཡུག་གམ་ཉེ་འཁོར་\",\n \"ཁོར་ས་\",\n \"ཁོལ་མའམ་སྐར་ཁུང་དྲ་བ་ཅན་\",\n \"ཁྭ་ (ལྦ་)\",\n \"ཁྭ་ (ལྦ་)\",\n \"ཁྭ་ལྕགས་ཀྱི་མཆུ་ཞེས་བྱ་བ་\",\n \"ཁྭ་སྐད་ཤེས་པ་\",\n \"ཁྱད་ཆེས་འཕགས་པ་\",\n \"ཁྱད་དུ་གསོད་པ་\",\n \"ཁྱད་དུ་གསོད་པ་\",\n \"ཁྱད་དུ་གསོད་པར་བྱེད་\",\n \"ཁྱད་པར་བཞེས་གཉེན་\",\n \"ཁྱད་པར་འཕགས་པ་\",\n \"ཁྱད་པར་ལུང་སྟོན་པ་\",\n \"ཁྱད་ཕྱིན་\",\n \"ཁྱད་ཕྱིན་\",\n \"ཁྱད་ཕྱིན་ (ཁྱད་གྱིན་)\",\n \"ཁྱད་ཕྱིན་ཆེན་པོ་\",\n \"ཁྱད་བྱིན་ཕྲག་བརྒྱ་ན་པང་སྟེངས་པ་ཞེས་བྱའོ་\",\n \"ཁྱབ་པ་\",\n \"ཁྱབ་པའམ་རྒྱས་པ་\",\n \"ཁྱབ་བདག (དམག་དཔོན)\",\n \"ཁྱབ་བདག་\",\n \"ཁྱབ་འཇུག་\",\n \"ཁྱི་\",\n \"ཁྱི་\",\n \"ཁྱི་རྔོ་\",\n \"ཁྱི་ཤིག་\",\n \"ཁྱིམ་\",\n \"ཁྱིམ་\",\n \"ཁྱིམ་\",\n \"ཁྱིམ་ཁོལ་\",\n \"ཁྱིམ་གྱི་གནས་པ་\",\n \"ཁྱིམ་གྱི་དང་ར་ལྷ་ཁང་ངམ་མཆོད་རྟེན་ཀྱི་སྐབས་སུ་ང་ག་ན་འཁོར་སའམ་ཉེ་འཁོར་དུ་གདགས་\",\n \"ཁྱིམ་ཐབས་ལས་མི་འཕྲོ་བ་\",\n \"ཁྱིམ་དུ་འདུག་པ་ལ་མ་དྲིས་པར་ཟས་དང་འབགས་པའི་ཆུ་ཁྱིམ་པའི་ཁྱིམ་དུ་མི་དབོ་\",\n \"ཁྱིམ་ན་གནས་པ་\",\n \"ཁྱིམ་ན་གནས་པ་\",\n \"ཁྱིམ་ན་གནས་ཤིང་\",\n \"ཁྱིམ་བ་\",\n \"ཁྱིམ་བདག་གི་རིགས་ཤིན་སཱ་ལ་ཆེན་པོ་ལྟ་བུ་\",\n \"ཁྱིམ་བདག་དཔས་སྦྱིན་གྱིས་ཞུས་པ་\",\n \"ཁྱིམ་བདག་རིན་པོ་ཆེ་\",\n \"ཁྱིམ་བརྟག་པའི་དཔྱད་\",\n \"ཁྱིམ་བྱ་\",\n \"ཁྱིམ་རིམ་གྱིས་ཐུར་མས་འདྲིམ་\",\n \"ཁྱིམ་སུན་འབྱིན་པ་\",\n \"ཁྱིམ་སོ་\",\n \"ཁྱིམ་སོ་སོར་བསྒོ་བ་\",\n \"ཁྱིམ་སྟོང་པ་རྒྱས་པར་བྱེད་པ་\",\n \"ཁྱིམས་འབུགས་པ་\",\n \"ཁྱུ་མཆོག་\",\n \"ཁྱུ་མཆོག་གི་གནས་སུ་དམ་འཆའ་འམ་ཞལ་གྱིས་འཆེས་པ་\",\n \"ཁྱུ་མཆོག་གི་སྟབས་སུ་གཤེགས་པ་\",\n \"ཁྱེད་ཚུར་ཤོག་\",\n \"ཁྱེའུ་\",\n \"ཁྱེའུ་\",\n \"ཁྱེའུས་ཁྱེའུ་འབྱུང་བའི་ཚུལ་དུ་\",\n \"ཁྱེར་ཏེ་ཤོག་\",\n \"ཁྱོ་ཤུག་\",\n \"ཁྱོ་ཤུག་\",\n \"ཁྱོགས་ན་འདུག་པ་ལ་ཆོས་མི་བཤད་\",\n \"ཁྲ་\",\n \"ཁྲ་ཁྲོ་ཅན་ནམ་སྤྲོ་ཐུང་བ་\",\n \"ཁྲག་\",\n \"ཁྲག་ཁྲིག་\",\n \"ཁྲག་ཁྲིག་\",\n \"ཁྲག་ཁྲིག་\",\n \"ཁྲག་ཁྲིག་ཆེན་པོ་\",\n \"ཁྲག་ཁྲིག་ཕྲག་བརྒྱ་ན་གཏམས་པ་ཞེས་བྱའོ་\",\n \"ཁྲག་ནད་\",\n \"ཁྲབ་\",\n \"ཁྲབ་ཁྲིབ་\",\n \"ཁྲི་\",\n \"ཁྲི་\",\n \"ཁྲི་\",\n \"ཁྲི་\",\n \"ཁྲི་\",\n \"ཁྲི་བྱེ་བ་(བྱེ་བ་)\",\n \"ཁྲི་ཤིང་\",\n \"ཁྲི་སྟན་མཐོན་པོ་དང་ཁྲི་སྟན་ཆེན་པོ་སྤོང་བ་\",\n \"ཁྲིབ་ཁྲིབ་\",\n \"ཁྲིམས་དྲལ་ཏེ་གྲོན་དུ་འགྲོ་བ་\",\n \"ཁྲིམས་སུ་བྱས་པ་\",\n \"ཁྲིའི་རྐང་བ་འཆོས་པ་\",\n \"ཁྲིའུ་\",\n \"ཁྲིའུ་\",\n \"ཁྲིའུ་\",\n \"ཁྲིའུ་\",\n \"ཁྲིའུ་\",\n \"ཁྲུ་\",\n \"ཁྲུ་གང་\",\n \"ཁྲུ་གང་ཁོར་ཡུག་\",\n \"ཁྲུན་ནམ་འཕང་ངམ་སྲིད་\",\n \"ཁྲུམས་སྟོད་\",\n \"ཁྲུམས་སྨད་\",\n \"ཁྲུལ་ཡས་\",\n \"ཁྲུས་བྱེད་པའི་ལྟུང་བྱེད་\",\n \"ཁྲུས་རས་\",\n \"ཁྲེ་\",\n \"ཁྲེ་\",\n \"ཁྲེལ་མེད་པ་\",\n \"ཁྲེལ་ཡོད་པ་\",\n \"ཁྲེལ་ཡོད་པའི་ནོར་\",\n \"ཁྲོ་གཉེར་\",\n \"ཁྲོ་གཉེར་མེད་པ་\",\n \"ཁྲོ་བ་\",\n \"ཁྲོ་བའམ་གཙེ་བ་\",\n \"ཁྲོ་ཞིང་གཏུམ་པའི་རྣམ་པ་དང་གནོད་པའི་མིང་ལ་\",\n \"ཁྲོང་ཁྱེར་གྱི་བླ་\",\n \"ཁྲོན་པ་\",\n \"ཁྲོན་པ་\",\n \"ཁྲོན་པས་རུང་བ་\",\n \"ཁྲོམ་གྱི་རུ་\",\n \"ཁྲོས་ཀྱང་སླར་མི་ཁྲོ་བར་བྱ་\",\n \"ག་གོན་\",\n \"ག་བུར\",\n \"ག་བུར་\",\n \"ག་ཡ་འོད་སྲུང་\",\n \"ག་ཡཱ་མགོའི་རི་\",\n \"ག་རུ་ཌ་དང་འདོམ་ན་འདབ་གཟང་\",\n \"གང་གཱའི་ཀླུའི་རྒྱལ་པོ་\",\n \"གང་གི་ཕྱིར་རམ་འདི་ལྟར་\",\n \"གང་གི་ཚེ་\",\n \"གང་གི་ཚེ་དེའི་ཚེ\",\n \"གང་གི་ཚེ་བཅོམ་ལྡན་འདས་ཀྱིས་ལྷ་དང་བཅས་པའི་འཇིག་རྟེན་ཚོགས་པར་མཁྱེན་པ་\",\n \"གང་གིའམ་གང་ལ་\",\n \"གང་གིས་ཀྱང་\",\n \"གང་གིས་ཀྱང་མི་བྱའོ་\",\n \"གང་གིས་སམ་གང་གི་ཕྱིར་\",\n \"གང་དག་\",\n \"གང་དག་གི་ཕྱིར་\",\n \"གང་དུ་\",\n \"གང་ན་\",\n \"གང་ན་ཉི་མ་དང་ཟླ་བའི་འོད་མི་འབབ་པ་\",\n \"གང་བའམ་རྫོགས་པ་\",\n \"གང་ཚུལ་ཤིང་མང་པོ་སྦྱིན་པར་འོས་པ་\",\n \"གང་ཞེས་བསྟན་པ་\",\n \"གང་ཟག་\",\n \"གང་ཟག་གཞན་ལ་དགོངས་པ་\",\n \"གང་ཟག་གིས་གང་ཟག་ལ་ཚོད་མ་ཟུང་ཞིག་\",\n \"གང་ཟག་གིས་རུང་བ་\",\n \"གང་ཟག་བཞིའི་མིང་ལ་\",\n \"གང་ཟག་ཟླ་མེད་པ་\",\n \"གང་ཟག་ལ་ཚད་ཀྱང་མ་འཛིན་ཅིག་\",\n \"གང་འདོད་པ་བཙལ་གྱིས་མ་རྙེད་པ་དེ་ཡང་སྡུག་བསྔལ་\",\n \"གང་ཡང་\",\n \"གང་ཡང་རུང་བ་\",\n \"གང་ཡིན་པའམ་གང་\",\n \"གང་རྣམས་ཀྱི་\",\n \"གང་ལ་ལ་\",\n \"གང་ལ་ལའི་\",\n \"གང་ལ་ལས་སམ་ག་ལ་ཞིག་\",\n \"གང་སུ་དག་\",\n \"གངས་ཅན་\",\n \"གངས་རིའི་སྡེ་\",\n \"གངས་སམ་རི་ཁ་བ་ཅན་\",\n \"གཅད་པ་\",\n \"གཅན་གཟན་\",\n \"གཅན་གཟན་ཁྲོ་བོ་\",\n \"གཅིག་\",\n \"གཅིག་\",\n \"གཅིག་\",\n \"གཅིག་\",\n \"གཅིག་གི་ནང་དུ་གཅིག་བསྡུས་བ་\",\n \"གཅིག་ཏུ་གྱུར་ནས་མང་པོར་འགྱུར་\",\n \"གཅིག་ཏུ་ངེས་པ་\",\n \"གཅིག་ཏུ་བསྡུས་ཏེ་\",\n \"གཅིག་ཏུ་བསྡུས་ནས་\",\n \"གཅིག་ཏུ་མཛེས་པ་\",\n \"གཅིག་ཏུ་འདུས་ནས་\",\n \"གཅིག་ཏུ་འདུས་སམ་ཕྲད་ནས་\",\n \"གཅིག་ཏུ་འཛིན་པ་\",\n \"གཅིག་ནས་གཅིག་ཏུ་\",\n \"གཅིག་ནས་གཅིག་ཏུ་ཞེའམ་བརྒྱུད་པ་\",\n \"གཅིག་ནས་རྟོག་པ་\",\n \"གཅིག་པུར་དབེན་པའམ་ལྐོག་ཏུ་སོང་སྟེ་\",\n \"གཅིག་ལ་གཅིག་མེད་པ་\",\n \"གཅིག་ལ་མ་གྲུབ་པ་\",\n \"གཅིག་ལས་འཕྲོས་པའི་ལུང་\",\n \"གཅིན་\",\n \"གཅིན་ནད་\",\n \"གཅིན་སྲི་བ་\",\n \"གཅེར་བུ་པ་\",\n \"གཅེར་བུ་པ་གཉེན་གྱི་བུ་\",\n \"གཅེར་བུ་པ་ལ་སྦྱིན་པ་\",\n \"གཅེས་པར་བྱེད་པ་\",\n \"གཅེས་སྤྲས་བྱེད་པ་\",\n \"གཅོག་གོ་\",\n \"གཅོང་ཆེན་པོ་\",\n \"གཅོང་ཞིའི་ཆུ་\",\n \"གཅོད་\",\n \"གཅོད་དོ་\",\n \"གཅོད་པ་\",\n \"གཅོད་རྟོགས་\",\n \"གཅོད་རྟོགས་ལྡན་\",\n \"གཉའ་གོང་དུ་མི་བསྣོལ་\",\n \"གཉའ་ཤིང་\",\n \"གཉའ་ཤིང་གང་ཙམ་དུ་བལྟ་བ་\",\n \"གཉའ་ཤིང་འཛིན་\",\n \"གཉིད་\",\n \"གཉིད་ཀྱིས་ལོག་པ་\",\n \"གཉིས་\",\n \"གཉིས་ཀ་ལ་མ་གྲུབ་པ་\",\n \"གཉིས་ཀའི་ཆ་ལས་རྣམ་པར་གྲོལ་བ་\",\n \"གཉིས་ཀྱིས་གཉིས་སྤྲད་པ་\",\n \"གཉིས་པ་\",\n \"གཉིས་སུ་བྱར་མེད་\",\n \"གཉིས་སུ་མེད་པ་\",\n \"གཉིས་སུ་མེད་པར་གསུང་བ་\",\n \"གཉིས་སུ་རྒྱབ་རྟེན་དམར་པོ་བཞག་པ་\",\n \"གཉིས་སུ་སྤྱོད་པ་མེད་པ་\",\n \"གཉེ་མ་\",\n \"གཉེན་པས་བསྲུངས་པ་\",\n \"གཉེན་པོ་ལ་ལྡེམ་པོར་དགོངས་པ་\",\n \"གཉེན་འདབ་\",\n \"གཉེར་བ་\",\n \"གཉེར་མ་མང་བ་\",\n \"གཉེར་མ་རེངས་པ་ (གཉེར་མ་རངས་པ་)\",\n \"གཉོད་\",\n \"གཎ་ཌི\",\n \"གཎ་ཌིའི་ཐེའུ\",\n \"གཏང་བ་\",\n \"གཏང་ཡས་\",\n \"གཏན་དུ་བ་\",\n \"གཏན་པ་\",\n \"གཏན་པ་དབྱེ་བའི་ལྕགས་སྦུ་གུའོ་\",\n \"གཏན་པ་སྲི་བ་མེད་པའི་མཆོད་སྦྱིན་\",\n \"གཏན་མེད་པ་\",\n \"གཏན་ཚིགས་\",\n \"གཏན་ཚིགས་\",\n \"གཏན་ཚིགས་ཀྱི་རིག་པ་\",\n \"གཏན་ལ་དབབ་པ་\",\n \"གཏན་ལ་ཕབ་པར་བསྟན་པའི་སྟེ\",\n \"གཏན་ལ་འབེབས་པ་\",\n \"གཏམ་གྱི་གཞི་\",\n \"གཏམ་འདྲེས་པ་\",\n \"གཏམ་རྒྱུད་\",\n \"གཏམས་\",\n \"གཏམས་\",\n \"གཏམས་\",\n \"གཏམས་ཆེན་པོ་\",\n \"གཏམས་པ་ཕྲག་བརྒྱ་ན་དཀྲིགས་པ་ཞེས་བྱའོ་\",\n \"གཏའ་གམ་པ་\",\n \"གཏི་མུག་བདོ་བའམ་ཤས་ཆེ་བའམ་མི་བཟད་པའམ་ཚ་བ་\",\n \"གཏི་མུག་མེད་པའི་དགེ་བའི་རྩ་བ་\",\n \"གཏིང་དཔག་དཀའ་བ་\",\n \"གཏུགས་པ་\",\n \"གཏུན\",\n \"གཏུན་བུ་\",\n \"གཏུམ་པ་\",\n \"གཏེར་\",\n \"གཏེར་ལྟ་ཤེས་པ་\",\n \"གཏོགས་པ་\",\n \"གཏོང་བ་དང་མཆོད་སྦྱིན་བྱེད་པ་ལ་སོགས་པའི་མིང་ལ་\",\n \"གཏོང་བ་རྗེས་སུ་དྲན་པ་\",\n \"གཏོང་བའམ་འདོར་བ་\",\n \"གཏོང་བའི་ནོར་\",\n \"གཏོང་བའི་བྱིན་གྱིས་བརླབས་པ་\",\n \"གཏོར་ཁུང་(སྟོར་ཁུང་)\",\n \"གཏོར་མ་\",\n \"གད་ཁ་\",\n \"གད་ཁ་མ་ཡིན་པ་དང་གཡང་ས་མ་ཡིན་པ་དང་དཀན་གཟར་པོ་མ་ཡིན་པ་ལ་ལྷུང་བཟེད་གཞག་པར་བྱ་\",\n \"གདག་པའམ་བཅའ་བ་\",\n \"གདག་པའམ་བཅའ་བ་\",\n \"གདགས་པའི་གཙུག་ལག་བསྟན་བཅོས་\",\n \"གདང་བུ་\",\n \"གདང་བུ་\",\n \"གདན་ལ་གཤེགས་པ་\",\n \"གདབ་ཡས་\",\n \"གདབ་ཡས་\",\n \"གདམས་པ་\",\n \"གདམས་པ་\",\n \"གདམས་པའམ་བཏུས་པའམ་བརྟགས་པའམ་རྣམ་པར་ཕྱེ་བ་\",\n \"གདམས་པར་སྨྲ་བ་\",\n \"གདིང་བ་\",\n \"གདིང་བ་\",\n \"གདིང་བ་ལས་གྱུར་པ་\",\n \"གདུ་བ་\",\n \"གདུ་བུ་\",\n \"གདུ་བུ་\",\n \"གདུ་བུ་རྒྱན་ཅན་\",\n \"གདུགས་\",\n \"གདུགས་\",\n \"གདུགས་ཐོགས་པ་\",\n \"གདུགས་དང་རྒྱལ་མཚན་དང་བ་དན་བསྒྲེང་བ་\",\n \"གདུང་\",\n \"གདུབ་བུ་ཐམ་པ་\",\n \"གདེགས་པ་མེད་པ་དང་གཞག་པ་མེད་པ\",\n \"གདེངས་ཀ་ཆེན་པོ་\",\n \"གདོང་ཁྱིའི་ལྟ་བུ་\",\n \"གདོང་ཕྱིས་\",\n \"གདོལ་པ་དང་གླང་པོ་\",\n \"གདོལ་པའི་བུ་མོ་བྱད་བཟང་མོ་\",\n \"གདོས་པ་འཛིན་པའམ་རླུང་གཡོར་ཐོགས་པ་\",\n \"གནང་བ་\",\n \"གནང་བའམ་འབྲང་བའམ་འཐུན་པར་གནང་བ་\",\n \"གནང་བའམ་རུང་བར་བྱ་བ་\",\n \"གནད་དུ་ཕོག་པ་\",\n \"གནམ་གྱིས་བསྐོས་པ་\",\n \"གནམ་གྲུམ་པའམ་སྒྲ་དྲག་པོ་\",\n \"གནམ་པོ་\",\n \"གནམ་སྟོད་\",\n \"གནམ་སྟོད་མ་ཡིན་པ་\",\n \"གནའི་རབས་\",\n \"གནས་\",\n \"གནས་\",\n \"གནས་ཁང་\",\n \"གནས་ཁང་\",\n \"གནས་ཁང་བསྒོ་བ་\",\n \"གནས་ཁང་སྤགས་པ་།་གནས་ཁང་དཔག་\",\n \"གནས་གཅིག་གནས་པ་\",\n \"གནས་གྱུར་པ\",\n \"གནས་ངན་ལེན་\",\n \"གནས་ངན་ལེན་བརྗོད་པ་\",\n \"གནས་ངན་ལེན་འཆབ་བ་\",\n \"གནས་དང་གནས་མ་ཡིན་པ་མཁྱེན་པའི་སྟོབས་\",\n \"གནས་ནས་དབྱུང་བ་\",\n \"གནས་པ་\",\n \"གནས་པ་\",\n \"གནས་པ་\",\n \"གནས་པ་\",\n \"གནས་པ་མེད་པར་སྤྱོད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"གནས་པ་ལས་གཞན་དུ་གྱུར་བ་\",\n \"གནས་པའམ་བརྟན་པོ་\",\n \"གནས་པའམ་བརྟེན་པ་\",\n \"གནས་པར་དམ་བཅས་བ་\",\n \"གནས་པར་མི་བྱ་པ་\",\n \"གནས་བཅའ་བ་\",\n \"གནས་བཅས་\",\n \"གནས་བཞི་\",\n \"གནས་བཞིའི་མིང་ལ་\",\n \"གནས་བརྟན་\",\n \"གནས་བྱིན་པ་\",\n \"གནས་མ་བུའི་སྡེ་\",\n \"གནས་མེད་པ་\",\n \"གནས་འཆའ་བ་\",\n \"གནས་འཇོག་\",\n \"གནས་ལ་བརྟེན་པ་མེད་པ་ལ་བརྩོན་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"གནས་ལ་རྟེན་པ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"གནས་ལྔ་ལ་བྱང་བར་གྱུར་རོ་\",\n \"གནས་སམ་ཁང་པ་\",\n \"གནས་སམ་ཚང་\",\n \"གནས་སམ་རྟེན་\",\n \"གནས་སམ་རྟེན་\",\n \"གནས་སུ་བྱ་བ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"གནས་སྐབས་ཁ་ཅིག་ཏུ་བཞག་པ་\",\n \"གནས་སྐབས་ལས་གྱུར་པ་\",\n \"གནོང་མི་བཀུར་བའི་གང་ཟག་རྣམས་ཚར་གཅད་པའི་ཕྱིར་\",\n \"གནོང་མི་བསྐུར་བ་\",\n \"གནོད་པ་ཅན་ནམ་གནོད་པ་དང་བཅས་པ་\",\n \"གནོད་པ་ཆུང་ངམ་\",\n \"གནོད་པ་ཆོམས་པའམ་ཚེར་མ་དཀྲུགས་པ་\",\n \"གནོད་པ་བྱུང་བ་མ་གཏོགས་པར་ཤིང་ལ་མི་གང་ཙམ་ལས་མཐོར་འཛེག་པ་ལ་བསླབ་པར་བྱ་\",\n \"གནོད་པ་བྱེད་པ་\",\n \"གནོད་པའི་སེམས་དང་ལྡན་པ་\",\n \"གནོད་པར་བྱེད་པའམ་བརྗེད་པའམ་འཚེ་བ་\",\n \"གནོད་པར་མ་གྱུར་ཏོ་\",\n \"གནོད་བྱ་གནོད་བྱེད་ཀྱི་འབྲེལ་བ་\",\n \"གནོད་བྱེད་\",\n \"གནོད་མཛེས་\",\n \"གནོད་འགྲིབ་\",\n \"གནོད་ལྟས་ (བལྟ་ཉེས་པ)\",\n \"གནོད་སེམས་ལས་འབྱིན་པ་ནི་གནོད་སེམས་མེད་པ་སྟེ་བྱམས་པ་\",\n \"གནོད་སེམས་སྤོང་བ་\",\n \"གནོད་སེལ་\",\n \"གནོད་སྦྱིན་\",\n \"གནོད་སྦྱིན་གྱི་དབང་པོའི་མིང་ལ་\",\n \"གནོད་སྦྱིན་གྱི་སྡེ་དཔོན་ཆེན་པོ་\",\n \"གནོད་སྦྱིན་འབྲོག་གནས་\",\n \"གནོན་པ་\",\n \"གནོན་པར་བྱེད་པ་\",\n \"གབ་ཙེ་\",\n \"གཙང་བ་\",\n \"གཙང་བ་\",\n \"གཙང་བའམ་གཙང་སྤྲ་ཆེ་བ་\",\n \"གཙང་སྦྲ་སྤྱོད་པ་\",\n \"གཙུག་ཏོར་གྱི་གསེབ་ཏུ་ཞུགས་\",\n \"གཙུག་ཏོར་ཅན་\",\n \"གཙུག་ན་ནོར་བུ་\",\n \"གཙུག་ན་ནོར་བུ་ཆེན་པོ་\",\n \"གཙུག་ན་ནོར་བུ་ཐོགས\",\n \"གཙུག་ན་རིན་པོ་ཆེ་\",\n \"གཙུག་ན་རིན་པོ་ཆེས་ཞུས་པ་\",\n \"གཙུག་ཕུད་ཀྱི་དུས་སྟོན་\",\n \"གཙུག་ལག་\",\n \"གཙུག་ལག་ཁང་\",\n \"གཙུག་ལག་ཁང་གི་དུས་སྟོན་\",\n \"གཙུག་ལག་ཁང་ཆེང་གནས་པའི་སྡེ་\",\n \"གཙུག་སྤྱོད་\",\n \"གཙུབ་ཤིང་(བཙུབ་ཤིང་)\",\n \"གཙུབས་པའམ་བསྲུབས་པ་\",\n \"གཙོ་བོ་\",\n \"གཙོ་བོའམ་གཅེས་པ་\",\n \"གཙོ་བོའམ་དངོས་\",\n \"གཞག་པའམ་སྨྲས་པ་འདི་ནི་མི་མཐུན་པའོ\",\n \"གཞག་པར་ལུང་བསྟན་པ་\",\n \"གཞང་འགྲུམ་(ཞང་འབྲུམ་)\",\n \"གཞད་གད་\",\n \"གཞན་གྱི་ཆ་\",\n \"གཞན་གྱི་དབང་གི་མཚན་ཉིད་\",\n \"གཞན་གྱི་དྲིང་མི་འཇོག་པ་\",\n \"གཞན་གྱི་དྲིང་ལ་མི་འཇོག་པ་\",\n \"གཞན་གྱི་ཕྱོགས་\",\n \"གཞན་གྱི་ཚད་མ་\",\n \"གཞན་གྱི་རིགས་ཀྱི་དཔེ་ཉེ་བར་སྦྱར་བའི་མཚན་ཉིད་\",\n \"གཞན་གྱི་རྣམ་པ་\",\n \"གཞན་གྱི་སྒྲའི་རྒྱུ་ལས་བྱུང་བ་\",\n \"གཞན་གྱིས་གསོལ་བ་བཏབ་པ་སེམས་ལས་གྱུར་པ་\",\n \"གཞན་གྱིས་བསྒོ་བ་སེམས་པ་ལས་གྱུར་པ་\",\n \"གཞན་གྱིས་མ་ཆོད་པ་ཚེ་ལ་\",\n \"གཞན་གྱིས་མི་ཐུབ་པའི་གཟི་བརྗིད་\",\n \"གཞན་གྱིས་མི་བཀྲི་བའམ་གཞན་གྱིས་ཁ་དྲང་དུ་མི་རུང་བ་\",\n \"གཞན་དག་གི་ཉེས་པའི་སྐབས་དང་འཁྲུལ་བ་མི་ཚོལ་\",\n \"གཞན་དུ་འགྱུར་བ་\",\n \"གཞན་དུའམ་མ་གཏོགས་པ་\",\n \"གཞན་དུའམ་མ་གཏོགས་པ་\",\n \"གཞན་ན་ཨྔ་ག་ཞེས་པ་འདུག་པ་བརྟག་\",\n \"གཞན་མ་ཡིན་པ་དེ་བཞིན་ཉིད་\",\n \"གཞན་འཕྲུལ་དབང་བྱེད་\",\n \"གཞན་ཡང་\",\n \"གཞན་ཡང་ཞེས་པའམ་འོན་ཀྱང་\",\n \"གཞན་ལ་ཕན་པ་\",\n \"གཞན་ལ་རག་མ་ལས་པ་\",\n \"གཞན་ལ་སྨོད་པ་\",\n \"གཞན་སེལ་བའི་སྒྲའི་དོན་\",\n \"གཞལ་གྱིས་མི་ལང་བ་\",\n \"གཞལ་གྱིས་མི་ལང་བ་ལས་བསྒྲེས་པ་\",\n \"གཞལ་གྱིས་ལང་བ་\",\n \"གཞལ་ཐག་\",\n \"གཞལ་ཐག་\",\n \"གཞལ་ཐིམ\",\n \"གཞལ་ཐིམ་།་ (གཞལ་ཐིལ་)\",\n \"གཞལ་དཔག་\",\n \"གཞལ་དཔག་\",\n \"གཞལ་དུ་མེད་པ་\",\n \"གཞལ་དུ་མེད་པ་\",\n \"གཞལ་དུ་མེད་པ་\",\n \"གཞལ་དུ་མེད་པ་ལ་བསྒྲེས་པ་\",\n \"གཞལ་དུ་མེད་པ་ལས་བསྒྲེས་པ་\",\n \"གཞལ་དུ་མེད་པའི་གོས་\",\n \"གཞལ་ཕུལ་\",\n \"གཞལ་ཕུལ་ (གཞལ་ཡུལ་)\",\n \"གཞལ་བ་\",\n \"གཞལ་བ་འམ་བྱེད་པ་\",\n \"གཞལ་བགྲང་\",\n \"གཞལ་བགྲང་\",\n \"གཞལ་བྱ་\",\n \"གཞལ་མེད་\",\n \"གཞལ་མེད་\",\n \"གཞལ་འཁོར་\",\n \"གཞལ་འཁོར་\",\n \"གཞལ་འཕྱོས་\",\n \"གཞལ་འཕྱོས་\",\n \"གཞལ་ཡས་\",\n \"གཞལ་ཡས་\",\n \"གཞལ་སངས་\",\n \"གཞལ་སངས་\",\n \"གཞི་ཇི་བཞིན་པ\",\n \"གཞི་ཐམས་ཅད་ཡོད་པར་སྨྲ་བའི་སྡེ་\",\n \"གཞི་དང་བརྟེན་པའི་མཚན་ཉིད་ཀྱི་(ཀྱིས)འབྲེལ་བ་\",\n \"གཞི་ནས་སྤོ་བ་\",\n \"གཞི་ནས་སྤོ་བ་\",\n \"གཞི་བ་\",\n \"གཞི་བསྲུང་\",\n \"གཞི་མ་གྲུབ་པ་\",\n \"གཞི་མཐུན་པ་\",\n \"གཞི་མི་འགྲིབ་པ་\",\n \"གཞི་མེད་པར་སྐུར་བ་འདེབས་པ་\",\n \"གཞི་ཚུགས་\",\n \"གཞི་རིན་པོ་ཆེའམ་རིན་པོ་ཆེ་ལས་གྲུབ་པའམ་རིན་པོ་ཆེ་ལས་བྱས་པའམ་རིན་པོ་ཆེའི་རང་བཞིན་\",\n \"གཞི་རིན་པོ་ཆེར་གྱུར་ཏོ་\",\n \"གཞིའི་གནས་\",\n \"གཞིའི་གཞུང་\",\n \"གཞུ་\",\n \"གཞུ་ཐོགས་\",\n \"གཞུ་བདུང་བ་\",\n \"གཞུགས་པ་ལ་ལྡེམ་པོར་དགོངས་པ་\",\n \"གཞུང་བླ་མ་\",\n \"གཞུང་འགྲེལ་\",\n \"གཞུང་ལུགས་སམ་སྔགས་ཀྱི་སྐབས་སུ་དམ་ཚིག་\",\n \"གཞེས་སོ་\",\n \"གཞོག་འཕྱས་ཟེར\",\n \"གཞོག་སློང་\",\n \"གཞོགས་ཕྱེད་འཇས་པ་\",\n \"གཞོགས་ཕྱེད་སྐམ་པར་མི་འགྱུར་\",\n \"གཞོགས་འཕྱས་\",\n \"གཞོན་ཆེས་པ་\",\n \"གཞོན་ནུ་\",\n \"གཞོན་ནུ་དཔལ་འབྱུང་\",\n \"གཞོན་ནུ་མ་\",\n \"གཞོན་པ་\",\n \"གཞོན་རབས་\",\n \"གཞོན་རིམས་\",\n \"གཞོམ་པའམ་དྲལ་བ་\",\n \"གཞོལ་བ་\",\n \"གཟང་ལྡན\",\n \"གཟའ་དགུའི་མིང་ལ་\",\n \"གཟའ་ལྷག་\",\n \"གཟར་ཐག་\",\n \"གཟར་བུ་\",\n \"གཟལ་བའམ་བཀས་པ་\",\n \"གཟས་པ་\",\n \"གཟི་\",\n \"གཟི་བརྗིད་ཆེ་བ་ (གཟི་བརྗིད་ཆེ་བར་གྲགས་པ་)\",\n \"གཟི་བརྗིད་ཡོད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"གཟི་བརྗིད་རྡུལ་མེད་དབྱངས་\",\n \"གཟིག་(སྟག)\",\n \"གཟིགས་པ་རབ་རིབ་མེད་ཅིང་རྣམ་པར་དག་པ་\",\n \"གཟིངས་\",\n \"གཟིངས་ཅན་\",\n \"གཟིལ་གྱིས་གནོན་པའི་སྐྱེ་མཆེད་བརྒྱད་ཀྱི་མིང་ལ་\",\n \"གཟུགས\",\n \"གཟུགས་\",\n \"གཟུགས་\",\n \"གཟུགས་ཀྱི་ཁམས་\",\n \"གཟུགས་ཀྱི་ཁམས་\",\n \"གཟུགས་ཀྱི་ཕུང་པོ་\",\n \"གཟུགས་ཀྱི་ཕུང་པོ་སོ་སོར་ཕྱེ་བའི་མིང་ལ་\",\n \"གཟུགས་ཀྱི་སྐྱེ་མཆེད་\",\n \"གཟུགས་ཅན་གཟུགས་རྣམས་ལ་ལྟ་བ་འདི་ནི་རྣམ་པར་ཐར་བ་དང་པོའོ་\",\n \"གཟུགས་དག་གིས་ཉེ་བར་མ་གོས་བ་\",\n \"གཟུགས་དང་བ་\",\n \"གཟུགས་དང་ལྡན་པ་\",\n \"གཟུགས་ན་སྤྱོད་པ་\",\n \"གཟུགས་པ་བཙུགས་པ་གདབ་པ་\",\n \"གཟུགས་བདག་གི་ཡིན་ཏེ་བྲན་དང་འདྲ་\",\n \"གཟུགས་བཟང་བ་\",\n \"གཟུགས་བརྙན་\",\n \"གཟུགས་བརྙན་\",\n \"གཟུགས་མེད་པ་དག་དང་མ་འདྲེས་པ་\",\n \"གཟུགས་མེད་པ་དང་ལྡན་\",\n \"གཟུགས་མེད་པའི་ཁམས་\",\n \"གཟུགས་ཡས་\",\n \"གཟུགས་རུང་བ་\",\n \"གཟུགས་ལ་བདག་ལ་གནས་ཏེ་སྣོད་དང་འདྲ་\",\n \"གཟུགས་སུ་བྱས་པ་\",\n \"གཟུགས་སུ་ཡོད་པས་\",\n \"གཟུགས་སྒྱུ་འཕྲུལ་དུ་བྱས་པ་བཞིན་\",\n \"གཟུངས་ཀྱི་ཐོས་པ་འཛིན་ཅིང་དོན་བསྟན་པ་ལ་མི་འཇིགས་པ་\",\n \"གཟུངས་ཀྱི་ཕྱག་རྒྱ་མ་\",\n \"གཟུངས་ཀྱི་བློ་གྲོས་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"གཟུངས་གཟེར་\",\n \"གཟུངས་ཐོབ་པ་\",\n \"གཟུངས་སྔགས་\",\n \"གཟུངས་སྦྱིན་\",\n \"གཟེ་མ་\",\n \"གཟེགས་མ་\",\n \"གཟེགས་ཟན་པ་\",\n \"གཟེབ་\",\n \"གཟེར་ཐབས་\",\n \"གཟེར་བུའམ་ཕུར་བུ་\",\n \"གཟོང་\",\n \"གཡག་\",\n \"གཡང་གཞིའམ་པགས་པ་\",\n \"གཡངས་\",\n \"གཡངས་\",\n \"གཡན་པ་\",\n \"གཡན་པ་དགབ་པ་\",\n \"གཡན་པ་དགབ་པ་ལས་གྱུར་པ་\",\n \"གཡའ་\",\n \"གཡའ་བ་\",\n \"གཡས་བརྐྱང་བ་\",\n \"གཡས་བརྐྱང་བ་\",\n \"གཡུ་ཕལ་པ་\",\n \"གཡུང་དྲུང\",\n \"གཡུང་མོ\",\n \"གཡུང་མོ\",\n \"གཡུང་མོ\",\n \"གཡུལ་\",\n \"གཡུལ་ངོར་བརྟན་པ\",\n \"གཡུལ་ངོར་འདོང་བའམ་བརྟུལ་བ་\",\n \"གཡུལ་བཤམས་པ་འཁྲུག་ཏུ་འགྲོ་བ་\",\n \"གཡེང་བ་\",\n \"གཡེངས་བྱེད\",\n \"གཡེར་པོ\",\n \"གཡེལ་བའམ་སྙོམ་པ་\",\n \"གཡོ་\",\n \"གཡོ་ཅན\",\n \"གཡོ་ཅན\",\n \"གཡོ་བ་\",\n \"གཡོ་བ་མེད་པ་\",\n \"གཡོ་སྒྱུ་ཅན\",\n \"གཡོག\",\n \"གཡོག་འཁོར་\",\n \"གཡོགས་པའམ་སྦེད་པའམ་འཆབ་པ་\",\n \"གཡོས\",\n \"གཡོས་པ་\",\n \"གཡོས་པའམ་སྤྱོད་པའི་ཚུལ་\",\n \"གར་\",\n \"གར་གཞལ་\",\n \"གར་གཞལ་\",\n \"གར་གྱི་ལྟད་མོ་བ་\",\n \"གར་མཁན་ནམ་བྲོ་མཁན་\",\n \"གར་ཡང་ཕྱིན་བ་\",\n \"གར་རམ་བྲོའམ་བྲོ་གར་\",\n \"གལ་ཏེ་\",\n \"གལ་ཏེ་\",\n \"གལ་ཏེ་ཞུས་ནས་ཞུ་བ་ལུང་བསྟན་པའི་སླད་དུ་\",\n \"གཤིན་རྗེ་\",\n \"གཤིན་རྗེ་\",\n \"གཤིན་རྗེའི་ཕྱོགས་\",\n \"གཤིན་རྗེའི་འཇིག་རྟེན་\",\n \"གཤེ་ཡང་སླར་མི་གཤེ་བར་བྱ་\",\n \"གཤེད་བྱེད་\",\n \"གཤེད་མ་\",\n \"གཤེར་བ་ཉིད་\",\n \"གཤེར་ས་\",\n \"གཤོང་ངམ་དམའ་བ་\",\n \"གཤོལ་\",\n \"གཤོལ་མདའ་\",\n \"གཤོལ་མདའ་\",\n \"གཤོལ་མདའ་འཛིན་\",\n \"གཤོལ་མདའ་འཛིན་\",\n \"གཤོལ་ལམ་ཞིང་དོར་རམ་སྨོན་པ་དོར་\",\n \"གསང་ཆེན་\",\n \"གསང་བ་\",\n \"གསང་བའི་བདག་པོ་\",\n \"གསང་སྔགས་\",\n \"གསང་སྔགས་སྨྲ་བ་\",\n \"གསང་སྟེ་སྟོན་པ་\",\n \"གསར་པའམ་ཁྱེའུ་ཚང་\",\n \"གསར་བུ་\",\n \"གསལ་ཏེ་འོངས་པ་\",\n \"གསལ་དབྱངས(གསལ་བ)\",\n \"གསལ་བ་\",\n \"གསལ་བ་\",\n \"གསལ་བའམ་མངོན་པ་\",\n \"གསལ་བའམ་འོད་དམ་ཟེར་\",\n \"གསལ་བའམ་འོད་ཟེར་\",\n \"གསལ་བར་གྲགས་པ་\",\n \"གསལ་བར་བྱེད་པ་\",\n \"གསལ་བར་བྱེད་པའམ་བརྩོན་པའམ་བཏང་བ་\",\n \"གསལ་བར་བྱེད་པའི་རྒྱུ་\",\n \"གསལ་བྱེད་\",\n \"གསལ་བྱེད་ཆེན་མོ་\",\n \"གསལ་མཆོག་\",\n \"གསལ་ཚགས་\",\n \"གསལ་ཡས་\",\n \"གསལ་ཡས་\",\n \"གསལ་ཤིང་\",\n \"གསལ་ཤིན་ལྟ་བུ་\",\n \"གསལ་སྣང་\",\n \"གསུང་རབ་\",\n \"གསུང་རྣམ་པར་དག་པ་\",\n \"གསུང་རྩལ་བའམ་སྐད་རྩལ་བ་\",\n \"གསུང་ལྡན་\",\n \"གསུང་སྙན་ཅིང་མཉེན་ལ་འཇམ་པ་\",\n \"གསུངས་པའམ་ལེགས་པར་སྨྲས་པ་\",\n \"གསུད་པ་\",\n \"གསུམ་\",\n \"གསུམ་ཆ་།་སུམ་ཆ་\",\n \"གསུམ་པ་\",\n \"གསུམ་ལྡན་གྱི་དུས་\",\n \"གསུས་པོ་ཆེ་\",\n \"གསུས་འཕྱང་\",\n \"གསུས་འཕྱང་\",\n \"གསེག་མ་\",\n \"གསེར་\",\n \"གསེར་\",\n \"གསེར་གྱི་དྲ་བ་\",\n \"གསེར་གྱི་ཕྱུང་པོ་\",\n \"གསེར་གྱི་བྱེ་མ་བདལ་བ་\",\n \"གསེར་གྱི་མོན་ལྷས་\",\n \"གསེར་གྱི་འཇི་བ\",\n \"གསེར་གྱི་འོག་དཔག་(གསེར་གྱི་འོག་བག་)\",\n \"གསེར་གྱི་འོག་དཔག་(གསེར་གྱི་འོག་བག་)\",\n \"གསེར་གྱི་འོག་དཔག་(གསེར་གྱི་འོག་བག་)\",\n \"གསེར་གྱི་རྒྱན་\",\n \"གསེར་གྱི་སྙིང་པོ་\",\n \"གསེར་ཆུ་\",\n \"གསེར་ཐུབ་\",\n \"གསེར་དང་དངུལ་ལ་རེག་པ་\",\n \"གསེར་མགར་\",\n \"གསེར་མདོག་སྐྲ་\",\n \"གསེར་འོད་དམ་པ་\",\n \"གསེར་རམ་ས་ལེ་སྦྲམ་\",\n \"གསེར་སྐུད་\",\n \"གསེར་སྤྱོད་\",\n \"གསེས་གྱི་ཆུན་པོའམ་ཕྲེངབ་\",\n \"གསོ་དཀའ་བ་\",\n \"གསོ་བ་\",\n \"གསོ་བའི་དབྱད་\",\n \"གསོ་བའི་རིག་པ་\",\n \"གསོ་རས་\",\n \"གསོ་སྦྱོང་\",\n \"གསོ་སྦྱོང་གི་གཞི་\",\n \"གསོ་སྦྱོང་བ་\",\n \"གསོ་སྦྱོང་བཞག་པ་\",\n \"གསོ་སྦྱོང་འཕགས་\",\n \"གསོ་སླ་བ་\",\n \"གསོག་ (གསོབ་)\",\n \"གསོག་ (གསོབ་)\",\n \"གསོག་འཇོག་\",\n \"གསོག་འཇོག་སྤང་བ་\",\n \"གསོང་པོར་སྨྲ་བ་\",\n \"གསོད་པ་\",\n \"གསོད་པ་\",\n \"གསོལ་བ་\",\n \"གསོལ་བ་གཅིག་པུ་\",\n \"གསོལ་བ་གདབ་པ་\",\n \"གསོལ་བ་དང་གཉིས་\",\n \"གསོལ་བ་དང་བཞི་\",\n \"གསོལ་བ་དང་བཞིའི་ལས་ཀྱིས་བསྙེན་པར་རྫོགས་པའི་ཕྱིར་དགེ་སློང་\",\n \"གསོལ་བའི་ལས་\",\n \"གུ་གུ་ལུ་\",\n \"གུ་གུམ་\",\n \"གུང་\",\n \"གུང་ཐུན་\",\n \"གུང་མོ་\",\n \"གུར་\",\n \"གུས་པ་དང་བཅས་པ་\",\n \"གུས་པར་ཉན་པ་དང་གུས་པར་མི་ཉན་པ་རྣམས་ལ་སེམས་སྙོམས་པ\",\n \"གུས་པར་ཉན་པ་རྣམས་ལ་སེམས་སྙོམས་པ་\",\n \"གུས་པར་བྱ་བ་\",\n \"གུས་པར་བྱེད་པ་\",\n \"གུས་པར་བྱེད་པ་\",\n \"གུས་པར་མི་ཉན་པ་རྣམས་ལ་སེམས་སྙོམས་པ་\",\n \"གུས་པར་སྨྲ་བ་\",\n \"གོ་ཆ་\",\n \"གོ་ཆ་གྱོན་པ་ལ་ཆོས་མི་བཤད་\",\n \"གོ་ཆ་བ་གོས་པ་\",\n \"གོ་ཆ་བགོས་པ་\",\n \"གོ་ཏ་མ་\",\n \"གོ་ཏ་ར་ཎི་\",\n \"གོ་ཏམ་པའི་རས་\",\n \"གོ་བར་བྱེད་པ་མ་ཡིན་པའམ་མི་གོ་བ་\",\n \"གོ་རིམ་\",\n \"གོ་རིམ་བཞིན་\",\n \"གོ་སྐབས་\",\n \"གོ་སྙོད་\",\n \"གོ་སྙོད་ཀྱི་མེ་ཏོག་\",\n \"གོང་དུ་འཕོ་བ་\",\n \"གོང་ན་མེད་པ་\",\n \"གོང་མ་བཞིན་ནམ་སྔ་མ་བཞིན་\",\n \"གོང་མ་སྲེག་\",\n \"གོང་མའི་གོང་མའམ་གོང་ནས་གོང་དུ་\",\n \"གོང་མའི་ཆ་དང་མཐུན་པ་\",\n \"གོམ་པ་སྙོམས་པ་\",\n \"གོམ་སྟངས་ (གོམ་སྟབས)\",\n \"གོར་གོར་པོ་\",\n \"གོར་བུ་\",\n \"གོས་ཀྱི་གདང་\",\n \"གོས་ཀྱི་གཞི་\",\n \"གོས་ཀྱི་མིང་ལ་\",\n \"གོས་ཀྱིས་ཆོག་པར་འཛིན་\",\n \"གོས་ངན་པ་\",\n \"གོས་དཀར་ཅན་\",\n \"གོས་དམར་སྡེ་\",\n \"གོས་པ་མེད་པ་\",\n \"གོས་པར་བྱ་བའམ་བསྒྲུབ་བར་བྱ་བའམ་བསྟན་པར་བྱ་བ་\",\n \"གོས་མེད་\",\n \"གོས་ཟས་ཀྱིས་འཚོས་པ་\",\n \"གོས་འགེད་པ་(གོས་འགྱེད་པ་)\",\n \"གོས་འཚེམ་པ་\",\n \"གོས་སྦེད་པ་\",\n \"གོས་སྦྱིན་པ་\",\n \"གྱ་གྱུ་ཅན་\",\n \"གྱ་དོ་བ་ (གྱ་དོང་)\",\n \"གྱ་ནོམ་པ་\",\n \"གྱ་ནོམ་པ་\",\n \"གྱ་ནོམ་སྣང་བ་\",\n \"གྱད་ཀྱི་འཛིན་སྟངས་\",\n \"གྱན་ནམ་རྩེ་རྒོད་\",\n \"གྱས་ཕྱོགས་སུ་ལྡོག་ཅིང་གཤེགས་པ་\",\n \"གྱུར་དུ་ཟིན་ཀྱང་ངམ་ཆུག་ཀྱང་\",\n \"གྱུར་བ་\",\n \"གྱེན་དུ་བལྟ་བའམ་ཡར་བལྟ་བ་\",\n \"གྱེས་པའམ་འཇིག་པའི་ཆོས་ཅན་\",\n \"གྱོ་བ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"གྱོ་མོ་\",\n \"གྱོ་ལྡན་\",\n \"གྱོད་པོ་\",\n \"གྱོལ་པ་\",\n \"གྱོས་པོ་\",\n \"གྱོས་པོས་བསྲུངས་པ་\",\n \"གྲ་མ་\",\n \"གྲ་མ་\",\n \"གྲགས་ཆེན་\",\n \"གྲགས་པའམ་བརྗོད་པ་\",\n \"གྲགས་པའམ་བརྗོད་པ་\",\n \"གྲགས་འཛིན་མ་\",\n \"གྲགས་ཡས་\",\n \"གྲགས་ཡས་\",\n \"གྲང་བ་\",\n \"གྲངས\",\n \"གྲངས་\",\n \"གྲངས་\",\n \"གྲངས་ཅན་\",\n \"གྲངས་ཅན་པ་\",\n \"གྲངས་དང་བསྒྲེ་བ་དང་དུས་དང་ཕྱོགས་ཀྱི་མིང་ལས་འཕགས་པ་སངས་རྒྱས་ཕལ་པོ་ཆེའི་ནང་ནས་གྲངས་ཀྱི་ལེའུ་ལས་བྱུང་བའི་གྲངས་ཀྱི་མིང་ལ་\",\n \"གྲངས་མེད་པ་\",\n \"གྲངས་འབྱམ་\",\n \"གྲངས་འབྱམ་\",\n \"གྲངས་སུ་འགྲོའོ་\",\n \"གྲངས་སུ་ཡང་\",\n \"གྲམ་པ་\",\n \"གྲམ་པ་\",\n \"གྲལ་རིམས་སུ་མ་བབ་པར་འདྲིམ་དུ་འཇུག་པ་ལ་མ་བཟློག་པར་ཟ་བ་\",\n \"གྲི་བྱ་གག་གི་གཤོག་པ་ལྟ་བུ་\",\n \"གྲི་བྱ་རོག་གི་མཆུ་ལྟ་བུ་\",\n \"གྲིབ་གནོན་\",\n \"གྲིབ་མ་\",\n \"གྲིབ་ཚོད་\",\n \"གྲིབ་སོ་ཆེར་བབས་པ་\",\n \"གྲིབ་སོ་བབས་\",\n \"གྲིབ་སོ་མངོན་པར་རབ་ཏུ་བབས་པ་\",\n \"གྲིམས་པ་\",\n \"གྲིའུ་\",\n \"གྲུ་\",\n \"གྲུ་\",\n \"གྲུ་པ་\",\n \"གྲུ་བཙས་གཅོད་པ་\",\n \"གྲུ་བཞི་\",\n \"གྲུ་མོ་\",\n \"གྲུ་ཚུགས་\",\n \"གྲུ་འཛིན་\",\n \"གྲུ་སྐྱ་\",\n \"གྲུབ་པ་དང་བདེ་བ་\",\n \"གྲུབ་པའི་མཐའ་\",\n \"གྲུབ་པའི་མཐའ་\",\n \"གྲུབ་མཆོག་མ་\",\n \"གྲུམ་པོ་\",\n \"གྲུལ་བུམ་\",\n \"གྲུལ་བུམ་\",\n \"གྲུལ་བུམ་གྱི་དབང་པོའི་མིང་ལ་\",\n \"གྲེ་\",\n \"གྲོ་\",\n \"གྲོ་བཞིན་\",\n \"གྲོ་བཞིན་སྐྱེས་བྱེ་བ་ཉི་ཤུ་པ་\",\n \"གྲོ་བཞིན་སྐྱེས་རྣ་བ་བྱེ་བ་\",\n \"གྲོག་མ་གྱེན་དུ་འཛེག་པ་\",\n \"གྲོག་མཁར་\",\n \"གྲོག་མའམ་གྲོག་སྦུར་\",\n \"གྲོགས་ངན་པ་\",\n \"གྲོགས་ན་བདེ་བ་\",\n \"གྲོགས་པོ་\",\n \"གྲོགས་བྱེད་པའི་རྐྱེན་\",\n \"གྲོགས་སུ་འགྱུར་བ་\",\n \"གྲོང་\",\n \"གྲོང་ཁྱེར་\",\n \"གྲོང་ཁྱེར་འཇོམས་པ་\",\n \"གྲོང་ཁྱེར་འཕགས་རྒྱལ་\",\n \"གྲོང་ཁྱེར་རམ་ཕོ་བྲང་ངམ་ཁྱེར་\",\n \"གྲོང་གི་ཉེ་འཁོར་\",\n \"གྲོང་གི་བླ་\",\n \"གྲོང་དཔོན་\",\n \"གྲོང་བར་\",\n \"གྲོང་མི་\",\n \"གྲོང་འཇོམས་པ་\",\n \"གྲོང་རྒྱུ་བ་\",\n \"གྲོང་རྡལ་\",\n \"གྲོལ་བ་གྲོལ་བའི་འཁོར་དང་ལྡན་པ་\",\n \"གྲྭ་བཞིར་\",\n \"གླ་གང\",\n \"གླ་གོར་ཞོ་ཤ་\",\n \"གླ་གོར་ཞོ་ཤ་\",\n \"གླ་མི་འམ་གཡོག་གམ་བྲན་\",\n \"གླ་རྩི་\",\n \"གླ་རྩི་\",\n \"གླགས་ལྟ་བ་\",\n \"གླང་\",\n \"གླང་ཆེན་རྣ་བ་\",\n \"གླང་པོ་ཆེ\",\n \"གླང་པོ་ཆེ་ཅང་ཤེས་\",\n \"གླང་པོ་ཆེ་ཐ་མལ་བའི་སྟོབས་\",\n \"གླང་པོ་ཆེ་འཛིན་པ་\",\n \"གླང་པོ་ཆེ་ལ་ཞོན་པ་ལ་ཆོས་མི་བཤད་\",\n \"གླང་པོ་ཆེ་ལྟར་འགྱིན་ཞིང་བཞུད་པ་\",\n \"གླང་པོ་ཆེ་ས་བསྲུང་གི་བུ་\",\n \"གླང་པོ་ཆེན་པོ་\",\n \"གླང་པོ་ཆེའི་གཉར་ཞོན་པ་\",\n \"གླང་པོ་ཆེའི་ང་རོ་དང་འབྲུག་གི་སྒྲ་དང་ལྡན་པ་\",\n \"གླང་པོ་ཆེའི་བྲེས་\",\n \"གླང་པོ་ཆེའི་བླ་\",\n \"གླང་པོ་ཆེའི་ལྟ་སྟངས་ཀྱིས་བལྟས་ནས་\",\n \"གླང་པོ་ཆེའི་སྒྲ་སྐད་་\",\n \"གླང་པོ་ཆེའི་སྟབས་སུ་གཤེགས་པ་\",\n \"གླང་པོ་ཆེའི་སྣ་ལྟར་ནར་བ་མ་ཡིན་པ་\",\n \"གླང་པོ་ཆེས་འདུལ་བ་\",\n \"གླང་པོ་རིན་པོ་ཆེ་\",\n \"གླང་པོའི་ཚོགས་\",\n \"གླང་པོའི་རྩལ་\",\n \"གླང་པོའི་སྟོབས་ཕྲག་བརྒྱ་ན་ངོགས་ཐོབ་ཤེས་བྱའོ་\",\n \"གླང་བརྟུལ་ཞུགས་ཅན་\",\n \"གླང་བྲེས་\",\n \"གླང་རུའི་བརྟུལ་ཞུགས་ཅན་\",\n \"གླང་རྡུལ་\",\n \"གླད་པོ་ཆེ་\",\n \"གླན་པ་\",\n \"གླབ་ཐམས་པ་\",\n \"གླལ་པ་ (གཡལ་བ)\",\n \"གླིང་གཞན་ནས་སྐྱེས་པའི་ཚུལ་བྱད་མི་འདྲ་བ་\",\n \"གླིང་བཞིའི་མིང་ལ་\",\n \"གླིང་བཞིའི་འཇིག་རྟེན་གྱི་ཁམས་\",\n \"གླིང་བུ་\",\n \"གླིང་མ་\",\n \"གླུ་དབྱངས་\",\n \"གླུ་དབྱངས་ཀྱི་རྒྱལ་པོ་\",\n \"གླེ་གདམས་པ་\",\n \"གླེགས་འབྲ་མཁན་\",\n \"གླེང་གཞི་འདི་ལ་\",\n \"གླེང་གཞིའི་སྡེ་\",\n \"གླེན་པ་\",\n \"གློ་(བློ་)བུར་དུ་འོངས་པའམ་གློ་སྐྱེས་(བློ་སྐྱེས་)སམ་ཐོར་བུ་\",\n \"གློ་བ་\",\n \"གློ་བ་\",\n \"གློ་འགྲམས་པ་\",\n \"གློག་གི་འོད་ཅེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"གློག་གི་འོད་ཆེན་\",\n \"གློག་གི་སྒྲོན་མ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"གློག་པ་\",\n \"གློག་འབར་\",\n \"ང་གཅིག་\",\n \"ང་གཉིས་\",\n \"ང་གསུམ་\",\n \"ང་དགུ་\",\n \"ང་དྲུག་\",\n \"ང་བདུན་\",\n \"ང་བཞི་\",\n \"ང་བརྒྱད་\",\n \"ང་མེད་\",\n \"ང་མེད་\",\n \"ང་རྒྱལ་\",\n \"ང་རྒྱལ་ལས་ཀྱང་ང་རྒྱལ་\",\n \"ང་ལས་ནུ་\",\n \"ང་ལྔ་\",\n \"ངག་གམ་ཚིག་\",\n \"ངག་གི་ཉེས་པ་སྤྱོད་པ་བཞི་\",\n \"ངག་གི་ལས་ཐམས་ཅད་ཡེ་ཤེས་ཀྱི་སྔོན་དུ་འགྲོ་ཞིང་ཡེ་ཤེས་ཀྱི་རྗེས་སུ་འབྲང་བ་\",\n \"ངག་གི་ལེགས་པར་སྤྱོད་པ་བཞི་\",\n \"ངག་གི་སྐྱོན་རྣམ་པར་འཇིག་པས་ནམ་མཁའ་ལྟར་གྱུར་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ངང་པའི་རྒྱལ་པོ་\",\n \"ངང་པའི་སྟབས་སུ་གཤེགས་པ་\",\n \"ངང་མོ་\",\n \"ངང་ཚུལ་བཟང་བོ་\",\n \"ངང་སྐྱ་\",\n \"ངན་གཡོ་བ་\",\n \"ངན་གྱོ\",\n \"ངན་ངོན་\",\n \"ངན་ངོན་གྱིས་ཆོག་མི་ཤེས་པ་\",\n \"ངན་ངོན་ཙམ་གྱི་དད་པ་\",\n \"ངན་པ་\",\n \"ངན་པ་\",\n \"ངན་པ་འདི་\",\n \"ངན་པའམ་ཐ་མ་\",\n \"ངན་པར་བརྩི་བ་\",\n \"ངན་བ་\",\n \"ངན་འགྲོ་\",\n \"ངན་འགྲོའི་མིང་ལ་\",\n \"ངན་རྐྱེན་པའམ་ཤ་ཀྲ་(་མངལ་སྐྱོན་པའམ་ཤ་བཀྲ་།་ངལ་སྐྱེན་)\",\n \"ངན་སོང་\",\n \"ངན་སྤོང་\",\n \"ངན་སྤོང་\",\n \"ངམ་གྲོག་གམ་གཡངས་\",\n \"ངམ་གྲོག་ཆུང་ངུ་\",\n \"ངའི་ཚངས་པར་སྤྱོད་པ་ལ་ཡུན་རིང་དུ་གནས་པར་འགྱུར་\",\n \"ངའོ་སྙམ་པའི་ང་རྒྱལ་\",\n \"ངར་འཛིན་པ་\",\n \"ངལ་བ་\",\n \"ངལ་བ་\",\n \"ངལ་བའམ་དུབ་པ་\",\n \"ངལ་སོས་པ་\",\n \"ངས་ཁྱོད་ལ་བཤད་དོ་\",\n \"ངུ་བ་\",\n \"ངུ་འབོད་\",\n \"ངུ་འབོད་ཆེན་པོ་\",\n \"ངུར་པ་\",\n \"ངུས་པོ་ཆེ་\",\n \"ངེ་པར་འགྱུར་བ་\",\n \"ངེས་པའི་དོན་གྱི་མདོ་སྡེ་ལ་རྟོན་པ་བྱའི་དྲང་བའི་དོན་གྱི་མདོ་སྡེ་ལ་རྟོན་པར་མི་བྱ་\",\n \"ངེས་པའི་ཚིག་ལ་གདོན་མི་ཟ་བར་འཇུག་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ངེས་པའི་ཚིག་སོ་སོ་ཡང་དག་པར་རིག་པ་\",\n \"ངེས་པའི་རྒྱལ་མཚན་ཏོག་ཅེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ངེས་པར་གནོད་མཛེས་\",\n \"ངེས་པར་གཟུང་བ་\",\n \"ངེས་པར་བརྟག་པར་བྱ་\",\n \"ངེས་པར་བྱུང་བ་རྫོགས་པའི་བྱང་ཆུབ་ཏུ་འགྲོ་བར་བྱེད་པ་\",\n \"ངེས་པར་འབྱིན་བ་\",\n \"ངེས་པར་འབྱུང་བ་\",\n \"ངེས་པར་འབྱུང་བ་\",\n \"ངེས་པར་འབྱུང་བ་\",\n \"ངེས་པར་འབྱུང་བ་ལ་བརྟེན་པ་\",\n \"ངེས་པར་འབྱེད་པའི་ཆ་དང་མཐུན་པ\",\n \"ངེས་པར་འབྱེད་པའི་ཆ་དང་མཐུན་པའི་རིམ་པའི་མིང་ལ་\",\n \"ངེས་པར་འབྱེད་པའི་ཤེས་རབ་ཅན་\",\n \"ངེས་པར་འཛིན་པའམ་དབྱེ་བ་\",\n \"ངེས་པར་རམ་གོར་མ་ཆག་པའམ་སྙམ་པ་\",\n \"ངེས་པར་རམ་གོར་མ་ཆག་པའམ་སྙམ་པ་\",\n \"ངེས་པར་རྟོག་པ་\",\n \"ངེས་པར་རྟོག་པའམ་ཕྱེ་སྟེ་རྟོག་པ་\",\n \"ངེས་པར་རྟོག་པའམ་ལེགས་པར་རྟོག་པ་\",\n \"ངེས་པར་ལེགས་པ་\",\n \"ངེས་པར་སེམས་པ་\",\n \"ངེས་པར་སེམས་པར་བྱེད་\",\n \"ངེས་པར་སོམས་ཤིག་\",\n \"ངེས་པར་སྤངས་པ་\",\n \"ངེས་བརྗོད་ཀྱི་རིག་བྱེད་\",\n \"ངེས་བསྟན་\",\n \"ངེས་བསྟན་\",\n \"ངེས་འགྲོ་\",\n \"ངོ་གནག་\",\n \"ངོ་བོ་ཉིད་སྟོང་པ་ཉིད་\",\n \"ངོ་མཚར་\",\n \"ངོ་མི་ཆོད་པའམ་མི་ཟློག་པ་\",\n \"ངོ་ཚ་བ་\",\n \"ངོ་ཚ་མེད་པ་\",\n \"ངོ་ཚ་ཤེས་པ་\",\n \"ངོ་ཚ་ཤེས་པ་རྣམས་བདེ་བར་གནས་པར་བྱ་བའི་ཕྱིར་\",\n \"ངོ་ཚ་ཤེས་པའི་ནོར་\",\n \"ངོ་ཤེས་པ་\",\n \"ངོགས་ཐོབ་ཕྲག་བརྒྱ་ན་རྣམ་པར་གཞག་པ་གདགས་པ་ཞེས་བྱའོ་\",\n \"ངོམ་པ་ (ངོམས་པ་། ངོར་བ་)\",\n \"ངོམས་\",\n \"ངོམས་པའམ་ཚིམ་པའམ་རྒྱས་པ་\",\n \"ངོས་བཞི་\",\n \"ངོས་ཡངས་\",\n \"ཅ་ཅོ་\",\n \"ཅ་ཅོ་\",\n \"ཅ་ཅོ་མེད་པ་\",\n \"ཅག་ཅག་མི་བྱ་\",\n \"ཅང་མི་གསུང་བར་གྱུར་པས་གནང་\",\n \"ཅང་ཤེས་པ་\",\n \"ཅི་ཞེས་བསྟན་པ་\",\n \"ཅི་འདོད་པ་བཞིན་ཐོབ་པ་\",\n \"ཅི་ཡང་མེད་པའི་སྐྱེ་མཆེད་\",\n \"ཅི་ཡང་མེད་པའི་སྐྱེ་མཆེད་\",\n \"ཅི་རིགས་པ་\",\n \"ཅི་ལ་ཡང་མ་རེག་པར་ཆས་པ་\",\n \"ཅིག་ཅར་ཞེའམ་ལན་ཅིག་ཅེའམ་མཉམ་པ་\",\n \"ཅིའམ་གང་\",\n \"ཅུང་ཟད་ཀྱང་མི་ནུས་སམ་ཅི་ཡང་མི་ནུས་\",\n \"ཅུང་ཟད་སྙམ་པའི་ང་རྒྱལ་\",\n \"ཅོ་འདྲི་བ་\",\n \"ཅོག་བུ་པ་\",\n \"ཅོག་བུར་འདུག་པ་\",\n \"ཅོད་པན་དང་དབུ་རྒྱན་ཟླ་བ་\",\n \"ཅོད་པན་དང་དབུ་རྒྱན་རྩེ་གསུམ་\",\n \"ཅོད་པན་དང་དབུ་རྒྱན་རྩེ་ཕྲན་\",\n \"ཅོད་པན་རིན་པོ་ཆེ\",\n \"ཅོད་པན་སྣ་ཚོགས་པ་དཔལ་གྱི་གཙུག་\",\n \"ཆ་\",\n \"ཆ་ག་ལྟབ་པ་\",\n \"ཆ་གཉིས་དུས་\",\n \"ཆ་གཉིས་བསྲེ་བ་\",\n \"ཆ་བའམ་བཞག་པ་\",\n \"ཆ་བྱད་\",\n \"ཆ་བྱད་འདི་བཞིན་བྱས་\",\n \"ཆ་མེད་པ་\",\n \"ཆ་ཚོགས་\",\n \"ཆ་ཚོགས་\",\n \"ཆ་ལུགས་\",\n \"ཆ་ལུགས་ངན་པ་\",\n \"ཆ་ཤས་\",\n \"ཆ་ཤས་དང་ཆ་ཤས་ཅན་གི་མཚན་ཉིད་ཀྱི་(ཀྱིས)་འབྲེལ་བ་\",\n \"ཆག་ཆག་ལེགས་པར་བཏབ་པ་\",\n \"ཆགས་པ་\",\n \"ཆགས་པ་དང་འདོད་པའི་རྣམ་པའི་མིང་ལ་\",\n \"ཆགས་པ་མེད་པའམ་གོས་པ་མེད་པ་\",\n \"ཆགས་པ་མེད་པའི་གཟུངས་དང་ཏིང་ངེ་འཛིན་ཐོབ་པ་\",\n \"ཆགས་པ་མེད་པའི་སྒོར་འཇུག་པ་\",\n \"ཆགས་པའམ་ཞེན་པ་\",\n \"ཆགས་པའམ་ཞེན་པ་\",\n \"ཆགས་པར་འགྱུར་བ་\",\n \"ཆགས་ཞེན་\",\n \"ཆང་འཐུང་བ་\",\n \"ཆང་འཚོང་\",\n \"ཆང་འཚོང་\",\n \"ཆང་འཚོང་བ་\",\n \"ཆངས་སྟོང་པ་\",\n \"ཆད་པའི་གནས་\",\n \"ཆད་པར་འགྱུར་\",\n \"ཆད་པས་གཅད་པའམ་ཚར་གཅད་པ་སྐབས་དང་སྦྱར་\",\n \"ཆད་བ་པ་\",\n \"ཆབ་འོག་གི་རྒྱལ་ཕྲན་\",\n \"ཆར་པའི་རྒྱུན་\",\n \"ཆར་བཅུག་གམ་བྱེད་དུ་བཅུག་\",\n \"ཆར་འབབ་མཁས་པ་\",\n \"ཆར་འབབ་མི་མཁས་པ་\",\n \"ཆར་ཡང་\",\n \"ཆིང་བུའམ་དོ་ཟན་\",\n \"ཆིངས་ཤིག་\",\n \"ཆིབས་ཀྱི་བླ་\",\n \"ཆུ་ཀླུང་འོད་སྲུངས་\",\n \"ཆུ་གཏེར་\",\n \"ཆུ་གྲི་\",\n \"ཆུ་གླིང་\",\n \"ཆུ་ཆེན་\",\n \"ཆུ་དྲོན་\",\n \"ཆུ་ཕྲན་\",\n \"ཆུ་བ་\",\n \"ཆུ་བ་\",\n \"ཆུ་བུར་ཅན་\",\n \"ཆུ་བུར་བརྡོལ་བ་\",\n \"ཆུ་བོ་\",\n \"ཆུ་བོ་\",\n \"ཆུ་བོ་རབ་མེད་\",\n \"ཆུ་བོ་ལས་བརྒལ་བ་\",\n \"ཆུ་བོ་སྦྱིན་\",\n \"ཆུ་བྲུབ་པར་སྣང་བ་ལས་གོང་དུ་ཆར་འབབ་པར་རྗེས་སུ་དཔག་པ་\",\n \"ཆུ་མིག་\",\n \"ཆུ་ཚགས་\",\n \"ཆུ་ཚགས་ཀྱིས་རུང་བ་\",\n \"ཆུ་ཚགས་གྲུ་གསུམ་\",\n \"ཆུ་ཚོགས་ཀྱིས་བྱིན་པ་\",\n \"ཆུ་ཚོད་\",\n \"ཆུ་ཚོད་\",\n \"ཆུ་ཟླ་\",\n \"ཆུ་འགགས་པ་\",\n \"ཆུ་འབོགས་ཏེ་\",\n \"ཆུ་འཛིན་\",\n \"ཆུ་རྡུལ་\",\n \"ཆུ་རྫ་\",\n \"ཆུ་རླབས་སམ་དབའ་ཀློང་\",\n \"ཆུ་ལ་འཛུབ་མོས་སེ་གོལ་རྡོབ་པ་\",\n \"ཆུ་ལ་ཡང་མི་ནུབ་པར་འགྲོ་སྟེ་དཔེར་ན་ས་ཆེན་པོ་ལ་བྱ་བ་བཞིན་ནོ་\",\n \"ཆུ་ལ་རྩེ་བ་\",\n \"ཆུ་ལས་སྐྱེས་པ་\",\n \"ཆུ་ལྷ་\",\n \"ཆུ་ལྷའི་ཕྱོགས་\",\n \"ཆུ་ལྷའི་བློ་གྲོས་གཞོན་ནུར་གྱུར་པ་\",\n \"ཆུ་ཤིང་\",\n \"ཆུ་ཤིང་གི་ཕུང་པོ་\",\n \"ཆུ་ཤེལ་\",\n \"ཆུ་སེར་\",\n \"ཆུ་སོའམ་མདོམ་\",\n \"ཆུ་སོའམ་སྟ་ཟུར་\",\n \"ཆུ་སྐྱར་\",\n \"ཆུ་སྟོད་\",\n \"ཆུ་སྣོད་ཀྱི་གཞི་\",\n \"ཆུ་སྨད་\",\n \"ཆུ་སྲིན་\",\n \"ཆུ་སྲིན་ཀུམ་བྷའི་ར་\",\n \"ཆུ་སྲིན་ན་ཀྲ་\",\n \"ཆུ་སྲིན་བྱིས་པ་གསོད་\",\n \"ཆུ་སྲིན་འཛིན་ཁྲི་\",\n \"ཆུང་ངམ་འབྲིང་པོ་ཐ་ཆུང་སྐབས་སྦྱར་\",\n \"ཆུང་ངུ་\",\n \"ཆུང་ངུའམ་ཐ་མ་\",\n \"ཆུང་ཆེས་པ་\",\n \"ཆུང་བ་\",\n \"ཆུང་མ་\",\n \"ཆུང་མ་གསུམ་ཡོད་\",\n \"ཆུང་མའམ་ཁྱོ་མོ\",\n \"ཆུང་མའམ་ཁྱོ་མོ\",\n \"ཆུང་མའམ་ཁྱོ་མོ\",\n \"ཆུང་མའམ་ཁྱོ་མོ\",\n \"ཆུབ་པ་\",\n \"ཆུབ་པར་སྤྱོད་པ་\",\n \"ཆུའི་ཁམས་\",\n \"ཆུའི་ཆུ་བུར་\",\n \"ཆུའི་བཟློག་ཕྱོགས་སུ་འགྲོ་བ་\",\n \"ཆུའི་ཞལ་ཏ་པ་\",\n \"ཆུའི་འབབ་ཕྱོགས་སུ་འགྲོ་བ་\",\n \"ཆུའི་རྒྱུན་\",\n \"ཆུའི་རྒྱུན་དེ་དག་གིས་སྟོང་གསུམ་གྱི་སྟོང་ཆེན་པོའི་འཇིག་རྟེན་གྱི་ཁམས་འདི་བསྲེགས་ཤིན་ཚིག་སྟེ་མེས་རབ་ཏུ་འབར་ཞིན་འབར་བ་གཅིག་ཏུ་གྱུར་བ་ཞི་བར་བྱེད་དོ་\",\n \"ཆུར་\",\n \"ཆུར་བ་\",\n \"ཆུར་ལྷུང་\",\n \"ཆུས་འཇིག་པ་\",\n \"ཆེ་གེ་མོ་ཞིག་\",\n \"ཆེ་ཆུང་དང་མཐོ་དམན་ལ་སོགས་པའི་མིང་ལ་\",\n \"ཆེ་བའམ་བདག་ཉིད་ཆེ་བ་\",\n \"ཆེ་བའམ་རབ་\",\n \"ཆེ་ཞེའམ་སྲིང་མོ་འམ་ཕུ་ནུ་མོའི་སྲུ་\",\n \"ཆེད་དུ་བརྗོད་པའི་སྡེ་\",\n \"ཆེད་དུ་བྱ་པའམ་གཞི་འམ་དབང་དུ་བྱ་བ་\",\n \"ཆེན་ཆུན་\",\n \"ཆེན་པོ་\",\n \"ཆེན་པོ་བ་\",\n \"ཆེན་པོ་སྟོང་པ་ཉིད་\",\n \"ཆེན་པོའམ་ཐུ་བོ་\",\n \"ཆེན་པོར་འགྱུར་བ་\",\n \"ཆེམ་ཆེམ་\",\n \"ཆེར་བསགས་པའམ་ཤིན་ཏུ་བསགས་པ་\",\n \"ཆེར་སྒྲོགས་\",\n \"ཆེས་ཆུང་བ་\",\n \"ཆེས་མང་བ་\",\n \"ཆེས་མྱུར་བའམ་ཆེས་མགྱོགས་པ་\",\n \"ཆོ་ག་\",\n \"ཆོ་ག་\",\n \"ཆོ་ག་\",\n \"ཆོ་ག་ཉམས་པ་\",\n \"ཆོ་ག་ཕུན་སུམ་ཚོགས་པ་\",\n \"ཆོ་ག་ཞིབ་མོ་\",\n \"ཆོ་ག་ལ་གནས་པ་\",\n \"ཆོ་གའམ་ཐབས་\",\n \"ཆོ་གའི་ངང་ཚུལ་ཅན་\",\n \"ཆོ་འཕྲུལ་གསུམ་གྱི་མིང་ལ་\",\n \"ཆོ་འཕྲུལ་གསུམ་ལྡན་པ་\",\n \"ཆོ་ལོས་རྩེ་བ་\",\n \"ཆོག་ཤེས་པ་\",\n \"ཆོད་པའམ་སྒྲིབ་པ་\",\n \"ཆོམ་རྐུན་\",\n \"ཆོམ་རྐུན་པོར་གྲགས་པ་\",\n \"ཆོལ་ཟངས་\",\n \"ཆོས་ཀྱང་སྟོན་ཏོ་\",\n \"ཆོས་ཀྱི་ཁམས་\",\n \"ཆོས་ཀྱི་ཅོད་པན་བཅིངས་པ་\",\n \"ཆོས་ཀྱི་དབྱིངས་\",\n \"ཆོས་ཀྱི་དབྱིངས་ཀྱི་ཚུལ་ནི་གནས་པ་ཉིད་དོ་\",\n \"ཆོས་ཀྱི་དབྱིངས་ཀྱིས་ཀླས་པ་\",\n \"ཆོས་ཀྱི་དབྱིངས་ཀྱིས་གཏུགས་པ་\",\n \"ཆོས་ཀྱི་དབྱིངས་འདྲེས་པ་མེད་པ (ཆོས་ཀྱི་དབྱིངས་དབྱེར་མེད་པ)\",\n \"ཆོས་ཀྱི་དབྱིངས་རྣམ་པར་དག་པ་\",\n \"ཆོས་ཀྱི་དབྱིངས་ལ་མཁས་པ་\",\n \"ཆོས་ཀྱི་དབྱིངས་སུ་ངེས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཆོས་ཀྱི་ཕུང་པོ་\",\n \"ཆོས་ཀྱི་བར་དུ་གཅོད་པ་\",\n \"ཆོས་ཀྱི་འཁོར་ལོ་རབ་ཏུ་སྐོར་བའི་སྟོབས་\",\n \"ཆོས་ཀྱི་འཁོར་ལོའི་མིང་ལ་\",\n \"ཆོས་ཀྱི་འཕགས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཆོས་ཀྱི་རྒྱལ་པོ་ཆོས་དང་ལྡན་པ་\",\n \"ཆོས་ཀྱི་རྒྱལ་པོའི་སྲས་\",\n \"ཆོས་ཀྱི་རྗེ་\",\n \"ཆོས་ཀྱི་རྗེས་སུ་མཐུན་པའི་ཆོས་ཀྱི་ནན་ཏན་\",\n \"ཆོས་ཀྱི་རྗེས་སུ་འབྲང་བ་\",\n \"ཆོས་ཀྱི་རྙེད་པས་ཆོག་པར་འཛིན་པ་\",\n \"ཆོས་ཀྱི་རྣམ་གྲངས་\",\n \"ཆོས་ཀྱི་རྣམ་གྲངས་\",\n \"ཆོས་ཀྱི་སྐུ་\",\n \"ཆོས་ཀྱི་སྐྱེ་མཆེད་\",\n \"ཆོས་ཀྱི་སྐྱེ་མཆེད་པ་\",\n \"ཆོས་ཀྱི་སྤྲིན་\",\n \"ཆོས་ཀྱིས་འཕྱོངས་པར་འགྱུར་པ་\",\n \"ཆོས་ཀྱིས་སྦྱིན་\",\n \"ཆོས་ཁྲིམས་\",\n \"ཆོས་གནས་པ་ཉིད་\",\n \"ཆོས་གོས་ཀྱི་གཏུར་བུ་\",\n \"ཆོས་གོས་ཀྱི་ཚལ་བུ་\",\n \"ཆོས་གོས་ཀྱི་སྒྲོ་ག་\",\n \"ཆོས་གོས་ཀྱི་སྣོད་\",\n \"ཆོས་གོས་གསུམ་\",\n \"ཆོས་གོས་ཟླུམ་པོར་བགོ་བ་\",\n \"ཆོས་གོས་ཧ་ཅང་འཇོལ་བ་མ་ཡིན་\",\n \"ཆོས་གོས་ཧ་ཅང་རྩེངས་པ་མ་ཡིན་པ་\",\n \"ཆོས་གྲགས་\",\n \"ཆོས་ཉིད་ཀྱིས་ཐོབ་པ་\",\n \"ཆོས་ཉིད་ཀྱིས་ཐོབ་པ་\",\n \"ཆོས་ཉིད་ཀྱིས་རྙེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ཀྱི་ཐབས་སྦྱིན་པས་དབང་བསྐུར་བ་ཐོབ་པར་བྱ་བའི་ཕྱིར་སངས་རྒྱས་ཀྱི་ཆོས་བཙལ་བ་བསྟན་པ་ལས་ཕྱིར་མི་ལྡོག་པ་རྣམས་\",\n \"ཆོས་ཐམས་ཅད་ཀྱི་དབང་ཕྱུག་\",\n \"ཆོས་ཐམས་ཅད་ཀྱི་ཕྱག་རྒྱ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཆོས་ཐམས་ཅད་ཀྱི་ཚིག་རབ་ཏུ་འབྱེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཆོས་ཐམས་ཅད་ནི་ཀུན་ནས་ཉོན་མོངས་པ་ཅན་མ་ཡིན་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་གང་ཟག་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་གཏི་མུག་དང་བྲལ་བ་\",\n \"ཆོས་ཐམས་ཅད་ནི་གནས་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་གཞི་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་ང་ཡིར་བྱར་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་དངོས་པོ་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་བདག་པོ་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་བདག་མེད་པ་ཡིན་ན་སེམས་ཅན་རྣམས་བདག་མེད་པ་ལ་མ་མོས་པས་དེའི་ཕྱིར་སེམས་ཅན་རྣམས་ལ་དེ་བཞིན་གཤེགས་པའི་ཐུགས་རྗེ་ཆེན་པོ་སྐྱེའོ་\",\n \"ཆོས་ཐམས་ཅད་ནི་མ་སྐྱེས་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་མངོན་པར་འདུ་བྱེད་པ་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་མཚན་མ་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་ཞེ་སྡང་དང་བྲལ་བ་\",\n \"ཆོས་ཐམས་ཅད་ནི་འགྲོ་བ་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་འཆི་འཕོ་བ་མེད་ཅིང་མ་སྐྱེས་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་འདོད་ཆགས་དང་བྲལ་བ་\",\n \"ཆོས་ཐམས་ཅད་ནི་འོང་བ་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་རང་བཞིན་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་རྒྱུས་ཉེ་བར་འགྲོ་བ་སྟེ་བསྒྲུབ་པས་ཉེ་བར་གནས་པའི་མཚན་ཉིད་\",\n \"ཆོས་ཐམས་ཅད་ནི་སེམས་ཅན་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་སྟོང་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་སྤྲོས་པ་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་སྨོན་པ་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་ནི་སྲོག་མེད་པ་\",\n \"ཆོས་ཐམས་ཅད་མངོན་པར་རྫོགས་པར་བྱང་ཆུབ་པ་ལ་མི་འཇིགས་པ་\",\n \"ཆོས་ཐམས་ཅད་མཉམ་པ་ཉིད་ཀྱི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"ཆོས་ཐམས་ཅད་མཉམ་པ་ཉིད་ཅེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཆོས་ཐམས་ཅད་འབྱུང་བ་མེད་པར་བསྟན་པ་\",\n \"ཆོས་ཐམས་ཅད་ཡང་དག་པར་འདུ་བ་རྒྱ་མཚོའི་ཕྱག་རྒྱ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཆོས་ཐམས་ཅད་ལ་ཐེ་ཚོམ་མེད་པའི་ཡེ་ཤེས་མངའ་བ་\",\n \"ཆོས་ཐམས་ཅད་ལ་འཇུག་པའི་ཕྱག་རྒྱ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཆོས་ཐམས་ཅད་ལ་སྒྲིབ་པ་མེད་པའི་ཡེ་ཤེས་ཅན་\",\n \"ཆོས་ཐམས་ཅད་ལས་འདས་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཆོས་ཐམས་ཅད་ལས་ཤིན་ཏུ་འཕགས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཆོས་ཐམས་ཅད་སྟོང་པ་ཉིད་\",\n \"ཆོས་དཀར་པོ་ཡོངས་སུ་རྫོགས་པ་\",\n \"ཆོས་དང་རྗེས་སུ་མཐུན་པའི་ཆོས་ལ་ཞུགས་པ་\",\n \"ཆོས་དང་རྗེས་སུ་མཐུན་པར་སྤྱོད་པ་\",\n \"ཆོས་དང་ལྡན་པ་\",\n \"ཆོས་དང་ལྡན་ཞིང་ཆོས་ཐོབ་པ་\",\n \"ཆོས་དམ་པའི་ཕྱག་རྒྱ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཆོས་དོན་དུ་གཉེར་བའམ་ཆོས་འདོད་པ་\",\n \"ཆོས་དྲན་པ་ཉེ་བར་བཞག་པ་\",\n \"ཆོས་དྲུག་\",\n \"ཆོས་བཞིན་གཅོད་པ\",\n \"ཆོས་བཞིན་དུ་དཔྱའ་འམ་ཆ་འབུལ་བ་ (ཆོས་བཞིན་དུ་ཁ་འམ་ཆ་འབུལ་བ་)\",\n \"ཆོས་བཟུང་བ་ཡུན་དུ་མི་བརྗེད་པ་དང་ཐབས་ཤེས་རབ་མཐར་ཕྱིན་པས་སེམས་ཅན་སྒྲོལ་མཐར་ཞིང་དད་པ་སྟོན་པ་དང་དགེ་བའི་བར་ཆད་དུ་མི་འགྱུར་བའི་མི་འཇིགས་པ་\",\n \"ཆོས་མ་ཡིན་པ་\",\n \"ཆོས་མ་ཡིན་པ་འདོད་པ་\",\n \"ཆོས་མཁྱེན་པ་ལ་ནེམ་ནུར་མེད་པ་\",\n \"ཆོས་མངོན་པ་\",\n \"ཆོས་མཆོག་\",\n \"ཆོས་མཐུན་པ་ཅན་\",\n \"ཆོས་མཐོང་བ་\",\n \"ཆོས་མི་མཐུན་པ་ཅན་\",\n \"ཆོས་མི་འགྱུར་བ་ཉིད་\",\n \"ཆོས་ཟབ་མོ་ལ་བཟོད་པའི་ཕ་རོལ་ཏུ་སོན་པ་\",\n \"ཆོས་འཚོང་བ་\",\n \"ཆོས་ཡང་དག་པར་ལེན་པ་བཞིའི་མིང་ལ་\",\n \"ཆོས་ཡང་དག་པར་སྡུད་པ་\",\n \"ཆོས་རབ་ཏུ་རྣམ་པར་འབྱེད་པ་ཡང་དག་བྱང་ཆུབ་ཀྱི་ཡན་ལག་\",\n \"ཆོས་རབ་ཏུ་རྣམ་པར་འབྱེད་པས་རྣམ་པར་དབྱེ་བ་བསྟན་པ་ལ་མཁས་པ་\",\n \"ཆོས་རྗེས་སུ་དྲན་པ་\",\n \"ཆོས་ལ་དབང་བ་\",\n \"ཆོས་ལ་བརྟན་ཞིང་མི་ཕྱེད་པར་ཤིན་ཏུ་སྟོན་པ་\",\n \"ཆོས་ལ་རྟོན་པར་བྱའི་གང་ཟག་ལ་རྟོན་པར་མི་བྱ་\",\n \"ཆོས་ལས་འབྱུང་བ་\",\n \"ཆོས་ལུགས་\",\n \"ཆོས་ལོག་པས་དཀྲིས་པ་\",\n \"ཆོས་ཤེས་པ་\",\n \"ཆོས་སོ་སོ་ཡང་དག་པར་རིག་པ་\",\n \"ཆོས་སྐྱོང་\",\n \"ཆོས་སྐྱོབས་\",\n \"ཆོས་སྒྲོགས་པ་\",\n \"ཆོས་སྣང་བའི་སྒོ་\",\n \"ཆོས་སྨྲ་བ་\",\n \"ཆོས་སྨྲ་བ་དང་ཉན་པ་དང་སྒྲ་སྐད་ཀྱི་མིང་ལ་\",\n \"ཆོས་སྲུང་སྡེ་\",\n \"ཇི་ལྟ་བའམ་ཇི་ལྟར་རམ་ཇི་ནས་སམ་འདི་ལྟར\",\n \"ཇི་ལྟར་\",\n \"ཇི་ལྟར་ཐོབ་པ་བཞིན་ནམ་ཐོབ་པ་བཞིན་\",\n \"ཇི་ལྟར་དྲང་ངམ་ཇི་ལྟར་བཤད་\",\n \"ཇི་ལྟར་ཡང་\",\n \"ཇི་ལྟར་རིགས་པའམ་ཇི་ལྟར་འབྱོར་པ་\",\n \"ཇི་ལྟར་སེམས་མཉམ་པར་གཞག་པ་བཞིན་དུ་བདག་གི་སྟན་གྱི་སྟེང་དུ་མི་སྣང་བར་འགྱུར་\",\n \"ཇི་སྐད་སྨྲས་པ་བཞིན་དུ་བྱེད་པ་\",\n \"ཇི་སྙེད་དམ་ཇི་ཙམ་\",\n \"ཇི་སྲིད་\",\n \"ཇི་སྲིད་འཚོའི་བར་དུ་\",\n \"ཉ་\",\n \"ཉ་གྲོ་དྷ་ (ནེ་གྲོ་དྷ་)\",\n \"ཉ་པ་\",\n \"ཉ་ཕྱིས་\",\n \"ཉ་ཕྱིས་\",\n \"ཉ་འཕར་བ་\",\n \"ཉ་སྟོན་\",\n \"ཉན་ཐོས་ཀྱི་གང་ཟག་གི་རིན་པའི་མིང་ལ་\",\n \"ཉན་ཐོས་ཀྱི་ཐེག་པ་\",\n \"ཉན་ཐོས་ཀྱི་ཐེག་པ་མངོན་པར་རྟོགས་པའི་རིགས་\",\n \"ཉན་ཐོས་ཀྱི་ཡོན་ཏན་གྱི་མིང་ལ་\",\n \"ཉན་ཐོས་ཀྱི་སའི་མིང་ལ་\",\n \"ཉན་ཐོས་སོ་སོའི་མིང་ལ་\",\n \"ཉན་པ་\",\n \"ཉན་པ་\",\n \"ཉན་འདོད་པའམ་གུས་པ་\",\n \"ཉན་རྣ་\",\n \"ཉན་རྣ་\",\n \"ཉན་རྣ་བ་ལས་གྱུར་པ་\",\n \"ཉམ་ང་བ་ཉུང་ངམ་\",\n \"ཉམ་ཆུང་བ་\",\n \"ཉམ་ཐག་པ་\",\n \"ཉམ་ཐག་པའི་ང་རོས་འབྱིན་པའམ་འོ་དོད་འབོད་པའམ་ཆོ་ངེས་འདེབས་པ་\",\n \"ཉམ་ཡོད་པ་\",\n \"ཉམས་པ་\",\n \"ཉམས་པའམ་མ་ཚང་བ་\",\n \"ཉམས་པའི་མ་ནིང་\",\n \"ཉམས་པར་འགྱུར་\",\n \"ཉམས་བདེ་བ་\",\n \"ཉམས་སུ་མྱོང་བ་\",\n \"ཉམས་སུ་ལེན་པ་འམ་ཞེན་པར་བྱེད་པ་\",\n \"ཉར་ཉེར་\",\n \"ཉར་ཉེར་\",\n \"ཉར་འཛིན་པའམ་ང་རྒྱལ་\",\n \"ཉལ་པོ་བྱེད་པ་ཤོམ་པའི་ཁྱིམ་ན་གནས་པ་\",\n \"ཉལ་པོ་བྱེད་པར་ཤོམ་པའི་ཁྱིམ་ན་འགྲེང་པ་\",\n \"ཉལ་བའམ་གཉིད་ལོག་པ་\",\n \"ཉི་ཁྲི་ལྔ་སྟོང་\",\n \"ཉི་མ་\",\n \"ཉི་མ་\",\n \"ཉི་མ་ནུ་བ་ཀྱི་བར་དུ་སྟོན་པ་\",\n \"ཉི་མ་འཁྱིམས་པ་\",\n \"ཉི་མ་འཆར་བ་\",\n \"ཉི་མ་ཤར་བ་\",\n \"ཉི་མའམ་ཉིན་བྱེད་\",\n \"ཉི་མའི་གུང་\",\n \"ཉི་མའི་བུ་\",\n \"ཉི་མའི་འོད་\",\n \"ཉི་མའི་འོད་\",\n \"ཉི་མའི་འོད་ཀྱི་གཟི་བརྗིད་\",\n \"ཉི་མའི་རིགས་\",\n \"ཉི་མའི་རྒྱུད་\",\n \"ཉི་མའི་སྒྲོན་མ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཉི་མའི་སྙིང་པོ་\",\n \"ཉི་མའི་སྙིང་པོ་\",\n \"ཉི་མས་སྦས་པ་\",\n \"ཉི་ཙེའི་སེམས་ཅན་དམྱལ་བ་\",\n \"ཉི་ཚེ་བའི་ཐེག་པ་\",\n \"ཉི་ཚེ་བའི་སྤྱི་\",\n \"ཉི་ཚེ་སྤྱོད་པ་\",\n \"ཉི་ཚོད་ཀྱི་འཁོར་ལོ་\",\n \"ཉི་ཟེར་གྱི་རྡུལ་\",\n \"ཉི་འོག་གི་གོས་\",\n \"ཉི་ཤུ་\",\n \"ཉི་ཤུ་རྩ་གཅིག་\",\n \"ཉི་ཤུ་རྩ་གསུམ་\",\n \"ཉི་ཤུ་རྩ་གསུམ་\",\n \"ཉི་ཤུ་རྩ་དྲུག་\",\n \"ཉི་ཤུ་རྩ་བདུན་\",\n \"ཉི་ཤུ་རྩ་བཞི་\",\n \"ཉི་ཤུ་རྩ་བཞིར་བསྒྱུར་བ་\",\n \"ཉི་ཤུ་རྩ་བརྒྱད་\",\n \"ཉི་ཤུ་རྩ་ལྔ་\",\n \"ཉིང་མཚམས་སྦྱོར་བའམ་འབྲེལ་བར་བྱེད་པ་\",\n \"ཉིང་མཚམས་སྦྱོར་ཞིང་སྦྲེལ་བ་\",\n \"ཉིང་ལག་\",\n \"ཉིད་\",\n \"ཉིད་མཚམས་སྦྱོར་བ་\",\n \"ཉིན་གཅིག་པ་\",\n \"ཉིན་གཉིས་པ་\",\n \"ཉིན་གསུམ་པ་\",\n \"ཉིན་བཞི་པ་\",\n \"ཉིན་མོ་\",\n \"ཉིན་ཞག་\",\n \"ཉིན་ཞག་གིས་རུང་བ་\",\n \"ཉུག་པ་\",\n \"ཉུག་རུམ་པ་\",\n \"ཉུག་རུམ་པ་\",\n \"ཉུག་རུམ་པ་\",\n \"ཉུང་ངུ་སྨྲ་བ་ཡིན་\",\n \"ཉུང་བའམ་ཆུང་བ་\",\n \"ཉེ་གནས་\",\n \"ཉེ་དགའ་པོ་\",\n \"ཉེ་དུ་\",\n \"ཉེ་དུའི་ནང་ན་འདུག་ཀྱང་རུང་\",\n \"ཉེ་བ་\",\n \"ཉེ་བ་\",\n \"ཉེ་བའི་ཀུ་ཤ་\",\n \"ཉེ་བའི་ཉོན་མོངས་པ་\",\n \"ཉེ་བར་གཏོད་པ་\",\n \"ཉེ་བར་གྱུར་རམ་བསྟེན་\",\n \"ཉེ་བར་བཏགས་པ་\",\n \"ཉེ་བར་བརྟགས་པའམ་ཉེ་བར་མཚོན་པ་\",\n \"ཉེ་བར་བསྟེན་པ་\",\n \"ཉེ་བར་མ་བསྟན་པའི་བཟོད་པ་ཅན་རྣམས་\",\n \"ཉེ་བར་མ་བསྟན་པའི་བརྩོན་འགྲུས་ཅན་རྣམས་\",\n \"ཉེ་བར་མ་བསྟན་པའི་བསམ་གཏན་ཅན་རྣམས་\",\n \"ཉེ་བར་མ་བསྟན་པའི་ཚུལ་ཁྲིམས་ཅན་རྣམས་\",\n \"ཉེ་བར་མ་བསྟན་པའི་ཤེས་རབ་ཅན་རྣམས་\",\n \"ཉེ་བར་མ་བསྟན་པའི་སྦྱིན་པ་ཅན་རྣམས་\",\n \"ཉེ་བར་མཚོན་པ་་\",\n \"ཉེ་བར་མི་རིག་གམ་ཉེ་བར་མི་འགྲོའམ་ཁས་མི་ལེན་པ་\",\n \"ཉེ་བར་ཞི་བའི་བྱིན་གྱིས་བརླབས་པ་\",\n \"ཉེ་བར་འཁོར་\",\n \"ཉེ་བར་འགྲོ་བ་\",\n \"ཉེ་བར་འཇལ་བ་\",\n \"ཉེ་བར་འབུལ་\",\n \"ཉེ་བར་རྟོག་པ་\",\n \"ཉེ་བར་ལེན་པ་\",\n \"ཉེ་བར་ལེན་པའི་རྒྱུ་\",\n \"ཉེ་བར་སོང་\",\n \"ཉེ་བར་སྒྱུར་བ་\",\n \"ཉེ་བར་སྤྱོད་\",\n \"ཉེ་བར་སྤྱོད་པ་ལ་སྐྱོན་མེད་པ་\",\n \"ཉེ་བར་སྦྱར་བ་\",\n \"ཉེ་བར་སྦྱོར་བ་\",\n \"ཉེ་མཛེས་\",\n \"ཉེ་རེག་\",\n \"ཉེ་རྒྱལ་\",\n \"ཉེ་སྡེ་\",\n \"ཉེན་ཁ་\",\n \"ཉེར་དགུ་\",\n \"ཉེར་བསྡོགས་\",\n \"ཉེས་གསུམ་འཇོམས་\",\n \"ཉེས་དམིགས་\",\n \"ཉེས་པ་\",\n \"ཉེས་པ་སྦོམ་པོ་\",\n \"ཉེས་བྱས་\",\n \"ཉོ་ཚོང་བྱེད་པ་\",\n \"ཉོན་མོངས་ཅན་མ་ཡིན་པའི་ཡིད་\",\n \"ཉོན་མོངས་པ་ཅན་གྱི་ཡིད་\",\n \"ཉོན་མོངས་པ་ཆེ་བའམ་མང་བ་\",\n \"ཉོན་མོངས་པ་དང་བཅས་པ་\",\n \"ཉོན་མོངས་པ་བཅོམ་པ་\",\n \"ཉོན་མོངས་པ་མེད་པ་\",\n \"ཉོན་མོངས་པ་མེད་པ་\",\n \"ཉོན་མོངས་པ་མེད་པ་དང་ཉོན་མོངས་པ་དང་བཅས་པ་ཐམས་ཅད་ཡང་དག་པར་འདུ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཉོན་མོངས་པ་མེད་པའི་ཏིང་ངེ་འཛིན་\",\n \"ཉོན་མོངས་པ་མེད་པར་གནས་པ་རྣམས་ཀྱི་མཆོག་\",\n \"ཉོན་མོངས་པ་མེད་པར་ཡང་དག་པར་འདུ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཉོན་མོངས་པ་སྤོང་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཉོན་མོངས་པའམ་འཐབ་པའམ་གཡུལ་\",\n \"ཉོན་མོངས་པའི་མིང་སྟེ་འདོམ་ན་སྐོར་བ་\",\n \"ཉོན་མོངས་པའི་སྙིགས་མ་\",\n \"ཉོན་མོངས་བཅོས་པའི་ཕྱིར་དགེ་སློང་\",\n \"ཏ་ག་ར་\",\n \"ཏ་མ་ལའི་འདབ་མ་\",\n \"ཏ་མཱ་ལའི་ལོ་མ་\",\n \"ཏ་ར་ཎི་\",\n \"ཏ་ལའི་ལོ་མ་ལྟར་ལྟབ་པ་\",\n \"ཏཱ་མ་ལི་བྟའི་རྒྱལ་པོ\",\n \"ཏི་ལ་\",\n \"ཏི་སེའི་གངས་\",\n \"ཏིང་ངེ་འཛིན་\",\n \"ཏིང་ངེ་འཛིན་གྱི་དཀྱིལ་འཁོར་\",\n \"ཏིང་ངེ་འཛིན་གྱི་དབང་པ་\",\n \"ཏིང་ངེ་འཛིན་གྱི་དབང་པོ་\",\n \"ཏིང་ངེ་འཛིན་གྱི་ཕུང་པོ་\",\n \"ཏིང་ངེ་འཛིན་གྱི་རྣམ་པར་རོལ་པ་བརྒྱ་སྟོང་སྒྲུབ་པ་ལ་མཁས་པ་\",\n \"ཏིང་ངེ་འཛིན་གྱི་སྙིང་པོ་\",\n \"ཏིང་ངེ་འཛིན་གྱི་སྟོབས་\",\n \"ཏིང་ངེ་འཛིན་གྱི་སྤྱོད་པ་ཚད་མེད་པས་བྱིན་གྱིས་བརླས་པ་\",\n \"ཏིང་ངེ་འཛིན་ཉམས་པ་མེད་པ་\",\n \"ཏིང་ངེ་འཛིན་ཉམས་པ་མེད་པ་\",\n \"ཏིང་ངེ་འཛིན་ཐམས་ཅད་ལ་དབང་པའི་ཕ་རོལ་ཏུ་སོན་པ་\",\n \"ཏིང་ངེ་འཛིན་མཉམ་པ་ཉིད་ཅེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཏིང་ངེ་འཛིན་ཡང་དག་བྱང་ཆུབ་ཀྱི་ཡན་ལག་\",\n \"ཏིང་ངེ་འཛིན་རྒྱལ་པོ་\",\n \"ཏིང་ངེ་འཛིན་སྙོམས་པར་འཇུག་པ་ཚད་མེད་པ་དང་ལྡན་པ་\",\n \"ཏིང་ངེའི་འཛིན་གྱི་རྒྱལ་པོ་ལྟར་རབ་ཏུ་གནས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཏིན་དུ་ཀ་\",\n \"ཏུད་ཏུད་པོ་ (རུད་རུད་པོ་) (རྒྱུད་རྒྱུད་པོ་)\",\n \"ཐ་ག་བ་\",\n \"ཐ་ཅད་ (ཐ་ཆད་)\",\n \"ཐ་དད་གནས་པ་\",\n \"ཐ་དད་དུ་དབྱེ་\",\n \"ཐ་དད་དུ་བྱ་བ་ཅི་ཡོད་\",\n \"ཐ་དད་པའམ་བྱེ་བྲག་\",\n \"ཐ་དད་པའི་འདུ་ཤེས་མེད་པ་\",\n \"ཐ་ན་བཞད་གད་བྱ་བར་བསམས་ཏེ་(ཐ་ན་གཞད་གད་བྱ་བར་བསམས་ཏེ་)\",\n \"ཐ་བ་ངན་པ་ལྟར་\",\n \"ཐ་བེ་\",\n \"ཐ་མའི་ཆ་དང་མཐུན་པ་\",\n \"ཐ་མར་དགེ་བ་\",\n \"ཐ་མལ་པ་\",\n \"ཐ་སྐར་\",\n \"ཐ་སྐར་གཞོན་ནུ་གཉིས་\",\n \"ཐ་སྙད་\",\n \"ཐ་སྙད་\",\n \"ཐག་ཟངས་\",\n \"ཐག་འགྲམ་\",\n \"ཐག་རན་\",\n \"ཐགས་བཟངས་རིས་\",\n \"ཐགས་འཁྲུགས་པ་ལྟ་བུ་\",\n \"ཐང་ངག་སྐམ་\",\n \"ཐང་ཅིག་\",\n \"ཐང་འགའ་འཕྲད་པ་\",\n \"ཐང་འགའ་འཕྲད་པ་\",\n \"ཐང་ལ་བར་\",\n \"ཐང་ཤིང་\",\n \"ཐད་ཀ་པའི་འཇིག་རྟེན་གྱི་ཁམས་\",\n \"ཐད་དད་དུ་མི་འཇུག་པའམ་མི་གནས་པ་\",\n \"ཐབ་ཐིབ་\",\n \"ཐབ་ཐིབ་\",\n \"ཐབ་རིར་བབ་པའམ་མཚམ་པ་\",\n \"ཐབས་ཀྱི་ཕ་རོལ་ཏུ་ཕྱིན་པ་\",\n \"ཐབས་ཅིག་གམ་ལྷན་ཅིག་\",\n \"ཐབས་དང་ལྡན་པ་\",\n \"ཐབས་ལ་མཁས་པ་\",\n \"ཐབས་ལ་མཁས་པས་སེམས་ཅན་ཐམས་ཅད་ཀྱིས་སྤྱོད་པའི་དབང་གིས་ཐེག་པའི་མཆོག་གིས་འབྱུང་བ་བསྟན་པ་རྣམས་\",\n \"ཐབས་ཤེས་པ་ལ་མཁས་པ་\",\n \"ཐབས་སུ་སྦྱར་བའམ་གཡོར་བསྐྱིམས་པའམ་སྦྱོར་ཁ་འབྱེད་པ་\",\n \"ཐམས་ཅད་ཀྱི་ཐམས་ཅད་\",\n \"ཐམས་ཅད་དང་ལྡན་པའི་འཁོར་གྱི་དཀྱིལ་འཁོར་\",\n \"ཐམས་ཅད་དུ་འགྲོ་བའི་ལམ་མཁྱེན་པའི་སྟོབས་\",\n \"ཐམས་ཅད་མཁྱེན་པ་ཉིད་ཀྱི་སེམས་མི་ཉམས་ཤིང་ཐེག་པ་གཞན་གྱིས་མི་འགྱུར་བར་དབང་ཡོངས་སུ་རྫོགས་པ་དང་སེམས་ཅན་གྱི་དོན་རྣམ་པ་ཐམས་ཅད་དུ་ཡང་དག་པར་ཐོབ་པར་བྱ་བ་ལ་མི་འཇིགས་པ་\",\n \"ཐམས་ཅད་མཁྱེན་པ་ཉིད་ལ་གཞོལ་བ་\",\n \"ཐམས་ཅད་མཁྱེན་པ་ཉིད་ལ་ངེས་པར་འབྱུང་བ་\",\n \"ཐམས་ཅད་མཁྱེན་པ་ཉིད་ལ་མངོན་དུ་ཕྱོགས་པ་\",\n \"ཐམས་ཅད་མཁྱེན་པ་ཉིད་ལ་འབབ་པ་\",\n \"ཐམས་ཅད་མཁྱེན་པ་ཉིད་ལ་འབབ་པ་\",\n \"ཐམས་ཅད་མཁྱེན་པ་འམ་ཀུན་མཁྱེན\",\n \"ཐམས་ཅད་མཐུན་པར་དམིགས་པའི་མཚན་ཉིད་\",\n \"ཐམས་ཅད་མི་མཐུན་པར་དམིགས་པའི་མཚན་ཉིད་\",\n \"ཐམས་ཅད་རྣམ་པར་འགྱེད་\",\n \"ཐམས་ཅད་སྒྲོལ་\",\n \"ཐལ་གོང་\",\n \"ཐལ་གོང་རྒྱས་པ་\",\n \"ཐལ་གྱུར་\",\n \"ཐལ་ཆེས་པར་གྱུར་\",\n \"ཐལ་ཐལ་\",\n \"ཐལ་ཕྱགས་\",\n \"ཐལ་བ་ཡང་མེད་\",\n \"ཐལ་བའི་སོལ་རིས་གསུམ་མཚན་ཅན་\",\n \"ཐལ་བར་འགྱུར་\",\n \"ཐལ་མོ་སྦྱར་\",\n \"ཐལ་མོ་སྦྱར་བ་\",\n \"ཐལ་ཡས་\",\n \"ཐལ་ཡས་\",\n \"ཐལ་ཡས་\",\n \"ཐལ་ལྕག་\",\n \"ཐི་བ་\",\n \"ཐིག་ནག་\",\n \"ཐིག་མཁན་\",\n \"ཐིག་འབུམ་མམ་མཚོ་ཡས་\",\n \"ཐིག་ལེ་ལྟ་བུ་རྒྱན་ནམ་མདོངས་\",\n \"ཐིག་སྐུད་\",\n \"ཐིང་ཡུག་\",\n \"ཐིང་ཡུག་\",\n \"ཐིབས་པོ་\",\n \"ཐུ་བོའམ་རྒན་རབས\",\n \"ཐུག་པ་\",\n \"ཐུག་པ་\",\n \"ཐུག་པ་\",\n \"ཐུག་པ་\",\n \"ཐུག་པ་མེད་པར་འགྱུར་\",\n \"ཐུག་པ་འགྲིམ་པ་\",\n \"ཐུག་མེད་\",\n \"ཐུག་མེད་\",\n \"ཐུག་མེད་པ་ལས་བསྒྲེས་པ་\",\n \"ཐུག་མེད་ལ་བསྒྲེས་པ་\",\n \"ཐུགས་བརྩེ་བའི་སླད་དུའམ་སྙིང་བརྩེ་བའི་ཕྱིར་\",\n \"ཐུགས་བྱུང་བར་མི་བྱེད་\",\n \"ཐུང་ངུ་\",\n \"ཐུན་གཉིས་པའམ་འཇིང་\",\n \"ཐུན་གསུམ་པའམ་ལྔ་ཚིགས་\",\n \"ཐུན་ཐ་མ་ལ་\",\n \"ཐུན་དང་པོ་\",\n \"ཐུན་དང་པོའམ་སྲོད་\",\n \"ཐུན་བཞི་པའམ་ནམ་གུང\",\n \"ཐུན་ཚགས་མ་ཡིན་པ་\",\n \"ཐུན་ཚོད་དུ་རུང་བ་\",\n \"ཐུན་ལྔ་པའམ་ཐོ་རངས་\",\n \"ཐུབ་དཀའ་གཞོན་ནུར་གྱུར་པ་\",\n \"ཐུབ་པར་དཀའ་བ་\",\n \"ཐུར་མ་\",\n \"ཐེ་ཚོམ་\",\n \"ཐེ་ཚོམ་\",\n \"ཐེ་ཚོམ་ལས་འབྱིན་པ་ནི་ངའོ་སྙམ་པའི་ང་རྒྱལ་ཡང་དག་པར་འཇོམས་པ་\",\n \"ཐེག་ཆེན་ལས་མ་ཉམས་པ་རྣམས་\",\n \"ཐེག་པ་གཅིག་པ\",\n \"ཐེག་པ་ཆེན་པོ་\",\n \"ཐེག་པ་ཆེན་པོ་ཡོང་སུ་འཛིན་པ་\",\n \"ཐེག་པ་ཆེན་པོ་ལ་དད་པ་རབ་ཏུ་སྒོམ་པ་\",\n \"ཐེག་པ་ཆེན་པོའི་མན་ངག་\",\n \"ཐེག་པ་རྣམ་པའི་མིང་ལ་\",\n \"ཐེག་པ་ལ་གསར་དུ་ཞུགས་པ་\",\n \"ཐེག་པའི་སྟོབས་\",\n \"ཐེང་པོ་\",\n \"ཐེམ་པ་\",\n \"ཐེམ་སྐས\",\n \"ཐེར་ཟུག་\",\n \"ཐེར་ཟུག་ཏུ་གནས་པ་\",\n \"ཐེར་འབུམ་\",\n \"ཐེར་འབུམ་\",\n \"ཐེར་འབུམ་\",\n \"ཐེར་འབུམ་\",\n \"ཐེར་འབུམ་ཆེན་པེ་\",\n \"ཐེར་འབུམ་ཕྲག་བརྒྱ་ན་ཁྲག་ཁྲིག་ཅེས་བྱའོ་\",\n \"ཐོ་བ་\",\n \"ཐོག་མ་དང་ཐ་མ་མེད་པ་སྟོང་པ་ཉིད་\",\n \"ཐོག་མར་དགེ་བ་\",\n \"ཐོགས་པ་དང་བཅས་པ་\",\n \"ཐོགས་པ་མེད་པ་\",\n \"ཐོང་ལྕགས་\",\n \"ཐོད་\",\n \"ཐོད་པ་ཅན་\",\n \"ཐོད་པ་ཅན་གྱི་རྒྱལ་པོ་\",\n \"ཐོད་རྒལ་གྱི་སྙོམས་པར་འཇུག་པ་\",\n \"ཐོད་ལེ་ཀོར་\",\n \"ཐོད་ལེ་ཀོར་གྱི་ཕྱེ་མ་\",\n \"ཐོབ་ཀྱིས་འཇལ་བ་་\",\n \"ཐོབ་པ་\",\n \"ཐོབ་པའམ་རྙེད་པ་\",\n \"ཐོབ་པར་བྱེད་པ་\",\n \"ཐོར་ཚུགས་ (ཐོར་ཙུགས)\",\n \"ཐོས་པ་\",\n \"ཐོས་པ་\",\n \"ཐོས་པ་ཉུང་བ་\",\n \"ཐོས་པ་བསགས་པ་\",\n \"ཐོས་པ་བླ་ན་མེད་པ་\",\n \"ཐོས་པ་འཛིན་པ་\",\n \"ཐོས་པ་ལས་བྱུང་བའི་ཤེས་རབ་\",\n \"ཐོས་པའི་ནོར་\",\n \"ད་ར་\",\n \"ད་ལྟར་\",\n \"ད་ལྟར་གྱི་དུས་ལ་མ་ཆགས་མ་ཐོགས་པའི་ཡེ་ཤེས་མཐོང་བ་འཇུག་པ\",\n \"ད་ལྟར་གྱི་སངས་རྒྱས་མངོན་སུམ་དུ་བཞུགས་པ་\",\n \"ད་ལྟར་བྱུང་བ་ལ་བདེ་བ་ལ་ཕྱི་མ་ལ་རྣམ་པར་སྨིན་པ་ལ་སྡུག་བསྔལ་བ་\",\n \"ད་ལྟར་བྱུང་བ་ལ་འང་བདེ་བ་ལ་ཕྱི་མ་ལ་རྣམ་པར་སྨིན་པ་བདེ་བ་\",\n \"ད་ལྟར་བྱུང་བ་ལ་སྡུག་བསྔལ་བ་ལ་ཕྱི་མ་ལ་རྣམ་པར་སྨིན་པ་སྡུག་བསྔལ་བ་\",\n \"ད་ལྟར་བྱུང་བ་ལ་སྡུག་བསྔལ་ལ་ཕྱི་མ་ལ་རྣམ་པར་སྨིན་པ་བདེ་བ་\",\n \"ད་ལྟར་འབྱུང་བ་\",\n \"དཀའ་ཐུབ་ཅན་\",\n \"དཀའ་ཐུབ་ཅན་ནམ་ཉོང་མོངས་པ་\",\n \"དཀའ་ཐུབ་ལ་གནས་པ་དང་སྡོམ་པ་འཛིན་ཅིང་སྤྱོད་པ་ལ་སོགས་པའི་མིང་ལ་\",\n \"དཀའ་པ་མེད་པར་ཐོབ་པ་\",\n \"དཀའ་བ་བྱེད་པ་\",\n \"དཀའ་བ་སྤྱད་པ་\",\n \"དཀའ་ཟློག་\",\n \"དཀའ་འགྲེལ་\",\n \"དཀར་ནག་\",\n \"དཀར་པོ་\",\n \"དཀར་པོ་\",\n \"དཀར་པོ་རྣམ་པར་མཐོང་བའི་ས་\",\n \"དཀུ་\",\n \"དཀུ་མ་རྙོངས་པ་\",\n \"དཀུ་ཟླུམ་པ་\",\n \"དཀུ་སྐབས་ཕྱིན་པ་\",\n \"དཀུར་མི་བསྟེན་\",\n \"དཀོན་མཆོག་གམ་རིན་པོ་ཆེ་\",\n \"དཀོན་མཆོག་ཏ་ལ་ལ་\",\n \"དཀོན་མཆོག་བརྩེགས་པ་\",\n \"དཀོན་མཆོག་ཟ་མ་ཏོག་\",\n \"དཀོན་མཆོག་འབྱུང་གནས་\",\n \"དཀོན་མཆོག་འབྱུང་གནས་\",\n \"དཀོན་མཆོག་སྤྲིན་\",\n \"དཀོར་གྱི་བླ་\",\n \"དཀོར་འདྲུབ(བསྲུབས)་པ\",\n \"དཀྱིལ་འཁོར་\",\n \"དཀྱིལ་འཁོར་ཆེན་པོ་ཅན་\",\n \"དཀྲིགས་\",\n \"དཀྲིགས་\",\n \"དཀྲིགས་\",\n \"དཀྲིགས་ཆེན་པོ་\",\n \"དཀྲིགས་པ་ཕྲག་བརྒྱ་ན་མི་འཁྲུགས་པ་ཞེས་བྱའོ་\",\n \"དཀྲུགས་པའམ་གློངས་པ་\",\n \"དཀྲུགས་པའམ་བསྲུབས་པ་\",\n \"དག་པ་\",\n \"དག་པ་དང་གྲོལ་བ་ལ་སོགས་པའི་མིང་ལ་\",\n \"དག་པ་དམ་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"དག་པ་སྣང་བ་གསལ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"དགག་དབྱིའི་གཞི་\",\n \"དགག་དབྱེ་\",\n \"དགག་དབྱེ་བྱེད་\",\n \"དགག་ཕྱེད་ (དགག་དབྱེ་)\",\n \"དགང་གཟར་\",\n \"དགང་དཀའ་བ་\",\n \"དགང་བླུགས་\",\n \"དགང་སླ་བ་\",\n \"དགའ་བ་\",\n \"དགའ་བ་\",\n \"དགའ་བ་\",\n \"དགའ་བ་\",\n \"དགའ་བ་ཆེན་མོ་ཚིམ་པ་\",\n \"དགའ་བ་དང་བདེ་བ་བསྐྱེད་པ་\",\n \"དགའ་བ་དང་ཡིད་བདེ་བ་སྐྱེས་པ་\",\n \"དགའ་བ་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་ཕྱུང་ན་དགའ་བ་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་ཕྱུང་ངོ་སྙམ་དུ་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"དགའ་བ་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་བརྔུབས་ན་དགའ་བ་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་བརྔུབས་སོ་སྙམ་དུ་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"དགའ་བ་ཡང་དག་བྱང་ཆུབ་ཀྱི་ཡན་ལག་\",\n \"དགའ་བ་ལ་གནས་པ་\",\n \"དགའ་བ་སྤོང་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"དགའ་བའི་ཚལ་\",\n \"དགའ་བའི་འདོད་ཆགས་\",\n \"དགའ་བའི་འདོད་ཆགས་ཀྱིས་མོད་ལ་སྐྱེས་པ་\",\n \"དགའ་བའི་འདོད་ཆགས་མ་\",\n \"དགའ་བའི་རྣམ་གྲངས་ཀྱི་མིང་ལ་\",\n \"དགའ་བའི་ཤུགས་ཆེན་པོ་འབྱུང་བའི་ཡེ་ཤེས་ཀྱི་ཕྱགས་རྒྱ་\",\n \"དགའ་བར་བྱེད་པ་\",\n \"དགའ་བར་བྱེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"དགའ་བརྐྱང་\",\n \"དགའ་བརྐྱང་\",\n \"དགའ་བས་འགྲོ་བ་ཀུན་ཏུ་དབྱངས་\",\n \"དགའ་བོ་\",\n \"དགའ་བོ་\",\n \"དགའ་བོ་\",\n \"དགའ་བོ་\",\n \"དགའ་བྱེད་\",\n \"དགའ་བྱེད་དབང་ཕྱུག་\",\n \"དགའ་མགུར་གནས་པ་\",\n \"དགའ་མགུར་སྤྱོད་པ་\",\n \"དགའ་འབྱམ་\",\n \"དགའ་འབྱམ་\",\n \"དགའ་ཡལ་ཡལ་\",\n \"དགའ་ཡས་\",\n \"དགའ་ཡས་\",\n \"དགའ་ཡོད་\",\n \"དགའ་ལྡན་\",\n \"དགའ་སྟོན་\",\n \"དགར་བ་\",\n \"དགུ་\",\n \"དགུ་པ་\",\n \"དགུ་བཅུ་\",\n \"དགུ་བཅུ་རྩ་གཅིག་\",\n \"དགུ་བཅུ་རྩ་གཉིས་\",\n \"དགུ་བཅུ་རྩ་གསུམ་\",\n \"དགུ་བཅུ་རྩ་དགུ་\",\n \"དགུ་བཅུ་རྩ་དྲུག་\",\n \"དགུ་བཅུ་རྩ་བདུན་\",\n \"དགུ་བཅུ་རྩ་བཞི་\",\n \"དགུ་བཅུ་རྩ་བརྒྱད་\",\n \"དགུ་བཅུ་རྩ་ལྔ་\",\n \"དགུག་པ་\",\n \"དགུན་\",\n \"དགུན་གྱི་དུས་\",\n \"དགུན་ཟླ་ཐ་ཆུང་མཆུ་\",\n \"དགུན་ཟླ་འབྲིང་པོ་རྒྱལ་\",\n \"དགུན་ཟླ་ར་བ་མགོ་\",\n \"དགུན་ས་\",\n \"དགུན་སྨད་\",\n \"དགེ་ཆུང་\",\n \"དགེ་བ་\",\n \"དགེ་བ་དང་ཤིས་པའི་མིང་ལ་\",\n \"དགེ་བ་དྲི་མ་མེད་པའི་སྙིང་པོ་\",\n \"དགེ་བ་བཅུའི་ལས་ཀྱི་མིང་ལ་\",\n \"དགེ་བ་མཐའ་ཡས་པའི་མིག་གི་སེང་གེ\",\n \"དགེ་བ་མི་ཆོམས་པ་\",\n \"དགེ་བའམ་མཁས་པའམ་བདེ་བ་\",\n \"དགེ་བའི་ཆོས་ཀྱི་འབྱུང་གནས་\",\n \"དགེ་བའི་ཆོས་མ་སྐྱེས་པ་རྣམས་བསྐྱེད་པའི་ཕྱིར་འདུན་པ་བསྐྱེད་དོ་\",\n \"དགེ་བའི་ཆོས་སྐྱེས་པ་རྣམས་གནས་པ་དང་ཕྱིར་ཞིང་འབྱུང་བ་དང་ཉམས་པར་མི་འགྱུར་བ་དང་ཡོངས་སུ་རྫོགས་པར་བྱ་བའི་ཕྱིར་འདུན་པ་བསྐྱེད་དོ་\",\n \"དགེ་བའི་བཤེས་གཉེན་གྱིས་ཡོངས་སུ་ཟིན་པ་\",\n \"དགེ་བའི་བཤེས་གཉེན་ལ་མགུ་བར་བྱ་བ་\",\n \"དགེ་བའི་མེ་ཏོག་རྒྱས་ཤིང་དག་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"དགེ་བའི་རྩ་བ་བསྐྲུན་པའམ་བསྐྱེད་པ་\",\n \"དགེ་བའི་རྩ་བ་རྣམས་ཆུད་མི་ཟ་བ་\",\n \"དགེ་བའི་སྙིང་པོ་\",\n \"དགེ་བསྙེན་\",\n \"དགེ་བསྙེན་མ་\",\n \"དགེ་མཆོག་\",\n \"དགེ་མཚན་ནམ་ལྟད་མོ་\",\n \"དགེ་ཚུལ་\",\n \"དགེ་ཚུལ་མ་\",\n \"དགེ་འདུན་གྱི་དབྱིན་བྱེད་པ་\",\n \"དགེ་འདུན་གྱི་དབྱེན་བྱས་པ་\",\n \"དགེ་འདུན་གྱི་དབྱེན་བྱེད་པ་\",\n \"དགེ་འདུན་གྱི་འདུ་བའི་སྒོ་འཕྲོག་པ\",\n \"དགེ་འདུན་གྱིས་རུང་བ་\",\n \"དགེ་འདུན་ནམ་མང་པོའམ་ཚོགས་\",\n \"དགེ་འདུན་ནམ་ཚོགས་ཤིང་འདུ་བ་\",\n \"དགེ་འདུན་ཕལ་ཆེན་པོའི་སྡེ་\",\n \"དགེ་འདུན་བདེ་བར་གནས་པར་བྱ་བའི་ཕྱིར་\",\n \"དགེ་འདུན་བཙུན་པ་རྣམས་གསན་དུ་གསོལ་\",\n \"དགེ་འདུན་བསྡུ་བའི་ཕྱིར་\",\n \"དགེ་འདུན་ཟུང་གི་མདོ་\",\n \"དགེ་འདུན་རྗེས་སུ་དྲན་པ་\",\n \"དགེ་འདུན་ལ་རག་ལས་པ་\",\n \"དགེ་འདུན་ལེགས་པར་བྱ་བའི་ཕྱིར་\",\n \"དགེ་འདུན་ལྷག་མ་བཅུ་གསུམ་\",\n \"དགེ་རྒྱས་\",\n \"དགེ་ལེགས་སམ་དགེ་བ་\",\n \"དགེ་ཤིས་\",\n \"དགེ་སྐོས་\",\n \"དགེ་སྦྱོང་\",\n \"དགེ་སྦྱོང་\",\n \"དགེ་སྦྱོང་དང་བྲམ་ཟེར་བཅས་པའི་སྐྱེ་དགུ་\",\n \"དགེ་སྦྱོང་དུ་བྱེད་པའི་ཆོས་བཞི་མིང་ལ་\",\n \"དགེ་སྦྱོང་དུ་མི་འཛིན་པ་\",\n \"དགེ་སྦྱོང་དུ་མི་རུང་བའམ་དགེ་སྦྱོང་མ་ཡིན་པ་\",\n \"དགེ་སྦྱོང་བྱེད་པ་\",\n \"དགེ་སྦྱོང་མ་ཡིན་པར་དགེ་སྦྱོང་དུ་ཁས་འཆེ་བ་\",\n \"དགེ་སྦྱོང་ལྟར་བཅོས་པ་\",\n \"དགེ་སློང་\",\n \"དགེ་སློང་གི་དངོས་པོ་ལས་ཉམས་པར་འགྱུར་\",\n \"དགེ་སློང་དག་ངའི་ཆོས་ནི་ལེགས་པར་གསུངས་པ་\",\n \"དགེ་སློང་དུ་མི་རུང་བའམ་དགེ་སློང་མ་ཡིན་པ་\",\n \"དགེ་སློང་མ་\",\n \"དགེ་སློང་མ་དང་ལྷན་ཅིག་གྲུར་འཇུག་པ་\",\n \"དགེ་སློང་མ་སུན་ཕྱུང་བ་\",\n \"དགེ་སློང་མའི་མགྲོན་པོ་མང་པོ་དང་ལྡན་ཅིག་འགྲོ་བ་\",\n \"དགེ་སློང་མས་སྦྱོར་དུ་བཅུག་པའི་ཟས་ཟ་པ་\",\n \"དགེ་སློང་ལ་ཕྲ་མ་སྨྲ་བ་\",\n \"དགེ་སློན་མ་ལས་ཟས་ལག་ཏུ་ལེན་པ་\",\n \"དགེ་སློབ་མ་\",\n \"དགོངས་པ་ངེས་པར་འགྲེལ་བ་\",\n \"དགོངས་པ་བཞིའི་མིང་ལ་\",\n \"དགོངས་པའམ་སྨད་པ་\",\n \"དགོངས་པའི་\",\n \"དགོན་དུང་\",\n \"དགོན་པ་\",\n \"དགོན་པ་\",\n \"དགོན་པ་པ་\",\n \"དགོལ་པ (གཏུམ)\",\n \"དགོལ་པ (གཏུམ)\",\n \"དགོས་པ་\",\n \"དགྱེ་གུར་སྒུར་པ་\",\n \"དགྱེའོ་\",\n \"དགྱེས་པ་ཆེན་པོའི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"དགྲ་\",\n \"དགྲ་ཁང་ངམ་བ་གམ་\",\n \"དགྲ་བཅོམ་པ་\",\n \"དགྲ་བཅོམ་པ་\",\n \"དགྲ་བཅོམ་པ་གསོད་པ་\",\n \"དགྲ་བཅོམ་པ་བསད་པ་\",\n \"དགྲ་བཅོམ་པ་ལ་འཇུག་པ་\",\n \"དགྲ་བོ་\",\n \"དགྲ་སྟ་\",\n \"དགྲ་སྟ་ཐོགས་པ་\",\n \"དང་ངམ་ཡང་\",\n \"དང་དུ་མི་ལེན་\",\n \"དང་པོ་\",\n \"དང་པོ་དང་ཐ་མ་ལ་སྦྱིན་པ་\",\n \"དང་བ་\",\n \"དང་བའམ་གསལ་བ་\",\n \"དངངས་པར་མི་འགྱུར་\",\n \"དངུལ་\",\n \"དངུལ་\",\n \"དངུལ་\",\n \"དངུལ་ཆུ་\",\n \"དངོས་\",\n \"དངོས་གཞི་\",\n \"དངོས་གཞི་\",\n \"དངོས་གྲུབ་\",\n \"དངོས་པོ་མེད་པ་\",\n \"དངོས་པོ་མེད་པའི་ངོ་བོ་ཉིད་སྟོང་པ་ཉིད་\",\n \"དངོས་པོ་མེད་པའི་སྟོང་པ་ཉིད་\",\n \"དངོས་པོ་འདི་ལའམ་གཞི་འདི་ལ་\",\n \"དངོས་པོར་བྱས་པའམ་རྟེན་ཏུ་བྱས་པ་\",\n \"དད་པ་\",\n \"དད་པ་ཆེ་བའམ་ལྟོ་ཆེ་བ་\",\n \"དད་པ་དང་ཡོང་བ་དག་པ་\",\n \"དད་པ་ཕྱིར་བསྒྱུར་བ་\",\n \"དད་པ་མི་ཕྱེད་པ་\",\n \"དད་པ་འབུལ་བ་\",\n \"དད་པའི་དབང་པོ་\",\n \"དད་པའི་དབང་པོ་\",\n \"དད་པའི་ནོར་\",\n \"དད་པའི་སྟོབས་\",\n \"དད་པའི་སྟོབས་བསྐྱེད་པ་\",\n \"དད་པས་མོས་པ་\",\n \"དད་པས་མ���ས་པ་རྣམས་མངོན་པར་དགའ་བ་\",\n \"དད་པས་རྗེས་སུ་འབྲང་བ་\",\n \"དད་པས་རྗེས་སུ་སྦྱིན་པར་བྱེད་པའམ་མཚུན་འཐོར་བ\",\n \"དཔག་ཏུ་མེད་པ་\",\n \"དཔག་བསམ་ཤིང་ལས་བྱུང་པའི་གོས་\",\n \"དཔག་བྲལ་\",\n \"དཔག་ཚད་\",\n \"དཔག་འཕྱམ་\",\n \"དཔག་འབྱམ་\",\n \"དཔག་ཡས་\",\n \"དཔག་ཡས་\",\n \"དཔག་ཡས་\",\n \"དཔག་ཡས་ལ་བསྒྲེས་པ་\",\n \"དཔག་ཡས་ལས་བསྒྲེས་པ་\",\n \"དཔའ་བ་\",\n \"དཔའ་བ་(རྟུལ་ཕོད་པའམ་རྩལ་ཆེ་བ་)\",\n \"དཔའ་བའམ་བརྟུལ་ཕོད་པ་\",\n \"དཔའ་བའི་ལག་པ་\",\n \"དཔའ་བར་འགྲོ་བ་\",\n \"དཔའ་བར་འགྲོ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"དཔའ་བར་འགྲོ་བའི་ཏིང་ངེ་འཛིན་དང་ལྡན་པ་\",\n \"དཔའ་བར་འགྲོ་བའི་ཏིང་ངེ་འཛིན་བསྟན་པ་\",\n \"དཔའ་བོ་\",\n \"དཔའ་བོ་\",\n \"དཔའ་བོ་\",\n \"དཔལ་གྱི་གཟི་བརྗིད\",\n \"དཔལ་གྱི་སྙིང་པོ་\",\n \"དཔལ་ན་ལན་དཱ་\",\n \"དཔལ་བཟང་\",\n \"དཔལ་བྲལ་\",\n \"དཔལ་ལམ་གཡང\",\n \"དཔལ་ལམ་ཤིས་པ་\",\n \"དཔུང་གཉེན་\",\n \"དཔུང་གི་ཚོགས་ཡན་ལག་བཞི་པའི་མིང་ལ་\",\n \"དཔུང་པ་\",\n \"དཔུང་བཀོད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"དཔུང་བུ་ཆུང་གི་ཚོགས་\",\n \"དཔུང་མགོ་\",\n \"དཔུང་མགོ་ཤིན་ཏུ་ཟླུམ་པ་\",\n \"དཔུང་རྒྱན་\",\n \"དཔུང་རྒྱན་\",\n \"དཔེ་\",\n \"དཔེ་\",\n \"དཔེ་\",\n \"དཔེ་བྱང་བཟང་པོ་རྣམས་ཀྱིས་སྤྲས་པ་\",\n \"དཔེ་བྱད་བཟན་པོ་བརྒྱད་ཅུའི་མིང་ལ་\",\n \"དཔེ་མེད་པ་\",\n \"དཔེ་ཡས་\",\n \"དཔེ་ལྟར་སྣང་བ་\",\n \"དཔེའམ་ཉེ་བར་འཇལ་བ་\",\n \"དཔེར་ན་ཞེས་སམ་ཇི་ལྟར་ཡང་\",\n \"དཔེར་ན་ཤིང་ཏ་ལའི་མགོ་བཅད་པ་བཞིན་\",\n \"དཔེར་བརྗོད་པ་\",\n \"དཔེར་བརྗོད་པའི་ཚུལ་གྱིས་\",\n \"དཔེར་ཡང་\",\n \"དཔྱ་\",\n \"དཔྱིད་\",\n \"དཔྱིད་ཀྱི་དུས་\",\n \"དཔྱིད་ཟླ་ཐ་ཆུངས་ས་ག་\",\n \"དཔྱིད་ཟླ་འབྲིང་པོ་ནག་པ་\",\n \"དཔྱིད་ཟླ་ར་བ་གྲེ་ཅན་\",\n \"དཔྱིད་ས་\",\n \"དཔྱོད་པ་\",\n \"དཔྱོད་པ་\",\n \"དཔྱོད་པ་པ་\",\n \"དཔྱོད་པའི་ཏིང་ངེ་འཛིན་སྤོང་བའི་འདུ་བྱེད་དང་ལྡན་པའི་རྫུ་འཕྲུལ་གྱི་རྐང་པ་\",\n \"དཔྲལ་བ་\",\n \"དཔྲལ་བ་དབྱེས་ཆེ་བ་\",\n \"དཔྲལ་བ་ལེགས་པར་དབྱེས་པ་\",\n \"དཔྲལ་བའི་དབྱེས་མཉམ་པ་\",\n \"དབང་ཆུང་བར་གྲགས་པ་\",\n \"དབང་ཆེ་བ་དབང་ཆེ་བར་གྲགས་\",\n \"དབང་ཐང་ཆེ་བའམ་སྐལ་བའམ་དཔལ་ཆེ་བ་\",\n \"དབང་དུ་གྱུར་པ་\",\n \"དབང་དུ་གྱུར་བ་\",\n \"དབང་དུ་བྱ་བ་\",\n \"དབང་དུ་འགྱུར་བའམ་དབང་དུ་བྱ་བ་\",\n \"དབང་པོ་\",\n \"དབང་པོ་\",\n \"དབང་པོ་གཉིས་ཀྱིས་གཟུང་བ་\",\n \"དབང་པོ་ཆེན་པོ་\",\n \"དབང་པོ་ཉི་ཤུ་རྩ་གཉིས་ཀྱི་མིང་ལ་\",\n \"དབང་པོ་ཐམས་ཅད་ཚིམ་པར་བྱེད་པ་\",\n \"དབང་པོ་དང་དོན་དུ་འཕྲད་པ་ལས་བྱུང་བའི་ཤེས་པ་མངོན་སུམ་\",\n \"དབང་པོ་མ་ཚང་བ་\",\n \"དབང་པོ་མ་ཚང་བ་རྣམས་ནི་དབང་པོ་ཡོངས་སུ་ཚང་བར་གྱུར་\",\n \"དབང་པོ་མ་ཚང་བར་མི་འགྱུར་\",\n \"དབང་པོ་མཆོག་དང་མཆོག་མ་ཡིན་པ་མཁྱེན་པའི་སྟོབས་\",\n \"དབང་པོ་འདྲིས་པའམ་ཆེ་བཞི་རྨས་པ་\",\n \"དབང་པོ་རྟུལ་པོ་\",\n \"དབང་པོ་རྣོ་པོ་\",\n \"དབང་པོ་ལྔའི་མིང་ལ་\",\n \"དབང་པོའི་ཏོག་ཅེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"དབང་པོའི་ཕྱོགས་\",\n \"དབང་པོའི་བྲག་ཕུག་\",\n \"དབང་པོའི་མཆོད་སྡོང་\",\n \"དབང་པོའི་རིམ་པའི་མིང་ལ་\",\n \"དབང་པོའི་རྒྱལ་མཚན་\",\n \"དབང་པོའི་ལག་པ་\",\n \"དབང་པོའི་སྡེ་\",\n \"དབང་པོར་ཕུལ་བ་\",\n \"དབང་ཕྱུག་\",\n \"དབང་ཕྱུག་\",\n \"དབང་ཕྱུག་ཆེན་པོ་\",\n \"དབང་ཕྱུག་ཆེན་པོ་ཆེ་བའི་གནས་\",\n \"དབང་བདག་\",\n \"དབང་བསྐུར་བ་\",\n \"དབང་བསྐུར་བ་\",\n \"དབང་བསྐུར་ལྡན་\",\n \"དབང་བློན (སྡུད་དཔོན)\",\n \"དབང་བློན (སྡུད་དཔོན)\",\n \"དབང་བློན་\",\n \"དབང་མེད་པ་\",\n \"དབང་འབྱོར་པ་\",\n \"དབང་ལྡན་གྱི་ཕྱོགས་\",\n \"དབུ་གཙུག་ཏོར་དང་ལྡན་པ་\",\n \"དབུ་མ་བ་\",\n \"དབུ་ཤིན་ཏུ་རྒྱས་པ་\",\n \"དབུ་སྐྲ་གྱས་སུ་འཁྱིལ་བ་\",\n \"དབུ་སྐྲ་དྲི་ཞིམ་བ་\",\n \"དབུ་སྐྲ་བུང་བ་ལྟར་ནག་པ་\",\n \"དབུ་སྐྲ་མ་འཛིངས་པ་\",\n \"དབུ་སྐྲ་མི་གཤོར་བ་\",\n \"དབུ་སྐྲ་འཇམ་པ་\",\n \"དབུ་སྐྲ་སྡུག་པ་\",\n \"དབུག་པ་\",\n \"དབུགས་གདུག་པ་\",\n \"དབུགས་ཐུང་ངུ་ཕྱུང་ན་དབུགས་ཐུང་ངུ་ཕྱུང་ངོ་སྙམ་དུ་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"དབུགས་ཐུང་ངུ་བརྔུབས་ན་དབུགས་ཐུང་ངུ་བརྔུབས་སོ་སྙམ་དུ་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"དབུགས་ཕྱི་ནང་དུ་རྒྱུ་བ་བགྲང་བའི་རིམ་པའི་མིང་ལ་\",\n \"དབུགས་ཕྱིན་པ(དབུགས་འབྱིན་པ)\",\n \"དབུགས་མི་བདེ་བ་\",\n \"དབུགས་རིང་དུ་བརྔུབས་ན་དབུགས་རིང་དུ་བརྔུབས་སོ་སྙམ་དུ་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"དབུགས་རྔུབ་པ་དང་འབྱུང་བ་དྲན་པ་\",\n \"དབུའི་གཙུག་ཏོར་གྱི་གསེབ་\",\n \"དབུའི་གཙུག་ཏོར་གྱི་གསེབ་ནས་འོད་ཟེར་བྱུང་\",\n \"དབུས་དམའ་ན་\",\n \"དབུས་མཐོ་\",\n \"དབེན་པ་ན་འགྲེང་བ་\",\n \"དབེན་པ་ན་འདུག་པ་\",\n \"དབེན་པ་ལ་གནས་པ་\",\n \"དབེན་པའི་རྣམ་པའི་མིང་ལ་\",\n \"དབོ་་\",\n \"དབྱངས་ཀྱི་ཡན་ལག་དྲུག་ཅུའི་མིང་ལ་\",\n \"དབྱངས་ཀྱིས་བསྙད་པའི་སྡེ་\",\n \"དབྱངས་ཟབ་\",\n \"དབྱངས་ཡན་ལག་དྲུག་སྟོང་དང་ལྡན་པ་\",\n \"དབྱངས་སྙན་པ་\",\n \"དབྱར་\",\n \"དབྱར་ཁང་\",\n \"དབྱར་གནས་པ་ལས་ཉམས་པ་\",\n \"དབྱར་གནས་སུ་མ་ཞུགས་པའམ་ལོར་མ་ལོན་པ་\",\n \"དབྱར་གྱི་གཞི་\",\n \"དབྱར་གྱི་གོས་རས་ཆེན་\",\n \"དབྱར་གྱི་དུས་\",\n \"དབྱར་གྱི་རས་ཆེན་དུས་མ་ཡིན་པར་འཚོལ་བ་དང་འཆང་བ་\",\n \"དབྱར་གྱི་རས་ཆེན་ལས་གྱུར་པ་\",\n \"དབྱར་གྱི་རས་ཆེན་སྦེད་པ་\",\n \"དབྱར་ཐུང་ངུའི་དུས་\",\n \"དབྱར་ཚུང་ཆད་\",\n \"དབྱར་ཟླ་ཐ་ཆུང་གྲོ་བཞིན་\",\n \"དབྱར་ཟླ་འབྲིང་པོ་ཆུ་སྟོད་\",\n \"དབྱར་ཟླ་ར་བ་སྣྲོན་\",\n \"དབྱར་རིང་པོའི་དུས་\",\n \"དབྱར་ས་\",\n \"དབྱར་སྦྱོར་\",\n \"དབྱིག་\",\n \"དབྱིག་གཉེན་\",\n \"དབྱིག་གམ་ནོར་\",\n \"དབྱིག་གུ་གཅིག་པ་\",\n \"དབྱིག་གུ་གཉིས་པ་\",\n \"དབྱིག་གུ་གསུམ་པ་\",\n \"དབྱིག་གུ་ཐོགས་པ་\",\n \"དབྱིག་བཤེས་\",\n \"དབྱིབས་ཀྱི་གཟུགས་\",\n \"དབྱིབས་མོ་\",\n \"དབྱུག་གུ་སྐམ་ཁ་\",\n \"དབྱུག་པ་གཅོད་པ་\",\n \"དབྱུག་པ་ཐོགས་པ་\",\n \"དབྱུང་བ་\",\n \"དབྱེ་བ་\",\n \"དབྱེ་བའམ་གཅད་པ་\",\n \"དབྱེ་བའམ་ཐ་དད་པའམ་རྣམ་པ་\",\n \"དབྱེའམ་ཐང་\",\n \"དམ་པ་\",\n \"དམ་པ་འགེབས་\",\n \"དམ་པ་རྣམས་ཀྱིའམ་མཁས་པ་རྣམས་ཀྱི་དམིགས་\",\n \"དམ་པའམ་དབྱིག་\",\n \"དམ་པའམ་སྲ་བའམ་ཏེ་བོར་རམ་ཚགས་ཆེ་བ་\",\n \"དམ་པའི་ཆོས་ཀྱང་ཡུན་རིང་དུ་གནས་པར་འགྱུར་\",\n \"དམ་པའི་ཆོས་ཀྱི་ཆར་\",\n \"དམ་པའི་ཆོས་ཀྱི་མིང་ལ་\",\n \"དམ་པའི་ཆོས་ཀྱི་རྣམ་གྲངས་ཀྱི་མིང་ལ་\",\n \"དམ་པའི་ཆོས་པད་མ་དཀར་པོ་\",\n \"དམ་པའི་ཆོས་ཡོངས་སུ་འཛིན་པ་\",\n \"དམ་པོར་བྱེད་པའམ་སྲ་བར་བྱེད་པ་\",\n \"དམ་བཅའ་པ་\",\n \"དམག་གི་གཏམ་\",\n \"དམག་གི་ནང་ན་གནས་པ་\",\n \"དམག་ཆེན་པོའི་གྱུལ་གནོན་པ་\",\n \"དམག་ལ་ལྟ་བ་\",\n \"དམངས་མོ་\",\n \"དམངས་རིགས་\",\n \"དམན་པ་ལ་མོས་པ་\",\n \"དམན་པའི་ཐེག་པ་\",\n \"དམན་བའམ་ངན་པ་\",\n \"དམའ་བ་\",\n \"དམར་པོ་\",\n \"དམིགས་ཀྱིས་གསལ་བ་\",\n \"དམིགས་ཀྱིས་དབྱེ་བ་\",\n \"དམིགས་ཀྱིས་དབྱེ་བ་\",\n \"དམིགས་པ་\",\n \"དམིགས་པ་གཅོད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"དམིགས་པའི་རྐྱེན་\",\n \"དམུ་རྒོད་\",\n \"དམུ་རྫིང་ཅན་ནམ་དམུ་ཆུ་ཅན་\",\n \"དམུ་རྫིང་ཅན་ནམ་དམུ་ཆུ་ཅན་\",\n \"དམུས་ལོང་\",\n \"དམྱལ་བ་(སེམས་ཅན་དམྱལ་བ)\",\n \"དར་\",\n \"དར་\",\n \"དར་གྱི་ལྔ་ལྡི་\",\n \"དར་གྱི་ལྡ་ལྡི་མང་པོ་བཏགས་པ་\",\n \"དར་གྱི་སྲིན་བུ་\",\n \"དར་ཐོད་\",\n \"དར་ཡུག་\",\n \"དར་ཡོལ་བའམ་ཕྱིད་\",\n \"དར་རི་མོ་ཅན་\",\n \"དར་ལ་\",\n \"དར་ལ་\",\n \"དར་ལ་\",\n \"དར་ལ་བབ་པའམ་སྐྱེས་ཕྲན་\",\n \"དལ་གྱིས་འབབ་པ་\",\n \"དིག་པ་\",\n \"དིག་པའམ་ལྡིབ་པར་མི་འགྱུར་\",\n \"དུ་\",\n \"དུ་ཀཱུ་ལའི་རས་\",\n \"དུ་བ་\",\n \"དུ་བ་འཐུལ་\",\n \"དུ་བ་འཐུལ་བར་ཡང་བྱེད་འབར་བར་ཡང་བྱེད་དེ་དཔེར་ན་མེའི་ཕུང་པོ་ཆེན་པོ་བཞིན་ནོ་\",\n \"དུ་བ་ཡང་མེད་\",\n \"དུ་མ་\",\n \"དུ་རུ་ཀ་\",\n \"དུག་\",\n \"དུག་ཅན་\",\n \"དུག་བཅོམ་པ་\",\n \"དུག་འཚོང་བ་\",\n \"དུག་ཧ་ལ་ཧ་ལ་\",\n \"དུང་\",\n \"དུང་གཡས་སུ་འཁྱིལ་བ་\",\n \"དུང་ཕྱུར་\",\n \"དུང་ཕྱུར་\",\n \"དུང་ལ་སོགས་པའི་མིང་ལ་\",\n \"དུད་འགྲོ་\",\n \"དུད་འགྲོ་གསོད་པ་\",\n \"དུད་འགྲོའི་སྐྱེས་གནས་སུ་སོང་བའམ་སྐྱེ་བ\",\n \"དུན་ལས་སམ་སྦུར་ལོང་\",\n \"དུམ་བུ་གསུམ་པ་\",\n \"དུམ་བུའམ་ཞོགས་མ་\",\n \"དུར་ཁྲོད་\",\n \"དུར་ཁྲོད་པ་\",\n \"དུར་ཁྲོད་བསྐྱེད་པ་\",\n \"དུལ་བ་\",\n \"དུལ་བ་\",\n \"དུལ་བ་ལེགས་\",\n \"དུལ་བ་ལྷ་\",\n \"དུལ་བའི་གནས་\",\n \"དུས་\",\n \"དུས་ཀྱི་མཚམས་\",\n \"དུས་ཀྱི་རྗེས་སུ་འབྲང་བའི་ཙན་དན་\",\n \"དུས་ཀྱི་སྙིགས་མ་\",\n \"དུས་ཀྱིས་རྣམ་པར་གྲོལ་བ་\",\n \"དུས་གཞན་ལ་དགོངས་པ་\",\n \"དུས་གསུམ་\",\n \"དུས་གསུམ་\",\n \"དུས་གསུམ་གྱི་མཚམས་\",\n \"དུས་གསུམ་མཁྱེན་པ་\",\n \"དུས་གསུམ་མཉམ་པ་ཉིད་ཚར་ཕྱིན་པ་\",\n \"དུས་ཆད་པ་མེད་པ་\",\n \"དུས་ཇི་ལྟ་བ་བཞིན་\",\n \"དུས་དང་དུས་མ་ཡིན་པ་དང་སྦྱར་བའི་གཞི་\",\n \"དུས་དང་མི་སྦྱོར་བར་རྣམ་པར་གྲོལ་བ་\",\n \"དུས་མ་ཡིན་པའི་ཟས་སྤོང་བ་\",\n \"དུས་མ་ཡིན་པར་ཟ་བ་\",\n \"དུས་མ་ཡིན་པར་འགྲོ་བ་\",\n \"དུས་མིན་ཤེས་པ་\",\n \"དུས་ཚིགས་\",\n \"དུས་ཚོད་\",\n \"དུས་ཚོད་\",\n \"དུས་འགྱུར་\",\n \"དུས་འབྱོར་བ (དུས་སྦྱོར་བ)\",\n \"དུས་ཡོལ་བ་\",\n \"དུས་རླབས་\",\n \"དུས་རླབས་ (རུས་རླབས་)\",\n \"དུས་ལ་བབས་པར་སངས་རྒྱས་འབྱུང་བ་\",\n \"དུས་ལས་ཡོལ་བར་མི་འདྲི་\",\n \"དུས་ལྔ་\",\n \"དུས་ཤེས་པ་\",\n \"དུས་སམ་གནས་སམ་ཚེའམ་གནས་སྐབས་\",\n \"དུས་སུ་འདྲི་\",\n \"དུས་སུ་རུང་བ་\",\n \"དུས་སྟོན་ཆེན་པོ་\",\n \"དུས་སྟོན་ནམ་དུས་ཚིགས་\",\n \"དེ་\",\n \"དེ་ཁོ་ན་ཉིད་\",\n \"དེ་ཁོ་ནའི་དོན་གྱི་ཕྱོགས་གཅིག་ལ་རྗེས་སུ་ཞུགས་པ་\",\n \"དེ་ཁོ་ནའི་དོན་ལ་རྨོངས་པ་\",\n \"དེ་ཉིད་ཀྱི་མཚན་མོ་འདས་ནས་\",\n \"དེ་དགའ་བའི་འདོད་ཆགས་དང་བྲལ་བས་བཏང་སྙོམས་ལ་གནས་ཤིང་དྲན་པ་དང་ཤེས་བཞིན་ཅན་ཡིན་ཏེ་བདེ་བ་ལུས་ཀྱིས་མྱོང་ལ་འཕགས་པ་རྣམས་ཀྱིས་གང་དེ་དྲན་པ་དང་ལྡན་པ་བདེ་བ་ལ་གནས་པ་བཏང་སྙོམས་པའོ་ཞེས་བརྗོད་པ་སྟེ་དགའ་བ་མེད་པའི་བསྟམ་གཏན་གསུམ་པ་རྫོགས་པར་བྱས་ཏེ་གནས་སོ་\",\n \"དེ་དང་འདྲ་བར་\",\n \"དེ་ནས་ནི་\",\n \"དེ་ནས་སམ་ཇི་སྟེ་ཅི་སྟེ་\",\n \"དེ་ནི་གནས་མ་ཡིན་\",\n \"དེ་བདེ་བ་ཡང་སྤངས་ཏེ་སྔ་ནས་སྡུག་བསྔལ་ཡང་སྤངས་ཤིང་ཡིད་བདེ་བ་དང་ཡིད་མི་བདེ་བ་ཡང་ནུབ་པས་བདེ་བ་ཡང་མ་ཡིན་སྡུག་བསྔལ་ཡང་མ་ཡིན་བཏང་སྙོམས་དང་དྲན་པ་ཡོངས་སུ་དག་པ་བསམ་གཏན་བཞི་པ་རྫོགས་པར་བྱས་ཏེ་གནས་སོ་\",\n \"དེ་བཞིན་\",\n \"དེ་བཞིན་གཤེགས་པ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཐམས་ཅད་ཀྱི་ཆོས་ཀྱི་ཚིག་སྤྲོས་པ་མེད་པའི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཐམས་ཅད་ཀྱི་དགོངས་པ་ཡོངས་སུ་རྫོགས་པར་བྱེད་པའི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཐམས་ཅད་ཀྱི་དགྱེས་པ་མཆོག་གི་བདེ་བ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཐམས་ཅད་ཀྱི་ཡུལ་ལ་འཇུག་པ་ཤེས་པ་ལ་མཁས་པ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཐམས་ཅད་ཀྱི་རྡོ་རྗེའི་དབང་བསྐུར་བའི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཐམས་ཅད་ཀྱི་ལས་སྣ་ཚོགས་ཀྱི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཐམས་ཅད་ཀྱི་ཤེས་རབ་དང་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཐམས་ཅད་དགྱེས་བྱེད་མ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཐམས་ཅད་བསྡམས་པའི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཐམས་ཅད་མཉེས་པར་བྱེད་པའི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཐམས་ཅད་མཉེས་བྱེད་མ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཐམས་ཅད་འདུས་པའི་བྱིན་གྱིས་བརླབས་ཀྱི་བའི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཐམས་ཅད་སྤྱན་འདྲེན་པ་\",\n \"དེ་བཞིན་གཤེགས་པ་དེ་བསོད་ནམས་དག་གི་རྒྱུ་མཐུན་པ་\",\n \"དེ་བཞིན་གཤེགས་པ་མ་འདྲེས་པའི་རྣམ་པར་ཐར་པར་མཛད་པའི་ཡེ་ཤེས་ཀྱི་མཐར་ཕྱིན་པ་\",\n \"དེ་བཞིན་གཤེགས་པ་རྣམས་མ་བྱུང་བ་\",\n \"དེ་བཞིན་གཤེགས་པ་ལ་ངན་སེམས་ཀྱིས་ཁྲག་ཕྱུང་བ་\",\n \"དེ་བཞིན་གཤེགས་པ་ལ་ངན་སེམས་ཀྱིས་ཁྲག་འབྱིན་པ་\",\n \"དེ་བཞིན་གཤེགས་པ་ལ་ཐུགས་ཀྱི་འཕྲིན་ལས་ཀྱི་སྤྱོད་པ་ཡོངས་སུ་དག་པ་སྟེ་དེ་བཞིན་གཞེགས་པ་ལ་ཐུགས་ཀྱི་འཕྲིན་ལས་ཀྱི་སྤྱོད་པ་ཡོངས་སུ་མ་དག་པ་མེད་པའོ་\",\n \"དེ་བཞིན་གཤེགས་པ་ལ་འཁྲུལ་བ་མེད་པ་\",\n \"དེ་བཞིན་གཤེགས་པ་ལ་འཚོ་བ་ཡོངས་སུ་དག་པ་སྟེ་དེ་བཞིན་གཤེགས་པ་ལ་འཚོ་བ་ཡོངས་སུ་མ་དག་པ་མེད་པའོ་\",\n \"དེ་བཞིན་གཤེགས་པ་ཤི་ནས་མེད་\",\n \"དེ་བཞིན་གཤེགས་པ་ཤི་ནས་ཡོད་\",\n \"དེ་བཞིན་གཤེགས་པ་ཤི་ནས་ཡོད་ཀྱང་ཡོད་ལ་མེད་ཀྱང་མེད་\",\n \"དེ་བཞིན་གཤེགས་པ་ཤི་ནས་ཡོད་པ་ཡང་མ་ཡིན་མེད་པ་ཡང་མ་ཡིན་\",\n \"དེ་བཞིན་གཤེགས་པ་སོ་སོའི་མཚན་ལ་\",\n \"དེ་བཞིན་གཤེགས་པའི་གསང་བ་བསམ་གྱིས་མི་ཁྱབ་པ་བསྟན་པ་\",\n \"དེ་བཞིན་གཤེགས་པའི་གསུང་གི་འཕྲིན་ལས་ཀྱི་སྤྱོད་པ་ཡོངས་སུ་དག་པ་སྟེ་དེ་བཞིན་གཤེགས་པ་ལ་གསུང་གི་འཕྲིན་ལས་ཀྱི་སྤྱོད་པ་ཡོངས་སུ་མ་དག་པ་མེད་པའོ་\",\n \"དེ་བཞིན་གཤེགས་པའི་ཆེ་བ་མདོ་སྡེ་ལས་བྱུང་བའི་མིང་ལ་\",\n \"དེ་བཞིན་གཤེགས་པའི་ཐུགས་རྗེ་ཆེན་པོ་སུམ་ཅུ་རྩ་གཉིས་ཀྱི་མིང་ལ་\",\n \"དེ་བཞིན་གཤེགས་པའི་ཐེག་པ་མངོན་པར་རྟོགས་པའི་རིགས་\",\n \"དེ་བཞིན་གཤེགས་པའི་བཀའ་ལ་ཤིན་ཏུ་ཞུགས་པ་\",\n \"དེ་བཞིན་གཤེགས་པའི་མི་འཇིགས་པ་བཞིའི་མིང་ལ་\",\n \"དེ་བཞིན་གཤེགས་པའི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱའི་ཏིང་ངེ་འཛིན་\",\n \"དེ་བཞིན་གཤེགས་པའི་སྐུའི་ཕྲིན་ལས་ཀྱི་སྤྱོད་པ་ཡོངས་སུ་དག་པ་སྟེ་དེ་བཞིན་གཤེགས་པ་ལ་སྐུའི་ཕྲིན་ལས་ཀྱི་སྤྱོད་པ་ཡོངས་སུ་མ་དག་པ་མེད་པའོ་\",\n \"དེ་བཞིན་གཤེགས་པའི་སྐྱེ་བ་འབྱུང་བ་བསྟན་པ་\",\n \"དེ་བཞིན་གཤེགས་པའི་སྙིང་རྗེ་ཆེན་པོ་བསྟན་པ་\",\n \"དེ་བཞིན་གཤེགས་པའི་སྟོབས་བཅུའི་མིང་ལ་\",\n \"དེ་བཞིན་ཉིད་\",\n \"དེ་བཞིན་ཉིད་འདི་ནི་གཅིག་པ་ཉིད་དོ་\",\n \"དེ་བཞིན་དུ་\",\n \"དེ་བཞིན་དུ་གཉིས་པ་དང་དེ་བཞིན་དུ་གསུམ་པ་དང་དེ་བཞིན་དུ་བཞི་པ་དང་བླ་དང་འོག་དང་ཐད་ཀར་རྣམ་པ་ཐམས་ཅད་དུ་ཐམས་ཅད་དང་ལྡན་པའི་འཇིག་རྟེན་འདི་\",\n \"དེ་བཞིན་དུ་སྦྱར་བའམ་གོང་མ་བཞིན་དུ་སྦྱར་བ\",\n \"དེ་བཞིན་ནོ་ཞེས་བྱ་བ་\",\n \"དེ་བཞིན་ནོ་ཞེས་སྨྲ་ཞེའམ་སྨྲས་པ་དེ་བཞིན་ནོ་\",\n \"དེ་བཤིན་གཤེགས་པའི་སྙིང་པོ་\",\n \"དེ་བཤིན་ཉིད་ལ་གནས་ཤིང་སེམས་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"དེ་བས་ཀྱང་\",\n \"དེ་བས་མང་དུ་སྤྱོད་པ་\",\n \"དེ་བྱམས་པ་དང་ལྡན་པའི་སེམས་འཁོན་མེད་པ་འགྲན་ཟླ་མེད་པ་གནོད་པ་མེད་པ་ཡངས་པ་ཆེན་པོར་གྱུར་བ་ཚད་མེད་པ་མི་གཉིས་པ་ཤིན་ཏུ་བསྒོམས་པས་ཕྱོགས་གཅིག་ཏུ་མོས་ཏེ་ཁྱབ་པར་བྱས་ནས་རྫོགས་པར་བྱས་ཏེ་གནས་སོ་\",\n \"དེ་མ་ཐག་\",\n \"དེ་མ་ཐག་ཏུའམ་འཕྲལ་དུའམ་མོད་ལ་\",\n \"དེ་མ་ཐག་བའི་རྐྱེན་\",\n \"དེ་མ་ལགས་སམ་དེ་མ་ཡིན་\",\n \"དེ་མངོན་སུམ་དུ་དམིགས་པའི་མཚན་ཉིད་\",\n \"དེ་ཙམ་ལྔ་\",\n \"དེ་འདི་སྙམ་དུ་སེམས་\",\n \"དེ་རབ་ཏུ་འགོད་\",\n \"དེ་རྒྱ་མཚོ་ལ་ཐུག་པའི་ས་ཆེན་པོ་མ་ལུས་པར་གནོད་པར་སྡོ་བ་མེད་ཅིང་འཚེ་བ་མེད་པ་འདི་ཉིད་ཆད་པ་མེད་ཅིང་མཚོན་གྱིས་བདའ་བ་མེད་ལ་ཆོས་དང་མཐུན་ཞིང་སྙོམས་པས་ལེགས་པར་ཕབ་ཅིང་གནས་་པའོ་\",\n \"དེ་རྟོག་པ་དང་དཔྱོད་པ་དང་བྲལ་ཞིང་་ནང་ཡོངས་སུ་དང་སྟེ་སེམས་ཀྱི་རྒྱུན་གཅིག་ཏུ་གྱུར་བས་རྟོག་པ་མེད་པ་དཔྱོད་པ་མེད་པའི་ཏིང་ངེ་འཛིན་ལས་སྐྱེས་པའི་དགའ་བ་དང་བདེ་བ་ཅན་བསམ་གཏན་གཉས་པ་རྫོགས་པར་བྱས་ཏེ་གནས་སོ་\",\n \"དེ་རྣམ་པ་ཐམས་ཅད་དུ་གཟུགས་ཀྱི་འདུ་ཤེས་རྣམས་ལས་ཡང་དག་པར་འདས་ཏེ་ཐོགས་པའི་འདུ་ཤེས་རྣམས་ནུབ་པར་གྱུར་ཅིང་སྣ་ཚོགས་ཀྱི་འདུ་ཤེས་རྣམས་ཡིད་ལ་མི་བྱེད་པས་ནམ་མཁའ་མཐའ་ཡས་སོ་སྙམ་ནས་ནམ་མཁའ་མཐའ་ཡས་སྐྱེ་མཆེད་རྫོགས་པར་བྱས་ཏེ་གནས་སོ་\",\n \"དེ་རྣམ་པ་ཐམས་ཅད་དུ་གཟུགས་ཀྱི་འདུ་ཤེས་རྣམས་ལས་ཡང་དག་པར་འདས་ཏེ་ཐོགས་པའི་འདུ་ཤེས་རྣམས་ནུབ་པར་གྱུར་ཅིང་སྣ་ཚོགས་ཀྱི་འདུ་ཤེས་རྣམས་ཡིད་ལ་མི་བྱེད་པས་ནམ་མཁའ་མཐའ་ཡས་སོ་སྙམ་ནས་མཁའ་མཐའ་ཡས་སྐྱེ་མཆེད་རྫོགས་པར་བྱས་སྟེ་གནས་པ་འདི་ནི་ཟིལ་གྱིས་གནོན་པའི་སྐྱེ་མཆེད་བདུན་པའོ་\",\n \"དེ་རྣམ་པ་ཐམས་ཅད་དུ་གཟུགས་ཀྱི་འདུ་ཤེས་ལས་ཡང་དག་པར་འདས་ཏེ་ཐོགས་པའི་་འདུ་ཤེས་རྣམས་ནུབ་པར་གྱུར་ཅིང་སྣ་ཚོགས་ཀྱི་འདུ་ཤེས་རྣམས་ཡིད་ལ་མི་བྱེད་པས་ནམ་མཁའ་མཐའ་ཡས་སོ་སྙམ་ནས་ནམ་མཁའ་མཐའ་ཡས་སྐྱེ་མཆེད་རྫོགས་པར་བྱས་ནས་གནས་པ་འདི་ནི་རྣམ་པར་ཐར་བ་བཞི་པའོ་\",\n \"དེ་རྣམ་པ་ཐམས་ཅད་དུ་ཅི་ཡང་མེད་པའི་སྐྱེ་མཆེད་ལས་ཡང་དག་པར་འདས་ནས་འདུ་ཤེས་མེད་འདུ་ཤེས་མེད་མིན་སྐྱེ་མཆེད་རྫོགས་པར་བྱས་ཏེ་གནས་པ་འདི་ནི་རྣམ་པར་ཐར་བ་བདུན་པའོ་\",\n \"དེ་རྣམ་པ་ཐམས་ཅད་དུ་ཅི་ཡང་མེད་པའི་སྐྱེ་མཆེད་ལས་ཡང་དག་པར་འདས་ནས་འདུ་ཤེས་མེད་འདུ་ཤེས་མེད་མིན་སྐྱེ་མཆེད་རྫོགས་པར་བྱས་ཏེ་གནས་སོ་\",\n \"དེ་རྣམ་པ་ཐམས་ཅད་དུ་ནམ་མཁའ་མཐའ་ཡས་སྐྱེ་མཆེད་ལས་ཡང་དག་པར་འདས་ཏེ་རྣམ་པར་ཤེས་པ་མཐའ་ཡས་སོ་སྙམ་ནས་རྣམ་ཤེས་མཐའ་ཡས་སྐྱེ་མཆེད་རྫོགས་པར་བྱས་ཏེ་གནས་པ་འདི་ནི་གཟིལ་ཡིས་གནོན་པའི་སྐྱེ་མཆེད་བརྒྱད་པའོ་\",\n \"དེ་རྣམ་པ་ཐམས་ཅད་དུ་ནམ་མཁའ་མཐའ་ཡས་སྐྱེ་མཆེད་ལས་ཡང་དག་པར་འདས་ཏེ་རྣམ་པར་ཤེས་པ་མཐའ་ཡས་སོ་སྙམ་ནས་རྣམ་ཤེས་མཐའ་ཡས་སྐྱེ་མཆེད་རྫོགས་པར་བྱས་ཏེ་གནས་སོ་\",\n \"དེ་རྣམ་པ་ཐམས་ཅད་དུ་རྣམ་ཤེས་མཐའ་ཡས་སྐྱེ་མཆེད་ལས་ཡང་དག་པར་འདས་ཏེ་ཅི་ཡང་མེད་དོ་སྙམ་ནས་ཅི་ཡང་མེད་པའི་སྐྱེ་མཆེད་རྫོགས་པར་བྱས་ཏེ་གནས་སོ་\",\n \"དེ་རྣམས་ཀྱི་\",\n \"དེ་ལ་\",\n \"དེ་ལ་\",\n \"དེ་ལ་གནས་པ་མངོན་སུམ་དུ་དམིགས་པའི་མཚན་ཉིད་\",\n \"དེ་ལ་རག་ལུས་པ་ཞེའམ་བསྐོས་པ་བཞིན་བྱེད་པ་\",\n \"དེ་ལ་སོགས་པ་\",\n \"དེ་ལས་གཞན་དང་མཐུན་པར་(མངོན་སུམ་དུ་)་དམིགས་པའི་མཚན་ཉིད་\",\n \"དེ་ལས་གཞན་དང་མི་མཐུན་པར་(མངོན་སུམ་དུ་)དམིགས་པའི་མཚན་ཉིད་\",\n \"དེ་ལས་ཅི་འགྱུར་ཞེས་པ་འོ་ན་ཅིར་འགྱུར༽་\",\n \"དེ་ལས་བྱུང་བའི་མཚན་ཉིད་ཀྱི་(ཀྱིས)་འབྲེལ་བ་\",\n \"དེ་ལྟ་ན\",\n \"དེ་ལྟ་བུ་\",\n \"དེ་ལྟ་བུ་བྱུང་བའི་སྡེ་\",\n \"དེ་ལྟ་བུ་བྱུང་བར་བརྗོད་པ་\",\n \"དེ་ལྟ་བུ་ཡོད་ཅེས་གྲགས་པ་\",\n \"དེ་ལྟ་བུའི་ཆ་དང་མཐུན་པ་\",\n \"དེ་ལྟ་མོད་ཀྱི་\",\n \"དེ་ལྟར\",\n \"དེ་ལྟར་ཐོགས་ན་སྲིད་པ་ལན་བདུན་པ་\",\n \"དེ་ལྟར་དེའི་མཚན་ཉིད་ཅེས་བྱ་བའི་རྩིས་ཀྱིས་ནི་རིའི་རྒྱལ་པོ་རི་རབ་བརྩི་བའི་གཞིར་བྱས་ཀྱང་ཆོད་པར་རུང་ངོ་\",\n \"དེ་ལྟར་ན་\",\n \"དེ་ལྟར་ན་འཕགས་པ་རྣམས་ཀྱི་སྨྲ་བའམ་འགྲོ་བའམ་བརྗོད་པ་\",\n \"དེ་ལྟར་བསམས་པ་\",\n \"དེ་ལྟར་མོད་ཀྱི་\",\n \"དེ་ལྟར་འདུ་ཤེས་པས་\",\n \"དེ་ལྟར་རམ་ད་ལྟ་\",\n \"དེ་ལྟར་རམ་ད་ལྟ་\",\n \"དེང་སང་ངམ་\",\n \"དེངས་པའམ་རྙིས་པའམ་ལྷག་པ་\",\n \"དེད་དཔོན་\",\n \"དེད་དཔོན་\",\n \"དེད་དཔོན་བཟང་པོ་\",\n \"དེད་འདྲེན་\",\n \"དེད་འདྲེན་ཆེན་པོ་\",\n \"དེད་འདྲེན་ཞེས་གདགས་\",\n \"དེའི་ངོ་བོ་ཉིད་ཚོལ་དུ་གཞུག་པར་འོས་པ་\",\n \"དེའི་དགེ་སྦྱོང་གི་ཚུལ་ཕྱིར་བསླང་དུ་མེད་པར་འགྱུར་\",\n \"དེའི་དགེ་སྦྱོང་གི་ཚུལ་ཞིག་པར་འགྱུར་\",\n \"དེའི་དུས་ན་ (དེའི་དུས་)\",\n \"དེའི་དུས་ལ་བབ་པར་ཤེས་ན་\",\n \"དེའི་ཕྱིར་ལེགས་པར་རབ་ཏུ་ཉོན་ལ་ཡིད་ལ་ཟུངས་ཤིག་\",\n \"དེའི་བདག་ཉིད་ཀྱི་མཚན་ཉིད་ཀྱི་(ཀྱིས)་འབྲེལ་བ་\",\n \"དེའི་བསྟེན་པ་དང་བཅས་པ་\",\n \"དེའི་མཐུ་འདི་འདྲ་\",\n \"དེའི་ཚེ་\",\n \"དེའི་ཚེ་\",\n \"དེའི་འམ་དེ་ལ་\",\n \"དེའི་ཡང་གོང་ན་རྒྱལ་མཚན་གྱི་རྩེ་མོའི་ནོར་བུ་ཞེས་བྱ་བའི་གྲངས་ཡོད་དོ་\",\n \"དེའི་ཡང་གོང་ན་རྡུལ་ཕྲ་རབ་ལ་འཇུག་པ་ཞེས་བྱ་བའི་གྲངས་ཡོད་དོ་\",\n \"དེའི་ཡིད་ཕྱིར་ཕྱོགས་པར་མི་འགྱུར་\",\n \"དེའི་རྗེས་སུ་ཕྱོགས་པ་\",\n \"དེའི་སྐྱེས་བུ་\",\n \"དེར་འདུ་ཤེས་པས་\",\n \"དེས་\",\n \"དེས་ན་ (དེའི་ཕྱིར་)\",\n \"དེས་པ་\",\n \"དེས་པ་\",\n \"དེས་པའམ་གྱ་ནོམ་པ་\",\n \"དེས་མིག་གི་རྒྱ་མཚོ་ལས་བརྒལ་བ་\",\n \"དོ་བའི་རྡོག་མ་\",\n \"དོ་ཤལ་\",\n \"དོག་པའམ་ཉམ་ང་བ་\",\n \"དོག་ལེ་\",\n \"དོགས་པ་དང་བཅས་པ་\",\n \"དོང་ཀ་\",\n \"དོང་ཀ་\",\n \"དོང་ཀ་\",\n \"དོང་ཀའི་མེ་ཏོག་\",\n \"དོན་ཀུན་བསྒྲུབ་པ་\",\n \"དོན་གཞན་ལ་དགོངས་པ་\",\n \"དོན་གྱི་དབང་འདི་མཐོང་ནས་\",\n \"དོན་གྱི་མཐར་ཐུག་པ\",\n \"དོན་གྱི་སྤྱི་\",\n \"དོན་གྱིས་གོ་བ་\",\n \"དོན་གྲུབ་\",\n \"དོན་གྲུབ་\",\n \"དོན་ཐམས་ཅད་གྲུབ་པ་\",\n \"དོན་དང་མཐུན་པ་\",\n \"དོན་དང་མི་ལྡན་པར་མི་འདྲི་\",\n \"དོན་དང་ལྡན་པར་འདྲི་\",\n \"དོན་དམ་པ་\",\n \"དོན་དམ་པ་དང་ཀུན་རྫོབ་ཀྱི་བདེན་པ་བསྟན་པ་\",\n \"དོན་དམ་པ་སྟོང་པ་ཉིད་\",\n \"དོན་དམ་པའི་ཆོས་ཀྱིས་རྣམ་པར་རྒྱལ་བ་\",\n \"དོན་དམ་པའི་བདེན་པ་\",\n \"དོན་དམ་པའི་མིང་ལ་\",\n \"དོན་བཞག་བ་\",\n \"དོན་བཟང་པོ་\",\n \"དོན་མཐུན་པ་\",\n \"དོན་ཡོད་གྲུབ་པ་\",\n \"དོན་ཡོད་པ་\",\n \"དོན་ཡོད་མཐོང་\",\n \"དོན་རྣམ་པར་ངེས་པ་\",\n \"དོན་ལ་བལྟ་བའི་ཤེས་པ་\",\n \"དོན་ལ་རྟོན་པར་བྱའི་ཚིག་འབྲུ་ལ་རྟོན་པར་མི་བྱ་\",\n \"དོན་སོ་སོ་ཡང་དག་པར་རིག་པ་\",\n \"དོན་སྤྱོད་པ་\",\n \"དོམ་\",\n \"དོམ་\",\n \"དོར་ཐུང་\",\n \"དོར་བ་མེད་པ་སྟོང་པ་ཉིད་\",\n \"དོར་མ་\",\n \"དྲ་བ་\",\n \"དྲ་བ་ཅན་གྱི་འོད\",\n \"དྲག་པོ་\",\n \"དྲག་པོའམ་བདོ་བ་\",\n \"དྲག་ཤུལ་ཅན་\",\n \"དྲག་ཤུལ་ཅན་\",\n \"དྲག་ཤུལ་ཅན་གྱིས་ཞུས་པ་\",\n \"དྲག་ཤུལ་སྤྱོད་པ་\",\n \"དྲང་པོ་\",\n \"དྲང་པོར་ཞུགས་པ་\",\n \"དྲང་པོར་སྲོང་བ་\",\n \"དྲང་བ་\",\n \"དྲང་སྲོང་ཆེན་པོ་\",\n \"དྲང་སྲོང་ཆེན་པོ་གཟེགས་ཟན་\",\n \"དྲང་སྲོང་ཆེན་པོ་སེར་སྐྱ་\",\n \"དྲང་སྲོང་ཆེན་པོའི་མིང་ལ་\",\n \"དྲང་སྲོང་བ་\",\n \"དྲང་སྲོང་རྒྱས་པས་ཞུས་པ་\",\n \"དྲང་སྲོང་ལྷུང་བ་\",\n \"དྲང་སྲོང་སྨྲ་བ་\",\n \"དྲན་པ་\",\n \"དྲན་པ་\",\n \"དྲན་པ་\",\n \"དྲན་པ་ཉམས་པ་མེད་པ་\",\n \"དྲན་པ་ཉེར་བཞག་ཆེན་པོ་\",\n \"དྲན་པ་ཡང་དག་བྱང་ཆུབ་ཀྱི་ཡན་ལག་\",\n \"དྲན་པའི་དབང་པོ་\",\n \"དྲན་པའི་དབང་པོ་\",\n \"དྲན་པའི་སྒོ་བསྲུངས་ཕུན་སུམ་ཚོགས་པ་\",\n \"དྲན་པའི་སྟོབས་\",\n \"དྲན་པས་འདུལ་བར་འོས་པ་\",\n \"དྲལ་བ་\",\n \"དྲི་\",\n \"དྲི་གཙང་ཁང་\",\n \"དྲི་ང་བ་\",\n \"དྲི་ང་བ་མེད་པའམ་དྲི་བཤུལ་བ་མེད་པ་\",\n \"དྲི་ངད་འཇམ་པ་\",\n \"དྲི་དང་ཕྲེང་བས་མཆོད་པ་\",\n \"དྲི་མ་\",\n \"དྲི་མ་ཀུན་ཏུ་བྲལ་བ་་\",\n \"དྲི་མ་དང་བྲལ་བའི་སྙིང་པོ་\",\n \"དྲི་མ་མེད་པ་\",\n \"དྲི་མ་མེད་པ་\",\n \"དྲི་མ་མེད་པ་\",\n \"དྲི་མ་མེད་པའི་སྒྲོན་མ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"དྲི་མ་མེད་པའི་སྙིང་པོ་\",\n \"དྲི་མ་མེད་པའི་སྤྱན་\",\n \"དྲི་མ་མེད་པར་གྲགས་པར་བསྟན་པ་\",\n \"དྲི་མ་འཕྱི་བའི་མ་མ་\",\n \"དྲི་མགྱོགས་\",\n \"དྲི་མཆོག་\",\n \"དྲི་མཉམ་པ་\",\n \"དྲི་མི་མཉམ་པ་\",\n \"དྲི་མེད་པའི་ཤུགས་ཀྱི་དཔལ་\",\n \"དྲི་ཞིམ་པ་\",\n \"དྲི་ཟ་\",\n \"དྲི་ཟའི་གྲོང་ཁྱེར་\",\n \"དྲི་ཟའི་གླུ་དབྱངས་\",\n \"དྲི་ཟའི་དབང་པོའི་མིང་ལ་\",\n \"དྲིའི་ཁམས་\",\n \"དྲིའི་སྐྱེ་མཆེད་\",\n \"དྲིལ་བ་\",\n \"དྲིལ་བུ་གཡེར་ཀའི་དྲ་བ་ཁྲོལ་བ་\",\n \"དྲིལ་སྒྲ་ལས་བསྒྲགས་པ་\",\n \"དྲིས་ནས་ལུང་བསྟན་པ་\",\n \"དྲིས་པའི་གཏན་ལ་དབབ་པ་\",\n \"དྲུ་གུ་འཛིངས་པ་ལྟ་བུ་\",\n \"དྲུག་\",\n \"དྲུག་ཅུ་\",\n \"དྲུག་ཅུ་རྩ་གཅིག་\",\n \"དྲུག་ཅུ་རྩ་གཉིས་\",\n \"དྲུག་ཅུ་རྩ་གསུམ་\",\n \"དྲུག་ཅུ་རྩ་དགུ་\",\n \"དྲུག་ཅུ་རྩ་དྲུག་\",\n \"དྲུག་ཅུ་རྩ་བདུན་\",\n \"དྲུག་ཅུ་རྩ་བཞི་\",\n \"དྲུག་ཅུ་རྩ་བརྒྱད་\",\n \"དྲུག་ཅུ་རྩ་ལྔ་\",\n \"དྲུག་པ་\",\n \"དྲུག་ལྡན་\",\n \"དྲུག་སྡེ་\",\n \"དྲུང་ན་འདུག་པའི་དགེ་སློང་གི་ལྷུང་བཟེད་ལ་འཕྱས་གདགས་པའི་ཕྱིར་མི་བལྟ་\",\n \"དྲུང་ན་འདུག་པའི་དགེ་སློང་ལ་ཟས་དང་འབགས་པའི་ཆུ་སྣོད་མི་གཏོར་\",\n \"དྲེགས་པའམ་སྙེམས་པ་\",\n \"དྲེད་\",\n \"དྲེའུ་\",\n \"དྲེས་པར་མ་གྱུར་བ་\",\n \"དྲོ་བར་གྱུར་བ (དྲོ་བ)\",\n \"དྲོད་གཤེར་ལས་སྐྱེ་བ་\",\n \"དྲོད་ཡལ་བ་\",\n \"དྲོད་རིག་པའམ་ཚོད་ཤེས་པ་\",\n \"དྲོན་ཞོ་\",\n \"དྷ་ནུ་ཀཱ་རི\",\n \"དྷ་ནུ་ཀེ་ཏ་ཀི་\",\n \"ན་ཆུང་\",\n \"ན་བ་མ་ལི་ཀ་\",\n \"ན་བའི་གསོ་སྨན་\",\n \"ན་བའི་གོས་སྨན་\",\n \"ན་བའི་སྡུག་བསྔལ་\",\n \"ན་བུན་རྨུགས་པ་\",\n \"ན་ཚོད་\",\n \"ན་ལེ་ཤམ་\",\n \"ནག་པ་\",\n \"ནག་པོ་\",\n \"ནག་པོ་\",\n \"ནག་པོ་ཆེན་པོ་\",\n \"ནག་ཚུར་\",\n \"ནག་ཚུར་\",\n \"ནག་ཚུར་\",\n \"ནག་ཚུར་\",\n \"ནགས་\",\n \"ནགས་ཁྲོད་\",\n \"ནགས་ཁྲོད་\",\n \"ནགས་ཁྲོད་ན་གནས་པ་\",\n \"ནགས་ཁྲོད་བདག་\",\n \"ནགས་ཚལ་ནས་ནགས་ཚལ་མེད་པར་གཤེགས་པ་\",\n \"ནགས་ཚལ་བརྟག་པ་ལས་གྱུར་པ་བ་\",\n \"ནགས་སམ་ཚལ་ལམ་ནགས་ཚལ་\",\n \"ནང་གཟུགས་མེད་པའི་འདུ་ཤེས་པས་ཕྱི་རོལ་གྱི་གཟུགས་སེར་པོ་ཁ་དོག་སེར་པོ་སེར་པོ་ལྟ་བུར་སྟོན་པ་འོད་སེར་པོ་འབྱུང་བ་རྣམས་ལ་ལྟ་སྟེ་དཔེར་ན་དོང་ཀའི་མེ་ཏོག་གམ་ཡུལ་བཱ་རཱ་ཎ་སེའི་རས་ཕུན་སུམ་ཚོགས་པ་སེར་པོ་ཁ་དོག་སེར་པོ་སེར་པོ་ལྟ་བུར་སྟོན་པ་འོད་སེར་པོ་འབྱུང་བ་དེ་བཞིན་དུ་ནང་གཟུགས་མེད་པའི་འདུ་ཤེས་པས་ཕྱི་རོལ་གྱི་གཟུགས་སེར་པོ་ཁ་དོག་སེར་པོ་སེར་པོ་ལྟ་བུར་སྟོན་པ་འོད་སེར་པོ་འབྱུང་བ་རྣམས་ལ་ལྟ་བ་འདི་ནི་ཟིལ་གྱིས་གནོན་པའི་སྐྱེ་མཆེད་བཞི་པའོ་\",\n \"ནང་གཟུགས་མེད་པར་འདུ་ཤེས་པས་ཕྱི་རོལ་གྱི་གཟུགས་ཆེན་པོར་གྱུར་བའི་ཁ་དོག་བཟང་པོ་དང་ཁ་དོག་ངན་པ་རྣམས་ལ་ལྟ་ཞིང་གཟུགས་དེ་དག་ཟིལ་གྱིས་མནན་ནས་་ཤེས་ཟིལ་གྱིས་མནན་ནས་མཐོང་སྟེ་དེ་ལྟ་བུར་འདུ་ཤེས་པར་གྱུར་པ་འདི་ནི་ཟིལ་གྱིས་གནོན་པའི་སྐྱེ་མཆེད་གཉིས་པའོ་\",\n \"ནང་གཟུགས་མེད་པར་འདུ་ཤེས་པས་ཕྱི་རོལ་གྱི་གཟུགས་དཀར་པོ་ཁ་དོག་དཀར་པོ་དཀར་པོ་ལྟ་བུར་སྟོན་པ་འོད་དཀར་པོ་འབྱུང་བ་རྣམས་ལ་ལྟ་སྟེ་དཔེར་ན་སྐར་མ་པ་བསངས་ཀྱི་དཀར་པོ་ཁ་དོག་དཀར་པོ་ལྟ་བུར་སྟོན་པ་འོད་དཀར་པོ་འབྱུང་བ་དེ་བཞིན་དུ་ནང་གཟུགས་མེད་པའི་འདུ་ཤེས་གྱིས་ཕྱི་རོལ་གྱི་གཟུགས་དཀར་པོ་ཁ་དོག་དཀར་པོ་དཀར་པོ་ལྟ་བུར་སྟོན་པ་འོད་དཀར་པོར་འབྱུང་བ་རྣམས་ལ་ལྟ་བ་འདི་ནི་ཟིལ་གྱིས་གནོན་པའི་སྐྱེ་མཆེད་དྲུག་པའོ་\",\n \"ནང་གཟུགས་མེད་པར་འདུ་ཤེས་པས་ཕྱི་རོལ་གྱི་གཟུགས་དམར་པོ་ཁ་དོག་དམར་པོ་དམར་པོ་ལྟ་བུར་སྟོན་པ་འོད་དམར་པོ་འབྱུང་བ་རྣམས་ལ་ལྟ་སྟེ་དཔེར་ན་བན་དུ་ཇི་བ་ཀའི་མེ་ཏོག་གམ་ཡུལ་བཱ་རཱ་ཎ་སེའི་རས་ཕུན་སུམ་ཚོགས་པ་དམར་པོ་ཁ་དོག་དམར་པོ་དམར་པོ་ལྟ་བུར་སྟོན་པ་འོད་དམར་པོ་འབྱུང་བ་་དེ་བཞིན་དུ་ནང་གཟུགས་མེད་པར་འདུ་ཤེས་པས་ཕྱི་རོལ་གྱི་གཟུགས་དམར་པོ་ཁ་དོག་དམར་པོ་དམར་པོ་ལྟ་བུར་སྟོན་པ་འོད་དམར་པོ་འབྱུང་བ་རྣམས་ལ་ལྟ་བ་འདི་ནི་ཟིལ་གྱིས་གནོན་པའི་སྐྱེ་མཆེད་ལྔ་པའོ་\",\n \"ནང་གཟུགས་མེད་པར་འདུ་ཤེས་པས་ཕྱི་རོལ་གྱི་གཟུགས་རྣམས་ལ་ལྟ་བ་འདི་ནི་རྣམ་པར་ཐར་པ་གཉིས་པའོ་\",\n \"ནང་གཟུགས་མེད་པར་འདུ་ཤེས་པས་ཕྱི་རོལ་གྱི་གཟུགས་སྔོན་པོ་ཁ་དོག་སྔོན་པོ་སྔོན་པོ་ལྟ་བུར་སྟོན་པ་འོད་སྔོན་པོ་འབྱུང་བ་རྣམས་ལ་ལྟ་སྟེ་དཔེར་ན་ཟར་མའི་མེ་ཏོག་གམ་ཡུལ་བཱ་རཱ་ཎ་སེའི་རས་ཕུན་སུམ་ཚོགས་པ་ཁ་དོག་སྔོན་པོ་སྔོན་པོ་ལྟ་བུར་སྟོན་པ་འོད་སྔོན་པོ་འབྱུང་བ་དེ་བཞིན་དུ་ནང་གཟུགས་མེད་པར་འདུ་ཤེས་པས་ཕྱི་རོལ་གྱི་གཟུགས་སྔོན་པོ་ཁ་དོག་སྔོན་པོ་སྔོན་པོ་ལྟ་བུར་སྟོན་པ་འོད་སྔོན་པོ་འབྱུང་བ་རྣམས་ལ་ལྟ་བ་འདི་ནི་ཟིལ་གྱིས་གནོང་པའི་སྐྱེ་མཆེད་གསུམ་པའོ་\",\n \"ནང་གཟུགས་སུ་འདུ་ཤེས་པས་ཕྱི་རོལ་གྱི་གཟུགས་ཆུང་ངུ་ཁ་དོག་བཟང་པོ་དང་ཁ་དོག་ངན་པ་རྣམས་ལ་ལྟ་ཞིང་གཟུགས་དེ་དག་ཟིལ་གྱིས་མནན་ནས་མཐོང་སྟེ་དེ་ལྟར་བུ་འདུ་ཤེས་པར་འགྱུར་བ་འདི་ནི་གཟིལ་གྱིས་གནོན་པའི་སྐྱེ་མཆེད་དང་པོའོ་\",\n \"ནང་གི་རིག་པ་\",\n \"ནང་དུ་བལྟས་པ་ (ནང་དུ་བལྟ་བ་)\",\n \"ནང་དུ་ཞུགས་པ་\",\n \"ནང་དུ་ཡང་དག་འཇོག་\",\n \"ནང་དུ་ཡང་དག་འཇོག་\",\n \"ནང་ན་ལྕི་བ་\",\n \"ནང་པའི་བླ་\",\n \"ནང་པར་ཁོ་ནའམ་ནང་པར་སྔར་\",\n \"ནང་བློན་སྤྱན་པ་་\",\n \"ནང་མི་\",\n \"ནང་ཡངས་པ་\",\n \"ནང་རིམ་\",\n \"ནང་སྟོང་པ་ཉིད་\",\n \"ནད་\",\n \"ནད་ཀྱི་བསྐལ་པ་བར་མ་\",\n \"ནད་ཀྱི་མིང་ལ་\",\n \"ནད་ཀྱིས་བཏབ་པ་རྣམས་ནི་ནད་དང་བྲལ་བར་གྱུར་\",\n \"ནད་ཁོང་སྐེམས་\",\n \"ནད་གཟེར་བ་\",\n \"ནད་པའམ་ན་བ་\",\n \"ནད་མི་མངའ་བ་\",\n \"ནད་མེད་པ་\",\n \"ནད་མེད་པ་\",\n \"ནད་འགོ་བ་\",\n \"ནད་སྣ་ཚོགས་ཀྱིས་བཏབ་པ་\",\n \"ནན་གྱིས་སམ་ངོ་འཐོན་\",\n \"ནན་ཏན་དུ་བྱའོ་ཞེའམ་བརྩོན་པར་བྱེད་དོ་\",\n \"ནན་ཏན་དུ་བྱས་པ་\",\n \"ནན་ཏན་ནམ་འབད་པ་\",\n \"ནན་ཏན་སྙིང་པོར་བྱེད་པ་\",\n \"ནབ་ནུབ་\",\n \"ནབ་ནུབ་\",\n \"ནབ་སོ་\",\n \"ནབས་སོ་\",\n \"ནམ་གྱི་ཆ་སྟོད་\",\n \"ནམ་གྱི་ཆ་སྨད་\",\n \"ནམ་གྲུ་\",\n \"ནམ་གྲུའི་གདོན་\",\n \"ནམ་གྲོག་ཆེན་པོ་\",\n \"ནམ་མཁའ་\",\n \"ནམ་མཁའ་\",\n \"ནམ་མཁའ་\",\n \"ནམ་མཁའ་(གོ་འབྱེད་)\",\n \"ནམ་མཁའ་ཁྱབ་པར་བྱེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ནམ་མཁའ་མཐའ་ཡས་སྐྱེ་མཆེད་\",\n \"ནམ་མཁའ་མཐའ་ཡས་སྐྱེ་མཆེད་\",\n \"ནམ་མཁའ་ལ་མངོན་དུ་འཕགས་པ་སྟེ་སྤྱོད་ལམ་རྣམ་པ་བཞི་བྱེད(ནམ་མཁའ་ལ་མངོན་པར་འཕགས་ཏེ་སྤྱོད་ལམ་རྣམ་པ་བཞི་བྱེད)\",\n \"ནམ་མཁའ་ལ་འགྲོ་བ་\",\n \"ནམ་མཁའ་ལ་ཡང་འགྲོ་སྟེ་དཔེར་ན་འདབ་ཆགས་བྱ་བཞིན་ནོ་\",\n \"ནམ་མཁའ་ལྟར་ཆགས་པ་མེད་པས་རྣམ་པར་གྲོལ་ཞིང་གོས་པ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ནམ་མཁའ་ལྟིང་གྱི་དབང་པོའི་མིང་ལ་\",\n \"ནམ་མཁའ་ལྡིང་\",\n \"ནམ་མཁའི་ཁམས་ཀྱི་མཐའ་ཀླས་པ་\",\n \"ནམ་མཁའི་དཀྱིལ་\",\n \"ནམ་མཁའི་དབྱིངས་ཀྱི་མཐས་གཏུགས་པ་ (ནམ་མཁའི་ཁམས་ཀྱི་མཐས་གཏུགས་)\",\n \"ནམ་མཁའི་མཛོད་\",\n \"ནམ་མཁའི་མཛོད་\",\n \"ནམ་མཁའི་མེ་ཏོག་\",\n \"ནམ་མཁའི་སྙིང་པོ་\",\n \"ནམ་མཁའི་སྙིང་པོ་\",\n \"ནམ་ཚོང\",\n \"ནམ་ཞིག་\",\n \"ནར་ནར་པོ་\",\n \"ནར་མ་མ་ཡིན་པའམ་མ་འདྲིས་པ་\",\n \"ནར་མའམ་འདྲིས་པ་\",\n \"ནལ་ཟེ་\",\n \"ནས་\",\n \"ནས་\",\n \"ནུ་བོ་\",\n \"ནུ་བོ་\",\n \"ནུ་མ་\",\n \"ནུ་མ་\",\n \"ནུ་མ་བསྣུན་བའི་མ་མ་\",\n \"ནུབ་\",\n \"ནུབ་ཀྱི་བ་ལང་སྤྱོད་\",\n \"ནུབ་ཀྱི་རི་བོའི་སྡེ་\",\n \"ནུབ་པ་མེད་པའམ་ཞིག་པར་གྱུར་བ་\",\n \"ནུབ་པའམ་མི་སྣང་བ་\",\n \"ནུབ་ཕྱོགས་དམའ་ན་\",\n \"ནུབ་ཕྱོགས་མཐོ་\",\n \"ནུབ་བྱང་\",\n \"ནུར་ནུར་པོ་\",\n \"ནུར་བའམ་ཕྱིར་དགྱེད་པར་བྱ་བ\",\n \"ནུས་པའམ་མཐུ་\",\n \"ནེ་ནེ་མོ་\",\n \"ནེ་ཙོ་\",\n \"ནེམ་ནུར་རྣམ་པར་སེལ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ནེའུ་བསིང་\",\n \"ནེའུ་ལེའམ་སྲེ་མོང་\",\n \"ནཻ་རན་ཛཱ་ནའི་ཀླུང་\",\n \"ནོག་\",\n \"ནོག་ནོག་པོར་མ་གྱུར་བ་\",\n \"ནོགས་པའམ་འཁྲུས་པ་\",\n \"ནོམ་པ་\",\n \"ནོར་\",\n \"ནོར་ཆེ་བའམ་ནོར་ཆེན་པ་\",\n \"ནོར་དང་འདྲ་བ་\",\n \"ནོར་བསྒྱུར་མཁན་\",\n \"ནོར་བུ་\",\n \"ནོར་བུ་མཁན་\",\n \"ནོར་བུ་རིན་པོ་ཆེ་\",\n \"ནོར་བུ་རིན་པོ་ཆེ་རིན་ཐང་མེད་པ་\",\n \"ནོར་བུ་སྐར་མདོག་\",\n \"ནོར་བུ་སྐར་འོད་\",\n \"ནོར་བུའི་ཆུན་པོ་\",\n \"ནོར་མང་པོ་\",\n \"ནོར་ལྷའི་བུ་\",\n \"ནོར་སྦྱིན་\",\n \"པ་ཆར་\",\n \"པ་བ་སངས་\",\n \"པ་རུ་ཤ་ཀ་\",\n \"པ་རུ་ཤ་བ་ཆེན་པོ་\",\n \"པག་ཤུའི་ཀླུའི་རྒྱལ་པོ་\",\n \"པགས་(ལྤགས་)པ་\",\n \"པགས་པ་སྲབ་ཅིང་མདོག་གསེར་འདྲ་བ་\",\n \"པང་ན་འཚོ་བའི་མ་མ་\",\n \"པང་ནས་སྐྱེས་\",\n \"པང་པ་\",\n \"པང་སྟེང་\",\n \"པང་སྟེང་ཆེན་པོ་\",\n \"པང་སྟེངས་ཕྲག་བརྒྱ་ན་མང་འཛིན་ཞེས་བྱའོ་\",\n \"པད་མ་\",\n \"པད་མ་\",\n \"པད་མ་གཞོན་ནུའི་འདབ་མ་ལྟར་སྤྱན་ཤིན་ཏུ་རྣམ་པར་དག་པ་\",\n \"པད་མ་དཀར་པོ་\",\n \"པད་མ་རཱ་ག\",\n \"པད་མའི་རྩ་བ་\",\n \"པད་མའི་རྩ་ལག་\",\n \"པད་མའི་སྙིང་པོ་\",\n \"པད་མའི་སྤྱན་\",\n \"པད་མའི་སྤྱན་\",\n \"པདྨ་ལྟར་གས་པ་\",\n \"པདྨ་ལྟར་གས་པ་ཆེན་པོ་\",\n \"པདྨའི་བཀོད་པ་\",\n \"པཱ་ཎི་ནི་\",\n \"པི་པི་ལིང་\",\n \"པི་ཝང་(པི་བང)\",\n \"པི་ཝང་རྒྱུད་གཅིག་པ་\",\n \"པི་ཝང་རྒྱུད་གསུམ་པ་\",\n \"པུ་ཤུ་\",\n \"པུ་ཤུའམ་བསིལ་ཁང་ངམ་ཡང་ཐོག་\",\n \"པུ་ཤུའི་སྟེང་\",\n \"པུན་ན་ག་\",\n \"པུས་མོ་\",\n \"པུས་མོ་གཡས་པའི་ལྷ་ང་ས་ལ་བཙུགས་ཏེ་\",\n \"པུས་མོའི་ལྷ་ང་\",\n \"པོག་ (སོག་)\",\n \"པྲ་ཚིལ་\",\n \"པྲི་ཡང་ཀུ་\",\n \"ཕ་\",\n \"ཕ་ཁོལ་\",\n \"ཕ་གསོད་པ་\",\n \"ཕ་བང་ (ཕ་ཝང)\",\n \"ཕ་བསད་པ་\",\n \"ཕ་བོང་ངམ་རྡོ་བ་\",\n \"ཕ་མའི་རིགས་བདུན་རྒྱུད་ཚུན་ཆད་\",\n \"ཕ་ཝང་\",\n \"ཕ་རོལ་\",\n \"ཕ་རོལ་\",\n \"ཕ་རོལ་གནོན་པའམ་བརྟུལ་བ་\",\n \"ཕ་རོལ་གྱི་དམག་ཚོགས་\",\n \"ཕ་རོལ་གྱི་ཟླ་དང་མཐུན་པར་བྱས་ཏེ་\",\n \"ཕ་རོལ་གྱི་འགྲམ\",\n \"ཕ་རོལ་གྱི་རྒོལ་བས་ཟིལ་གྱིས་མི་ནོན་པ་\",\n \"ཕ་རོལ་གྱི་སེམས་ཤེས་པ་\",\n \"ཕ་རོལ་གྱི་སེམས་ཤེས་པ་\",\n \"ཕ་རོལ་གྱི་སྡེ་རབ་ཏུ་འཇོམས་པ་\",\n \"ཕ་རོལ་གྱིས་གོ་བ་\",\n \"ཕ་རོལ་ཏུ་ཕྱིན་པ་\",\n \"ཕ་རོལ་ཏུ་ཕྱིན་པ་བཅུའི་མིང་ལ་\",\n \"ཕ་རོལ་ཏུ་འགྲོ་བ་\",\n \"ཕ་རོལ་མ་གྲུབ་པ་\",\n \"ཕ་རོལ་མ་ཡིན་པ་\",\n \"ཕ་ལམ་\",\n \"ཕག་\",\n \"ཕག་འཚོང་བ་\",\n \"ཕག་རྒོད་\",\n \"ཕག་རྒོད་དམ་ཕག་\",\n \"ཕང་ལོ་\",\n \"ཕངས་པའམ་སྡུག་པ་\",\n \"ཕན་གདགས་པ་\",\n \"ཕན་པ་\",\n \"ཕན་པ་\",\n \"ཕན་པ་དང་ཕན་འདོགས་པའི་རྣམ་པའི་མིང་ལ་\",\n \"ཕན་པར་སྤྱད་པ་ལ་ཞུགས་པ་\",\n \"ཕན་འདོགས་པའམ་ཉེ་བར་སྦྱོར་བ་\",\n \"ཕན་ཡོན་\",\n \"ཕབས་\",\n \"ཕམ་བར་གྱུར་བ་\",\n \"ཕར་འདྲེན་\",\n \"ཕལ་བ་\",\n \"ཕས་ཀྱི་དགྲ་\",\n \"ཕས་ཀྱི་རྒོལ་བ་\",\n \"ཕས་ཕམ་པར་འགྱུར་བའི་ཆོས་བཞི་\",\n \"ཕས་བསུ་བ་\",\n \"ཕས་བསྲུངས་པ་\",\n \"ཕི་ནང་སྟོང་པ་ཉིད་\",\n \"ཕིར་གླན་པ་\",\n \"ཕུ་ཆུའི་རྒྱུན་\",\n \"ཕུ་ནུ་མོས་བསྲུངས་པ་\",\n \"ཕུ་ཕུ་མི་བྱ་\",\n \"ཕུ་བོ་\",\n \"ཕུག་རོན་\",\n \"ཕུག་སྦས་\",\n \"ཕུང་པོ་ཀུན་སྤངས་པ་\",\n \"ཕུང་པོ་གསུམ་གྱི་ལམ་སྟོན་པ་\",\n \"ཕུང་པོ་གསུམ་པ་\",\n \"ཕུང་པོ་དག་ལས་རབ་ཏུ་རྣམ་པར་གྲོལ་བ་\",\n \"ཕུང་པོ་དང་ཁམས་དང་སྐྱེ་མཆེད་དང་དབང་པོ་བཤད་པའི་ནང་ནས་འབྱུང་པའི་མིང་སྣ་ཚོགས་ལ་\",\n \"ཕུང་པོ་ལྔའི་རབ་ཏུ་བྱེད་པ་\",\n \"ཕུང་པོ་ལྷག་མ་དང་བཅས་པའི་མྱ་ངན་ལས་འདས་པ་\",\n \"ཕུང་པོ་ལྷག་མ་མེད་པའི་མྱ་ངན་ལས་འདས་པ་\",\n \"ཕུང་པོའམ་རྫས་སམ་ཉོན་མོངས་པ་\",\n \"ཕུན་སུམ་ཚོགས་པ་ཐམས་ཅད་་འཐོབ་པར་འགྱུར་བར་ངེས་པར་འབྱུང་བའི་ལམ་དེ་བཞིན་དུ་འགྱུར་བ་ལ་མི་འཇིགས་པ་\",\n \"ཕུབ་ཐོགས་པ་\",\n \"ཕུབ་མ་\",\n \"ཕུབ་ཟླུམ་\",\n \"ཕུར་པའམ་ཕུར་བུ་\",\n \"ཕུར་བུ་\",\n \"ཕུར་བུ་\",\n \"ཕུར་བུ་གསུམ་པ་\",\n \"ཕུལ་\",\n \"ཕུལ་བའམ་བཏང་བའམ་བོར་བ་\",\n \"ཕུལ་བའི་བཏུང་ཕོར་\",\n \"ཕེག་རྡོབ་པ་\",\n \"ཕེབས་པའི་སར་གནས་འདེབས་པ་\",\n \"ཕེབས་པར་སྨྲ་བ་\",\n \"ཕོ་ཆེ་བའམ་ཁེངས་པ་\",\n \"ཕོ་ཉ་\",\n \"ཕོ་ཉ་རང་རྟ་\",\n \"ཕོ་བ་\",\n \"ཕོ་བའི་དྲོད་སྙོམས་ཤིང་འཇུ་བར་བྱེད་པ་དང་ལྡན་པ་\",\n \"ཕོ་བྲང་འཁོར་གྱི་སྐད་དམ་འཁོར་དུ་གྲགས་པ\",\n \"ཕོ་བྲང་འཁོར་དུ་ཁ་འཛིན་པ་\",\n \"ཕོ་མཚན་ཆད་པ་\",\n \"ཕོ་རྒོད་པ་\",\n \"ཕོ་ལོང་\",\n \"ཕོའི་དབང་པོ་\",\n \"ཕོར་བུ་\",\n \"ཕོར་བུ་\",\n \"ཕོལ་མིག་\",\n \"ཕྱ་མཁན་\",\n \"ཕྱག་གི་རི་མོ་མདངས་ཡོད་པ་\",\n \"ཕྱག་གི་རི་མོ་ཟབ་པ་\",\n \"ཕྱག་གི་རི་མོ་རིང་བ་\",\n \"ཕྱག་དང་ཞབས་ཀྱི་མཐིལ་འཁོར་ལོའི་མཚན་དང་ལྡན་པ་\",\n \"ཕྱག་དང་ཞབས་ཀྱི་མཐིལ་འཇམ་ཤིང་གཞོན་ཤ་ཆགས་པ་\",\n \"ཕྱག་དང་ཞབས་དཔལ་གྱི་བེའུ་དང་བཀྲ་ཤིས་དང་གྱུང་དྲུང་འཁྱིལ་བས་བརྒྱན་པ་\",\n \"ཕྱག་དང་ཞབས་དྲ་བས་འབྲེལ་བ་\",\n \"ཕྱག་དར་\",\n \"ཕྱག་དར་ཁྲོད་\",\n \"ཕྱག་དར་ཁྲོད་པ་\",\n \"ཕྱག་དར་ལེགས་པར་བྱས་པ་\",\n \"ཕྱག་པ་\",\n \"ཕྱག་ཕྱིག་\",\n \"ཕྱག་ཕྱིག་\",\n \"ཕྱག་བྱ་བའི་འོས་སུ་གྱུར་བ་\",\n \"ཕྱག་ཚང་ཚང་མང་བ་\",\n \"ཕྱག་ཚངས་སྐྱེམས་མལ་བ་\",\n \"ཕྱག་འཚལ་བ་\",\n \"ཕྱག་འཚལ་ལམ་བཏུད་ནས་\",\n \"ཕྱག་རྒྱ་ཡོངས་སུ་འཛིན་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཕྱག་ཤིང་བལ་ལྟར་ཤིང་ཏུ་འཇམ་པ་\",\n \"ཕྱགས་མ་\",\n \"ཕྱང་ཕྲུལ་ལམ་སྤུད་པའམ་མ་འདོམ་ན་རྒྱནདུ་གདགས་\",\n \"ཕྱད་ཕྱོད་\",\n \"ཕྱད་ཕྱོད་\",\n \"ཕྱམ་\",\n \"ཕྱམ་གྱི་སྤྱི་རྟེན་\",\n \"ཕྱམ་རྒུར་པོ་ (ཕྱམ་སྒུ་བོ་)\",\n \"ཕྱར་ཕྱུར་\",\n \"ཕྱར་ཕྱུར་\",\n \"ཕྱར་བ་(ཕྱམ་པ་)\",\n \"ཕྱལ་ཕྱང་ངེ་བ་\",\n \"ཕྱལ་ཕྱོལ་\",\n \"ཕྱལ་ཕྱོལ་\",\n \"ཕྱལ་ལེ་བ་མ་ཡིན་པའམ་མི་མཉམ་པ་\",\n \"ཕྱལ་ལེ་བའམ་་མཉམ་པ་\",\n \"ཕྱས་མི་གདགས་།་ཆས་མི་གདགས་\",\n \"ཕྱི་དྲོ་\",\n \"ཕྱི་བདར་བྱ་བ་\",\n \"ཕྱི་བཞིན་འབྲང་བ་\",\n \"ཕྱི་བཞིན་འབྲང་བའི་དགེ་སྦྱོང་\",\n \"ཕྱི་མ་\",\n \"ཕྱི་མ་\",\n \"ཕྱི་མའམ་ཕྱིས་འབྱུང་བ་\",\n \"ཕྱི་མའམ་ཕྱིས་འབྱུང་བ་\",\n \"ཕྱི་མའི་དུས་\",\n \"ཕྱི་མའི་མཐའ་\",\n \"ཕྱི་མའི་མཐའི་མུར་ཐུག་པ་\",\n \"ཕྱི་མོ་\",\n \"ཕྱི་འཕྲེད་\",\n \"ཕྱི་ར་\",\n \"ཕྱི་རིམ་\",\n \"ཕྱི་རུབ་པ་\",\n \"ཕྱི་རོལ་གྱི་དོན་ཡོད་པར་སྨྲ་བ་\",\n \"ཕྱི་ས་\",\n \"ཕྱི་སྟོང་པ་ཉིད་\",\n \"ཕྱིང་བ་\",\n \"ཕྱིན་ཅི་མ་ལོག་པའི་དེ་བཞིན་ཉིད་\",\n \"ཕྱིན་ཆད་དེ་ལྟར་མ་བྱེད་ཅིག་\",\n \"ཕྱིན་ཆོད་\",\n \"ཕྱིན་སྤྱོད་\",\n \"ཕྱིར་གཞིལ་བའམ་སོ་སོར་གཞག་པ་\",\n \"ཕྱིར་གྱེད་པར་སྤང་བ་\",\n \"ཕྱིར་བཅིལ་\",\n \"ཕྱིར་བཅོས་པའམ་ལན་གདབ་པ་\",\n \"ཕྱིར་བཅོས་པའི་གཞི་\",\n \"ཕྱིར་བཟློག་ཏུ་མི་རུང་བ་\",\n \"ཕྱིར་བསྣུར་བ་\",\n \"ཕྱིར་བྱུང་བའམ་མེད་པར་གྱུར་བ་\",\n \"ཕྱིར་མ་བླངས་པར་སྤྱོད་པ་\",\n \"ཕྱིར་མི་བཟློག་པའི་སེམས་རྒྱན་\",\n \"ཕྱིར་མི་འོང་བ་\",\n \"ཕྱིར་མི་འོང་བ་\",\n \"ཕྱིར་མི་འོང་བ་ལ་འཇུག་པ་\",\n \"ཕྱིར་མི་ལྡོག་པ་\",\n \"ཕྱིར་མི་ལྡོག་པའི་ཆོས་དང་ལྡན་པ་\",\n \"ཕྱིར་མི་ལྡོག་པའི་འཁོར་ལོ་\",\n \"ཕྱིར་ཞིང་དད་ཆེ་བ་\",\n \"ཕྱིར་ཞིང་སེམས་པའམ་མང་དུ་སེམས་པ་\",\n \"ཕྱིར་ཞིང་སྲེད་པའམ་ཕྱིར་འདུན་པ་\",\n \"ཕྱིར་འཇིལ་བའམ་བགེགས་བྱེད་པའམ་འགོག་པའམ་བར་ཆད་བྱེད་པ་\",\n \"ཕྱིར་འོང་བ་\",\n \"ཕྱིར་རྒོལ་བ་\",\n \"ཕྱིར་རྒོལ་བ་\",\n \"ཕྱིར་རྒོལ་བ་ལ་མ་གྲུབ་པ་\",\n \"ཕྱིར་ལོག་པ་\",\n \"ཕྱིར་ལོག་པའམ་སྤངས་པ་\",\n \"ཕྱིར་ལྡོག་\",\n \"ཕྱིར་ཤིན་ཏུ་འདས་པ་\",\n \"ཕྱིས་ཀྱང་མི་སྤོང་བ་\",\n \"ཕྱིས་གནོན་པ་\",\n \"ཕྱིས་པའམ་ནོགས་པ་\",\n \"ཕྱིས་སྡོམ་པ་འཛིན་པ་\",\n \"ཕྱུག་པོ་\",\n \"ཕྱུགས་\",\n \"ཕྱུགས་བདག་\",\n \"ཕྱུགས་བདག་\",\n \"ཕྱུགས་རྫི་\",\n \"ཕྱེ་\",\n \"ཕྱེ་བ་\",\n \"ཕྱེ་བ་\",\n \"ཕྱེ་བ་\",\n \"ཕྱེ་བའམ་གདངས་པ་\",\n \"ཕྱེ་བའམ་རབ་ཏུ་གཞག་པ་\",\n \"ཕྱེ་མ་\",\n \"ཕྱེ་མ་ལེབ་\",\n \"ཕྱེ་མ་ལེབ་ཁྲ་བོ་\",\n \"ཕྱེ་མའམ་འདག་གུ\",\n \"ཕྱེད་\",\n \"ཕྱེད་དང་གཉིས་\",\n \"ཕྱེད་དང་གསུམ་\",\n \"ཕྱེད་དང་བཞི་\",\n \"ཕྱོགས་\",\n \"ཕྱོགས་ཀྱི་ཆོས་\",\n \"ཕྱོགས་གླང་\",\n \"ཕྱོགས་དང་མཚམས་ཀྱི་མིང་ལ་\",\n \"ཕྱོགས་ན་མི་གནས་\",\n \"ཕྱོགས་ཕྱི་མ་\",\n \"ཕྱོགས་བདག་\",\n \"ཕྱོགས་འགའ་ཞིག་\",\n \"ཕྱོགས་ལ་རྣམ་པར་ལྟ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཕྱོགས་སྔ་མ་\",\n \"ཕྱོར་\",\n \"ཕྱོལ་ཡས་\",\n \"ཕྱོལ་ཡས་\",\n \"ཕྲ་བ་\",\n \"ཕྲ་མར་སྨྲ་བ་སྤོང་བ་\",\n \"ཕྲ་མོའམ་ཞིབ་མོ་\",\n \"ཕྲག་དོག་\",\n \"ཕྲག་པ་\",\n \"ཕྲག་པ་གཉིས་ཀ་ལ་མི་གཟར་\",\n \"ཕྲག་པ་བཅུམ་པ་\",\n \"ཕྲག་པ་མི་སྤྲད་\",\n \"ཕྲག་མིག་\",\n \"ཕྲད་པ་\",\n \"ཕྲན་ཚེགས་འགྲིམ་པ་\",\n \"ཕྲིན་ཕར་བསྐྱལ་པ་དང་ཕྱིར་བསྐྱལ་བ་\",\n \"ཕྲིན་བློན་\",\n \"ཕྲུ་རྟོག་\",\n \"ཕྲུ་སྣོད་\",\n \"ཕྲེང་ཐོགས་\",\n \"ཕྲེང་བ་\",\n \"ཕྲེང་བའམ་གྲལ་\",\n \"ཕྲེང་བར་བཀོད་པ་བཞིན་དུ་གྱུར་བ་\",\n \"བ་ཀུ་ལ་\",\n \"བ་ཀུ་ལ་\",\n \"བ་གཉིས་པ་\",\n \"བ་གམ་མམ་སྒོ་ཁང་\",\n \"བ་དན་\",\n \"བ་མོ་\",\n \"བ་མོ་བྱིའུ་\",\n \"བ་རུ་ར་\",\n \"བ་རུ་ར་\",\n \"བ་རྒྱ་\",\n \"བ་ལང་\",\n \"བ་ལང་\",\n \"བ་ལང་གསོད་པ་\",\n \"བ་ལང་གི་ཕྲུག་གུ་\",\n \"བ་ལང་གི་ཕྲུག་གུ་\",\n \"བ་ལང་བདག་\",\n \"བ་ལང་མགོ་\",\n \"བ་ལང་རྫི་\",\n \"བ་ལི་\",\n \"བ་ལུ་ (བལ་བ)\",\n \"བ་ལུང་ཁ་ལུང་\",\n \"བ་སྤུའི་ཁུང་བུ་\",\n \"བ་སྤུའི་ཁུང་བུ་\",\n \"བཀབ་པའམ་གཡོགས་པའམ་འཆབ་པ\",\n \"བཀའ་བཞིན་བྱེད་པ་\",\n \"བཀའ་བློ་བདེ་བ་\",\n \"བཀའ་བློ་མི་བདེ་པ་\",\n \"བཀའ་ལ་གཏོགས་པ་\",\n \"བཀའ་སྩལ་པའམ་སྨྲས་པའམ་བོད་པ་\",\n \"བཀུར་བ་\",\n \"བཀུར་སྟིར་བྱེད་པ\",\n \"བཀོད་པ་\",\n \"བཀོད་པ་ཀུན་ཏུ་དགའ་བའི་རང་བཞིན་གྱི་ཚུལ་སྟོན་པ་\",\n \"བཀོད་པ་གཅིག་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"བཀོད་པ་ཆེན་པོ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"བཀྲ་ཡར་\",\n \"བཀྲ་ཡས་\",\n \"བཀྲ་ཤིས་\",\n \"བཀྲ་ཤིས་ལྡན་\",\n \"བཀྲ་ཤིས་སམ་ལྟས་\",\n \"བཀྲམ་པ་\",\n \"བཀྲམ་པའམ་འཐོར་བ་\",\n \"བཀྲུ་བ་\",\n \"བཀྲུ་བ་\",\n \"བཀྲུ་བཤལ་གྱི་སྣོད་\",\n \"བཀྲེན་པ་\",\n \"བཀྲེས་ང་བ་\",\n \"བཀྲེས་པ་\",\n \"བཀྲེས་པ་\",\n \"བཀྲེས་པ་\",\n \"བཀྲེས་པ་རྣམས་འདྲངས་པར་གྱུར་ཅེའམ་ལྟོགས་པ་རྣམས་ནི་ལུས་རྒྱས་པར་གྱུར་\",\n \"བག་གསར་རམ་མནའ་མ་གསར་པ་\",\n \"བག་ཅོས་འགྲིམ་པ་(བག་ཆོས་འདྲིམ་པ་)\",\n \"བག་ཆགས་\",\n \"བག་ཕྱེ་\",\n \"བག་མ་གཏོང་བ་\",\n \"བག་མ་ལེན་པ་\",\n \"བག་མར་བཏང་བ་\",\n \"བག་མར་བླངས་པ་\",\n \"བག་མེད་པ་\",\n \"བག་མེད་པའི་གནས་\",\n \"བག་ཙམ་པ་\",\n \"བག་ཚ་བ་དང་འཇིགས་པ་དང་བཅས་པར་གྲགས་པ་\",\n \"བག་ཚ་བ་མེད་པ་\",\n \"བག་ཡོད་པ་\",\n \"བག་ལ་ཉལ་བ་དང་ཕྲ་རྒྱས་\",\n \"བག་ལེ་བ་\",\n \"བགེགས་\",\n \"བགེགས་སམ་གེགས\",\n \"བགོ་ངན་པ་\",\n \"བགོ་སྐལ་ལམ་སོ་སོའི་ཆ་\",\n \"བགོམས་པའམ་གོམས་པར་བྱས་པ་\",\n \"བགྲ་ཤིས་ཀྱི་གསོ་སྦྱོང་\",\n \"བགྲང་དུ་མེད་པ་\",\n \"བགྲང་དུ་མེད་པ་\",\n \"བགྲང་དུ་མེད་པ་ལ་བསྒྲེས་པ་\",\n \"བགྲང་དུ་མེད་པ་ལ་ལས་བསྒྲེས་པ་\",\n \"བགྲང་བ་\",\n \"བགྲང་བ་ལས་འདས་པའི་\",\n \"བགྲང་བར་ཡང་\",\n \"བགྲང་ཡལ་\",\n \"བགྲང་ཡས་ (བགྲང་ཡལ་)\",\n \"བགྲང་ཡོལ་\",\n \"བགྲང་ཡོལ་ལ་བསྒྲེས་པ་\",\n \"བགྲང་རྟོགས་ཕྲག་བརྒྱ་ན་སྒྲིབ་པ་ཞེས་བྱའོ་\",\n \"བགྲོ་བའི་ཁང་པའམ་གླུ་དབྱངས་ཀྱི་ཁང་པ་\",\n \"བགྲོད་པ་གཅིག་པ་\",\n \"བགྲོད་ཡས་\",\n \"བང་\",\n \"བང་པོ་འབྲིང་པོ་\",\n \"བང་བ་\",\n \"བང་རིམ་\",\n \"བང་རིམ་ཀྱི་ཞལ་ཏ་པ་\",\n \"བཅག་པ་\",\n \"བཅད་པའམ་དགག་པ་\",\n \"བཅད་འཕྲོའམ་ཁྱེའུ་ཁ་\",\n \"བཅའ་སྒ་\",\n \"བཅས་པ་\",\n \"བཅས་པའི་ཁ་ན་མ་ཐོ་བ་དང་བཅས་པ་\",\n \"བཅིང་བ་\",\n \"བཅིང་བ་\",\n \"བཅིངས་པའམ་འདོམས་དཀྲིས་བསྡམས་པ་\",\n \"བཅུ་\",\n \"བཅུ་\",\n \"བཅུ་\",\n \"བཅུ་\",\n \"བཅུ་གཅིག་\",\n \"བཅུ་གཉིས་\",\n \"བཅུ་གསུམ་\",\n \"བཅུ་དགུ་\",\n \"བཅུ་དྲུག་\",\n \"བཅུ་པ་\",\n \"བཅུ་བདུན་\",\n \"བཅུ་བཞི་\",\n \"བཅུ་བཞི་སྟོན་\",\n \"བཅུ་བརྒྱད་\",\n \"བཅུ་ལྔ་\",\n \"བཅུག་པའམ་ཡིད་བརྟན་པ་\",\n \"བཅུག་རེག་ཉམ་སུ་མྱོང་བར་བྱས་པ་\",\n \"བཅུད་ཀྱི་ལེན་\",\n \"བཅོམ་པ\",\n \"བཅོམ་པ་\",\n \"བཅོམ་པ་\",\n \"བཅོམ་རླག་\",\n \"བཅོམ་ལྡན་འདས་\",\n \"བཅོམ་ལྡན་འདས་ཀྱི་ཆོས་ནི་ལེགས་པར་གསུངས་པ་\",\n \"བཅོམ་ལྡན་འདས་ཀྱི་ཉན་ཐོས་ཀྱི་དགེ་འདུན་ལེགས་པར་ཞུགས་པ་\",\n \"བཅོམ་ལྡན་འདས་ཀྱི་ཞལ་གྱི་སྒོ་ཕྱེ་བའམ་བཙུམས་པར་ཡང་མི་མངོན་ནོ་\",\n \"བཅོམ་ལྡན་འདས་ཀྱི་ལྟར་མཉན་ནས་\",\n \"བཅོམ་ལྡན་འདས་ཀྱིས་གནང་བ་ (བཅོམ་ལྡན་འདས་ཀྱིས་སྣང་བ་)\",\n \"བཅོམ་ལྡན་འདས་ཀྱིས་ལེགས་པར་གསུངས་པའི་ཆོས་འདུལ་བ་ནི་ལེགས་པར་བསྟན་པ་\",\n \"བཅོམ་ལྡན་འདས་ག་ལ་བ་དེར་ལོགས་སུ་ཐལ་མོ་སྦྱར་བ་བཏུད་\",\n \"བཅོམ་ལྡན་འདས་དོན་འདི་ཉིད་རྒྱས་པར་གསུངས་ཞིང་ཚིགས་སུ་བཅད་པའི་དབྱངས་ཀྱིས་རབ་ཏུ་བསྟན་པ་\",\n \"བཅོས་མ་\",\n \"བཅོས་མ་བྱེད་པ་\",\n \"བཏགས་པར་སྨྲ་བའི་སྡེ་\",\n \"བཏང་གཟུང་\",\n \"བཏང་གཟུང་\",\n \"བཏང་གཟུང་ཆེན་པོ་\",\n \"བཏང་བ་\",\n \"བཏང་བའམ་སྤངས་པའམ་བོར་བ་\",\n \"བཏང་སྙོམས་\",\n \"བཏང་སྙོམས་\",\n \"བཏང་སྙོམས་ཀྱི་དབང་པོ་\",\n \"བཏང་སྙོམས་ཡང་དག་བྱང་ཆུབ་ཀྱི་ཡན་ལག་\",\n \"བཏང་སྙོམས་ལ་གནས་པ་\",\n \"བཏིང་བ་ (གཏིང་བ་)\",\n \"བཏུས་སམ་ཕྱུང་ངམ་བཅུས་པ་\",\n \"བད་ཀན་དང་མཆིལ་མ་སྐབས་དང་སྦྱར་\",\n \"བདག་\",\n \"བདག་གཟུགས་དང་ལྡན་ཏེ་རྒྱན་དང་འདྲ་\",\n \"བདག་གཟུགས་ཡིན་ཏེ་བདག་པོ་དང་འདྲ་\",\n \"བདག་གི་བ་མེད་པ་\",\n \"བདག་གི་མ་\",\n \"བདག་གི་ལག་མཐུས་བསྒྲུབས་པ་\",\n \"བདག་གི་ལུས་ལས་ཀྱང་ཆུའི་རྒྱུན་ཆེན་པོ་འབྱིན་ཏེ་དཔེར་ན་སྤྲིན་ཆེན་པོ་བཞིན་ནོ་\",\n \"བདག་གིར་འཛིན་པ་\",\n \"བདག་ཉིད་ཀྱིས་ཡང་དག་པའི་ཤེས་པ་མཐོང་བ་འཇུག་པ་\",\n \"བདག་ཉིད་ཀྱིས་ཡང་དག་པའི་སྨོན་ལམ་\",\n \"བདག་ཉིད་ཆེན་པོ་\",\n \"བདག་ཉིད་ཇི་ལྟ་བ་བཞིན་དུ་འཇུག་པ་ལ་མཁས་པ་\",\n \"བདག་ཉིད་ཡོད་པར་སྣང་བ་མ་ནོར་བའི་དོན་\",\n \"བདག་ཏུ་ང་རྒྱལ་\",\n \"བདག་ཏུ་འཛིན་པ་\",\n \"བདག་ཏུ་རྨོངས་པ་\",\n \"བདག་ཏུ་ལྟ་བ་\",\n \"བདག་དང་དབང་པོ་དང་དོན་ལས་གང་བྱུང་བའི་ཤེས་པ་མངོན་སུམ་པ་\",\n \"བདག་དབང་བ་\",\n \"བདག་དྲང་དུ་གསོལ་\",\n \"བདག་པོའི་འབྲས་བུ་\",\n \"བདག་པོའི་རྐྱེན་\",\n \"བདག་པོར་གྱུར་བ་\",\n \"བདག་མིའི་ཆོས་བླ་མ་དང་ལྡན་པར་སྨྲས་པ་\",\n \"བདག་མེད་པ་\",\n \"བདག་མེད་པ་ཁོང་དུ་ཆུད་པས་གཞན་གྱིས་གཙེ་བའི་མཚན་མ་མི་འབྱུང་ཞིང་རང་བཞིན་གྱིས་སྤྱོད་ལམ་སྨད་དུ་མེད་པའི་ལས་གསུམ་ཡོངས་སུ་དག་པའི་བསྲུང་བ་ཆེན་པོ་ཕུན་སུམ་ཚོགས་པའི་མི་འཇིགས་པ་\",\n \"བདག་མོ་ཆེན་མོ་\",\n \"བདག་ཚོར་བ་དང་ལྡན་\",\n \"བདག་ཚོར་བ་ཡིན་\",\n \"བདག་འདུ་བྱེད་དང་ལྡན་\",\n \"བདག་འདུ་བྱེད་ཡིན་(འདུ་བྱེད་བདག་ཡིན)\",\n \"བདག་འདུ་ཤེས་དང་ལྡན་\",\n \"བདག་འདུ་ཤེས་པ་ཡིན་\",\n \"བདག་རྣམ་པར་ཤེས་པ་དང་ལྡན་\",\n \"བདག་རྣམ་པར་ཤེས་པ་ཡིན་\",\n \"བདག་ལ་གནོད་པ་\",\n \"བདག་ལ་ཆགས་པ་\",\n \"བདག་ལ་ཕན་པ་\",\n \"བདག་ལ་བསྟོད་པ་\",\n \"བདག་ལེགས་སུ་འདོད་པ་\",\n \"བདག་ཤེས་པ་\",\n \"བདང་ཡས་\",\n \"བདས་པའམ་བཙལ་པའམ་དགག་པ་\",\n \"བདུག་སྤོས་ཀྱིས་བདུག་པ་\",\n \"བདུད་\",\n \"བདུད་ཀྱི་དཀྱིལ་འཁོར་ཐམས་ཅད་རྣམ་པར་འཇོམས་པའི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"བདུད་ཀྱི་ཡུལ་ཐམས་ཅད་ལས་ཡང་དག་པར་འདས་པ་\",\n \"བདུད་ཀྱི་ལས་ལས་ཡང་དག་པར་འདས་པ་\",\n \"བདུད་ཀྱི་སྡེ་\",\n \"བདུད་དང་བཅས་\",\n \"བདུད་དམ་ནག་པོའི་རྩ་ལག་\",\n \"བདུད་ཟིལ་གྱིས་གནོན་\",\n \"བདུད་འདུལ་\",\n \"བདུད་འདུལ་བ་ (བདུད་གདུལ་བ་)\",\n \"བདུད་རྩི་\",\n \"བདུད་རྩི་\",\n \"བདུད་རྩི་ཅན་\",\n \"བདུད་རྩི་ཐབས་སྦྱོར་\",\n \"བདུད་རྩི་ཟས་\",\n \"བདུན་\",\n \"བདུན་པ་\",\n \"བདུན་བཅུ་།་\",\n \"བདུན་བཅུ་རྩ་གཅིག་\",\n \"བདུན་བཅུ་རྩ་གཉིས་\",\n \"བདུན་བཅུ་རྩ་གསུམ་\",\n \"བདུན་བཅུ་རྩ་དགུ་\",\n \"བདུན་བཅུ་རྩ་དྲུག་\",\n \"བདུན་བཅུ་རྩ་བདུན་\",\n \"བདུན་བཅུ་རྩ་བཞི་\",\n \"བདུན་བཅུ་རྩ་བརྒྱད་\",\n \"བདུན་བཅུ་རྩ་ལྔ་\",\n \"བདུན་མཐོ་བ་\",\n \"བདེ་བ་\",\n \"བདེ་བ་\",\n \"བདེ་བ་\",\n \"བདེ་བ་\",\n \"བདེ་བ་ཅན་\",\n \"བདེ་བ་ཐམས་ཅད་དང་ལྡན་པ་\",\n \"བདེ་བ་དང་སྡུག་བསྔལ་ཐམས་ཅད་ལ་མངོན་པར་དགའ་བ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"བདེ་བ་ཡང་མ་ཡིན་སྡུག་བསྔལ་ཡང་མ་ཡིན་\",\n \"བདེ་བའི་གཞི་\",\n \"བདེ་བའི་དབང་པོ་\",\n \"བདེ་བའི་མཆོག་\",\n \"བདེ་བའི་མཆོག་\",\n \"བདེ་བའི་ཡོ་བྱད་དམ་བདེ་བའི་འཚོ་ཆས་སམ་བདེ་བར་སྦྱར་བ\",\n \"བདེ་བའི་ཡོ་བྱད་དམ་བདེ་བར་སྦྱར་བ་\",\n \"བདེ་བར་གཤེགས་པ་\",\n \"བདེ་བར་གཤེགས་པའི་ཆོས་གོས་ཀྱི་ཚད་ལས་གྱུར་པ་\",\n \"བདེ་བར་གྱུར་བའི་སེམས་མཉམ་པར་འཇོག་གོ་\",\n \"བདེ་བྱེད་\",\n \"བདེ་བྱེད་\",\n \"བདེ་བྱེད་\",\n \"བདེ་བྱེད་\",\n \"བདེ་འགྲོ་\",\n \"བདེ་འབྱུང་\",\n \"བདེ་ལེགས་བརྗོད་པ་\",\n \"བདེ་ལེགས་སམ་དགེ་བ་\",\n \"བདེ་ལེགས་སུ་འགྱུར་བ (དགེ་ལེགས་སུ་འགྱུར་བ)\",\n \"བདེ་སོགས་\",\n \"བདེན་པའི་བྱིན་གྱིས་བརླབས་པ་\",\n \"བདེན་བྲལ་\",\n \"བདེན་བྲལ་གྱི་ཕྱོགས་\",\n \"བན་བུན་\",\n \"བན་བུན་\",\n \"བབ་\",\n \"བབ་\",\n \"བབ་ཅོལ་ལམ་བབའམ་འཕྲལ་\",\n \"བབ་ལ་\",\n \"བཙག་\",\n \"བཙན་ཕྲོགས་སུ་ཐོབ་པ་\",\n \"བཙམ་པ་མེད་པ\",\n \"བཙལ་བ་སྤངས་པ་\",\n \"བཙལ་བར་བྱའམ་འབད་པར་བྱ་བ་\",\n \"བཙས་སྟོན་\",\n \"བཙུན་པ་\",\n \"བཙུན་པ་ཟླ་བ་\",\n \"བཙུན་མོ་དམ་པ་\",\n \"བཙུན་མོའི་ཞལ་ལྟ་བའམ་ཕྱ་་མཁན་\",\n \"བཙུན་མོའི་འཁོར་རམ་སླས་་\",\n \"བཙུམས་པ་\",\n \"བཙུམས་པ་\",\n \"བཙོ་བླག་མཁན་\",\n \"བཙོ་མ་\",\n \"བཙོད་\",\n \"བཞག་གོས་ (གཞག་གོས་)\",\n \"བཞག་པའམ་གཏམས་པ་\",\n \"བཞག་པའམ་གཏེར་དུ་བཅུག་པ་\",\n \"བཞད་\",\n \"བཞད་གད་\",\n \"བཞད་གད་པ་\",\n \"བཞད་ལྡན་མ་\",\n \"བཞི་\",\n \"བཞི་ཆ་\",\n \"བཞི་ཆ་\",\n \"བཞི་ནས་མགུ་བར་བྱ་བ་\",\n \"བཞི་པ་\",\n \"བཞི་བཅུ་\",\n \"བཞི་མདོ་\",\n \"བཞིན་ཀུན་ཏུ་ཁྱབ་པར་སྟོན་པ་\",\n \"བཞིན་གྱི་དཀྱིལ་འཁོར་\",\n \"བཞིན་དུ་འཛུམ་ཞིང་གསོང་པོར་སྨྲ་བ་\",\n \"བཞིན་འཇིགས་སུ་རུང་བར་བསྒྱུར་བ་\",\n \"བཞུགས་\",\n \"བཞུགས་སམ་འདུག་\",\n \"བཞེངས་བཞིན་དུ་མ་བཏུད་པར་ཕྱག་པུས་མོ་སླེབས་པ་\",\n \"བཞོ་བཞོ་བ་\",\n \"བཞོན་པའི་སྟེང་ན་འདུག་པ་ལ་ཆོས་མི་བཤད་\",\n \"བཟང་པོའི་བློ་གྲོས་གཞོན་ནུར་གྱུར་པ་\",\n \"བཟང་འགྲོ་\",\n \"བཟང་སྐྱོང་\",\n \"བཟའ་\",\n \"བཟའ་ཉེས་\",\n \"བཟའ་བ་དང་བཅའ་བ་མ་འོངས་པར་ལྷུང་བཟེད་ལྟུང་གཟེད་མི་བཟེད་\",\n \"བཟའ་བའམ་མིད་པའམ་བརྟེག་པ་\",\n \"བཟའ་ཤིང་ར་བ་\",\n \"བཟོ་\",\n \"བཟོད་པ་ཆེན་པོ་དང་ལྡན་པ་\",\n \"བཟོད་པ་དང་དེས་པ་ཆེན་པོ་དང་ལྡན་པ་\",\n \"བཟོད་པའི་ཕ་རོལ་ཏུ་ཕྱིན་བ་\",\n \"བཟོད་པར་དཀའ་བ་\",\n \"བཟོད་པས་བརྒྱན་པ་\",\n \"བཟོད་པས་མཉམ་པ་ཉིད་ཐོབ་པ་\",\n \"བཟོད་བ་\",\n \"བཟོད་ཡས་\",\n \"བཟོད་ཡས་\",\n \"བཟོའི་གནས་ཀྱི་རིག་པ་\",\n \"བཟླས་དཀའ་བ་\",\n \"བཟླས་བརྗོད་\",\n \"བཟློག་པ་ཕུན་སུམ་ཚོགས་པ་\",\n \"བཟློག་པའམ་བཤིག་པ་\",\n \"བར་གྱི་བསྐལ་པ་\",\n \"བར་གྱི་ཚིག་མི་སྨོས་པར་བྱས་ཏེ་\",\n \"བར་ཆད་གཅིག་པ་\",\n \"བར་ཆད་མེད་པ་\",\n \"བར་ཆད་མེད་པའི་ཏིང་ངེ་འཛིན་\",\n \"བར་ཆད་མེད་པའི་ལམ་\",\n \"བར་ཐང་\",\n \"བར་དུ་གཅོད་པའི་ཆོས་\",\n \"བར་དུ་གཅོད་པའི་ཆོས་རྣམས་གཞན་དུ་མི་འགྱུར་བར་ངེས་པའི་ལུང་བསྟང་པ་ལ་མི་འཇིགས་པ་\",\n \"བར་དུ་དགེ་བ་\",\n \"བར་མ་\",\n \"བར་མ་\",\n \"བར་མ་དོའི་སྲིད་པ་\",\n \"བར་མ་དོར་ཡོང་སུ་མྱ་ངན་ལས་འདས་པ་\",\n \"བར་མ་པ་\",\n \"བར་ཤི་ཀ་ཆེན་པོ་\",\n \"བར་སྐབས་\",\n \"བར་སྐབས་\",\n \"བར་སྡོམ་\",\n \"བར་སྣང་གི་ཕྱོགས་\",\n \"བར་སྣང་ལ་གནས་པ་\",\n \"བརྐམ་ཆགས་\",\n \"བརྐམ་པ་\",\n \"བརྐྱང་བ\",\n \"བརྐྱང་བ་\",\n \"བརྐྱང་བ་\",\n \"བརྒལ་བ་\",\n \"བརྒལ་ཞིང་བརྟག་པ་\",\n \"བརྒོད་ཡས་ (བགོད་ཡས་)\",\n \"བརྒྱ་\",\n \"བརྒྱ་\",\n \"བརྒྱ་\",\n \"བརྒྱ་\",\n \"བརྒྱ་\",\n \"བརྒྱ་བྱིན་\",\n \"བརྒྱ་བྱིན་ནམ་ཁྱེར་འཇིག་\",\n \"བརྒྱ་བྱིན་འདོམ་ན་མིག་སྟོང་པ་\",\n \"བརྒྱད་\",\n \"བརྒྱད་ཅུ་\",\n \"བརྒྱད་ཅུ་རྩ་གཅིག་\",\n \"བརྒྱད་ཅུ་རྩ་གཉིས་\",\n \"བརྒྱད་ཅུ་རྩ་གསུམ་\",\n \"བརྒྱད་ཅུ་རྩ་དགུ་\",\n \"བརྒྱད་ཅུ་རྩ་དྲུག་\",\n \"བརྒྱད་ཅུ་རྩ་བདུན་\",\n \"བརྒྱད་ཅུ་རྩ་བཞི་\",\n \"བརྒྱད་ཅུ་རྩ་བརྒྱད་\",\n \"བརྒྱད་ཅུ་རྩ་ལྔ་\",\n \"བརྒྱད་པ་\",\n \"བརྒྱད་པའི་ས་\",\n \"བརྒྱད་སྟོན་\",\n \"བརྒྱན་པོ་\",\n \"བརྒྱན་པོ་ལ་དོར་བ་\",\n \"བརྒྱན་པོའམ་ཆབ་\",\n \"བརྒྱལ་བ་\",\n \"བརྒྱལ་བའམ་མི་དྲན་པའམ་་མྱོག་ཅེས་བྱེད་པ་\",\n \"བརྒྱུད་ཡས་\",\n \"བརྔས་\",\n \"བརྗེད་ངས་པ་\",\n \"བརྗེད་པ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"བརྗེད་བྱེད་\",\n \"བརྗེད་བྱེད་\",\n \"བརྗོད་དུ་མེད་པ་\",\n \"བརྗོད་དུ་མེད་པ་\",\n \"བརྗོད་དུ་མེད་པ་\",\n \"བརྗོད་དུ་མེད་པ་ལ་བསྒྲེས་པ་\",\n \"བརྗོད་དུ་མེད་པ་ལས་བསྒྲེས་པ་\",\n \"བརྗོད་དུ་མེད་པའི་ཡང་བརྗོད་དུ་མེད་པ་\",\n \"བརྗོད་དུ་མེད་པའི་ཡང་བརྗོད་དུ་མེད་པ་ལ་བསྒྲེས་པ་བསྟན་པ་\",\n \"བརྗོད་དུ་མེད་པའི་ཡང་བརྗོད་དུ་མེད་པ་ལས་བསྒྲེད་པ་\",\n \"བརྗོད་པ\",\n \"བརྗོད་པ་\",\n \"བརྗོད་པའམ་བཏོན་པའམ་སྨྲས་པ་\",\n \"བརྗོད་པའམ་སྐད་འདོགས་པའམ་ལྕེ་རྟེན་\",\n \"བརྗོད་པའི་སྒྲ་དང་སྨྲ་བ་ལྷུར་བྱེད་པ་མ་ཡིན་\",\n \"བརྗོད་པའི་སྤྱི་\",\n \"བརྗོད་པར་བྱ་བ་\",\n \"བརྗོད་པར་འདོད་པ་\",\n \"བརྗོད་ཕ་ཉུང་བར་འགྱུར་\",\n \"བརྗོད་ཡས་\",\n \"བརྗོད་ཡས་\",\n \"བརྗོད་ལེའུ་\",\n \"བརྙས་པ་\",\n \"བརྙས་པ་\",\n \"བརྟག་ཅིང་ཞིག་ནུས་པ་\",\n \"བརྟག་པ་\",\n \"བརྟག་ཡས་\",\n \"བརྟགས་པའམ་གུས་པར་བསྒྲིམ་པ་\",\n \"བརྟགས་པའམ་ཕལ་པ་།་བཏགས་པའམ་ཕལ་པ་\",\n \"བརྟགས་པའམ་རྟོགས་པའམ་མཁས་པ་\",\n \"བརྟགས་ཡས་\",\n \"བརྟན་པ་\",\n \"བརྟན་པ་\",\n \"བརྟན་པར་བྱེད་པ་\",\n \"བརྟན་ཡས་\",\n \"བརྟུན་ཅིང་བྱེད་པ་\",\n \"བརྟུལ་ཕོད་པ་\",\n \"བརྟུལ་བའམ་ཉེ་བར་སྦྱོར་བའམ་ཉེ་བར་བསྒྲུབ་པ་\",\n \"བརྟུལ་བའམ་ཕ་རོལ་གནོན་པའམ་་དཔའ་བ་\",\n \"བརྟུལ་ཞུགས་ཅན་\",\n \"བརྟུལ་ཞུགས་ཆེན་པོ་པ་\",\n \"བརྟུལ་ཞུགས་རབ་ཀྱི་དབྱངས་\",\n \"བརྟེན་ནས་སམ་ཕྲད་ནས་སམ་ཐོབ་ནས་\",\n \"བརྟེན་པ་ཡོད་པ་\",\n \"བརྟེན་པའམ་བསྙེན་པ་\",\n \"བརྡ\",\n \"བརྡ་\",\n \"བརྡ་དང་སྒྲ་ལ་འཇུག་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"བརྡ་ཤེས་ཀུན་ཕྲག་བརྒྱ་ན་རྣམ་འབྱུང་ཤེས་བྱའོ་\",\n \"བརྡ་སྤྲོད་པ་\",\n \"བརྡའ་ཤེས་\",\n \"བརྡའ་ཤེས་ཆེན་པོ་\",\n \"བརྡར་གཏགས་པ་\",\n \"བརྡུང་བ་\",\n \"བརྡེག་པ་\",\n \"བརྡེག་འཆོས་པའམ་ལྷུང་བ་\",\n \"བརྡེག་ཡང་སླར་མི་བརྡེག་པར་བྱ་\",\n \"བརྣག་པ་ཡོངས་སུ་རྫོགས་པ་\",\n \"བརྣབ་སེམས་སྤོང་བ་\",\n \"བརྩགས་པའམ་སྡིག་པ་\",\n \"བརྩད་ཅིང་སྨྲ་བར་མི་བྱ་\",\n \"བརྩལ་མ་ཐག་ཏུ་འབྱུང་བ་\",\n \"བརྩི་ཡས་\",\n \"བརྩི་ཡས་\",\n \"བརྩི་ཡས་ལ་བསྒྲེས་པ་\",\n \"བརྩིས་ཡས་ལས་བསྒྲེས་པ་\",\n \"བརྩེ་བ་\",\n \"བརྩོད་པ་འདིས་ཅི་ཞིག་བྱ་ཞེའམ་བརྩོད་པ་འདི་ཐོང་\",\n \"བརྩོན་པ་\",\n \"བརྩོན་པ་མི་གཏོང་བ་\",\n \"བརྩོན་པའམ་གཅེས་པ་\",\n \"བརྩོན་པའམ་ཞུགས་པ་\",\n \"བརྩོན་པར་བྱ་བ་རྣལ་འབྱོར་དུ་བྱ་་སྦྱོར་བར་བྱ་\",\n \"བརྩོན་འགྲུས་\",\n \"བརྩོན་འགྲུས་ཀྱི་ཏིང་ངེ་འཛིན་སྤོང་བའི་འདུ་བྱེད་དང་ལྡན་པའི་རྫུ་འཕྲུལ་གྱི་རྐང་པ་\",\n \"བརྩོན་འགྲུས་ཀྱི་དབང་པོ་\",\n \"བརྩོན་འགྲུས་ཀྱི་དབང་པོ་\",\n \"བརྩོན་འགྲུས་ཀྱི་ཕ་རོལ་ཏུ་ཕྱིན་པ་\",\n \"བརྩོན་འགྲུས་ཀྱི་སྟོབས་\",\n \"བརྩོན་འགྲུས་ཉམས་པ་མེད་པ་\",\n \"བརྩོན་འགྲུས་ཡང་དག་བྱང་ཆུབ་ཀྱི་ཡན་ལག་\",\n \"བརྩོན་འགྲུས་རྩོམ་མོ་\",\n \"བརྩོན་རྫི་\",\n \"བརྩོམ་པ་\",\n \"བརྫུན་\",\n \"བརྫུན་དུ་སྨྲ་བ་སྤོང་བ་\",\n \"བརྫུན་པ་\",\n \"བརླ་\",\n \"བརླ་མི་བསྣོལ་\",\n \"བརླ་ལེགས་པར་ཟླུམ་པ(མཛེས་ཤིང་ཟླུམ་པ)\",\n \"བརླང་པོ་\",\n \"བརླང་བའམ་རྩུབ་པ\",\n \"བརླན་པའམ་གཤེར་བ་\",\n \"བརླན་པའམ་སྦངས་པ་\",\n \"བརླབས་པོ་ཆེའམ་རྒྱ་ཆེ་བ་\",\n \"བརླབས་ཡས་\",\n \"བརླབས་ཡས་\",\n \"བལ་གོས་\",\n \"བལ་གླང་མོ་ (བ་ལང་མོ)\",\n \"བལ་གླང་མོ་ (བ་ལང་མོ)\",\n \"བལ་ནག་པོ་འབའ་ཞིག་\",\n \"བལ་པོ་སེའུ་ཤིང་\",\n \"བལ་བུ་\",\n \"བལ་ལ་ (བ་ལང་)\",\n \"བལ་སྟན་\",\n \"བལ་སྨེལ་དུ་འཇུག་པའི་སྤངས་པ་\",\n \"བལྟ་ན་མཛེས་པ་\",\n \"བལྟ་བ་དང་ལྡན་\",\n \"བལྟ་བའམ་རྟོག་པ་\",\n \"བལྟས་སོ་\",\n \"བཤགས་པར་བྱ་བ་\",\n \"བཤང་པ་\",\n \"བཤད་པ་\",\n \"བཤད་སྦྱར་\",\n \"བཤན་པ་\",\n \"བཤུང་བ་\",\n \"བཤུང་བའམ་སྨད་པ་\",\n \"བཤེས་གཉེན་ངན་པ་\",\n \"བཤེས་ངོར་བྱེད་པ་\",\n \"བཤེས་པའི་ཚིག་\",\n \"བཤེས་པའི་རིམ་པ་དང་ཕས་ཀྱི་རྒོལ་བ་ལ་སོགས་པའི་མིང་ལ་\",\n \"བས་མཐའ་\",\n \"བས་མཐའི་གནས་མལ་\",\n \"བསགས་པ་\",\n \"བསགས་པ་\",\n \"བསགས་པ་\",\n \"བསགས་པ་\",\n \"བསང་གཏོར་\",\n \"བསད་པ་\",\n \"བསམ་གཏན་ཁྱད་པར་ཅན་\",\n \"བསམ་གཏན་གྱི་ཕ་རོལ་ཏུ་ཕྱིན་བ་\",\n \"བསམ་གཏན་གྱི་འཇུག་པ་ལ་གནས་པ་མི་མངའ་བ་\",\n \"བསམ་གཏན་དང་རྣམ་པར་ཐར་པ་དང་ཏིང་ངེ་འཛིན་དང་སྙོམས་པར་འཇུག་པ་དང་ཀུན་ནས་ཉོན་མོངས་པ་དང་རྣམ་པར་བྱང་བ་དང་ལྡན་བ་ཐམས་ཅད་མཁྱེན་པའི་སྟོབས་\",\n \"བསམ་གྱིས་མི་ཁྱབ་པ་\",\n \"བསམ་གྱིས་མི་ཁྱབ་པ་\",\n \"བསམ་གྱིས་མི་ཁྱབ་པ་\",\n \"བསམ་གྱིས་མི་ཁྱབ་པ་ལ་བསྒྲེས་པ་\",\n \"བསམ་གྱིས་མི་ཁྱབ་པ་ལས་བསྒྲེས་པ་\",\n \"བསམ་གྱིས་མི་ཁྱབ་པའི་དཀྱིལ་འཁོར་ལ་བློ་གྲོས་རྣམ་པར་རོལ་པ་\",\n \"བསམ་གྱིས་མི་ཁྱབ་པའི་དབྱིངས་\",\n \"བསམ་པ་\",\n \"བསམ་པ་ཐག་པ་ནས་\",\n \"བསམ་པ་ལས་བྱུང་བའི་ཤེས་རབ་\",\n \"བསམ་པའམ་འདོད་པ་\",\n \"བསམ་པའི་སྟོབས་\",\n \"བསམས་གཏན་བཞི་ལ་སོགས་པའི་པའི་མིང་ལ་\",\n \"བསམས་བཞིན་\",\n \"བསལ་བ་\",\n \"བསལ་བ་ལས་གྱུར་པ་\",\n \"བསལ་བའམ་སྦྱངས་པ་\",\n \"བསལ་ཡས་\",\n \"བསིལ་གྱབ་ (བསིལ་ཡབ་)\",\n \"བསིལ་བར་གྱུར་བ་\",\n \"བསིལ་བར་གྱུར་བ་\",\n \"བསུ་ནས་\",\n \"བསུ་བ་\",\n \"བསེ་\",\n \"བསེ་རུ་ལྟ་བུ་\",\n \"བསོད་ཉམས་\",\n \"བསོད་ནམས་ཀྱི་གཏེར་རྣམས་ཀྱི་གཞི་\",\n \"བསོད་ནམས་ཆེ་\",\n \"བསོད་ནམས་བྱ་བའི་དངོས་པོའི་མིང་ལ\",\n \"བསོད་ནམས་མ་ཡིན་པར་ཉེ་བར་འགྲོ་བ་\",\n \"བསོད་ནམས་རྒྱུན་རྒྱས་\",\n \"བསོད་ནམས་སུ་ཉེ་བར་འགྲོ་བ་\",\n \"བསོད་ནམས་སྐྱེས་་\",\n \"བསོད་སྙོམས་\",\n \"བསོད་སྙོམས་ཀྱིས་ཆོག་ཤེས་པ་\",\n \"བསོད་སྙོམས་པ་\",\n \"བསྐ་བ་\",\n \"བསྐལ་པ་\",\n \"བསྐལ་པ་གྲངས་མེད་པར་སྨོན་ལམ་ཤིན་ཏུ་བརྩམས་པ་\",\n \"བསྐལ་པ་ཆེན་པོ་\",\n \"བསྐལ་པ་བཟང་པོ་\",\n \"བསྐལ་པ་བཟང་པོའི་བྱང་ཆུབ་སེམས་དཔའ་\",\n \"བསྐལ་པ་བཟང་པོའི་བྱང་ཆུབ་སེམས་དཔའ་\",\n \"བསྐལ་བ་\",\n \"བསྐལ་བ་བྱེ་བ་མཐའ་ཡས་པ་ལས་འབྱུང་བ་ལ་མཁས་པ་\",\n \"བསྐུ་བའི་ཐུར་མ་\",\n \"བསྐུམ་པ་\",\n \"བསྐུམ་པ་\",\n \"བསྐུམ་པའམ་ཞུམ་པ་\",\n \"བསྐུར་བ་\",\n \"བསྐུལ་བ་\",\n \"བསྐོ་ཡས་\",\n \"བསྐོར་ཏེ་འདུག་པའམ་གཟུང་སྟེ་འདུག་པ་\",\n \"བསྐོར་ནས་\",\n \"བསྐོར་ནས་སམ་བྱུལ་ནས་\",\n \"བསྐོར་བའམ་གང་བ་\",\n \"བསྐོར་བའམ་བཀྲིས་པ་\",\n \"བསྐོལ་ཏེ་\",\n \"བསྐོལ་བའམ་གདུས་པ་\",\n \"བསྐོས་པ་འདུ་བའི་ས་\",\n \"བསྐྱེད་པ་\",\n \"བསྐྱོད་དུ་མེད་པ་\",\n \"བསྐྱོད་ནས་སམ་སྤོས་\",\n \"བསྐྱོད་པ་ཡང་ངམ་\",\n \"བསྐྱོད་པའམ་འཕགས་པ་\",\n \"བསྐྲད་པ་\",\n \"བསྒོ་བ་བཅག་པ་\",\n \"བསྒོ་བ་བཞིན་ཉན་པ་རྗེས་སུ་འཇུག་པ་\",\n \"བསྒོམ་པ་ལས་བྱུང་བའི་ཤེས་རབ་\",\n \"བསྒོམ་པས་སྤང་བར་བྱ་བ་\",\n \"བསྒོམས་ཉེས་སམ་སྨྱུང་ཉེས\",\n \"བསྒོམས་པ་ལས་བྱུང་བའི་བསོད་ནམས་བྱ་བའི་དངོས་པོ་\",\n \"བསྒོམས་པའི་བདག་ཉིད་ཅན་ནམ་བདག་ཉིད་བསྒོམས་པ་\",\n \"བསྒོས་པ་\",\n \"བསྒྱུར་དུ་མི་རུང་བ་\",\n \"བསྒྱུར་དུ་རུང་བ་\",\n \"བསྒྱུར་བ་ལ་ལྡེམ་པོར་དགོངས་པ་\",\n \"བསྒྱུར་བ་ལས་བྱུང་བ་\",\n \"བསྒྱུར་བའི་ལས་\",\n \"བསྒྱུར་ཡས་\",\n \"བསྒྱུར་ཡས་\",\n \"བསྒྲལ་ཡས་\",\n \"བསྒྲལ་ཡས་\",\n \"བསྒྲིབས་པའམ་ལུང་དུ་མི་སྟོན་པ་\",\n \"བསྒྲུབ་དཀའ་བ་\",\n \"བསྒྲུབ་བྱ་\",\n \"བསྒྲུབ་བྱ་\",\n \"བསྒྲུབ་སླ་བ་་\",\n \"བསྒྲེང་ངམ་བཙུགས་པ་\",\n \"བསྒྲེང་བའམ་བཙུགས་པ་\",\n \"བསྒྲེས་པའམ་སྦགས་པ་\",\n \"བསྔགས་པ་\",\n \"བསྔགས་པ་སྨྲ་བ\",\n \"བསྔགས་པའམ་སྙན་པར་བརྗོད་པ་\",\n \"བསྔགས་ལྡན་\",\n \"བསྔོས་པ་ལས་བསྒྱུར་བ་\",\n \"བསྙད་ཡས་\",\n \"བསྙད་ཡས་\",\n \"བསྙལ་ཡས་(བསྐལ་ཡས་)\",\n \"བསྙིལ་བ་\",\n \"བསྙིལ་བ་སྡུད་པ་\",\n \"བསྙུང་བར་འདུག་པའམ་ཉེ་བར་གསོ་་སྤྱོང་བྱེད་\",\n \"བསྙེན་གནས་ལ་ཉེ་བར་གནས་པ་\",\n \"བསྙེན་པ་\",\n \"བསྙེན་པར་དཀའ་བ་\",\n \"བསྙེན་པར་མ་རྫོགས་པ་དང་ལྷན་ཅིག་ཉལ་བ་\",\n \"བསྙེན་པར་རྫོགས་པ་\",\n \"བསྙེན་བཀུར\",\n \"བསྙེན་བཀུར་བསྔགས་པ་\",\n \"བསྙེན་བཀུར་བྱེད་པ་\",\n \"བསྙེན་བཀུར་བྱེད་པ་\",\n \"བསྙེན་བསྲིང་དང་བྲལ་བ་\",\n \"བསྙེམས་པ་མི་མངའ་བ་\",\n \"བསྙེམས་པའི་ཚུལ་\",\n \"བསྙེལ་བ་མེད་པ་\",\n \"བསྟན་དུ་མེད་པ་\",\n \"བསྟན་དུ་མེད་པ་\",\n \"བསྟན་དུ་མེད་པ་\",\n \"བསྟན་དུ་ཡོད་པ་\",\n \"བསྟན་པའམ་བཅོས་པ་\",\n \"བསྟན་བཅོས་\",\n \"བསྟན་བཅོས་ལས་འབྱུང་བ་རྣམས་\",\n \"བསྟན་ཡས་\",\n \"བསྟི་ཁང་\",\n \"བསྟེན་པ་\",\n \"བསྟེན་པ་དང་བཅས་པ་\",\n \"བསྟོད་པ་\",\n \"བསྟོད་པ་\",\n \"བསྟོད་པ་དང་སྨད་པ་དང་གྲགས་པའི་རྣམ་གྲངས་ཀྱི་མིང་ལ་\",\n \"བསྡམ་པར་བྱ་བ་\",\n \"བསྡམས་པའམ་སྦས་པ་\",\n \"བསྡིགས་པ་\",\n \"བསྡུ་བའི་དངོས་པོ་བཞིའི་མིང་ལ་\",\n \"བསྡུ་བའི་དངོས་པོས་སེམས་ཅན་ཐམས་ཅད་སྡུད་པ་རྣམས་\",\n \"བསྡུས་པ་\",\n \"བསྡུས་པ་ལས་གྱུར་པ་\",\n \"བསྡུས་པའམ་མཐའ་དག་\",\n \"བསྡུས་འཇོམས་\",\n \"བསྡོ་ཡས་\",\n \"བསྩལ་བ་\",\n \"བསྩལ་བའམ་བཅོམ་པ་\",\n \"བསྩལ་བའམ་སྐྱུགས་པ་\",\n \"བསྲབས་པའི་ས་\",\n \"བསྲུང་བ་གཅིག་པ་\",\n \"བསྲུང་བ་དང་བསྐྱབ་པ་དང་སྦ་བར་བྱའོ་\",\n \"བསྲུང་བ་པའི་སྡེ་\",\n \"བསྲུང་བ་མེད་པ་བཞིའི་མིང་ལ་\",\n \"བསྲུང་བྱེད་\",\n \"བསྲོ་ཁང་\",\n \"བསླང་བའམ་དྲང་བའམ་སྐྱེད་པ་\",\n \"བསླབ་པ་གསུམ་གྱི་མིང་ལ་\",\n \"བསླབ་པ་བླ་ན་མེད་པ་\",\n \"བསླབ་པ་ཞིག་པ་\",\n \"བསླབ་པ་ལ་ཉེ་བར་འཇོག་པ་སྤོང་བ་\",\n \"བསླབ་པའི་གཞི་\",\n \"བསླབ་པའི་གཞི་བཅའ་བ་\",\n \"བསླབ་པའི་ཆོས་མང་པོ་\",\n \"བསླབ་པས་བྱིན་པ་\",\n \"བསླབ་ཚིག་གི་དངོས་པོ་ལ་ཁྱད་དུ་གསོད་པ་\",\n \"བུ་\",\n \"བུ་\",\n \"བུ་ག་\",\n \"བུ་དོན་དུ་བྲིས་པ་བཞིན་དུ་བལྟ་ན་སྡུག་པ་\",\n \"བུ་མོ་\",\n \"བུ་མོ་\",\n \"བུ་རམ་\",\n \"བུ་རམ་གྱི་ལྦུ་བ་\",\n \"བུ་རམ་ཆང་\",\n \"བུ་རམ་ཤིང་ (བུར་ཤིང་)\",\n \"བུ་རམ་ཤིང་གི་ཚལ་\",\n \"བུ་རམ་ཤིང་པའི་རིགས་དགའ་བ་\",\n \"བུ་རི་རབ་\",\n \"བུ་ལོན་པས་འཇིགས་ཤིང་སྐྲག་པ་\",\n \"བུ་སེང་གེ་\",\n \"བུ་སྟོང་དུ་ཚང་བར་འགྱུར་བའི་མིང་ལ་\",\n \"བུང་བ་\",\n \"བུང་བའི་སྦྲང་རྩི་\",\n \"བུད་མེད་\",\n \"བུད་མེད་\",\n \"བུད་མེད་\",\n \"བུད་མེད་ཀྱིས་དུབ་པ་\",\n \"བུད་མེད་དང་ལྷན་ཅིག་ཉལ་བ་\",\n \"བུད་མེད་འདྲ་བའི་སྐྱེས་པ་\",\n \"བུད་མེད་རིན་པོ་ཆེ་\",\n \"བུད་མེད་ལུས་ཀྱི་མཐའ་(ཐ་)མར་གྱུར་པ་\",\n \"བུད་མེད་སྦྲུམ་མ་\",\n \"བུད་ཤིང་\",\n \"བུམ་པ་\",\n \"བུམ་ཚགས་གཅེའུ་ཅན་\",\n \"བུས་པ་\",\n \"བེའུ་ཕྲུག་\",\n \"བེའུ་ར་བ་\",\n \"བེའུ་རས་\",\n \"བེའུ་རས་\",\n \"བེའུ་རས་\",\n \"བེའུ་རས་\",\n \"བེའུ་རས་དམར་པོ་\",\n \"བེའུ་རས་ཡུག་ཆེན་\",\n \"བེར་རམ་རལ་གུ་\",\n \"བེེ་ཌཱུ་རྱ་\",\n \"བེེཌཱུ་རྒྱའི་འོད\",\n \"བོ་ཉིད་དམ་རང་བཞིན་\",\n \"བོང་ང་དཀར་པོ་\",\n \"བོང་ང་དམར་པོ་ (ཧབ་ཤང་ཙེའུ)་\",\n \"བོང་ང་ནག་པོ་\",\n \"བོང་བ་\",\n \"བོང་བུ་\",\n \"བོང་བུ་\",\n \"བོང་བྲེས་\",\n \"བོང་ཚོད་\",\n \"བོང་རྒྱ་\",\n \"བོར་ཏེའམ་མ་གཏོགས་པ་\",\n \"བོར་བ་\",\n \"བོར་བའམ་བཏང་བ་\",\n \"བྱ་\",\n \"བྱ་\",\n \"བྱ་ཀ་རན་ད་བ་\",\n \"བྱ་ཀ་ལ་བིང་ཀ་\",\n \"བྱ་ཀུ་ཎ་ལ་\",\n \"བྱ་གག་(བྱ་དཀར)\",\n \"བྱ་གག་འཚོང་བ་\",\n \"བྱ་པ་\",\n \"བྱ་བ་\",\n \"བྱ་བ་ཉུང་བ་\",\n \"བྱ་བ་དང་བྱེད་པའི་མཚན་ཉིད་ཀྱི་(ཀྱིས)འབྲེལ་བ་\",\n \"བྱ་བ་ནན་ཏན་དུ་གྲུབ་པའི་ཡེ་ཤེས་\",\n \"བྱ་བ་བྱས་པ་\",\n \"བྱ་བ་བྱེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"བྱ་བ་མ་ཡིན་པ་\",\n \"བྱ་བ་མང་བ་\",\n \"བྱ་བང་\",\n \"བྱ་བང་\",\n \"བྱ་བའི་ཆོ་ག་དང་ཡོ་བྱད་ཅེས་སྐབས་དང་སྦྱར་\",\n \"བྱ་མ་བུམ་\",\n \"བྱ་མ་རྟ་\",\n \"བྱ་ཙ་ཀོ་ར་\",\n \"བྱ་ཙ་ཤ་\",\n \"བྱ་རོག་\",\n \"བྱ་རོག་གམ་ཁྭ་སྐྲོད་ནུས་པ་\",\n \"བྱ་རྒོད་\",\n \"བྱ་རྒོད་ཕུང་པོའི་རི་\",\n \"བྱ་རྨྱངས་བསྒྱིངས་པའམ་གླལ་བ་\",\n \"བྱ་སྐད་ཀྱི་བརྡ\",\n \"བྱ་སྐྱིབས་\",\n \"བྱང་\",\n \"བྱང་གི་སྒྲ་མི་སྙན་\",\n \"བྱང་གྲོལ་\",\n \"བྱང་ཆུབ་་སྙིང་པོ་\",\n \"བྱང་ཆུབ་ཀྱི་ཕྱོགས་ངེས་པར་བསྟན་པ་\",\n \"བྱང་ཆུབ་ཀྱི་ཡན་ལག་བདུན་གྱི་མིང་ལ་\",\n \"བྱང་ཆུབ་ཀྱི་ཡན་ལག་ཡོད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"བྱང་ཆུབ་ཀྱི་སེམས་མི་བརྗེད་པ་\",\n \"བྱང་ཆུབ་ཀྱི་སྟོབས་\",\n \"བྱང་ཆུབ་མངོན་པར་རྫོགས་པར་སངས་རྒྱས་\",\n \"བྱང་ཆུབ་ཡན་ལག་ཆེ་ལྡན་མ་\",\n \"བྱང་ཆུབ་སེམས་དཔའ་\",\n \"བྱང་ཆུབ་སེམས་དཔའ་གཟི་བརྗིད་ཆེ་བ་གཞན་དག་ཀྱང་\",\n \"བྱང་ཆུབ་སེམས་དཔའ་ངེས་པའི་ས་ལ་གནས་པ་བསད་པ་\",\n \"བྱང་ཆུབ་སེམས་དཔའ་རྣམས་ཀྱི་ཡབ་\",\n \"བྱང་ཆུབ་སེམས་དཔའ་སེམས་དཔའ་ཆེན་པོ་དེ་དག་ཐམས་ཅད་ཀྱང་ཕལ་ཆེར་གཞོན་ནུར་གྱུར་པ་\",\n \"བྱང་ཆུབ་སེམས་དཔའ་སེམས་དཔའ་ཆེན་པོ་སླར་འདོད་པའི་ཡོན་ཏན་གྱིས་མ་གོས་པ་\",\n \"བྱང་ཆུབ་སེམས་དཔའ་སོ་སོའི་མཚན་ལ་\",\n \"བྱང་ཆུབ་སེམས་དཔའི་གཟུངས་བཅུ་གཉིས་ཀྱི་མིང་ལ་\",\n \"བྱང་ཆུབ་སེམས་དཔའི་ཆོས་མ་འདྲེས་པའི་བཅུ་བརྒྱད་ཀྱི་མིང་ལ་\",\n \"བྱང་ཆུབ་སེམས་དཔའི་དབང་བཅུའི་མིང་ལ་\",\n \"བྱང་ཆུབ་སེམས་དཔའི་མི་འཇིགས་པ་བཞིའི་མིང་ལ་\",\n \"བྱང་ཆུབ་སེམས་དཔའི་ཚོགས་ཆེན་པོ་དང་ཡང་ཐབས་ཅིག་\",\n \"བྱང་ཆུབ་སེམས་དཔའི་སའི་མིང་ལ་\",\n \"བྱང་ཆུབ་སེམས་དཔའི་སྟོབས་བཅུའི་མིང་ལ་\",\n \"བྱང་ཆུབ་སེམས་དཔའི་སྡེ་སྣོད་\",\n \"བྱང་ཕྱོགས་དམའ་ན་\",\n \"བྱང་ཕྱོགས་མཐོ་\",\n \"བྱང་བ་\",\n \"བྱང་བའམ་རྟོགས་པའམ་ཤེད་བྱེད་པ་\",\n \"བྱང་བར་གྱུར་པ་\",\n \"བྱང་བར་མ་བྱས་པ་\",\n \"བྱང་བར་མི་བྱེད་པ་\",\n \"བྱང་ཤར་\",\n \"བྱད་\",\n \"བྱད་གཟུགས་སམ་བྱད་བཞིན་\",\n \"བྱམས་པ་\",\n \"བྱམས་པ་\",\n \"བྱམས་པ་ཆེན་པོ་དང་སྙིང་རྗེ་ཆེན་པོ་དང་ལྡན་པ་\",\n \"བྱམས་པ་ཆེན་པོ་དང་སྙིང་རྗེ་ཆེན་པོས་ཕྱོགས་བཅུའི་འཇིག་རྟེན་གྱི་ཁམས་སུ་ཁྱབ་པ་\",\n \"བྱམས་པ་ལུང་བསྟན་པ་\",\n \"བྱམས་པའམ་མཛའ་བའམ་སྡུག་པ་\",\n \"བྱམས་པའམ་སྡུག་པར་སེམས་པའམ་མཉེས་བཤིན་པ་\",\n \"བྱམས་པའི་བདག་ཉིད་ཅན་\",\n \"བྱམས་མའི་བུ་གང་པོ་\",\n \"བྱའམ་བྲམ་ཟེ་\",\n \"བྱའི་གདོན་\",\n \"བྱས་པ་གཟོ་བ་\",\n \"བྱས་པ་ཆུད་ཟ་བ་\",\n \"བྱས་པ་བསྲང་བའི་ས (བྱས་བརྟོགས་པའི་ས)\",\n \"བྱས་པ་ཚོར་བ་\",\n \"བྱས་པའམ་བསྐྱེད་པ་\",\n \"བྱས་པའི་ཤུགས་\",\n \"བྱི་བ་\",\n \"བྱི་བཞིན་\",\n \"བྱི་རུ་ (བྱུ་རུ་)\",\n \"བྱི་རུ་ (བྱུ་རུ་)\",\n \"བྱི་ལ་\",\n \"བྱི་ལ་\",\n \"བྱིན་\",\n \"བྱིན་གྱིས་བརླབ་པ་བཞིའི་མིང་ལ\",\n \"བྱིན་པ་རི་དགས་ཨེ་ནེ་ཡའི་ལྟ་བུ་\",\n \"བྱིན་བརླབས་པ་\",\n \"བྱིན་འཕྲོག་\",\n \"བྱིན་ལེན་ (སྦྱིན་ལེན་)\",\n \"བྱིན་ལེན་མ་བྱས་པར་ཟ་བ་\",\n \"བྱིས་པ་\",\n \"བྱིས་པ་དང་ཉན་ཐོས་མི་བཟད་པ་ཇི་སྙེད་ཅིག་གི་ནང་ན་ཡང་དགེ་བ་མང་པོའི་རིན་པོ་ཆེའི་ཤིང་དཔག་བསམ་ལྟར་བརྟན་པའི་ཐམས་ཅད་མཁྱེན་པ་ཉིད་ཀྱི་སེམས་ཡོངས་སུ་མ་ཉམས་པ་རྣམས་\",\n \"བྱིས་པ་བྲིད་པ་\",\n \"བྱིས་པའི་རང་བཞིན་ཅན་\",\n \"བྱུག་པ་\",\n \"བྱུག་པ་\",\n \"བྱུང་\",\n \"བྱུང་\",\n \"བྱུང་ངམ་བཙས་སམ་སྐྱེས་པ་\",\n \"བྱུང་བ་འདི་ལ་\",\n \"བྱུང་བར་གྱུར་\",\n \"བྱུར་བུར་གྱུར་བ་\",\n \"བྱེ་བ་\",\n \"བྱེ་བ་\",\n \"བྱེ་བ་\",\n \"བྱེ་བ་\",\n \"བྱེ་བ་ཕྲག་བརྒྱ་ན་ཐེར་འབུམ་ཞེས་བྱའོ་\",\n \"བྱེ་བའམ་བྲལ་བའམ་འགྱེད་པ་\",\n \"བྱེ་བྲག་\",\n \"བྱེ་བྲག་གམ་རིམ་པ་\",\n \"བྱེ་བྲག་ཏུ་བཤད་པའམ་སྨྲ་བ་\",\n \"བྱེ་བྲག་ཏུ་རྟོགས་པར་བྱེད་པའམ་བྱེ་བྲག་ཏུ་བསྒྲུབ་པ་\",\n \"བྱེ་བྲག་ཏུ་སྨྲ་བ་\",\n \"བྱེ་བྲག་པ་\",\n \"བྱེ་བྲག་ཕྱེད་པའམ་རྟོགས་པ་\",\n \"བྱེ་བྲག་མེད་པའམ་ཁྱད་པར་མེད་པ་\",\n \"བྱེ་མ་ནབ་ནུབ་\",\n \"བྱེད་དུ་འཇུག་པ་པོ་\",\n \"བྱེད་པ་\",\n \"བྱེད་པ་\",\n \"བྱེད་པ་\",\n \"བྱེད་པ་ཉུང་པ་\",\n \"བྱེད་པ་པོ་\",\n \"བྱེད་པ་བྱས་པ་\",\n \"བྱེད་པ་མང་བ་\",\n \"བྱེད་པ་མེད་པ་\",\n \"བྱེད་པའམ་རྒྱུ་ (བྱེད་རྒྱུ་)\",\n \"བྱེད་པའམ་སྟོན་པ་\",\n \"བྱེད་པའི་ཚིག་\",\n \"བྱེད་པའི་རྒྱུ་\",\n \"བྱེད་པའི་རྒྱུ་\",\n \"བྱེད་པར་འཛིན་པ་\",\n \"བྱེའུ་\",\n \"བྲ་ཉེ་\",\n \"བྲག་གམ་རི་\",\n \"བྲག་ཅ་\",\n \"བྲག་ཕུག་\",\n \"བྲག་ཕུག་\",\n \"བྲག་ཞུན་\",\n \"བྲང་ངམ་ཐོང་ཀ་\",\n \"བྲང་ངེར་སྣང་བ་\",\n \"བྲང་བས་མ་ཡིན་\",\n \"བྲང་སྤྲད་\",\n \"བྲན་ནམ་ཁོལ་པོ་\",\n \"བྲན་པའི་མ་ནིང་།་དྲན་པའི་མ་ནིང་\",\n \"བྲན་མོ་\",\n \"བྲམ་ཟེ་\",\n \"བྲམ་ཟེ་གཙང་སྦྲ་ཅན་\",\n \"བྲམ་ཟེའི་གཙུག་ལག་དང་ལས་ཀྱི་མིང་ལ་\",\n \"བྲམ་ཟེའི་བུ་\",\n \"བྲམ་ཟེའི་བུ་\",\n \"བྲམ་ཟེའི་རིགས་ཤིང་སཱ་ལ་ཆེན་པོ་ལྟ་བུ་\",\n \"བྲམ་ཟེར་མི་འཛིན་པ་\",\n \"བྲལ་བ་\",\n \"བྲལ་བ་\",\n \"བྲལ་བའམ་ཞིག་པ་\",\n \"བྲལ་བའི་འབྲས་བུ་\",\n \"བྲལ་བར་འགྱུར་རམ་མེད་པར་འགྱུར་\",\n \"བྲིས་ཉེས\",\n \"བྲེ་ཕུལ་\",\n \"བྲེ་བོ་\",\n \"བྲེ་བོ་ཟས་\",\n \"བྲེས་\",\n \"བྲེས་ཀྱི་རྒྱུ་\",\n \"བླ་གབ་མེད་པ་\",\n \"བླ་གོས་\",\n \"བླ་གོས་ཕྲག་པ་གཅིག་ཏུ་གཟར་ཏེ་\",\n \"བླ་ན་མེད་པ་\",\n \"བླ་ན་མེད་པ་\",\n \"བླ་ན་མེད་པ་དང་མཆོག་ཏུ་བརྩི་བའི་རྣམ་གྲངས་དང་དག་པ་དང་གྲོལ་བ་ལ་སོགས་པའི་མིང་ལ་\",\n \"བླ་ན་མེད་པ་དྲུག་གི་མིང་ལ་\",\n \"བླ་ན་མེད་པ་ཡང་དག་པར་རྫོགས་པའི་བྱང་ཆུབ་མངོན་པར་རྫོགས་པར་སངས་རྒྱས་པ་\",\n \"བླ་མ་\",\n \"བླ་མ་ལ་སྙིང་ཉེ་བའམ་གུས་པ་\",\n \"བླ་མ་ལ་སྲིད་ཞུ་ཆེ་བ་\",\n \"བླ་མར་བྱེད་པ (བཙུན་པར་བྱ་བ)\",\n \"བླ་རེ་\",\n \"བླ་རེ་བྲེས་པ་\",\n \"བླང་བ་དང་དོར་བ་\",\n \"བླའི་དབང་པོ་ལྔ་\",\n \"བླུགས་གཟར་\",\n \"བློ་\",\n \"བློ་གསལ་\",\n \"བློ་གྲོས་\",\n \"བློ་གྲོས་ཆེན་པོ་\",\n \"བློ་གྲོས་མི་ཟད་པ་\",\n \"བློ་གྲོས་མི་ཟད་པས་བསྟན་པ་\",\n \"བློ་གྲོས་མི་ཟད་པས་ཞུས་པ་\",\n \"བློ་གྲོས་ཞི་བ་མཆོག་\",\n \"བློ་དང་ལྡན་པ\",\n \"བློ་བརྟན་\",\n \"བློ་བུར་\",\n \"བློ་བུར་དུ་འོངས་པ་\",\n \"བློ་མཆོག་སྣ་ཚོགས་གཙུག་\",\n \"བློ་ལྡན་\",\n \"བློ་ཤིན་ཏུ་རྣམ་པར་དག་པ་\",\n \"བློ་སྤྱོད་པ་ཐམས་ཅད་དང་ལྡན་པ་\",\n \"བློན་པོ་\",\n \"བློན་པོ་རིན་པོ་ཆེ་\",\n \"བློན་པོ་རིན་པོ་ཆེ་\",\n \"བྷྲིང་གི་རི་ཏི\",\n \"བྷཱ་ར་རྒྱལ་མཚན་\",\n \"མ་\",\n \"མ་\",\n \"མ་ཁེངས་པ་\",\n \"མ་ཁེངས་སམ་མ་དུད་དམ་མི་མཐོ་མི་དམའ་\",\n \"མ་ག་དྷའི་རྒྱལ་པོ་\",\n \"མ་གཏོགས་པའམ་གཞག་སྟེ་\",\n \"མ་གཞལ་\",\n \"མ་གཞལ་\",\n \"མ་གསོད་པ་\",\n \"མ་གུས་པའི་ཚུལ་\",\n \"མ་གྲུབ་པ་\",\n \"མ་གྲོལ་བ་\",\n \"མ་ངེས་པ་\",\n \"མ་ངེས་པ་གཉིས་\",\n \"མ་ངེས་པའི་ཕུང་པོ་\",\n \"མ་ངེས་པའི་རིགས་\",\n \"མ་ཆགས་པའམ་མ་འབྱོར་བ་\",\n \"མ་ཆགས་པའི་དགེ་བའི་རྩ་བ་\",\n \"མ་ཆུབ་པར་སྤྱོད་པ་\",\n \"མ་ཉམས་པ་\",\n \"མ་ཉམས་པ་\",\n \"མ་ཉམས་པ་\",\n \"མ་ཉམས་པའི་བློ་གྲོས་\",\n \"མ་ཉྫུ་ཤ་ཀ\",\n \"མ་ཉྫུ་ཤ་ཀ་ཆེན་པོ\",\n \"མ་ཏུ་ལུང་ག་\",\n \"མ་དགྲ་བཅོམ་མ་སུན་ཕྱུང་བ་\",\n \"མ་དད་པ་\",\n \"མ་དྲེས་པ་་\",\n \"མ་དྲེས་པའི་དྲན་པ་ཉེ་བར་གཞག་པ་གསུམ་གྱི་མིང་ལ་\",\n \"མ་ནིང་\",\n \"མ་ནིང་ཕྲག་དོག་ཅན་\",\n \"མ་ནིང་ཟླ་ཕྱེད་པ་\",\n \"མ་ནོར་བ་དེ་བཞིན་ཉིད་\",\n \"མ་ནོར་བའི་མཚན་ཉིད་\",\n \"མ་ཕེབས་པ་འབེབས་པ་\",\n \"མ་བཅད་པའམ་མ་ཕྱེ་བའམ་མ་བཀྲོལ་བའམ་མ་བརྡུངས་པ་\",\n \"མ་བཅིངས་པ་\",\n \"མ་བཏང་བ་\",\n \"མ་བརྗོད་པའམ་མི་འབྱུང་\",\n \"མ་བརྟད་པའམ་མི་རིངས་པ་\",\n \"མ་བརྟབས་པ་་\",\n \"མ་བསད་པ་\",\n \"མ་བསྐོས་པར་སྟོན་པ་\",\n \"མ་བསྒོ་བར་\",\n \"མ་བསྒྲིབས་པའི་ལུང་དུ་མི་སྟོན་པ་\",\n \"མ་བྱས་པ་དང་ཕྲད་པ་\",\n \"མ་བྱིན་པའི་མ་ཤ་ཀ་ལྔ་ལ་སོགས་པ་\",\n \"མ་བྱིན་པར་ལེན་པ་\",\n \"མ་བྱིན་པར་ལེན་པ་སྤོང་བ་\",\n \"མ་བྱིན་པར་ལེན་པ་སྤོང་བ་\",\n \"མ་བྱུང་བ་ལས་བྱུང་བ་\",\n \"མ་མ་\",\n \"མ་མོ་འཛིན་པ་\",\n \"མ་མྱོས་པར་འདུལ་བར་འོས་པ་\",\n \"མ་ཚང་བ་མེད་པ་\",\n \"མ་ཚང་བ་མེད་པ་\",\n \"མ་ཞུམ་པ་\",\n \"མ་ཟིན་པའི་འབྱུང་བ་ཆེན་པོའི་རྒྱུ་་ལས་བྱུང་བ་སེམས་ཅན་དུ་སྟོན་པ་དང་སེམས་ཅན་དུ་མི་སྟོན་པ་ཡིད་དུ་འོང་བ་དང་ཡིད་དུ་མི་འོང་བ་\",\n \"མ་འགགས་པ་\",\n \"མ་འགགས་པ་\",\n \"མ་འཇིགས་ཤིག་\",\n \"མ་འདོམ་ན་མཐུ་འདོམ་ན་སྟོབས་\",\n \"མ་འདོམ་ན་མེ་ཏོག་ཨུཏ་པ་ལ་འདོམ་ན་ཀུ་བ་ལ་\",\n \"མ་འདོམ་ན་རྣམ་པར་རྒྱལ་བའི་བ་དན་ནམ་བ་དན་\",\n \"མ་འདྲེས་པ་\",\n \"མ་འདྲེས་པའམ་དབྱེར་མེད་པ་\",\n \"མ་འདྲེས་པའམ་དབྱེར་མེད་པ་\",\n \"མ་འབགས་པའམ་མ་ཕྱིས་པའམ་མ་ནོགས་པ་\",\n \"མ་འོངས་པའི་དུས་\",\n \"མ་འོངས་པའི་དུས་ལ་མ་ཆགས་མ་ཐོགས་པའི་ཡེ་ཤེས་མཐོང་བ་འཇུག་པ་\",\n \"མ་འོས་པར་ངལ་སྐྱན་པ་\",\n \"མ་ཡིན་པར་དགག་པ་\",\n \"མ་རངས་པ་མེད་པའམ་མི་བཟོད་པ་མེད་པ་\",\n \"མ་རིག་པ་\",\n \"མ་རིག་པ་\",\n \"མ་རིག་པའི་སྒོ་ངའི་སྤུབས་ཀྱི་སྒྲིབ་པ་\",\n \"མ་རུངས་པ་\",\n \"མ་རུངས་པ་\",\n \"མ་རུངས་པའམ་གདུག་པའམ་སྦྲུལ་\",\n \"མ་རུལ་ལམ་ཞིག་པ་\",\n \"མ་རྙེད་པ་\",\n \"མ་རྨོངས་པ་\",\n \"མ་ལ་ཡ་\",\n \"མ་ལི་ཀཱ་\",\n \"མ་ལུས་པའམ་གཏན་ནས་སམ་རིམ་གྱིས་ཟད་པར་འགྱུར་\",\n \"མ་ཤ་ཀ་\",\n \"མ་ཤ་ཀ་མགྲོན་བུ་བརྒྱད་བཅུའི་རིན་(འགྲོན་བུ་བརྒྱད་བཅུའི་རིན་)\",\n \"མ་སྐྱེས་དགྲའི་འགྱོད་པ་གསལ་བ་\",\n \"མ་སྤངས་པ་\",\n \"མ་སྨད་པ་\",\n \"མ་སྨས་པ་\",\n \"མ་སྨོས་མ་བཏབ་པའི་འབྲས་ས་ལུའི་འབྲུ་\",\n \"མ་ཧེ་\",\n \"མཁན་པོ་\",\n \"མཁན་བཟོས་མ་བྱས་པ་\",\n \"མཁའ་ཁྱབ་ཀྱི་ཏིང་ངེ་འཛིན་\",\n \"མཁའ་རྟེན་\",\n \"མཁར་\",\n \"མཁལ་མ་\",\n \"མཁས་པ་\",\n \"མཁས་པ་རྣམས་ཀྱིས་རང་གིས་རིག་པར་བྱ་བ་\",\n \"མཁས་པའམ་འཛངས་པ་\",\n \"མཁས་པའམ་རིག་པ་\",\n \"མཁས་པའམ་རྟོགས་པ་\",\n \"མཁས་པའམ་ཤེས་ཉེན་ཅན་\",\n \"མཁས་པའི་རང་བཞིན་ཅན་\",\n \"མཁས་པའི་རྣམ་གྲངས་ཀྱི་མིང་ལ་\",\n \"མཁུར་བ་\",\n \"མཁུར་བ་མི་སྤོ་\",\n \"མཁུར་ཚོས་\",\n \"མཁྱུད་སྦྱར་\",\n \"མཁྱེན་ཀྱང་མི་འདྲི་\",\n \"མཁྱེན་པར་མཛོད་ཅིག་སྦྲོན་ཅིག་\",\n \"མཁྱེན་བཞིན་དུ་འདྲི་\",\n \"མཁྲང་བ་\",\n \"མཁྲིས་ནད་\",\n \"མཁྲིས་པ་\",\n \"མགར་སྤྱད་\",\n \"མགལ་མེའི་འཁོར་ལོ\",\n \"མགུ་བ་\",\n \"མགུ་བར་བྱ་བ་\",\n \"མགུ་བར་བྱ་བའམ་མཉེས་པར་བྱ་བ་\",\n \"མགུ་བར་བྱས་\",\n \"མགུལ་གདུབ་\",\n \"མགུལ་ན་ནོར་བུ་\",\n \"མགུལ་པ་\",\n \"མགུལ་པ་སྒྲ་ངར་ངར་པོས་འགགས་པ་་\",\n \"མགུལ་རིངས་ཆེས་པ་\",\n \"མགུལ་རྒྱན་\",\n \"མགོ་\",\n \"མགོ་\",\n \"མགོ་་སྨོས་པས་གོ་པ་\",\n \"མགོ་ཁྱིའི་ལྟ་བུ་\",\n \"མགོ་གཅིག་ཏུ་ལུང་བསྟན་པ་\",\n \"མགོ་གཉིས་པ་\",\n \"མགོ་གློག་\",\n \"མགོ་ཅོད་པན་ཅན་ལ་ཆོས་མི་བཤད་\",\n \"མགོ་དཀྲིས་པ་ལ་ཆོས་མི་བཤད་\",\n \"མགོ་དང་གོས་ལ་མེ་འབར་བ་ལྟ་བུ་\",\n \"མགོ་ཕག་གི་ལྟ་བ་\",\n \"མགོ་བོང་བུའི་ལྟ་བུ་\",\n \"མགོ་མི་གཡོག་\",\n \"མགོ་མི་བསྒྱུར་\",\n \"མགོ་འཁོར་\",\n \"མགོ་འབར་འབུར་ཅན་\",\n \"མགོ་སྐྱ་བ་\",\n \"མགོ་སྨད་པ་\",\n \"མགོ་སྨྱུང་ (མགོ་སྙུང་)\",\n \"མགོན་\",\n \"མགོན་མེད་ཟས་སྦྱིན་གྱི་ཀུན་དགའ་ར་བ་\",\n \"མགོའི་གློག་པ་\",\n \"མགོའི་གློག་པ་\",\n \"མགོའི་རྒྱན་\",\n \"མགོའུ་ཆུང་\",\n \"མགྱོགས་པ་\",\n \"མགྱོགས་པ་\",\n \"མགྲིན་པ་\",\n \"མགྲོན་\",\n \"མགྲོན་གཉེར་བ་ལས་རིང་དུ་འདུག་པ་\",\n \"མགྲོན་དུ་གཉེར་བ་\",\n \"མགྲོན་དུ་བོད་པ་\",\n \"མགྲོན་དུ་བོས་པ་\",\n \"མགྲོན་བུ་ (འགྲོན་བུ་)\",\n \"མགྲོན་བུ་(འགྲོན་བུ་)\",\n \"མང་དུ་ཐོས་པ་\",\n \"མང་དུ་ཐོས་པ་\",\n \"མང་དུ་ཐོས་པའི་སྡེ་\",\n \"མང་དུའམ་ཕལ་མོ་ཆེ་\",\n \"མང་པོ་\",\n \"མང་པོ་པ་\",\n \"མང་པོའམ་ཕལ་པོ་ཆེའམ་ཕུང་པོ་\",\n \"མང་པོར་གྱུར་ནས་གཅིག་འགྱུར་\",\n \"མང་པོས་བཀུར་བ་\",\n \"མང་འཛིན་ཕྲག་བརྒྱ་ན་གླང་པོའི་སྟོབས་ཞེས་བྱའོ་\",\n \"མངག་གཞུག་པ་\",\n \"མངན་བདག་\",\n \"མངའ་བདག་\",\n \"མངར་བ་\",\n \"མངལ་\",\n \"མངལ་ནས་སྐྱེ་བ་\",\n \"མངལ་རླུགས་པར་བྱ་བ་\",\n \"མངལ་ལམ་ལྷུམས་སམ་རུམ་དུ་འཇུག་པ་\",\n \"མངོན་དུ་གྱུར་བ་\",\n \"མངོན་དུ་ཉེ་བར་སོང་\",\n \"མངོན་དུ་ཕྱོགས་པ་\",\n \"མངོན་དུ་འོང་ངམ་འོང་\",\n \"མངོན་དུ་ལྡང་བ་\",\n \"མངོན་ན་གྲགས་པར་གདགས་་\",\n \"མངོན་པ་\",\n \"མངོན་པའི་ང་རྒྱལ་\",\n \"མངོན་པའི་ང་རྒྱལ་ཅན་\",\n \"མངོན་པར་གཏོར་\",\n \"མངོན་པར་དགའ་བར་བྱེད་པ་\",\n \"མངོན་པར་དགའ་བར་འགྱུར་\",\n \"མངོན་པར་དད་པ་རྣམས་ཕྱིར་ཞིང་འཕེལ་བར་བྱ་བའི་ཕྱིར་\",\n \"མངོན་པར་བརྗོད་པ་\",\n \"མངོན་པར་བརྗོད་པས་མངོན་པར་བརྗོད་པ་\",\n \"མངོན་པར་བརྩོན་པ་\",\n \"མངོན་པར་བསྟོད་པའི་གྲགས་པ་\",\n \"མངོན་པར་མ་དད་པ་རྣམས་མངོན་པར་དད་པར་བྱ་བའི་ཕྱིར་\",\n \"མངོན་པར་མ་དམིགས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"མངོན་པར་མགུ་བའམ་མཉེས་པ་\",\n \"མངོན་པར་མཆོད་པའམ་དྲིན་ཆེ་བའམ་བཙུན་པ་\",\n \"མངོན་པར་མཐོ་བ་\",\n \"མངོན་པར་ཞེན་པ་\",\n \"མངོན་པར་འགྲུབ་པར་བྱེད་པ་\",\n \"མངོན་པར་འདུ་བྱེད་པ་དང་བཅས་པས་ཡོངས་སུ་མྱ་ངན་ལས་འདའ་བ་\",\n \"མངོན་པར་འདུ་བྱེད་པ་མེད་པར་ཡོངས་སུ་མྱ་ངན་ལས་འདའ་བ་\",\n \"མངོན་པར་འདུད་པ་\",\n \"མངོན་པར་འཕགས་པ་\",\n \"མངོན་པར་འབྱུང་བ་\",\n \"མངོན་པར་འབྱུང་བ་ལ་བརྟེན་པའི་བདེ་བ་ཡང་རུང་མངོན་པར་འབྱུང་བ་ལ་བརྟེན་པའི་སྡུག་བསྔལ་ཡང་རུང་སྡུག་བསྔལ་ཡང་མ་ཡིན་བདེ་བ་ཡང་མ་ཡིན་པའང་རུང་\",\n \"མངོན་པར་ཡིད་ཆེས་པ་\",\n \"མངོན་པར་རབ་ཏུ་འཕྱང་\",\n \"མངོན་པར་རྒྱལ་\",\n \"མངོན་པར་རྟོག་པ་\",\n \"མངོན་པར་རྟོགས་པ་དང་ལྡན་པ་\",\n \"མངོན་པར་རྟོགས་པའི་མཐའ་ལས་བྱུང་\",\n \"མངོན་པར་རྟོགས་པའི་ལམ་མཐའ་ལས་བྱུང་བའི་དགེ་བའི་རྩ་བ་་\",\n \"མངོན་པར་རྫོགས་པར་འཚང་རྒྱ་བ་\",\n \"མངོན་པར་རྫོགས་པར་འཚང་རྒྱ་བར་འགྱུར་\",\n \"མངོན་པར་ཤེས་པ་ཆེན་པོས་རྣམ་པར་རོལ་པ་\",\n \"མངོན་པར་ཤེས་པ་དྲུག་གི་མིང་ལ་\",\n \"མངོན་པར་ཤེས་པ་དྲུག་གི་སྐབས་ནས་འབྱུང་བའི་མིང་\",\n \"མངོན་པར་ཤེས་པ་དྲུག་དང་ལྡན་\",\n \"མངོན་པར་ཤེས་པ་བུལ་བ་ལ་དཀའ་བའི་ལམ་\",\n \"མངོན་པར་ཤེས་པ་བུལ་བ་ལ་སླ་བའི་ལམ་\",\n \"མངོན་པར་ཤེས་པ་མ་ཉམས་པ་\",\n \"མངོན་པར་ཤེས་པ་མྱུར་བ་ལ་དཀའ་བའི་ལམ་\",\n \"མངོན་པར་ཤེས་པ་མྱུར་བ་ལ་སླ་བའི་ལམ་\",\n \"མངོན་པར་ཤེས་པའི་ཡེ་ཤེས་\",\n \"མངོན་པར་ཤེས་པས་རྣམ་པར་རོལ་པ་\",\n \"མངོན་པར་སྐབས་ཡོད་པ་\",\n \"མངོན་པར་སྤྲོ་བ་\",\n \"མངོན་མཚན་ཅན་གྱི་སྤྱོད་པ་\",\n \"མངོན་སུམ་པ་\",\n \"མངོན་སུམ་འདུལ་བར་འོས་པ་\",\n \"མཆད་པ་\",\n \"མཆན་ཁུག་\",\n \"མཆན་ཁུང་\",\n \"མཆི་མ་\",\n \"མཆིག་གམ་གཏུན་གྱི་གཞི་\",\n \"མཆིག་གུ་\",\n \"མཆིན་པ་\",\n \"མཆིལ་བ་\",\n \"མཆིལ་མ་\",\n \"མཆིལ་མའི་ཐལ་བ་\",\n \"མཆིལ་མའི་སྣོད་\",\n \"མཆིལ་མའི་སྣོད་\",\n \"མཆིལ་ལྷམ་\",\n \"མཆིལ་ལྷམ་\",\n \"མཆུ་\",\n \"མཆུ་\",\n \"མཆུ་དང་ཞེང་དུ་ལྡན་པ་\",\n \"མཆུ་བིམ་བ་ལྟར་དམར་བ་\",\n \"མཆུ་མེད་\",\n \"མཆེ་བ་\",\n \"མཆེ་བ་དཀར་བ་\",\n \"མཆེ་བ་བྱིན་གྱིས་ཕྲ་བ་\",\n \"མཆེ་བ་མཉམ་པ་\",\n \"མཆེ་བ་ཟླུམ་བ་\",\n \"མཆེ་བ་འཇིགས་སུ་རུང་ཞིང་མི་སྡུག་པ་\",\n \"མཆེ་བ་རྣོ་བ་\",\n \"མཆེ་བའི་སྡེ་\",\n \"མཆེད་པའམ་ཁྱེབས་པའམ་རྒྱས་པ་\",\n \"མཆེད་པར་བྱེད་པའམ་འགྲེམས་པ་\",\n \"མཆེར་པ་\",\n \"མཆོག་\",\n \"མཆོག་གམ་གཙོ་བོ་\",\n \"མཆོག་གི་རིན་ཆེན་མ་\",\n \"མཆོག་ཉལ་\",\n \"མཆོག་ཏུ་\",\n \"མཆོག་ཏུ་དགའ་བ་\",\n \"མཆོག་ཏུ་དགའ་བའི་སྔོན་དུ་འགྲོ་བའི་ཆོས་དགུའི་མིང་ལ་\",\n \"མཆོག་ཏུ་དཔའ་བའི་ལག་པ་\",\n \"མཆོག་ཏུ་བཀྲབས་པ་\",\n \"མཆོག་ཏུ་བཏུད་བ་\",\n \"མཆོག་ཏུ་བྱུང་བ་\",\n \"མཆོག་ཏུ་བྱུང་བ་\",\n \"མཆོག་ཏུ་ཡིད་དུ་འཐད་པ་\",\n \"མཆོག་དོན་འོས་\",\n \"མཆོག་ཡས་\",\n \"མཆོག་ཡས་\",\n \"མཆོག་ཡས་\",\n \"མཆོག་ཡས་\",\n \"མཆོག་ལྡན་\",\n \"མཆོག་སྦྱིན་\",\n \"མཆོག་སྲེད་\",\n \"མཆོངས་པ\",\n \"མཆོད་པ་\",\n \"མཆོད་པ་\",\n \"མཆོད་པའི་ཡོ་བྱད་ཀྱི་མིང་ལ་\",\n \"མཆོད་པར་བྱ་བ་\",\n \"མཆོད་པར་བྱས་\",\n \"མཆོད་པར་འོས་པས་མཆོད་པ་\",\n \"མཆོད་ཕྱིར་ཐོགས་\",\n \"མཆོད་འོས་པ་\",\n \"མཆོད་ཡོན་\",\n \"མཆོད་རྟེན་\",\n \"མཆོད་རྟེན་\",\n \"མཆོད་རྟེན་གྱི་འཁོར་ས་\",\n \"མཆོད་རྟེན་གྱི་འཇིག་པ་\",\n \"མཆོད་རྟེན་དང་འདྲ་བར་བྱས་ཏེ་ཟས་མི་བཟའ་\",\n \"མཆོད་སྡོང་\",\n \"མཆོད་སྦྱིན་\",\n \"མཆོད་སྦྱིན་\",\n \"མཆོད་སྦྱིན་ཁོར་མོར་བྱེད་པའམ་སྦྱིན་པ་མི་འཆད་པར་བྱེད་པ་\",\n \"མཆོད་སྦྱིན་གྱི་རིག་བྱེད་\",\n \"མཆོད་སྦྱིན་བརྒྱ་པ་\",\n \"མཆོད་སྦྱིན་བྱས་\",\n \"མཆོད་སྦྱིན་བྱས་\",\n \"མཆོད་སྦྱིན་བྱས་\",\n \"མཆོད་སྦྱིན་བྱེད་དུ་འཇུག་པ་\",\n \"མཆོད་སྦྱིན་ལས་བྱུང་བ་\",\n \"མཆོད་སྦྱིན་ལེགས་པར་བྱས་\",\n \"མཇིང་ནུབ་\",\n \"མཇུག་\",\n \"མཇུག་དོ་\",\n \"མཇུག་མ་\",\n \"མཇུག་རིངས་\",\n \"མཇུག་སྡུད་\",\n \"མཉན་ཉེས་པ་\",\n \"མཉན་པར་འོས་པ་\",\n \"མཉན་ཡོད་\",\n \"མཉམ་པ་ཉིད་ཀྱི་ཡེ་ཤེས་\",\n \"མཉམ་པ་ཉིད་ལ་དགོངས་པ་\",\n \"མཉམ་པ་མེད་པ་\",\n \"མཉམ་པར་བཞག་པ་\",\n \"མཉེ་བ་\",\n \"མཉེན་པ་\",\n \"མཉེན་པ་\",\n \"མཉེན་པར་བྱེད་པ་\",\n \"མཉེས་པར་བྱེད་པ་\",\n \"མཐང་གོས་\",\n \"མཐང་སྤྲད་པ་\",\n \"མཐང་སྤྲད་པ་ཙམ་\",\n \"མཐན་པ་\",\n \"མཐའ་དང་དབུས་མེད་པའི་སངས་རྒྱས་ཀྱི་ས་མཉམ་པ་ཉིད་དུ་ཐུགས་སུ་ཆུད་པ་\",\n \"མཐའ་དམའ་ན་\",\n \"མཐའ་བཞིར་རྒྱལ་བ་\",\n \"མཐའ་བཞིར་རྣམ་པར་རྒྱལ་བ་\",\n \"མཐའ་བརྟུལ་\",\n \"མཐའ་མཐོ་\",\n \"མཐའ་མཐོང་བ་དང་མཐའ་མ་མཐོང་བ་མཚུངས་པར་སྦྱར་ཞིང་བསྟན་པ་\",\n \"མཐའ་མེད་པར་བྱས་པ་\",\n \"མཐའ་འཁོབ་\",\n \"མཐའ་འཁོབ་ཀྱི་མི་\",\n \"མཐའ་འཁོབ་ཏུ་སྐྱེ་བ་\",\n \"མཐའ་འབྱམ་\",\n \"མཐའ་ཡས་པའི་སངས་རྒྱས་ཀྱི་ཞིང་ཏུ་འགྲོ་བ་ལ་མཁས་པ\",\n \"མཐའ་ཡས་མུ་མེད་\",\n \"མཐའ་ཡོད་ཀྱང་ཡོད་ལ་མཐའ་མེད་ཀྱང་མེད་\",\n \"མཐའ་ཡོད་པ་ཡང་མ་ཡིན་མཐའ་མེད་པ་ཡང་མ་ཡིན་\",\n \"མཐའ་རྟུལ་\",\n \"མཐའ་ལས་འདས་པ་སྟོང་པ་ཉིད་\",\n \"མཐའ་སྐོར་\",\n \"མཐའ་སྣང་\",\n \"མཐའ་སྣང་ཆེན་པོ་\",\n \"མཐར་གྱིས་གནས་པའི་སྙོམས་པར་འཇུག་པ་དགུ་\",\n \"མཐར་ཆགས་\",\n \"མཐར་ཕྱིན་པ་\",\n \"མཐར་ཕྱིན་པའམ་ངེས་པར་འབྱུང་བ་\",\n \"མཐར་བྱེད་པའམ་བྱང་བར་འགྱུར་\",\n \"མཐར་འགྲོ་ཞོན་\",\n \"མཐར་འཛིན་པའི་ལྟ་བ་\",\n \"མཐིང་ཤིང་\",\n \"མཐུ་\",\n \"མཐུ་ཆེན་ཐོབ་\",\n \"མཐུ་བསྒྱིངས་\",\n \"མཐུ་ཡོད་པའམ་ནུས་པའམ་དཔྱད་བཟོད་\",\n \"མཐུ་སྟོབས་\",\n \"མཐུན་པ་\",\n \"མཐུན་པ་\",\n \"མཐུན་པ་\",\n \"མཐུན་པ་དང་མི་མཐུན་པ་ལ་སོགས་པའི་མིང་ལ\",\n \"མཐུན་པ་དང་འགལ་བ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"མཐུན་པའི་ཕྱོགས་ལ་ཡོད་པ་\",\n \"མཐུན་པའི་ཡུལ་དུ་གནས་པ་\",\n \"མཐུན་པར་ཞུགས་པ་\",\n \"མཐུན་པར་འཛིན་པ་\",\n \"མཐུན་པར་སྨྲ་བ་\",\n \"མཐུས་བརྩེར་\",\n \"མཐེ་བོ\",\n \"མཐེའུ་ཆུང་\",\n \"མཐེའུ་ཆུང་\",\n \"མཐོ་གང་\",\n \"མཐོ་འཚམ་པ་\",\n \"མཐོ་རིས་\",\n \"མཐོ་རིས་དང་འདོད་པ་ལ་སོགས་པའི་མིང་ལ་\",\n \"མཐོ་རིས་སུ་འགྲོ་བ་\",\n \"མཐོང་ངོ་\",\n \"མཐོང་ན་མི་མཐུན་པ་མེད་པ་\",\n \"མཐོང་བ་\",\n \"མཐོང་བ་དོན་ཡོད་\",\n \"མཐོང་བ་པོ་\",\n \"མཐོང་བ་བླ་ན་མེད་པ་\",\n \"མཐོང་བའི་ཆོས་\",\n \"མཐོང་བའི་ཆོས་ཀྱི་ཟག་པ་རྣམས་བསྡམ་པའི་ཕྱིར་\",\n \"མཐོང་བའི་ཆོས་ལ་བདེ་བར་གནས་པ་\",\n \"མཐོང་བའི་ཆོས་ལ་བདེ་བར་གནས་པའི་མཆོག་ཐོབ་པ་\",\n \"མཐོང་བའི་ཆོས་ལ་མྱོང་པར་འགྱུར་བ་\",\n \"མཐོང་བའི་ས་\",\n \"མཐོང་བར་དགའ་བ་\",\n \"མཐོང་བས་ཐོབ་པ་\",\n \"མཐོང་བས་ཚོར་བ\",\n \"མཐོང་བས་ཤིན་ཏུ་རྟོགས་པ་\",\n \"མཐོང་བས་སྤང་བར་བྱ་བ་\",\n \"མཐོང་བས་སྤང་བར་བྱ་བ་\",\n \"མཐོང་སླེབས་ཀྱི་དཔོན་པོ་་\",\n \"མཐོན་པོ་\",\n \"མདངས་སམ་གཟི་བརྗིད་\",\n \"མདའ་\",\n \"མདའ་གནམ་རྒྱང་དུ་འཕངས་པའམ་མདའ་རྩེ་མོ་གྱེན་དུ་བསྟན་ཏེ་འཕངས་པ་\",\n \"མདའ་གཞུ་\",\n \"མདའ་དུག་\",\n \"མདའ་ཕྱེ་ལྕགས་ལས་བྱས་པ་\",\n \"མདའ་བོ་ཆེ་\",\n \"མདའ་བོ་ཆེ་འཕེན་ཐབས་\",\n \"མདའ་འཕང་བ་\",\n \"མདའ་ཡབ་བམ་བ་གམ་\",\n \"མདས་ས་རྐོ་\",\n \"མདུང་\",\n \"མདུང་ངམ་ཐག་མདུང་\",\n \"མདུང་ཐུང་\",\n \"མདུང་པ་\",\n \"མདུང་རྩེ་\",\n \"མདུང་རྩེ་གསུམ་པ་\",\n \"མདུད་པ་\",\n \"མདུད་པ་བོར་བ་\",\n \"མདུད་པ་འགྲོལ་བའམ་བཅིངས་པའམ་ཁྲོལ་བ་)\",\n \"མདུད་པ་རྣམས་ཤིན་ཏུ་བཅད་པ་\",\n \"མདུད་པའམ་གོས་\",\n \"མདུད་པར་འཛིན་པ་\",\n \"མདུན་ཁང་ངམ་བཀད་ས་\",\n \"མདུན་དུ་བདར་བའམ་མདུན་གྱིས་བལྟས་པ་\",\n \"མདུན་དུ་སྣུར་བ་\",\n \"མདུན་ན་འདོན་\",\n \"མདེའུ་བེའུ་སོ་འདྲ་བ་\",\n \"མདེའུ་བྱིའུ་སྙིང་མ་འདྲ་\",\n \"མདེའུ་ཟུར་བཞི་པ་\",\n \"མདོ་\",\n \"མདོ་འཛིན་པ་\",\n \"མདོ་སྡེ་\",\n \"མདོ་སྡེ་\",\n \"མདོ་སྡེ་བ་\",\n \"མདོ་སྡེ་ལས་འབྱུང་བའི་བྱང་ཆུབ་སེམས་དཔའི་ཡོན་ཏན་ཐོག་ཐོག་སྨོས་པའི་མིང་ལ་་\",\n \"མདོག་དཀར་\",\n \"མདོག་དཀར་ཆེན་པ་\",\n \"མདོམ་མི་སྣང་\",\n \"མདོམས་\",\n \"མདོའི་སྡེ་\",\n \"མདོར་ན་\",\n \"མདོར་ན་ཉེ་བར་ལེན་པའི་ཕུང་པོ་ལྔ་སྡུག་བསྔལ་\",\n \"མདོར་བཤད་པའམ་ས་བཅད་པ་\",\n \"མདོར་བསྡུ་ན་\",\n \"མདོར་བྱས་\",\n \"མདོར་བྱས་པ་\",\n \"མན་ངག་\",\n \"མན་དཱ་ར་བ་\",\n \"མན་དཱ་ར་བ་ཆེན་པོ་\",\n \"མན་ཤེལ་\",\n \"མནའ་མ་\",\n \"མནར་མེད་པ་\",\n \"མནོན་པར་རྟོགས་པ་\",\n \"མཚང་བྲུས་ཀྱང་སླར་མི་འབྲུ་བར་བྱ་\",\n \"མཚན་གཉིས་པ་\",\n \"མཚན་གྱི་གཞི་\",\n \"མཚན་གྱི་མེ་ཏོག་རྒྱས་པ་\",\n \"མཚན་ཉིད་\",\n \"མཚན་ཉིད་གསུམ་གྱི་མིང་ལ་\",\n \"མཚན་ཉིད་མེད་པའི་ཆོས་ལ་གཞོལ་བ་\",\n \"མཚན་ཉིད་ཡོངས་སུ་སྦྱོང་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"མཚན་ཉིད་ལ་ལྡེམ་པོར་དགོངས་པ་\",\n \"མཚན་ནམ་རྟགས་\",\n \"མཚན་པར་རྡོལ་བ་\",\n \"མཚན་པར་རྡོལ་བ་\",\n \"མཚན་མ་མེད་པ་\",\n \"མཚན་མ་མེད་པ་ལ་གནས་པ་\",\n \"མཚན་མ་ལས་འབྱིན་པ་ནི་མཚན་མ་མེད་པའོ་\",\n \"མཚན་མཁན་\",\n \"མཚན་མའམ་རྒྱུ་་རྒྱུ་མཚན་\",\n \"མཚན་མའམ་ལྟས་\",\n \"མཚན་མོ་\",\n \"མཚན་མོ་འཕྱན་པ་\",\n \"མཚན་ཙམ་ཡོད་པ་\",\n \"མཚན་འགྱུར་\",\n \"མཚན་ཡོངས་སུ་རྫོགས་པ་\",\n \"མཚམས་ཀྱི་ནང་\",\n \"མཚམས་བཅད་པ་\",\n \"མཚམས་མེད་པ་དང་ཉེ་བ་ལྔའི་མིང་ལ་\",\n \"མཚམས་མེད་ལྔའི་མིང་ལ་\",\n \"མཚམས་ཡས་\",\n \"མཚམས་ཡས་ (འཚམས་ཡས་)\",\n \"མཚམས་སྦྱོར་བ་མེད་པ་\",\n \"མཚམས་སྦྱོར་བའམ་འབྲེལ་བར་བྱེད་པ་\",\n \"མཚལ་\",\n \"མཚུངས་པར་ལྡན་པའི་རྒྱུ་\",\n \"མཚུན་ལ་གཏོར་བ་\",\n \"མཚེ་མ་\",\n \"མཚེའུ་\",\n \"མཚོ་\",\n \"མཚོ་ཕྲན\",\n \"མཚོན་གྱི་བསྐལ་པ་བར་མ་\",\n \"མཚོན་ཆ་བཙམས་པས་ཕེབས་པ་\",\n \"མཚོན་ཆ་འཚོང་བ་\",\n \"མཚོན་ཆའམ་ལག་ཆའམ་མཚན་\",\n \"མཚོན་ཆའམ་ལག་ཆའམ་མཚན་\",\n \"མཚོན་ཆའམ་ལག་ཆའམ་མཚོན་\",\n \"མཚོན་ཆས་འཚོ་བ་\",\n \"མཚོན་པ་\",\n \"མཚོན་རྩེ་གཅིག་པ་\",\n \"མཛའ་གཅུགས་པ་\",\n \"མཛའ་བཤེས་\",\n \"མཛའ་བོ་\",\n \"མཛའ་བོ་\",\n \"མཛུབ་མོ་\",\n \"མཛེ་\",\n \"མཛེར་པ\",\n \"མཛེས་དགའ་\",\n \"མཛེས་པ་\",\n \"མཛེས་པ་\",\n \"མཛེས་པའམ་ཏ་ལོར་ཏ་ལེར་གྱུར་པ་\",\n \"མཛེས་པའམ་འོད་ཆགས་པ་\",\n \"མཛེས་པར་གཤེགས་པ་\",\n \"མཛེས་བཟང་\",\n \"མཛེས་འཆོས་\",\n \"མཛེས་ལྡན་\",\n \"མཛོད་དམ་ཤུབས་སམ་སྦུབས་\",\n \"མཛོད་པ་\",\n \"མཛོད་སྤུ་\",\n \"མར་\",\n \"མར་གད་\",\n \"མར་གསར་\",\n \"མར་གྱི་སྙིང་ཁུ་\",\n \"མར་མེ་\",\n \"མར་མེ་\",\n \"མར་མེ་མཛད་\",\n \"མར་འབྲི་བ་\",\n \"མར་སར་\",\n \"མལ་\",\n \"མལ་ཆའམ་མལ་སྟན་\",\n \"མལ་ཆའི་གཞི་\",\n \"མལ་སྟན་གྱི་ཕོགས་ཀྱི་ཞལ་རྟ་པ་\",\n \"མལ་སྟན་གྱི་ཞལ་ཏ་པ་\",\n \"མལ་སྟན་གྱིས་ཆོག་ཤེས་པ་\",\n \"མས་བསྲུངས་པ་\",\n \"མི་ཁོམ་པ་བརྒྱད་ཀྱི་མིང་ལ་\",\n \"མི་གཏོང་བར་བསྒོམ་པ་\",\n \"མི་གདུང་བ་\",\n \"མི་གནས་པའམ་མི་བརྟེན་པ་\",\n \"མི་གནས་པའི་མྱ་ངན་ལས་འདས་པ་\",\n \"མི་གཙང་བའམ་ཕྱི་ས་\",\n \"མི་གཙང་བའི་མཆོད་སྦྱིན་\",\n \"མི་གཟར་\",\n \"མི་གཡོ་བ\",\n \"མི་གཡོ་བ་\",\n \"མི་གསལ་བ་\",\n \"མི་གྱེང་བ་མི་གྱེལ་བའམ་སྙོམས་ལས་མེད་པ་\",\n \"མི་གྱོ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"མི་གྱོ་བར་གཤེགས་པ་\",\n \"མི་ངོམས་པ་\",\n \"མི་ཆུང་བ་\",\n \"མི་ཆེ་བ་\",\n \"མི་ཆོག་གམ་མི་ཕོད་དམ་ཉེ་བར་མི་འགྲོ\",\n \"མི་ཉལ་ཙམ་མམ་མཚོན་མོ་རབ་ཏུ་ཞི་བ་\",\n \"མི་ཉུང་བའམ་མི་ཆུང་བ་\",\n \"མི་དགའ་བ་ལས་འབྱིན་པ་ནི་དགའ་བ་\",\n \"མི་དགའ་བའམ་ཡོངས་སུ་སྐྱོ་བ་\",\n \"མི་དགེ་བཅུའི་ལས་ཀྱི་མིང་ལ་\",\n \"མི་དང་སྐལ་བ་མཉམ་པར་སྐྱེས་\",\n \"མི་དངངས་\",\n \"མི་དབེན་པའམ་འདུ་འཛི་ཅན་\",\n \"མི་དམའ་བ་\",\n \"མི་དམིགས་པ་\",\n \"མི་དམིགས་པ་སྟོང་པ་ཉིད་\",\n \"མི་དམིགས་པའི་ཚུལ་གྱིས་བསྒོམ་མོ་\",\n \"མི་ན་བར་གཉའ་གོང་དུ་བསྣོལ་བ་ལ་ཆོས་མི་བཤད་\",\n \"མི་ན་བར་གཟར་བ་ལ་ཆོས་མི་བཤད་\",\n \"མི་ན་བར་ཆུའི་ནང་དུ་བཤང་གཅི་དང་མཆིལ་མ་དང་སྣབས་དང་སྐྱུགས་པ་དང་ཁ་ནས་བྱུང་བ་མི་དོར་\",\n \"མི་ན་བར་ཉལ་བ་ལ་འདུག་སྟེ་ཆོས་མི་བཤད་\",\n \"མི་ན་བར་ཕྲག་པ་གཉིས་ཀ་ལ་གཟར་བ་ལ་ཆོས་མི་བཤད་\",\n \"མི་ན་བར་བརྫེས་པ་ལ་ཆོས་མི་བཤད་\",\n \"མི་ན་བར་མགོ་གཡོས་པ་ལ་ཆོས་མི་བཤད་\",\n \"མི་ན་བར་མདུན་དུ་འགྲོ་བ་ལ་ཕྱི་ནས་འགྲོ་ཞིང་ཆོས་མི་བཤད་\",\n \"མི་ན་བར་འགྲེང་སྟེ་བཤང་གཅི་མི་བྱ་\",\n \"མི་ན་བར་འདུག་པ་ལ་འགྲེངས་ཏེ་ཆོས་མི་བཤད་\",\n \"མི་ན་བར་རྩ་སྔོན་པོ་ཡོད་པའི་ས་ཕྱོགས་སུ་བཤང་ལྕི་༼་གཅི་༽་དང་མཆིལ་མ་དང་སྣབས་དང་སྐྱུགས་པ་དང་ཁ་ནས་བྱུང་བ་མི་དོར་\",\n \"མི་ན་བར་ལམ་ནས་འགྲོ་བ་ལ་ལམ་གྱི་འགྲམ་ནས་འགྲོ་ཞིང་ཆོས་མི་བཤད་\",\n \"མི་ན་བར་སྟན་མཐོན་པོ་ལ་འདུག་པ་ལ་སྟན་དམའ་བ་ལ་འདུག་སྟེ་ཆོས་མི་བཤད་\",\n \"མི་ཕམ་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"མི་ཕྱེད་གཙུག་ན་རིན་པོ་ཆེ་\",\n \"མི་ཕྱེད་པའི་འཁོར་\",\n \"མི་བདེ་བ་ལ་གསོ་སྦྱོང་བྱ་བ་\",\n \"མི་བཟད་པ་\",\n \"མི་བཟོད་\",\n \"མི་བརྗེད་པ་\",\n \"མི་བརྫེ་\",\n \"མི་བརླང་བ་\",\n \"མི་བསྲུན་པ་\",\n \"མི་མངོན་པར་འགྱུར་བ་\",\n \"མི་མཆོག་\",\n \"མི་མཆོང་\",\n \"མི་མཇེད་ཀྱི་བདག་པོ་ཚངས་པ་\",\n \"མི་མཇེད་ཀྱི་འཇིག་རྟེན་གྱི་ཁམས་\",\n \"མི་མཉམ་པ་དང་མཉམ་པ་\",\n \"མི་མཉམ་པ་དང་མཉམ་པ་\",\n \"མི་མཉམ་པ་དང་མཉམ་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"མི་མཉམ་པ་དང་མཉམ་པའི་ཕུང་པོ་ལྔ་\",\n \"མི་མཐུན་པ་\",\n \"མི་མཐུན་པ་\",\n \"མི་མཐུན་པ་\",\n \"མི་མཐུན་པ་\",\n \"མི་མཐུན་པ་\",\n \"མི་མཐུན་པ་མེད་ཅིང་འདུས་པ་དང་ལྡན་པ་\",\n \"མི་མཐུན་པའམ་རད་རོད་དུ་གྱུར་པའམ་ཕན་དུ་གྱུར་བའམ་ཐོ་བྲེལ་བ་\",\n \"མི་མཐུན་པའི་ཕྱོགས་ལ་མེད་པ་\",\n \"མི་མཐུན་པར་ལྟ་བའམ་ལྟ་བ་མི་བཟད་པ་\",\n \"མི་མཛའ་བ་\",\n \"མི་མཛའ་བའི་ལས་ཀྱི་མིང་ལ\",\n \"མི་ཚངས་པ་སྤྱོད་པ་\",\n \"མི་ཚངས་པར་སྤྱོད་པ་སྤོང་བ་\",\n \"མི་ཚུགས་པ་\",\n \"མི་ཞན་པ་\",\n \"མི་ཞུམ་\",\n \"མི་ཟད་པ་\",\n \"མི་ཟད་པ་\",\n \"མི་ཟད་པའི་ཟ་མ་ཏོག་\",\n \"མི་ཟད་པའི་ཟ་མ་ཏོག་ཅེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"མི་ཟློགས་པ་\",\n \"མི་འཁྲུགས་\",\n \"མི་འཁྲུགས་ཆེན་པོ་\",\n \"མི་འཁྲུགས་པ་\",\n \"མི་འཁྲུགས་པ་ཕྲག་བརྒྱ་ན་ཁྱད་བྱིན་ཞེས་བྱའོ་\",\n \"མི་འགོང་\",\n \"མི་འགྱུར་བ་\",\n \"མི་འགྱུར་བ་\",\n \"མི་འགྱུར་བ་\",\n \"མི་འགྱུར་བའི་ཆོས་ཅན་\",\n \"མི་འགྱུར་རམ་མི་ཐོགས་སམ་མ་སྡོད་དམ་རྒྱུན་མི་འཆད་པ་\",\n \"མི་འཆགས་\",\n \"མི་འཆོར་བར་ཕོག་པ\",\n \"མི་འཇིགས་པ་\",\n \"མི་འདའ་བ་\",\n \"མི་འདོད་པའམ་མི་སྡུག་པ་\",\n \"མི་འདོར་བ་\",\n \"མི་འདྲ་བར་སྨིན་པས་ན་རྣམ་པར་སྨིན་པ་\",\n \"མི་འཕམ་སྐྲའི་ལ་བ་ཅན་\",\n \"མི་འཕྲོག་པ་ (མི་ཕྲོགས་པ)\",\n \"མི་འཕྲོད་པ་\",\n \"མི་འཚེ་བ་\",\n \"མི་འཛེམ་\",\n \"མི་འཛེམ་པ་\",\n \"མི་འཛེམ་པའི་མིང་ལ་\",\n \"མི་རིགས་པའི་ཆད་པའམ་ལྟོང་\",\n \"མི་རིགས་པར་ཆགས་པ་\",\n \"མི་རྟག་པ་\",\n \"མི་རྟག་པ་\",\n \"མི་རྨུན་པོ་\",\n \"མི་རྩུབ་པ་\",\n \"མི་ལྕོགས་པ་མེད་པ་\",\n \"མི་ལྡན་པ་\",\n \"མི་ལྡན་པའམ་བྲལ་བ་\",\n \"མི་ལྡོག་\",\n \"མི་ལྡོག་པ་\",\n \"མི་ཤེས་པ་ཀུན་ཤེས་པར་བྱེད་པའི་དབང་པོ་\",\n \"མི་སྐྱེ་བ་ཤེས་པ་\",\n \"མི་སྐྱེ་བའི་ཆོས་ཅན་\",\n \"མི་སྐྱེའམ་མི་འགྲུབ་\",\n \"མི་སྐྱོད་པའམ་མི་སྐུལ་བའམ་སྐྱོད་མི་ནུས་པ\",\n \"མི་སྐྲག་\",\n \"མི་སྒུལ་པ་\",\n \"མི་སྙན་པ་\",\n \"མི་སྙན་པར་བརྗོད་པ་\",\n \"མི་སྡུག་པ་\",\n \"མི་སྡུག་པ་བསྒོམ་པའི་མིང་ལ་\",\n \"མི་སྡུག་བ་དང་ཕྲད་པའི་སྡུག་བསྔལ་\",\n \"མི་སྣང་བ་\",\n \"མི་སྣང་བར་གྱུར་བ་\",\n \"མི་སྤོང་བ་\",\n \"མི་སྨྲ་བ་\",\n \"མི་སྨྲ་བར་འགྲོ་བ་\",\n \"མི་སྲིད་པའམ་མི་འབྱུང་བ་\",\n \"མི་སླེབ་པ་\",\n \"མི་སློབ་པ་\",\n \"མིག་་རྣག་གམ་མིག་རྔུ་མ\",\n \"མིག་གཅིག་པ་\",\n \"མིག་གདུག་པ་(མི་སྡུག་པ)\",\n \"མིག་གཙང་དགའ་འབྱུང་\",\n \"མིག་གཡེང་བར་མི་བྱ་བ་\",\n \"མིག་གི་ཁམས་\",\n \"མིག་གི་དབང་པོ་\",\n \"མིག་གི་དབང་པོ་\",\n \"མིག་གི་འདུས་ཏེ་རེག་པ་ལས་བྱུང་བའི་ཚོར་བ་བདེ་བའང་རུང་སྡུག་བསྔལ་བའང་རུང་སྡུག་བསྔལ་ཡང་མ་ཡིན་བདེ་བའང་མ་ཡིན་པའང་རུང་\",\n \"མིག་གི་འབྲས་བུ་\",\n \"མིག་གི་རྣམ་པར་ཤེས་པ་\",\n \"མིག་གི་རྣམ་པར་ཤེས་པའི་ཁམས་\",\n \"མིག་གི་རྫི་མ་\",\n \"མིག་གི་སྐྱེ་མཆེད་\",\n \"མིག་གི་སྐྱེས་བུ་\",\n \"མིག་གིས་མི་རྩོལ་བར་བྱ་བའི་ཕྱིར་\",\n \"མིག་ཆུ་བུར་ལྟ་བུ་\",\n \"མིག་ཆུང་བ་\",\n \"མིག་དམར་\",\n \"མིག་དམར་བ་\",\n \"མིག་དུ་སྡུག་\",\n \"མིག་ནེའུ་ལེ་ལྟ་བུ་\",\n \"མིག་ནོངས་བ་\",\n \"མིག་པོ་ཆེ་\",\n \"མིག་ཕྱིན་ཅི་ལོག་\",\n \"མིག་བཟང་བདག་པོ་\",\n \"མིག་བཟང་རིང་དགའ་\",\n \"མིག་བར་འཛིངས་པ་\",\n \"མིག་མངས་རིས་སུ་བྲིས་པ་\",\n \"མིག་མཆི་མ་ཕྱུང་བ་\",\n \"མིག་མི་བཟང་\",\n \"མིག་མི་འཛུམ་པ་\",\n \"མིག་མེད་པ་\",\n \"མིག་ཟུར་\",\n \"མིག་ཟླུམ་པོ་\",\n \"མིག་འཕྲུལ་\",\n \"མིག་འཕྲུལ་\",\n \"མིག་འབྲུམ་ཅན་\",\n \"མིག་འཛེར་ཅན་\",\n \"མིག་ཡོ་བ་\",\n \"མིག་ཡོར་\",\n \"མིག་ལྡན་མ་\",\n \"མིག་ཤུ་ཅན་\",\n \"མིག་སེར་\",\n \"མིག་སྨན་སྣོད་དོང་བུ་\",\n \"མིག་སླེའོ་\",\n \"མིག་སླེའོ་\",\n \"མིག་ཧ་ཅང་ཆེ་བ་\",\n \"མིག་ཧ་ཅང་སེར་བ་\",\n \"མིང་གི་དགེ་སློང་\",\n \"མིང་གི་ཚོགས་\",\n \"མིང་ངེས་པར་འཇུག་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"མིང་ཆེན་\",\n \"མིང་ཆེན་\",\n \"མིང་དང་གཟུགས་\",\n \"མིང་དན་\",\n \"མིང་པོས་བསྲུངས་པ་\",\n \"མིང་བསྟན་པས་\",\n \"མིང་རྗེས་སུ་བརྟགས་པས་\",\n \"མིད་པ་\",\n \"མིའམ་ཅི་\",\n \"མིའམ་ཅི་ལྗོན་པའི་འོད་\",\n \"མིའམ་ཅིའི་དབང་པོའི་མིང་ལ་\",\n \"མིའམ་ཅིའི་རྒྱལ་པོ་ལྗོན་པས་ཞུས་པ་\",\n \"མིའམ་ཅིའི་རྒྱལ་པོ་སྡོང་པོའམ་ལྗོན་པ་\",\n \"མིའི་ཆོས་བླ་མ་བརྗོད་པ་\",\n \"མིའི་ཆོས་བླ་མ་སྨྲ་བ་\",\n \"མིའི་འཇིག་རྟེན་\",\n \"མིའི་རིགས་སྣ་ཚོགས་ཀྱི་མིང་ལ་\",\n \"མིའི་རིམ་པ་དང་ལུས་ཀྱི་ཡན་ལག་དང་ཡུལ་ལ་སོགས་པའི་མིང་ལས་མིའི་རིམ་པའི་མིང་ལ་\",\n \"མིའི་རྒྱུད་ཀྱིས་ཡོངས་སུ་བཟུང་བ་ལ་\",\n \"མིའུ་ཐུང་\",\n \"མིར་གྱུར་པ་\",\n \"མིར་ཆགས་པ་\",\n \"མིས་བྱིན་གྱི་བུ་\",\n \"མུ་ཁྱུད་\",\n \"མུ་ཁྱུད་\",\n \"མུ་ཁྱུད་འཛིན་\",\n \"མུ་གེའི་བསྐལ་པ་བར་མ་\",\n \"མུ་ཅུ་ཀུན་ད་\",\n \"མུ་ཅོར་སྨྲ་བའམ་ཁ་དྲག་པ་\",\n \"མུ་ཏིག་\",\n \"མུ་ཏིག་གི་ཆུན་པོ་\",\n \"མུ་ཏིག་གི་ཕྲེང་བ་\",\n \"མུ་ཏིག་དམར་པོ་\",\n \"མུ་ཏིག་འབྲུ་\",\n \"མུ་དང་ཁ་ད་ཆད་དུ་མ་ཡིན་པ་\",\n \"མུ་བཞིའམ་མཐའ་བཞི་\",\n \"མུ་མེད་\",\n \"མུ་མེད་པ་\",\n \"མུ་མེད་པ་ལས་བསྒྲེས་པ་\",\n \"མུ་མེད་ལ་བསྒྲེས་པ་\",\n \"མུ་སྟེག་ཅན་གྱི་སྟོན་པ་དྲུག་གི་མིང་ལ་\",\n \"མུ་སྟེགས་ཅན་\",\n \"མུ་སྟེགས་ཅན་\",\n \"མུ་སྟེགས་ཅན་གྱི་གནས་\",\n \"མུ་སྟེགས་ཅན་གྱི་བདག་ཏུ་བརྗོད་པའི་མིང་ལ་\",\n \"མུ་སྟེགས་ཅན་ཞུགས་པ་\",\n \"མུ་སྟེགས་པ་ལ་ཡ་མཚན་ཅན་གྱི་མིང་ལ\",\n \"མུ་སྟེགས་བྱེད་པ་\",\n \"མུན་ཁྲོད་ནས་མུན་ཁྲོད་དུ་འགྲོ་བ་\",\n \"མུན་ཁྲོད་ནས་སྣང་བར་འགྲོ་བ་\",\n \"མུན་པ་\",\n \"མུན་པ་\",\n \"མུན་སེལ་ལམ་འོད་\",\n \"མུར་འགྲམ་\",\n \"མེ་\",\n \"མེ་\",\n \"མེ་ (གཅིག་བསྲེག་ཟ་)\",\n \"མེ་ (གཅིག་བསྲེག་ཟ་)\",\n \"མེ་ཏོག་\",\n \"མེ་ཏོག་ཁ་བྱེ་བ་\",\n \"མེ་ཏོག་ཁ་འགས་པ་\",\n \"མེ་ཏོག་ཁ་འབུས་པ་\",\n \"མེ་ཏོག་གི་དོག་པ་\",\n \"མེ་ཏོག་གི་ཕུར་མ་\",\n \"མེ་ཏོག་གི་ཡོན་ཏན་གྱི་མིང་ལ་\",\n \"མེ་ཏོག་གི་རྩ་བ་ལ་སོགས་པའི་མིང་ལ་\",\n \"མེ་ཏོག་གི་ཤིང་\",\n \"མེ་ཏོག་གྱི་དཀྱིལ་འཁོར་ཅན་\",\n \"མེ་ཏོག་ཐོད་\",\n \"མེ་ཏོག་ཕྲེང་བའི་ཚོང་ཁང་\",\n \"མེ་ཏོག་བཀྲམ་བའམ་གཏོར་བ་\",\n \"མེ་ཏོག་མངོན་པར་བཀྲམ་པའམ་ཆལ་པར་བཀྲམ་པ་\",\n \"མེ་ཏོག་མདོག་མཛེས་\",\n \"མེ་ཏོག་མདོག་མཛེས་ཆེན་པོ་\",\n \"མེ་ཏོག་འདབ་མ་ཐམས་ཅད་རྒྱས་པ་\",\n \"མེ་ཏོག་འཕྲེང་རྒྱུན (མེ་ཏོག་ཕྲེང་རྒྱུད)\",\n \"མེ་ཏོག་རྒྱན་\",\n \"མེ་ཏོག་རྒྱན་\",\n \"མེ་ཏོག་རྣ་རྒྱན་ཕལ་མོ་ཆེ་\",\n \"མེ་ཏོག་ལུག་མིག་\",\n \"མེ་ཏོག་སྡོང་པོ་རྒྱས་པའི་ཅོད་པན་ཅན་\",\n \"མེ་ཏོག་སྣ་ཚོགས་ཀྱི་མིང་ལ་\",\n \"མེ་ཐབ་\",\n \"མེ་དབལ་\",\n \"མེ་བཞི་\",\n \"མེ་བཞིན་འཇུག་\",\n \"མེ་མ་མུར་\",\n \"མེ་མུར་གྱི་འོབས་སམ་དོང་\",\n \"མེ་མོའམ་སྒྲེའུ་\",\n \"མེ་འབར་བ་ལྟ་བུ་\",\n \"མེ་འབུད་པ་\",\n \"མེ་ལོང་\",\n \"མེ་ལོང་ལྟ་བུའི་ཡེ་ཤེས་\",\n \"མེ་ལྕེ་གཅིག་ཏུ་གྱུར་ཅིང་སྲེག་གོ་\",\n \"མེ་ཤེལ་\",\n \"མེ་སྤར་བ་\",\n \"མེད་ན་མི་འབྱུང་བའི་འབྲེལ་བ་\",\n \"མེད་པར་དགག་པ་\",\n \"མེད་པར་མི་འབྱུང་བ་\",\n \"མེའི་ཁམས་\",\n \"མེའི་ཕྱོགས་\",\n \"མེར་མེར་པོ་\",\n \"མེལ་ཚེ་\",\n \"མེས་པོ་\",\n \"མེས་འཇིག་པ་\",\n \"མོ་གཤམ་གྱི་བུ་\",\n \"མོག་མོག་པར་བྱ་བ་\",\n \"མོག་མོག་པར་བྱས་པ་\",\n \"མོད་ལས་སྐྱེས་པའམ་ལྡན་པ་\",\n \"མོན་གྲུ་\",\n \"མོན་གྲེ་་\",\n \"མོན་དར་\",\n \"མོན་དར་\",\n \"མོན་པའི་དོ་བ་\",\n \"མོན་སྲན་གྲེའུ་\",\n \"མོན་སྲན་དཀར་རུ་\",\n \"མོན་སྲན་ནག་གུ་\",\n \"མོན་སྲན་ཙ་ར་\",\n \"མོན་སྲན་སྡེའུ་\",\n \"མོའི་དབང་པོ་\",\n \"མོའུ་འགལ་གྱི་བུ་\",\n \"མོས་པ་\",\n \"མོས་པ་ཟློག་པ་\",\n \"མོས་པ་ལ་དབང་བ་\",\n \"མོས་པ་སྣ་ཚོགས་མཁྱེན་པའི་སྟོབས་\",\n \"མོས་པ་སྤྱོད་པའི་ས་\",\n \"མོས་པ་སྤྱོད་པའི་ས་ལ་ཆོས་སྤྱོད་བཅུའི་མིང་ལ་\",\n \"མོས་པའམ་བརྟན་པ་\",\n \"མོས་པས་སྤྱོད་པའི་སའི་མིང་ལ་\",\n \"མྱ་ངན་\",\n \"མྱ་ངན་བསལ་བ་\",\n \"མྱ་ངན་བྲལ་བ་\",\n \"མྱ་ངན་མེད་པ་\",\n \"མྱ་ངན་འཚང་\",\n \"མྱ་ངན་ལས་འདས་པ་\",\n \"མྱ་ངན་ལས་འདས་པ་ལ་མི་གནས་པ་\",\n \"མྱ་ངན་ལས་འདས་པ་ལ་སོགས་པའི་མིང་ལ་\",\n \"མྱ་ངན་ལས་འདས་པའི་ལམ་ལ་གནས་པ་\",\n \"མྱ་ངམ་\",\n \"མྱ་ངམ་གྱི་སྨིག་རྒྱུ་\",\n \"མྱང་བར་འདོད་པའམ་ཞིམ་པོར་འདོད་པ་\",\n \"མྱང་རྩི་སྦྲས་\",\n \"མྱུ་གུའི་ཚལ་\",\n \"མྱུར་བ་\",\n \"མྱུར་བ་\",\n \"མྱོང་བ་དང་བཅས་པའི་བསམ་གཏན་\",\n \"མྱོང་བར་བྱེད་པ་\",\n \"མྱོང་བར་འགྱུར་\",\n \"མྱོང་བར་འགྱུར་བ་མ་ངེས་པ་\",\n \"མྱོན་བར་འགྱུར་བ་ངེས་པ་\",\n \"མྱོས་པ་\",\n \"མྱོས་པ་\",\n \"མྱོས་པར་འགྱུར་བའི་བཏུང་བ་སྤོང་བ་\",\n \"མྱོས་པས་\",\n \"ཙན་དན་\",\n \"ཙན་དན་\",\n \"ཙན་དན་སྦྲུལ་གྱི་སྙིང་པོ་\",\n \"ཙམ་པ་\",\n \"ཙམ་པ་ཀ་\",\n \"ཙི་ཙི་ (ཙི་ཙེ་)\",\n \"ཙི་ཚེ་\",\n \"ཙི་ཚེ་རྒོད་དམ་ཁྲེ་རྒོད་\",\n \"ཙུག་ཙུག་མི་བྱ་\",\n \"ཙོག་ཙོག་པོར་འདུག་\",\n \"ཚ་བ་\",\n \"ཚ་བ་\",\n \"ཚ་བ་\",\n \"ཚ་བ་ཉིད་\",\n \"ཚ་བ་མེད་པའམ་གདུང་བ་མེད་པར་འགྱུར་\",\n \"ཚ་བོ་\",\n \"ཚ་མོ་\",\n \"ཚ་ལ་\",\n \"ཚ་སྒོ་ཅན་\",\n \"ཚག་པོ་\",\n \"ཚགས་རྟེན་སྣོད་\",\n \"ཚང་མང་\",\n \"ཚངས་པ་ཁྱད་པར་སེམས་གྱིས་ཞུས་པ\",\n \"ཚངས་པ་ཆེན་པོ་\",\n \"ཚངས་པ་དང་བཅས་པ་\",\n \"ཚངས་པ་དབྱིག་གི་སྙིང་པ་\",\n \"ཚངས་པ་མདུན་ན་འདོན་\",\n \"ཚངས་པའི་དབྱངས་\",\n \"ཚངས་པའི་འཇིག་རྟེན་གྱི་བར་དུ་སེམས་ཅན་རྣམས་ལ་ལུས་ཀྱིས་དབང་བསྒྱུར་རོ་\",\n \"ཚངས་པའི་ལམ་ལ་མཁས་པ་\",\n \"ཚངས་པའི་སྒྲ་དབྱངས་བསྒྲགས་པ་\",\n \"ཚངས་པར་མཚུངས་པར་སྤྱོད་\",\n \"ཚངས་པར་སྤྱོད་པ་\",\n \"ཚངས་པར་སྤྱོད་པ་མ་ཡིན་པར་ཚངས་པར་སྤྱོད་པར་ཁས་འཆེ་བ་\",\n \"ཚངས་པར་སྤྱོད་པ་ལ་གནས་པ་\",\n \"ཚངས་འཁོར་\",\n \"ཚངས་རིས་\",\n \"ཚད་པ་\",\n \"ཚད་པའི་བྱེའུ་\",\n \"ཚད་པའི་བྱེའུ་\",\n \"ཚད་མ་\",\n \"ཚད་མ་དང་རྟོག་གེ་བའི་གཞུང་ལུགས་ལས་འབྱུང་བའི་མིང་ལ་\",\n \"ཚད་མར་རུང་བའི་ཟླ་གྲོགས་\",\n \"ཚད་མེད་དགེ་\",\n \"ཚད་མེད་པ་\",\n \"ཚད་མེད་པ་\",\n \"ཚད་མེད་པ་\",\n \"ཚད་མེད་པ་བཞིའི་རྒྱུད་ཀྱི་མིང་ལ་\",\n \"ཚད་མེད་པ་ལས་བསྒྲེས་པ་\",\n \"ཚད་མེད་འོད་\",\n \"ཚད་འདས་\",\n \"ཚད་ཡས་\",\n \"ཚན་པོ་ཆེ་ཆེན་པོའི་སྟོབས་\",\n \"ཚབ་ཆེ་བ་\",\n \"ཚམ་ཚོམ་མེད་པ་\",\n \"ཚིག་ཁ་སྐོང་བ་\",\n \"ཚིག་གཅིག་བརྗོད་པ་\",\n \"ཚིག་གམ་གོ་འཕང་ངམ་གནས་སམ་གོང་པ་\",\n \"ཚིག་གཟུང་བའམ་བཙུན་པ་\",\n \"ཚིག་གི་དོན་བཅུ་དྲུག་\",\n \"ཚིག་གི་ཕྲད་\",\n \"ཚིག་གི་ཚོགས་\",\n \"ཚིག་གི་འཇུག་གམ་ལྷག་མ་\",\n \"ཚིག་གི་ལྷད་\",\n \"ཚིག་གོང་མ་དང་སྦྱོར་བ་\",\n \"ཚིག་ངན་པ་སྨྲ་བ་\",\n \"ཚིག་དོར་\",\n \"ཚིག་དོར་བའམ་མི་གཤེ་བ་\",\n \"ཚིག་དྲུག་གམ་ལྔ་ལས་ལྷག་པར་ཆོས་བཤད་པ་\",\n \"ཚིག་པ་\",\n \"ཚིག་བཀྱལ་བ་སྤོང་བ\",\n \"ཚིག་བརླང་པོས་ཞེར་འདེབས་པ་\",\n \"ཚིག་བསྡུད་པ་\",\n \"ཚིག་བསྡུས་པ་\",\n \"ཚིག་བླ་དགས་\",\n \"ཚིག་བླ་དགས་ལ་འཇུག་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཚིག་མཐུན་པ་དང་ཚིག་ལྷག་པར་ཟློས་པ་\",\n \"ཚིག་ཟུར་གཉིས་སུ་སྦྱར་བ་\",\n \"ཚིག་ཟུར་ཆག་པ་མེད་པ་\",\n \"ཚིག་ཟློས་པའི་སྐྱོན་མེད་པ་\",\n \"ཚིག་འདོན་དུ་འཇུག་པ་\",\n \"ཚིག་འདོན་པ་\",\n \"ཚིག་འབྲུ་བཟང་པོ་\",\n \"ཚིག་འབྲུ་འབྱོར་པ་\",\n \"ཚིག་འོག་མ་དང་སྦྱོར་བ་\",\n \"ཚིག་རྣམ་པར་སྦྱར་བ་\",\n \"ཚིག་རྩུབ་པོ་སྨྲ་བ་སྤོང་བ་\",\n \"ཚིག་ལ་འཆོལ་བ་\",\n \"ཚིག་ལེ་འུར་བྱས་པ་\",\n \"ཚིགས་\",\n \"ཚིགས་\",\n \"ཚིགས་གཞུང་ངམ་ལེའུ་གྲངས་\",\n \"ཚིགས་བཞི་པའི་ཚིགས་སུ་བཅད་པ་གཅིག་ཙམ་ཡང་བཟུང་ནས་\",\n \"ཚིགས་སུ་བཅད་པ་\",\n \"ཚིགས་སུ་བཅད་པ་\",\n \"ཚིགས་སུ་བཅད་པ་\",\n \"ཚིགས་སུ་བཅད་པའི་དབྱངས་ཀྱིས་སྨྲ་བ་\",\n \"ཚིགས་སུ་བཅད་པའི་སྡེ་\",\n \"ཚིགས་སུ་སྦྱར་བ་\",\n \"ཚིབ་མ་\",\n \"ཚིལ་\",\n \"ཚུ་རོལ་\",\n \"ཚུ་རོལ་གྱི་འགྲམ་\",\n \"ཚུ་རོལ་ལམ་ཚུན་ཆད་\",\n \"ཚུར་\",\n \"ཚུར་འདྲེན་\",\n \"ཚུར་ཤོག་\",\n \"ཚུར་ཤོག་ལེགས་པར་འོངས་སོ་\",\n \"ཚུལ་ཁྲིམས་ཀྱི་ནོར་\",\n \"ཚུལ་ཁྲིམས་ཀྱི་ཕ་རོལ་ཏུ་ཕྱིན་པ་\",\n \"ཚུལ་ཁྲིམས་ཀྱི་ཕུང་པོ་\",\n \"ཚུལ་ཁྲིམས་ཉམས་པ་\",\n \"ཚུལ་ཁྲིམས་ཉམས་པ་མེད་པ་\",\n \"ཚུལ་ཁྲིམས་དང་བརྟུལ་ཞུགས་མཆོག་ཏུ་འཛིན་པ་\",\n \"ཚུལ་ཁྲིམས་འཆལ་བ་\",\n \"ཚུལ་ཁྲིམས་འཆལ་བ་\",\n \"ཚུལ་ཁྲིམས་རྗེས་སུ་དྲན་པ་\",\n \"ཚུལ་ཁྲིམས་ལས་བྱུང་བའི་བསོད་ནམས་བྱ་བའི་དངོས་པོ་\",\n \"ཚུལ་ཁྲིམས་སམ་ངང་ཚུལ་\",\n \"ཚུལ་གསུམ་པའི་རྟགས་\",\n \"ཚུལ་དང་འདྲ་བ་\",\n \"ཚུལ་དུ་ཤིས་པའམ་མཛེས་པ་\",\n \"ཚུལ་བཞིན་དུ་བརྟག་པར་བྱའོ་\",\n \"ཚུལ་བཞིན་ཡིད་ལ་བྱེད་པ་\",\n \"ཚུལ་བཞིན་ཡིད་ལ་བྱེད་པ་\",\n \"ཚུལ་འཆོས་པ་\",\n \"ཚུལ་ཤིང་\",\n \"ཚེ་གཞན་\",\n \"ཚེ་དང་ལྡན་པ་\",\n \"ཚེ་ཕྱི་མ་\",\n \"ཚེ་ཕྱི་མ་\",\n \"ཚེ་འདི\",\n \"ཚེ་འདི་དང་ཚེ་ཕྱི་མ་དང་འཆི་འཕོའི་རྣམ་པའི་མིང་ལ་\",\n \"ཚེ་འཕོས་པའམ་ཚེ་རྗེས་པ་\",\n \"ཚེ་རབས་དྲན་པ་ཆེ་གེ་མོ་ཞིག་ན་བདག་གི་མིང་འདི་ཞེས་བྱ་བར་གྱུར་རིགས་འདི་ཞེས་བྱ་བ་རུས་ནི་འདི་ཞེས་བྱ་བ་ཟས་ནི་འདི་ལྟ་བུ་ཞིག་ཟ་བདེ་བ་དང་སྡུག་བསྔལ་ནི་འདི་ལྟ་བུ་ཞིག་མྱོང་ཡུན་ནི་འདི་སྲིད་ཅིག་གནས་ཚེ་ནི་འདི་ཙམ་ཞིག་ཐུབ་དེ་ནས་ཚེ་འཕོས་ནས་ཆེ་གེ་མོ་ཞིག་ཏུ་སྐྱེས་དེ་ནས་ཚེ་འཕོས་ནས་ཡང་འདིར་སྐྱེས\",\n \"ཚེ་རབས་ཕྱི་མའི་ཟག་རྣམས་པ་ཆུ་ལོན་གྱིས་བཟློག་བྱ་བའི་ཕྱིར་\",\n \"ཚེ་རབས་རྗེ་བའམ་འཕོ་བ་\",\n \"ཚེ་ལ་དབང་བ་\",\n \"ཚེགས་ཆུང་ངུས་\",\n \"ཚེགས་མེད་པར་ཐོབ་པའམ་ངན་ངོན་མ་ཡིན་པར་ཐོབ་པ་\",\n \"ཚེམ་བུ་མཁན་\",\n \"ཚེམ་ཚེམ་\",\n \"ཚེམས་ཐགས་བཟང་བ་\",\n \"ཚེམས་བཞི་བཅུ་མངའ་བ་\",\n \"ཚེམས་མཉམ་པ་\",\n \"ཚེམས་ཤིན་ཏུ་དཀར་བ་\",\n \"ཚེའི་འདུ་བྱེད་འདོར་བ་\",\n \"ཚེའི་རིག་བྱེད་\",\n \"ཚེའི་སྙིགས་མ་\",\n \"ཚེར་མ་\",\n \"ཚེས་གྲངས་\",\n \"ཚོ་འདུས་\",\n \"ཚོགས\",\n \"ཚོགས་ཀྱི་གཙོ་བོ་\",\n \"ཚོགས་ཀྱི་མཆོག་དགེ་འདུན་ལ་སྐྱབས་སུ་མཆིའོ་\",\n \"ཚོགས་ངན་པ་རབ་ཏུ་གདུང་བར་བྱེད་པ་\",\n \"ཚོགས་དང་སྤྱོད་པ་\",\n \"ཚོགས་པའམ་མཐུན་བ་\",\n \"ཚོགས་པར་དབྱུང་བ་\",\n \"ཚོགས་པར་མི་དབྱུང་བ་\",\n \"ཚོགས་སམ་ཁྱུའམ་འདུས་པ་\",\n \"ཚོང་དཔོན་\",\n \"ཚོང་པ་\",\n \"ཚོང་ཚོང་གཤིབས་པ་\",\n \"ཚོང་ཟོང་\",\n \"ཚོང་རྡལ་ལམ་ཚོང་འདུས་\",\n \"ཚོད་དམ་ཚེ་སྐབས་\",\n \"ཚོད་མ་\",\n \"ཚོད་མ་དང་མཉམ་པར་མ་ཡིན་\",\n \"ཚོད་ཤེས་པ་\",\n \"ཚོན་མོ་སྟེང་\",\n \"ཚོན་རྩི་\",\n \"ཚོན་རྩིའི་མིང་ལ་\",\n \"ཚོན་སྣ་བརྒྱ་\",\n \"ཚོར་བ་\",\n \"ཚོར་བ་\",\n \"ཚོར་བ་དྲན་པ་ཉེ་བར་བཞག་པ་\",\n \"ཚོར་བ་པོ་\",\n \"ཚོར་བ་བདག་གི་ཡིན་\",\n \"ཚོར་བ་ལ་བདག་གནས\",\n \"ཚོར་བའི་ཕུང་པོ་\",\n \"ཚོར་བའི་ཕུང་པོ་སོ་སོར་ཕྱེ་བའི་མིང་ལ་\",\n \"ཚོལ་\",\n \"ཚོལ་བ་\",\n \"ཚོལ་བ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཚྭ་\",\n \"ཚྭ་\",\n \"ཚྭ་ཁུག་\",\n \"ཚྭ་མཚོ (རྒྱ་མཚོ)\",\n \"ཛམ་བུའི་ཆུ་བོའི་གསེར་\",\n \"ཝ་\",\n \"ཝ་\",\n \"ཝ་\",\n \"ཝར་ཤི་ཀི་\",\n \"ཝཱ་རཱ་ཎ་སི\",\n \"ཞ་ཉེ་གདར་\",\n \"ཞ་ཉེའི་དབྱར་འདབ་\",\n \"ཞ་བ་\",\n \"ཞ་བོ་\",\n \"ཞ་ལུའམ་མྱུ་གུ་\",\n \"ཞག་\",\n \"ཞག་བདུན་ན་འབྲལ་བ་\",\n \"ཞག་བདུན་པ་\",\n \"ཞགས་པ་གདབ་པ་\",\n \"ཞགས་པ་ཆེན་པོ་\",\n \"ཞང་པོ་\",\n \"ཞང་བློན་\",\n \"ཞན་པ་\",\n \"ཞབ་མའམ་སློ་མ་\",\n \"ཞབས་ཀྱི་མཐིལ་\",\n \"ཞབས་ཀྱི་མཐིལ་རྟིང་པ་ཡངས་པ་\",\n \"ཞབས་ཀྱི་ལོང་མོའི་ཚིགས་མི་མངོན་པ་\",\n \"ཞབས་མི་མཉམ་པ་མེད་པ་\",\n \"ཞབས་ཤིན་ཏུ་གནས་པ་\",\n \"ཞམ་རིང་བྱེད་པ (ཞམ་འབྲིང་བ)\",\n \"ཞར་བ་\",\n \"ཞར་ལ་བྱུང་བ་\",\n \"ཞལ་གྱི་སྒོ་ནས་ཞུགས་\",\n \"ཞལ་ཆེ་བ་\",\n \"ཞལ་དུ་བལྟས་པ་\",\n \"ཞལ་ནས་གསུངས་པ་དང་ཚིག་ལེ་འུར་བྱས་པ་ལ་སོགས་པའི་མིང་ལ་\",\n \"ཞལ་ནས་སྐྱེས་པ་\",\n \"ཞལ་ལ་གཟུགས་ཀྱི་གཟུགས་བརྙན་སྣང་བ་\",\n \"ཞལ་ལམ་གདོང་ངམ་ཁ་\",\n \"ཞལ་ལྟ་པ་\",\n \"ཞལ་ཧ་ཅང་ཡང་མི་རིང་བ་\",\n \"ཞི་གནས་\",\n \"ཞི་གནས་དང་ལྷག་མཐོང་ལ་སོགས་པའི་མིང་ལ་\",\n \"ཞི་བ་\",\n \"ཞི་བ་\",\n \"ཞི་བ་\",\n \"ཞི་བ་\",\n \"ཞི་བ་པ་\",\n \"ཞི་བ་འཚོ་\",\n \"ཞི་བ་ལེགས་\",\n \"ཞི་བར་མཛད་པ་\",\n \"ཞིག་ནས་མེད་པ་\",\n \"ཞིག་པའམ་མི་སྣང་བ་\",\n \"ཞིག་པའམ་མེད་པར་གྱུར་བ་\",\n \"ཞིག་པར་འགྱུར་བའམ་སྙིལ་བ་\",\n \"ཞིང་\",\n \"ཞིང་གི་སྐབས་སུ་མུ་ཐུག་བྲིས་ཁྲིམས་ཀྱི་སྐབས་སུ་ནི་བཀའ་ཁྲིམས་བཅའ་\",\n \"ཞིང་ངན་པ་\",\n \"ཞིང་ཆུ་མ་\",\n \"ཞིང་པ་\",\n \"ཞིང་བཟང་པོ་\",\n \"ཞིང་བླས་\",\n \"ཞིང་རྨོད་པ་\",\n \"ཞིང་རྨོད་པ་\",\n \"ཞིབ་མོ་བརྟགས་པའི་མཁས་པ་དང་འཛངས་པས་རིག་པ་\",\n \"ཞུགས་གླིང་\",\n \"ཞུགས་ནས་སམ་རྟོགས་ནས་\",\n \"ཞུགས་པ་\",\n \"ཞུགས་པ་\",\n \"ཞུགས་པའམ་བརྩོན་པའམ་སྦྱར་བའམ་སྦྱོར་བ་\",\n \"ཞུགས་པའམ་ཞེན་པའམ་ཕོངས་པའམ་ཉོན་མོངས་པ་\",\n \"ཞུགས་པའམ་ཞོན་པའམ་ནོན་པ་\",\n \"ཞུགས་སམ་འཕེན་པ་\",\n \"ཞུགས་སམ་འཕེན་པ་\",\n \"ཞུམ་པ་\",\n \"ཞུམ་པ་མེད་པ་\",\n \"ཞེ་གཅིག་\",\n \"ཞེ་གཅོད་པ་རྩུབ་པ་\",\n \"ཞེ་གཉིས་\",\n \"ཞེ་གནག་པའམ་དྲག་པ་\",\n \"ཞེ་གསུམ་\",\n \"ཞེ་དགུ་\",\n \"ཞེ་དྲུག་\",\n \"ཞེ་བདུན་\",\n \"ཞེ་བཞི་\",\n \"ཞེ་བརྒྱད་\",\n \"ཞེ་འགྲས་པའི་སེམས་དང་ལྡན་\",\n \"ཞེ་ལྔ་\",\n \"ཞེ་ས་\",\n \"ཞེ་ས་དང་བཅས་པ་\",\n \"ཞེ་སྡང་བདོ་བའམ་ཞེ་སྡང་གི་ཤས་ཆེ་བ་\",\n \"ཞེ་སྡང་བསྐྱེད་དམ་སྐྱོན་འདོག་པ་\",\n \"ཞེ་སྡང་མེད་པའི་དགེ་བའི་རྩ་བ་\",\n \"ཞེང་ངམ་སྦོམས་སམ་ཁོ་ལག་\",\n \"ཞེང་དུའམ་རྒྱར་\",\n \"ཞེན་པ་\",\n \"ཞེན་པ་\",\n \"ཞེན་པ་ལ་བརྟེན་པའི་བདེ་བའང་རུང་ཞེན་པ་ལ་བརྟེན་པའི་སྡུག་བསྔལ་ཡང་རུང་སྡུག་བསྔལ་ཡང་མ་ཡིན་བདེ་བའང་མ་ཡིན་པའང་རུང་\",\n \"ཞོ་\",\n \"ཞོ་\",\n \"ཞོ་ཁ་ཆུ་\",\n \"ཞོ་ཤས་འཚོ་བ་\",\n \"ཞྭ་\",\n \"ཞྭ་གྱོན་པ་ལ་ཆོས་མི་བཤད་\",\n \"ཞྭ་བ་\",\n \"ཟ་གཅིག་གམ་སྨྱུང་བ་\",\n \"ཟ་མ་\",\n \"ཟ་མ་ཏོག་\",\n \"ཟ་མ་ཏོག་\",\n \"ཟ་འུག་\",\n \"ཟ་འུག་\",\n \"ཟག་པ་\",\n \"ཟག་པ་དང་བཅས་པ\",\n \"ཟག་པ་དང་བཅས་པའི་ཤེས་པ་\",\n \"ཟག་པ་མེད་པ་\",\n \"ཟག་པ་མེད་པའི་ཤེས་པ་\",\n \"ཟག་པ་ཟད་པ་\",\n \"ཟག་པ་ཟད་པ་ཐམས་ཅད་མཁྱེན་པ་ལ་མི་འཇིགས་པ་\",\n \"ཟག་པ་ཟད་པ་མཁྱེན་པའི་སྟོབས་\",\n \"ཟག་པ་ཟད་པ་ཤེས་པ་\",\n \"ཟག་བྱེད་དུ་ཟག་བྱེད་དམ་ཁའམ་བཤང་བའི་ལམ་དུ་\",\n \"ཟང་ཟིང་ངམ་ཤའམ་ཟས་\",\n \"ཟང་ཟིང་ཅུང་ཟད་ཀྱི་ཕྱིར་རམ་ཁ་ཟས་ཅུང་ཟད་ཀྱི་ཕྱིར་\",\n \"ཟང་ཟིང་དང་བཅས་པ་\",\n \"ཟང་ཟིང་དང་བཅས་པའི་བདེ་བའང་རུང་ཟང་ཟིང་དང་བཅས་པའི་སྡུག་བསྔལ་བ་ཡང་རུང་སྡུག་བསྔལ་བའང་མ་ཡིན་བདེ་བའང་མ་ཡིན་པའང་རུང་\",\n \"ཟང་ཟིང་མེད་པ་\",\n \"ཟང་ཟིང་མེད་པ་ཆོས་སྟོན་པ་\",\n \"ཟང་ཡག་\",\n \"ཟང་ཡག་\",\n \"ཟངས་\",\n \"ཟངས་བུམ་\",\n \"ཟངས་མཁན་\",\n \"ཟངས་སམ་རྫ་བོ་\",\n \"ཟད་པ་དང་བྲལ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཟད་པ་ཤེས་པ་\",\n \"ཟད་པ་ཤེས་པ་ཐོབ་པའི་དགེ་བའི་རྩ་བ་\",\n \"ཟད་པའམ་གོད་པའམ་འཇིག་པ་\",\n \"ཟད་པར་གྱི་སྐྱེ་མཆེད་བཅུའི་མིང་ལ་\",\n \"ཟད་པར་ཆུའི་སྐྱེ་མཆེད་\",\n \"ཟད་པར་དཀར་པོའི་སྐྱེ་མཆེད་\",\n \"ཟད་པར་དམར་པོའི་སྐྱེ་མཆེད་\",\n \"ཟད་པར་ནམ་མཁའི་སྐྱེ་མཆེད་\",\n \"ཟད་པར་མི་འགྱུར་བ་\",\n \"ཟད་པར་མེའི་སྐྱེ་མཆེད་\",\n \"ཟད་པར་རྣམ་པར་ཤེས་པའི་སྐྱེ་མཆེད་\",\n \"ཟད་པར་རླུང་གི་སྐྱེ་མཆེད་\",\n \"ཟད་པར་སའི་སྐྱེ་མཆེད་\",\n \"ཟད་པར་སེར་པོའི་སྐྱེ་མཆེད་\",\n \"ཟད་པར་སྔོན་པོའི་སྐྱེ་མཆ���ད་\",\n \"ཟད་བྱེད་པ་\",\n \"ཟད་མི་ཤེས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཟན་དྲོན་\",\n \"ཟབ་པ་\",\n \"ཟབ་པའི་རྣམ་གྲངས་ཀྱི་མིང་ལ་\",\n \"ཟབ་པར་སྣང་བ་\",\n \"ཟབ་བགྲང་(ཟབ་འགྲང་)(ཟབ་འགྲ་)\",\n \"ཟབ་མོའི་དབྱངས་ཀྱི་ང་རོ་སྒྲོགས་པ་\",\n \"ཟབ་འགྲང་\",\n \"ཟམ་ཟིམ་\",\n \"ཟམ་ཟིམ་\",\n \"ཟར་མ་\",\n \"ཟར་མའི་རས་\",\n \"ཟར་ཟེར་\",\n \"ཟར་ཟེར་\",\n \"ཟལ་ཟུལ་\",\n \"ཟལ་ཟུལ་\",\n \"ཟས་གཅོད་དུ་འཇུག་པ་\",\n \"ཟས་གཙང་\",\n \"ཟས་གཙང་གི་སྲས་\",\n \"ཟས་གསོད་པ་སློང་བ་\",\n \"ཟས་ཅུང་ཟད་ཀྱི་ཕྱིར་སྟོན་པོ་\",\n \"ཟས་དཀར་\",\n \"ཟས་ཕྱིས་མི་ལེན་པ་\",\n \"ཟས་བཞིའི་མིང་ལ་\",\n \"ཟས་འདམ་པ་\",\n \"ཟས་འདོད་པ་ལ་ཟས་\",\n \"ཟས་ལ་བསྐོ་བ་\",\n \"ཟས་ལ་མི་འཕྲོད་པའི་འདུ་ཤེས་\",\n \"ཟས་སམ་བཟའ་བ་\",\n \"ཟིན་པའམ་མཐར་ཕྱིན་པར་རམ་ངེས་པར་བརྒལ་བ་\",\n \"ཟིན་པའི་འབྱུང་བ་ཆེན་པོའི་རྒྱུ་ལས་བྱུང་བ་སེམས་ཅན་དུ་སྟོན་པ་དང་སེམས་ཅན་དུ་མི་སྟོན་པ་ཡིད་དུ་འོང་བ་དང་ཡིད་དུ་མི་འོང་བ་\",\n \"ཟིལ་གྱིས་མནན་ཏེ་ངེས་པར་འབྱུང་\",\n \"ཟིལ་པ་\",\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n \"ཟུག་རྔུ་\",\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n null,\n \"ཟུག་རྔུ་ཕྱུང་བ་\",\n \"ཟུག་རྔུ་འབྱིན་པ་\",\n \"ཟུང་\",\n \"ཟུང་ང་\",\n \"ཟུང་ངམ་ཕྲུགས་\",\n \"ཟུང་དང་སྣྲེལ་ཞིའི་རྒྱུད་ལ་མཁས་པ་རྣམས་\",\n \"ཟུར་ཆགས་པ་\",\n \"ཟུར་བ་\",\n \"ཟུར་ཙམ་གྱིས་གོ་པ་\",\n \"ཟེ་བ་\",\n \"ཟེ་བ་ནི་རྡོའི་སྙིང་པོ་\",\n \"ཟེ་འབྲུ་\",\n \"ཟོ་ཆུན་བརྒྱུད་པའི་འཁོར་ལོ་\",\n \"ཟོང་དགྲམ་པའི་ཚོང་ཁང་\",\n \"ཟོམ་མམ་རྩེ་མོ་\",\n \"ཟོམ་མམ་རྩེ་མོ་\",\n \"ཟོལ་པ\",\n \"ཟོས་པ་དང་འཐུངས་པ་དང་འཆོས་པ་དང་མྱངས་པ་རྣམས་ལེགས་པར་བདེ་བར་འཇུ་\",\n \"ཟླ་གྲགས་\",\n \"ཟླ་བ་\",\n \"ཟླ་བ་\",\n \"ཟླ་བ་\",\n \"ཟླ་བ་དང་ཉི་མ་འདི་གཉིས་འདི་ལྟར་རྫུ་འཕྲུལ་ཆེ་བ་འདི་ལྟར་མཐུ་ཆེ་བ་འདི་ལྟར་གཟི་བརྗིད་ཆེ་བ་ཡང་ལག་པས་འཛིན་ཅིང་ཀུན་ཏུ་ཉུག་པར་བྱེད་དོ་\",\n \"ཟླ་བ་དྲི་མ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཟླ་བ་བཟང་པོ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཟླ་བ་མར་གྱི་ངོ་\",\n \"ཟླ་བ་ཡར་གྱི་ངོ་\",\n \"ཟླ་བ་ཡོངས་སུ་རྫོགས་པའི་ཏིང་ངེ་འཛིན་\",\n \"ཟླ་བ་ཤར་བ་\",\n \"ཟླ་བའི་གཟི་བརྗིད་\",\n \"ཟླ་བའི་རྒྱལ་མཚན་ཏོག་ཅེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཟླ་མཐོང་\",\n \"ཟླ་མཚན་དང་ལྡན་པའི་བུད་མེད་\",\n \"ཟླ་མཚན་མེད་པ་\",\n \"ཟླ་མཛེས་\",\n \"ཟླ་མེད་པ་\",\n \"ཟླ་འོད་\",\n \"ཟླས་དབྱེ་བ་\",\n \"ཟླུམ་པོ་\",\n \"ཟློས་པ་\",\n \"འཁར་བ་\",\n \"འཁར་བ་མགར་\",\n \"འཁར་བ་ལ་བརྟེན་པ་ (མཁར་བ་ལ་བསྟེན་པ)\",\n \"འཁར་བསིལ་ (འཁར་གསིལ་)\",\n \"འཁར་རྔ་\",\n \"འཁུར་འཇུག་པ་\",\n \"འཁོགས་པ་\",\n \"འཁོད་དོ་\",\n \"འཁོན་དུ་འཛིན་པ་\",\n \"འཁོར་ཀུན་ཏུ་གྲགས་པ་\",\n \"འཁོར་གཏན་ནམ་སྒོའི་ཐེམ་པ་\",\n \"འཁོར་གསུམ་ཡོངས་སུ་དག་པ་\",\n \"འཁོར་གྱི་ཁྱམས་\",\n \"འཁོར་གྱི་ནང་ན་འདུག་ཀྱང་རུང་\",\n \"འཁོར་ཉན་\",\n \"འཁོར་དང་བཅས་པ་\",\n \"འཁོར་ནས་\",\n \"འཁོར་བ་\",\n \"འཁོར་བ་དང་མྱ་ངན་ལས་འདས་པའི་སྒོ་སྟོན་པ་རྣམས་\",\n \"འཁོར་བ་མཐའ་ཡས་པ་གཟིལ་གྱིས་གནོན་པ་\",\n \"འཁོར་བ་འཇིག་\",\n \"འཁོར་འདུས་པ་དེར་བཞུགས་པའམ་འདུག་\",\n \"འཁོར་ཡུག་\",\n \"འཁོར་ཡུག་ཆེན་པོ་\",\n \"འཁོར་ལོ་ཆེན་པོ་འཇུག་པའི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"འཁོར་ལོ་ཐམས་ཅད་མ་\",\n \"འཁོར་ལོ་ཐོགས་པ་\",\n \"འཁོར་ལོ་དྲི་མེད་\",\n \"འཁོར་ལོ་མི་མཐུན་པའི་གཞི་\",\n \"འཁོར་ལོ་འདབ་བརྒྱ་\",\n \"འཁོར་ལོ་རིན་པོ་ཆེ་\",\n \"འཁོར་ལོས་སྒྱུར་བའི་རྒྱལ་པོ་རྒྱུད་ཀྱི་མིང་ལ་\",\n \"འཁོར་ལོས་སྒྱུར་བའི་རྒྱལ་པོའི་ཡོན་ཏན་དང་རིན་པོ་ཆེ་སྣ་བདུན་ལ་སོགས་པའི་མིང་ལ་\",\n \"འཁྱིལ་བ་མཐའ་ཡས་\",\n \"འཁྱུད་ནས་ལྟང་བའི་མ་ནིང་\",\n \"འཁྱུད་པ་\",\n \"འཁྱུད་པ་(ཁྱུད་པ་)\",\n \"འཁྲི་ཤིང་ངམ་ལྕུག་མ་\",\n \"འཁྲིག་ཐབས་\",\n \"འཁྲིག་པ་དང་ལྡན་པར་སྨྲ་བ་\",\n \"འཁྲིག་མ་\",\n \"འཁྲུག་པ་\",\n \"འཁྲུག་པར་མི་འགྱུར་\",\n \"འཁྲུགས་\",\n \"འཁྲུགས་པ་\",\n \"འཁྲུགས་པ་\",\n \"འཁྲུགས་པའམ་ཁོང་ནས་སྡང་བ་\",\n \"འཁྲུར་འཇུག་པ་\",\n \"འཁྲུལ་པ་མེད་པ་\",\n \"འཁྲུལ་བྱེད་\",\n \"འཁྲུལ་ཡས་\",\n \"འཁྲེན་པ་\",\n \"འགགས་\",\n \"འགལ་བ་\",\n \"འགལ་བ་དང་འགོག་པ་ཐམས་ཅད་ཡང་དག་པར་ཞི་བར་བྱེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"འགལ་བའམ་མ་ཚང་བ་\",\n \"འགལ་ཚབས་ཅན་དུ་འགྱུར་རོ་\",\n \"འགི་ཧང་\",\n \"འགུལ་\",\n \"འགོ་བའི་ནད་\",\n \"འགོག་པ་\",\n \"འགོག་པ་མངོན་དུ་བྱས་\",\n \"འགོག་པ་ལ་གནས་པ་\",\n \"འགོག་པ་ལ་ཆོས་ཤེས་པ་\",\n \"འགོག་པ་ལ་ཆོས་ཤེས་པའི་བཟོད་པ་\",\n \"འགོག་པ་ལ་རྗེས་སུ་རྟོགས་པའི་ཤེས་པ་\",\n \"འགོག་པ་ལ་རྗེས་སུ་རྟོགས་པར་ཤེས་པའི་བཟོད་པ་\",\n \"འགོག་པ་ཤེས་པ་\",\n \"འགོག་པའམ་འགོགས་(བགེགས་)སམ་བར་དུ་གཅོད་པ་\",\n \"འགོག་པའི་སྙོམས་པར་འཇུག་པ་\",\n \"འགོག་པའི་སྙོམས་པར་འཇུག་པ་\",\n \"འགོད་པའམ་འཇོག་པའམ་འདོམས་\",\n \"འགྱུར་བ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"འགྱུར་བ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"འགྱུར་བའམ་འཇུག་པའམ་ལོང་བ་\",\n \"འགྱུར་བའམ་ཡོད་པ་\",\n \"འགྱུར་བའི་སྡུག་བསྔལ་\",\n \"འགྱུར་རོའམ་འདུག་གོ་སྤྱོད་དོ་\",\n \"འགྱེད་\",\n \"འགྱེད་སྟོབས་\",\n \"འགྱོད་པ་\",\n \"འགྱོད་པ་དང་ཡིད་ལ་གཅགས་པའི་རྣམ་གྲངས་\",\n \"འགྱོད་པ་དང་ཡིད་ལ་གཅགས་པའི་རྣམ་གྲངས་\",\n \"འགྱོད་པ་དང་ཡིད་ལ་གཅགས་པའི་རྣམ་གྲངས་\",\n \"འགྱོད་པ་དང་ཡིད་ལ་གཅགས་པའི་རྣམ་གྲངས་\",\n \"འགྱོད་པ་བསྐྱེད་པ་\",\n \"འགྲམ་པ་\",\n \"འགྲམ་པ་སེང་གེ་འདྲ་བ་\",\n \"འགྲམ་མམ་ངོགས་\",\n \"འགྲས་འགྲུས་སམ་གྱ་གྱུའམ་ཡ་ཡོའམ་གཡོན་ཅན་\",\n \"འགྲིབ་པ་\",\n \"འགྲིབ་པའམ་འབྲི་བ་\",\n \"འགྲུས་སྐྱོང་གི་ཡན་ལག་གི་འཚོགས་\",\n \"འགྲེངས་ཏེ་ལྷུང་བཟེད་མི་བཀྲུ་\",\n \"འགྲེལ་བ་\",\n \"འགྲེལ་བཤད་\",\n \"འགྲེལ་བཤད་ཀྱི་བཤད་པ་\",\n \"འགྲོ་\",\n \"འགྲོ་བ་\",\n \"འགྲོ་བ་\",\n \"འགྲོ་བ་ཐམས་ཅད་མངོན་པར་དགའ་བར་སྟོན་པ་རྣམས་\",\n \"འགྲོ་བ་འཛིན་\",\n \"འགྲོ་བའམ་འཇུག་པ་\",\n \"འགྲོ་བའམ་འཇུག་པ་\",\n \"འགྲོ་བའམ་རྣམ་པའམ་རྟོགས་པའམ་རྟེན་\",\n \"འགྲོ་བའི་རྣམ་གྲངས་\",\n \"འགྲོ་བར་ཆས་པ་\",\n \"འགྲོ་མགྱོགས་པ་\",\n \"འགྲོགས་པའམ་ཕྲད་པ་\",\n \"འགྲོགས་བཤེས་\",\n \"འཆག་ཏུ་འཇུག་པ་\",\n \"འཆག་སར་བྱས་པ་\",\n \"འཆགས་པའམ་སྨྲ་བ་\",\n \"འཆགས་པའི་བསྐལ་པ་\",\n \"འཆང་བ་\",\n \"འཆང་བའམ་འཛིན་པ་\",\n \"འཆབ་པ་\",\n \"འཆར་ཀ་\",\n \"འཆར་ཀ་\",\n \"འཆར་བ་\",\n \"འཆལ་པའི་ཚུལ་ཁྲིམས་\",\n \"འཆལ་པའི་ཤེས་རབ་\",\n \"འཆལ་བའམ་འཁྲུགས་པའམ་ཅལ་ཅོལ་དུ་གྱུར་བ\",\n \"འཆི་བ་དང་འཕོ་བ\",\n \"འཆི་བ་དང་འཕོ་བ་\",\n \"འཆི་བའི་ཆར་གཏོགས་པ་\",\n \"འཆི་བའི་སྡུག་བསྔལ་\",\n \"འཆི་བའི་སྲིད་པ་\",\n \"འཆི་འཕོ་བ་དང་སྐྱེ་བ་མཁྱེན་པའི་སྟོབས་\",\n \"འཆི་འཕོའམ་འཆི་བ་\",\n \"འཆི་ལྟས་\",\n \"འཆིང་བ་\",\n \"འཆིང་བ་\",\n \"འཆོལ་བ་\",\n \"འཇམ་དཔལ་གནས་པ་\",\n \"འཇམ་དཔལ་གཞོན་ནུར་གྱུར་པ་\",\n \"འཇམ་དཔལ་གྱི་སངས་རྒྱས་ཀྱི་ཞིང་གི་ཡོན་ཏན་བཀོད་པ་\",\n \"འཇམ་པ་\",\n \"འཇམ་པ་\",\n \"འཇའ་འམ་དབང་པོའི་གཞུ་\",\n \"འཇའི་གཙུག་ཕུད་ཅན་\",\n \"འཇིག་པ་\",\n \"འཇིག་པའི་ངང་ཅན་\",\n \"འཇིག་པའི་བསྐལ་པ་\",\n \"འཇིག་པས་ན་འཇིག་རྟེན་\",\n \"འཇིག་ཚོགས་ལ་ལྟ་བ་ཉི་ཤུའི་མིང་ལ་\",\n \"འཇིག་རྟེན་གྱི་ཁམས་\",\n \"འཇིག་རྟེན་གྱི་ཁམས་གྲངས་མེད་པའི་སངས་རྒྱས་རྗེས་སུ་དྲན་པའི་ཏིང་ངེ་འཛིན་རྟག་པར་རྒྱུན་དུ་མངོན་དུ་གྱུར་བ་\",\n \"འཇིག་རྟེན་གྱི་ཁམས་རབ་འབྱམས་་ཐམས་ཅད་\",\n \"འཇིག་རྟེན་གྱི་གཙོ་བོ་\",\n \"འཇིག་རྟེན་གྱི་ཆོས་བརྒྱད་ཀྱི་མིང་ལ་\",\n \"འཇིག་རྟེན་གྱི་ཆོས་རྣམས་ཀྱིས་རྗེས་སུ་མ་གོས་པ་\",\n \"འཇིག་རྟེན་གྱི་བར་\",\n \"འཇིག་རྟེན་གྱི་མིང་དུ་བཏགས་པའམ་འཇིག་རྟེན་གྱི་ཐ་སྙད་\",\n \"འཇིག་རྟེན་གྱི་ཚུལ་ལམ་སྤྱོད་པ་\",\n \"འཇིག་རྟེན་ཐམས་ཅད་ལ་མངོན་པར་མི་དགའ་བའི་འདུ་ཤེས་\",\n \"འཇིག་རྟེན་པའི་ཆོས་ཀྱི་མཆོག་\",\n \"འཇིག་རྟེན་པའི་དོན་མ་ཡིན་པར་བྱུང་བ་\",\n \"འཇིག་རྟེན་པའི་ལྷའི་མིང་ལ་\",\n \"འཇིག་རྟེན་མཁྱེན་པ་\",\n \"འཇིག་རྟེན་མཐའ་ཡོད་པ་\",\n \"འཇིག་རྟེན་མཐའ་ཡོད་པ་མ་ཡིན་\",\n \"འཇིག་རྟེན་མི་རྟག་\",\n \"འཇིག་རྟེན་མོས་པ་\",\n \"འཇིག་རྟེན་འཇིག་པ་\",\n \"འཇིག་རྟེན་འདས་སྨྲ་བའི་སྡེ་\",\n \"འཇིག་རྟེན་འབྱུང་བ་\",\n \"འཇིག་རྟེན་རྒྱང་ཕེན་པ་\",\n \"འཇིག་རྟེན་རྟག་\",\n \"འཇིག་རྟེན་རྟག་ཀྱང་རྟག་ལ་རྟག་ཀྱང་མི་རྟག་པ་\",\n \"འཇིག་རྟེན་ལས་འདས་པའི་ལེའུ་\",\n \"འཇིག་རྟེན་ཤེས་པ་\",\n \"འཇིག་རྟེན་སྐྱོང་\",\n \"འཇིགས་(འཇིགས་ལྟ་)\",\n \"འཇིགས་པ་མེད་པ་\",\n \"འཇིགས་པའི་དབང་དུ་གྱུར་པ་མ་ཡིན་པ་\",\n \"འཇིགས་པར་ལྟ་བ་\",\n \"འཇིགས་བྱེད་\",\n \"འཇིགས་བྱེད་ཤིང་རྟ་\",\n \"འཇིགས་མེད་རི་གནས་སྡེ་\",\n \"འཇིགས་ཚོགས་ལ་ལྟ་བ་\",\n \"འཇིགས་སུ་རུང་བ་\",\n \"འཇིགས་སུ་རུང་བླ་མ་\",\n \"འཇིགས་སྡེ་\",\n \"འཇུག་\",\n \"འཇུག་པ་\",\n \"འཇུག་པ་\",\n \"འཇུག་པའམ་གཤེགས་པ་\",\n \"འཇུག་པའམ་འགྲོ་བའམ་སྐེམ་པ་\",\n \"འཇུག་པར་བྱེད་པ་\",\n \"འཇུངས་པ་\",\n \"འཇུས་པའམ་སྤྱངས་པ་\",\n \"འཇོག་པ\",\n \"འཇོག་པ་\",\n \"འཇོག་པ་\",\n \"འཇོའམ་སྒེག་པ་\",\n \"འཇོལ་ཐབས་སུ་མ་ཡིན་\",\n \"འཐག་ཏུ་འཇུག་པ་\",\n \"འཐག་པ་བསྐྱེད་པ་\",\n \"འཐད་པའམ་གཏན་ཚིགས་\",\n \"འཐབ་\",\n \"འཐབ་ཀྲོལ་བྱེད་པ་\",\n \"འཐབ་དཀའ་བའི་བརྩོན་འགྲུས་ཀྱི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"འཐབ་པ་\",\n \"འཐབ་པ་དང་འཐབ་མོ་དང་རྩོད་པ་དང་འགྱེད་པ་\",\n \"འཐབ་བྲལ་\",\n \"འཐབ་མོ་བཞམས་ནས་ཕེབས་པ་\",\n \"འཐབ་ཡས་\",\n \"འཐམས་བའམ་སྤྱོ་བ་\",\n \"འཐས་པ་\",\n \"འཐུལ་བ་\",\n \"འཐོབ་པ་\",\n \"འཐོབ་པ་དང་འབྲེལ་བ་\",\n \"འཐོབ་པ་མེད་པ་\",\n \"འཐོར་\",\n \"འཐོར་འཐུང་\",\n \"འདག་པའི་ཕྱེ་མ་\",\n \"འདག་རྫས་\",\n \"འདབ་མ་\",\n \"འདབ་མ་ལྷག་\",\n \"འདབ་འབུམ་\",\n \"འདབ་སྐྱོང་(བྱ)\",\n \"འདབ་སྟོང་\",\n \"འདམ་བུ་\",\n \"འདམ་བུ་ཅན་\",\n \"འདམ་བུའི་ཚལ་\",\n \"འདར་བུ་\",\n \"འདས་པ་\",\n \"འདས་པ་\",\n \"འདས་པ་དང་མ་བྱོན་པ་དང་ད་ལྟར་གྱི་སངས་རྒྱས་བཅོམ་ལྡན་འདས་རྣམས་ཀྱི་ཡེ་ཤེས་ལ་གནས་པ་\",\n \"འདས་པའམ་ཉེས་པ་\",\n \"འདས་པའི་ཆར་གྱུར་བ་\",\n \"འདས་པའི་དུས་ལ་མ་ཆགས་མ་ཐོགས་པའི་ཡེ་ཤེས་མཐོང་བ་འཇུག་པ་\",\n \"འདི་\",\n \"འདི་\",\n \"འདི་\",\n \"འདི་ཐལ་བར་བརླག་པའམ་རློག་པར་འགྱུར་\",\n \"འདི་དག་\",\n \"འདི་ནི་ཀུན་འབྱུང་བ་\",\n \"འདི་ནི་ཁྱོད་ཀྱི་འདི་ནི་ངའི་ཞེས་\",\n \"འདི་ནི་གཉིས་སུ་མེད་དེ་གཉིས་སུ་བྱར་མེད་ཅིང་ཐ་མི་དད་དེ་མ་བཅད་པའོ\",\n \"འདི་ནི་འགོག་པ་\",\n \"འདི་ནི་སྡུག་བསྔལ་\",\n \"འདི་ནི་སྡུག་བསྔལ་འགོག་པའི་ལམ་\",\n \"འདི་མཐོང་བ་ལ་ཡོད་པ་\",\n \"འདི་ཡོད་པས་འདི་འབྱུང་\",\n \"འདི་རྣམས་\",\n \"འདི་ལ་\",\n \"འདི་ལ་\",\n \"འདི་ལྟ་སྟེ་\",\n \"འདི་ལྟ་སྟེའམ་གང་འདི་\",\n \"འདི་ལྟ་སྟེའམ་དཔེར་ན་\",\n \"འདི་ལྟར་\",\n \"འདི་སྐད་དམ་འདི་ལྟར་རམ་དེ་བཞིན་\",\n \"འདི་སྐྱེས་པའི་ཕྱིར་འདི་སྐྱེ་\",\n \"འདི་སྙམ་དུ་སེམས་\",\n \"འདི་སྟོན་པ་དེ་བཞིན་གཤེགས་པ་དགྲ་བཅོམ་པ་ཡང་དག་པར་རྫོགས་པའི་སངས་རྒྱས་\",\n \"འདིའམ་འདི་ལ་\",\n \"འདིའི་ཁྱིམ་དབུབ་པའི་དུས་ལ་བབ་\",\n \"འདིར་\",\n \"འདིར་\",\n \"འདིས་\",\n \"འདིས་\",\n \"འདུ་བ་\",\n \"འདུ་བ་ཚོགས་པ་\",\n \"འདུ་བྱེད་\",\n \"འདུ་བྱེད་ཀྱི་ཕུང་པོ་\",\n \"འདུ་བྱེད་ཀྱི་སྡུག་བསྔལ་\",\n \"འདུ་བྱེད་བདེག་གི་ཡིན་\",\n \"འདུ་བྱེད་ལ་བདག་གནས་\",\n \"འདུ་འགོད་ཀྱི་རྩིས་པ་\",\n \"འདུ་འཕྲོད་དམ་ཚོགས་པ་\",\n \"འདུ་འཛི་\",\n \"འདུ་འཛི་མེད་པའམ་དབེན་པ་\",\n \"འདུ་ཤེས་\",\n \"འདུ་ཤེས་ཀྱི་ཕུང་པོ་\",\n \"འདུ་ཤེས་ཀྱི་ཕུང་པོ་སོ་སོར་ཕྱེ་བའི་མིང་ལ་\",\n \"འདུ་ཤེས་ཀྱི་རྣམ་པ་\",\n \"འདུ་ཤེས་བདག་གི་ཡིན་\",\n \"འདུ་ཤེས་བསྒྱུར་བ་\",\n \"འདུ་ཤེས་མེད་པ་\",\n \"འདུ་ཤེས་མེད་པའི་སེམས་ཅན་རྣམས་\",\n \"འདུ་ཤེས་མེད་པའི་སྙོམས་པར་འཇུག་པ\",\n \"འདུ་ཤེས་མེད་པའི་སྙོམས་པར་འཇུག་པ་\",\n \"འདུ་ཤེས་མེད་འདུ་ཤེས་མེད་མིན་སྐྱེ་མཆེད་\",\n \"འདུ་ཤེས་མེད་འདུ་ཤེས་མེད་མིན་སྐྱེ་མཆེད་\",\n \"འདུ་ཤེས་ལ་བདག་གནས་\",\n \"འདུག་གནས་\",\n \"འདུག་གོ་\",\n \"འདུད་པའམ་་མཐུན་པ་\",\n \"འདུན་ཁང་\",\n \"འདུན་པ་\",\n \"འདུན་པ་\",\n \"འདུན་པ་ཉམས་པ་མེད་པ་\",\n \"འདུན་པ་དྲག་པོ་\",\n \"འདུན་པའི་ཏིང་ངེ་འཛིན་སྤོང་བའི་འདུ་བྱེད་དང་ལྡན་པའི་རྫུ་འཕྲུལ་གྱི་རྐང་པ་\",\n \"འདུན་པར་བྱ་བ་\",\n \"འདུལ་བ་\",\n \"འདུལ་བ་དང་འགལ་བ་\",\n \"འདུལ་བ་ཕྲན་ཚེགས་\",\n \"འདུལ་བ་འཛིན་པ་\",\n \"འདུལ་བ་རྣམ་པར་འབྱེད་པ་\",\n \"འདུལ་བའི་གཞི་\",\n \"འདུལ་ཞིང་འཛུད་\",\n \"འདུས་ཏེ་བསྡོངས་ནས་\",\n \"འདུས་པ་\",\n \"འདུས་པ་ལ་ལྟ་བ་\",\n \"འདུས་པའི་ནང་ན་འདུག་ཀྱང་རུང་\",\n \"འདུས་བ་\",\n \"འདུས་བཟང་\",\n \"འདུས་བྱས་\",\n \"འདུས་བྱས་སྟོང་པ་ཉིད་\",\n \"འདུས་མ་བྱས་\",\n \"འདུས་མ་བྱས་སྟོང་པ་ཉིད་\",\n \"འདུས་ཤིང་ཟ་བ་\",\n \"འདེགས་པ\",\n \"འདེགས་པ་\",\n \"འདོད་གཞོ་\",\n \"འདོད་ཆགས་\",\n \"འདོད་ཆགས་ཆེ་བའམ་བདོ་བ་\",\n \"འདོད་ཆགས་དང་བྲལ་ནས་རྣམ་པར་གྲོལ་བར་འགྱུར་རོ་\",\n \"འདོད་ཆགས་དང་བྲལ་པའི་ས་\",\n \"འདོད་ཆགས་དང་བྲལ་བ་ལ་གནས་པ་\",\n \"འདོད་ཆགས་དང་བྲལ་བའི་མཆོག་ཆོས་ལ་སྐྱབས་སུ་མཆིའོ་\",\n \"འདོད་ཆགས་སེལ་བ\",\n \"འདོད་ཆེན་\",\n \"འདོད་ཆེན་པོ་\",\n \"འདོད་དགུར་ལྡན་པ་\",\n \"འདོད་དྲན་དགྲ་\",\n \"འདོད་ན་\",\n \"འདོད་པ་\",\n \"འདོད་པ་\",\n \"འདོད་པ་ངན་པ་\",\n \"འདོད་པ་ཆུང་བ་\",\n \"འདོད་པ་དག་གིས་མ་གོས་པ་\",\n \"འདོད་པ་དག་ལས་དབེན་པ་སྡིག་པ་མི་དགེ་བའི་ཆོས་རྣམས་ལས་དབེན་པར་རྟོག་པ་དང་བཅས་པ་དཔྱོད་པ་དང་བཅས་པ་དབེན་པ་ལས་སྐྱེས་པའི་དགའ་བ་དང་དབེ་བ་ཅན་བསམ་གཏན་དང་པོ་རྫོགས་པར་བྱས་ཏེ་གནས་སོ་\",\n \"འདོད་པ་དང་ལྡན་པ་\",\n \"འདོད་པ་ན་སྤྱོད་པ་\",\n \"འདོད་པ་ན་སྤྱོད་པ་\",\n \"འདོད་པ་ནི་དྲི་ང་བ་\",\n \"འདོད་པ་ནི་རུལ་བ་ལྟ་བུ་\",\n \"འདོད་པ་རྣམས་ཀུན་ཏུ་འབར་བ་\",\n \"འདོད་པ་རྣམས་ནི་གསོད་པ་\",\n \"འདོད་པ་ལ་ཞེན་པ་\",\n \"འདོད་པ་ལ་འཆུམས་པ་\",\n \"འདོད་པ་ལ་འདུན་པ་\",\n \"འདོད་པ་ལ་འདོད་ཆགས་པ་\",\n \"འདོད་པ་ལས་འབྱིན་པ་ནི་བསྟང་སྙོམས་\",\n \"འདོད་པ་ལས་སྤགས་པ་\",\n \"འདོད་པའམ་སྡུག་པ་\",\n \"འདོད་པའམ་སྲེད་པའམ་དགའ་བ་\",\n \"འདོད་པའི་ཁམས་\",\n \"འདོད་པའི་ཁམས་སུ་གཏོགས་པ་\",\n \"འདོད་པའི་ཡོན་ཏན་ལྔ་\",\n \"འདོད་པའི་ཡོན་ཏན་ལྔ་འབྱོར་ཅིང་ལྡན་པར་གྱུར་བ་\",\n \"འདོད་པའི་ལྷ་\",\n \"འདོད་པར་བསྡུས་པ་\",\n \"འདོད་པས་ལོག་པར་གྱེམ་པ་སྤོང་བ་\",\n \"འདོད་རྒྱལ་\",\n \"འདོད་རྒྱལ་\",\n \"འདོན་པའམ་བརྗོད་པ་\",\n \"འདོམ་\",\n \"འདོམས་\",\n \"འདོམས་ཀྱི་སྦ་བ་སྦུབས་སུ་ནུབ་པ་\",\n \"འདོར་བ་\",\n \"འདོར་བའམ་སྤོང་བ་\",\n \"འདོར་བར་འགྱུར་བ་\",\n \"འདྲ་བ་\",\n \"འདྲིས་པ་\",\n \"འདྲིས་པ་\",\n \"འདྲིས་པ་\",\n \"འདྲུབས་སུ་བྱ་བའམ་སྐུད་རིས་\",\n \"འདྲེག་མཁན་གྱི་ལག་ཆ་\",\n \"འདྲེན་པ་\",\n \"འདྲེས་པ་\",\n \"འདྲེས་པ་\",\n \"འདྲེས་པ་\",\n \"འདྲེས་པའམ་ཐ་དད་པ་\",\n \"འདྲེས་པའམ་དབྱེ་བ་\",\n \"འདྲེས་པའམ་འཆོལ་བ་\",\n \"འདྲེས་པའི་ཚལ་\",\n \"འདྲེས་པར་གནས་པ་\",\n \"འདྲེས་པར་གྱུར་པ་\",\n \"འདྲོབ་སྐྱོང་\",\n \"འདྲོས་སྐྱོང་བུ་\",\n \"འཕགས་པ་་བཞེད་པ་འམ་དགྱེས་པ་\",\n \"འཕགས་པ་ཀུན་གྱིས་བཀུར་བའི་སྡེ་\",\n \"འཕགས་པ་གནས་བརྟན་པ་\",\n \"འཕགས་པ་གཤིན་རྗེ་སེལ་\",\n \"འཕགས་པ་ཐམས་ཅད་ཡོད་པར་སྨྲ་བ་\",\n \"འཕགས་པ་ཐོགས་མེད་\",\n \"འཕགས་པ་དཔའ་བོ་\",\n \"འཕགས་པ་རྒྱ་ཆེར་རོལ་པའི་ནང་ནས་གྲངས་དང་བརྩིས་འབྱུང་བའི་མིང་ལ་\",\n \"འཕགས་པ་ལྷ་\",\n \"འཕགས་པའམ་ཆ་བའམ་འཇུག་པ་\",\n \"འཕགས་པའི་གང་ཟག་རྣམས་ཀྱི་རྒྱལ་པོ་\",\n \"འཕགས་པའི་དགེ་འདུན་\",\n \"འཕགས་པའི་ནོར་བདུན་གྱི་མིང་ལ་\",\n \"འཕགས་པའི་བདེན་པ་བཞི་རྣམ་པ་བཅུ་དྲུག་ཏུ་ཕྱེ་བའི་མིང་ལ་\",\n \"འཕགས་པའི་བདེན་པ་རྣམས་བཟླས་པ་གཉིས་པ་སྟེ་བསྒོམ་པའི་ལམ་\",\n \"འཕགས་པའི་བདེན་པ་རྣམས་བཟླས་པ་གསུམ་པ་སྟེ་མི་སློབ་པའི་ལམ་\",\n \"འཕགས་པའི་བདེན་པ་རྣམས་བཟླས་པ་དང་པོ་སྟེ་མཐོང་བའི་ལམ་\",\n \"འཕགས་པའི་ཚོགས་\",\n \"འཕགས་པའི་རིགས་ཀྱིས་ཆོག་ཤེས་པ་\",\n \"འཕགས་པའི་ལམ་ཡན་ལག་བརྒྱད་པའི་མིང་ལ་\",\n \"འཕགས་མ་ཁྲོ་གཉེར་ཅན་\",\n \"འཕགས་མཆོག་\",\n \"འཕགས་ཡས་\",\n \"འཕགས་ཡས་\",\n \"འཕགས་སྐྱེས་པོ་\",\n \"འཕགས་སྐྱེས་པོ་\",\n \"འཕགས་སྐྱེས་པོ་\",\n \"འཕགས་སྡོང་པོ་བཀོད་པ་ལས་འབྱུང་བའི་གྲངས་ཀྱི་མིང་ལ་\",\n \"འཕང་དུ་དཔག་ཚད་\",\n \"འཕང་མདུང་\",\n \"འཕངས་པ་\",\n \"འཕངས་པ་\",\n \"འཕར་མ་པའམ་བང་ཆེན་པ\",\n \"འཕར་མ་པའམ་བང་ཆེན་པ་\",\n \"འཕེན་པའམ་ཤུགས་\",\n \"འཕེལ་བ་\",\n \"འཕེལ་བ་\",\n \"འཕེལ་བའམ་སོགས་པ་\",\n \"འཕེལ་བའམ་སྐྱེ་བ་\",\n \"འཕེལ་བའམ་སྐྱེས་པ་\",\n \"འཕེལ་བའི་བློ་གྲོས་\",\n \"འཕེལ་བར་བྱེད་པ་\",\n \"འཕེལ་བར་བྱེད་པའམ་རྒྱས་པར་བྱེད་པ་\",\n \"འཕེལ་ཞིང་རྒྱས་པ་དང་ཡངས་པར་འགྱུར་\",\n \"འཕོང་གི་སློབ་དཔོན་\",\n \"འཕོང་གི་སློབ་དཔོན་\",\n \"འཕོང་དཔྱད\",\n \"འཕྱ་བ་\",\n \"འཕྱ་བ་\",\n \"འཕྱ་བ་\",\n \"འཕྱང་\",\n \"འཕྱན་པའམ་འཁྱམ་པ་\",\n \"འཕྱར་བ་\",\n \"འཕྱིང་པ་\",\n \"འཕྱིང་པ་\",\n \"འཕྱིངས་པ་པ་\",\n \"འཕྱོས་པའམ་དྲག་པ་\",\n \"འཕྲ་བཀོད་པ་\",\n \"འཕྲད་ཡས་\",\n \"འཕྲད་ཡས་\",\n \"འཕྲལ་ལ་བོས་པ་\",\n \"འཕྲལ་ལམ་བློ་བུར་རམ་གྱིནའམ་འགྱུ་མེད་པར་འབྱུང་བ་\",\n \"འཕྲུལ་དགའ་\",\n \"འཕྲུལ་པ་པོའམ་འཕྲུལ་བྱེད་པ་\",\n \"འཕྲོ་ཡས་\",\n \"འཕྲོ་ཡས་\",\n \"འཕྲོག་པ་\",\n \"འཕྲོག་ཡས་\",\n \"འཕྲོག་ཡས་\",\n \"འཕྲོད་པའམ་འབྱོར་བ་\",\n \"འབད་དོ\",\n \"འབད་པ་\",\n \"འབད་པའམ་བརྩོན་པ་\",\n \"འབད་པའམ་རྩོལ་བ་\",\n \"འབབ་ཆུ་དྲག་པོའི་རྒྱུན་ལས་བཟློག་སྟེ་ལྷུང་བཟེད་ཀྱིས་ཆུ་མི་བཅུ་\",\n \"འབབ་ཆུའི་དོང་\",\n \"འབབ་བམ་ཉེ་འགྲོ་\",\n \"འབར་\",\n \"འབར་བ་\",\n \"འབར་བའམ་གཟི་བརྗིད་\",\n \"འབར་བའམ་གསར་བའམ་་སྦྱངས་པ་\",\n \"འབར་འབུར་རམ་མཐོ་དམན་\",\n \"འབལ་ལམ་འཐོག་\",\n \"འབིགས་\",\n \"འབིགས་བྱེད་\",\n \"འབུ་མཆུ་རྣོན་ཞེས་བྱ་བ་\",\n \"འབུང་བའམ་འདུ་བ་\",\n \"འབུམ་\",\n \"འབུམ་\",\n \"འབུལ་བའམ་གཏོད་\",\n \"འབུལ་བའམ་སྤོང་བ་\",\n \"འབུལ་ལོའམ་གོ་བར་བྱེད་དོ་\",\n \"འབེན་\",\n \"འབེར་བར་བྱེད་པ་ (འབེར་བ་)\",\n \"འབོབ་\",\n \"འབྱར་བ་\",\n \"འབྱིང་རྡུལ་\",\n \"འབྱིང་རྡུལ་ཆེན་པོ་\",\n \"འབྱིན་པ་པོའམ་འབྱིན་པར་བྱེད་པ་\",\n \"འབྱུང་ཁུངས་སམ་འབྱུང་གནས་\",\n \"འབྱུང་པོ་\",\n \"འབྱུང་བ་ཆེན་པོ་མཐུན་པར་སྒྲུབ་པ་\",\n \"འབྱུང་བ་དང་འཇིག་པ་ལ་སྲེད་པ་དང་བྲལ་བ་\",\n \"འབྱུང་བ་ལས་གྱུར་པའི་གཟུགས་\",\n \"འབྱུང་བའམ་འགྱུར་བ་\",\n \"འབྱུང་བའམ་འདས་པ་\",\n \"འབྱུང་བའམ་སྲིད་པ་\",\n \"འབྱུང་བའི་ཤེས་རབ་ཅན་\",\n \"འབྱུང་བར་དཀའ་བ་\",\n \"འབྱུང་བར་འོས་པའི་ཁམས་དྲུག་གི་མིང་ལ་\",\n \"འབྱེར་བའམ་འཇིག་\",\n \"འབྱོར་ཅིང་ལྡན་པར་གྱུར་པ་\",\n \"འབྱོར་པ་\",\n \"འབྱོར་བའམ་ཕུལ་བའམ་གཏད་པ་\",\n \"འབྱོར་འབྲེལ་\",\n \"འབྲ་གོའི་ཤིང་\",\n \"འབྲལ་བ་\",\n \"འབྲས་\",\n \"འབྲས་\",\n \"འབྲས་ཀྱི་ཚལ་\",\n \"འབྲས་གང་\",\n \"འབྲས་ཆན་གྱིས་ཚོད་མའམ་ཚོད་མས་འབྲས་ཆན་མི་དག་པ་\",\n \"འབྲས་ཐུག་པོ་ཆེ་\",\n \"འབྲས་བུ་\",\n \"འབྲས་བུ་\",\n \"འབྲས་བུ་ཆེ་\",\n \"འབྲས་བུ་དང་བཅས་པ་\",\n \"འབྲས་བུ་མེད་པ་\",\n \"འབྲས་བུ་རྣམ་པར་སྨིན་པ་ལ་རྨོངས་པ་\",\n \"འབྲས་བུ་ལ་རྒྱུ་བཏགས་པ་\",\n \"འབྲས་བུ་ལག་ཏུ་འོངས་པའམ་ཐོབ་པ\",\n \"འབྲས་བུ་ལྔའི་མིང་ལ་\",\n \"འབྲས་བུ་སྔ་ན་མེད་པ་\",\n \"འབྲས་བུ་སྔ་ན་ཡོད་པ་\",\n \"འབྲས་བུའམ་བྱ་བ་\",\n \"འབྲས་བུའི་གཏན་ཚིགས་\",\n \"འབྲས་བུའི་ཤིང་\",\n \"འབྲས་མེད་པའམ་མིག་ལོང་བའམ་མོ་ཤམ་\",\n \"འབྲས་ཟན་\",\n \"འབྲས་ཟན་\",\n \"འབྲས་ཡོས་\",\n \"འབྲི་བའམ་འགྲིབ་པ་\",\n \"འབྲིང་ངམ་བར་མ་\",\n \"འབྲུ་ནས་ཐ་དད་མི་བྱ་\",\n \"འབྲུ་མང་པོ་\",\n \"འབྲུ་མར་\",\n \"འབྲུ་མར་སྣོད་\",\n \"འབྲུག་གཡོས་\",\n \"འབྲུག་གི་སྒྲ་དབྱངས་\",\n \"འབྲུག་ཡས་\",\n \"འབྲུག་སྒྲ་\",\n \"འབྲུམ་བུ་\",\n \"འབྲུམ་བུ་ཕྲ་མོ་\",\n \"འབྲུའི་ཆང་\",\n \"འབྲུའི་ཆང་དང་སྦྱར་བའི་ཆང་མྱོས་པར་གྱུར་བ་འཐུང་བ་\",\n \"འབྲུའི་ཕུར་མ་ལྟར་མ་ཡིན་པ་\",\n \"འབྲེང་བ་\",\n \"འབྲེལ་པ་\",\n \"འབྲེལ་བ་\",\n \"འབྲེལ་བ་\",\n \"འབྲེལ་བ་\",\n \"འབྲེལ་བ་ནི་གཉིས་ལ་གནས་པ་\",\n \"འབྲེལ་བའི་གཏམ་གཏན་ལ་འབེབས་པ་\",\n \"འབྲོག་\",\n \"འབྲོག་དགོན་པ་\",\n \"འམ་རུང་\",\n \"འམ་སྟེ་དྲི་བའི་ཚིག་\",\n \"འཚང་འབྲུ་བ་\",\n \"འཚམ་པ་\",\n \"འཚམས་བཅད་པ་\",\n \"འཚམས་སྦྱོར་བ་\",\n \"འཚིག་པ་\",\n \"འཚིར་བའམ་གནོད་པར་བྱེད་པ་\",\n \"འཚེ་བའམ་ཅོ་འདྲི་བ་\",\n \"འཚེ་བའམ་མཐོ་འཚམ་པ\",\n \"འཚེ་བྱེད་\",\n \"འཚེད་དུ་འཇུག་པ་\",\n \"འཚེད་དོ\",\n \"འཚོ་ཆས་\",\n \"འཚོ་བ་ཉམས་པ་\",\n \"འཚོ་བའི་བར་དུ་བཅང་བ་\",\n \"འཚོ་བའི་ཡོ་བྱད་\",\n \"འཚོ་བའི་སྲོག་གི་ཕྱིར་ཡང་\",\n \"འཚོག་ཆས་དང་ཡོ་བྱད་ཀྱི་མིང་ལ་\",\n \"འཚོའམ་\",\n \"འཚོའོ་\",\n \"འཛངས་པའམ་ཤེས་པ་\",\n \"འཛམ་བུ་གླིང་\",\n \"འཛམ་བུ་ཞས་བྱ་བ་\",\n \"འཛམ་བུའི་ཚལ་\",\n \"འཛམ་བུའི་རྒྱལ་མཚན་\",\n \"འཛིན་ཁྲི་དང་བཅས་པ་\",\n \"འཛིན་པ་\",\n \"འཛིན་ཡས་\",\n \"འཛིན་ཡས་\",\n \"འཛིན་སྟངས་\",\n \"འཛུབ་མོས་ག་ག་ཚིལ་བྱེད་པ་\",\n \"འཛེགས་སམ་ཞོན་པ་\",\n \"འཛེམ་པའམ་ངོ་ཚ་བ་\",\n \"འུག་པ་\",\n \"འུག་མིག་པོ་\",\n \"འུར་འུར་\",\n \"འུར་རྡོ་\",\n \"འུར་སྒྲ་\",\n \"འོ་ཐུག་\",\n \"འོ་མ་\",\n \"འོ་མ་འཛག་\",\n \"འོག་\",\n \"འོག་གཞི་མེད་པའི་ས་ཕྱོགས་སུ་ལྷུང་བཟེད་མི་བཞག་\",\n \"འོག་མ་\",\n \"འོག་མ་ལ་མལ་\",\n \"འོག་མིན་གཟུགས་མཐའ\",\n \"འོང་\",\n \"འོང་བ་དང་འགྲོ་བ་\",\n \"འོང་བ་དང་འགྲོ་བར་གྱུར་བ་\",\n \"འོངས་པ་\",\n \"འོད་\",\n \"འོད་ཀྱི་མིང་ལ་\",\n \"འོད་ཀྱིས་ཡོངས་སུ་ཁྱབ་པའམ་རྒྱས་པར་གྱུར་པ་༽་\",\n \"འོད་གསལ་\",\n \"འོད་ཅན་གཞོན་ནུར་གྱུར་པ་\",\n \"འོད་ཆུང་\",\n \"འོད་ཆེན་པོའི་དཀྱིལ་འཁོར་བཀོད་པའི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་\",\n \"འོད་དཔག་མེད་\",\n \"འོད་དེ་བྱུང་ནས་\",\n \"འོད་དྲི་མ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"འོད་དྲི་མ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"འོད་བསྲུང་\",\n \"འོད་བསྲུང་བའི་སྡེ་\",\n \"འོད་བྱེད་\",\n \"འོད་བྱེད་གྲུབ་\",\n \"འོད་བྱེད་པ་\",\n \"འོད་བྱེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"འོད་མ་\",\n \"འོད་མཐའ་ཡས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"འོད་མཛེས་\",\n \"འོད་མཛེས་\",\n \"འོད་མཛེས་ཆེན་པོ་\",\n \"འོད་མའི་ཚལ་\",\n \"འོད་ཟེར་\",\n \"འོད་ཟེར་གྱི་སྣང་བ་དེས་རེག་པ་\",\n \"འོད་ཟེར་རབ་ཏུ་འགྱེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"འོད་འཕྲོ་བ་ཅན་\",\n \"འོད་འཕྲོ་མིག་བདག་\",\n \"འོད་འབར་ཞིང་འཕྲོ་བའི་དཔལ་གྱི་སྙིང་པོ་\",\n \"འོད་ལྡན་\",\n \"འོད་སྲུང\",\n \"འོད་སྲུངས་རྫོགས་བྱེད\",\n \"འོན་ཀྱང་ཁ་ཅིག་ནི་\",\n \"འོན་ཀྱང་ངམ་དེ་ལྟར་ཡང་དེ་ལྟ་ལ་\",\n \"འོན་ཀྱང་ངམ་མོན་ཀྱི་\",\n \"འོན་ཏེའམ་དེ་སྟེ་\",\n \"འོན་པ་\",\n \"འོབས་\",\n \"འོབས་\",\n \"འོར་གཅིག་་གམ་ཐོང་ཞིག་\",\n \"འོལ་ཕྱོད་\",\n \"འོལ་ཕྱོད་\",\n \"འོལ་བ་\",\n \"ཡ་ཕུབས་\",\n \"ཡ་མ་བརླ་\",\n \"ཡ་མཚན་ཅན་\",\n \"ཡ་མཚན་ཆེ་\",\n \"ཡ་ཟ་མ་ཟུག་\",\n \"ཡ་ལ་ (ཡ་ལད་)\",\n \"ཡ་ལད་\",\n \"ཡ་ལད་བགོས་\",\n \"ཡང་གཞི་ནས་བསླང་སྟེ་མགུ་བར་བྱ་བ་\",\n \"ཡང་ང་བ་མི་སྤོངས་པ་\",\n \"ཡང་ངམ་གཞན་ཡང་\",\n \"ཡང་ངམ་ཕྱིར་ཞིང་\",\n \"ཡང་ངམ་མོད་ཀྱི་\",\n \"ཡང་ཐོག་\",\n \"ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་མཐོང་ངོ་\",\n \"ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་མཐོང་བས་སྐྱོ་བར་འགྱུར་རོ་\",\n \"ཡང་དག་པ་ཉིད་ཀྱི་མཐའ་ལ་གནས་པ་\",\n \"ཡང་དག་པ་ཉིད་དུ་ངེས་པའི་ཕུང་པོ་\",\n \"ཡང་དག་པའི་ངག་\",\n \"ཡང་དག་པའི་ཏིང་ངེ་འཛིན་\",\n \"ཡང་དག་པའི་དྲན་པ་\",\n \"ཡང་དག་པའི་བསྔགས་བརྗོད་པ་\",\n \"ཡང་དག་པའི་མཐའ་\",\n \"ཡང་དག་པའི་འཚོ་བ་\",\n \"ཡང་དག་པའི་རྟོགས་པ་\",\n \"ཡང་དག་པའི་རྩོལ་བ་\",\n \"ཡང་དག་པའི་ལས་ཀྱི་མཐའ་\",\n \"ཡང་དག་པའི་ལྟ་བ་\",\n \"ཡང་དག་པའི་ཤེས་པ་\",\n \"ཡང་དག་པའི་ཤེས་པས་སེམས་ཤིན་ཏུ་རྣམ་པར་གྲོལ་བ་\",\n \"ཡང་དག་པར་གཞོལ་བའམ་ཡང་དག་པར་འདུ་བ་\",\n \"ཡང་དག་པར་གཟེངས་བསྟོད་\",\n \"ཡང་དག་པར་དགའ་བར་འགྱུར་བ་\",\n \"ཡང་དག་པར་བཟུང་ནས་གནས་པ་\",\n \"ཡང་དག་པར་བསྐུལ་བ་\",\n \"ཡང་དག་པར་བསྟེན་པ་\",\n \"ཡང་དག་པར་བླངས་པའམ་ཡིད་དམ་\",\n \"ཡང་དག་པར་བླངས་ལས་བྱུང་བ་\",\n \"ཡང་དག་པར་མཐོང་བ་\",\n \"ཡང་དག་པར་ཚིམ་པར་བྱེད་པ་\",\n \"ཡང་དག་པར་འགྲུབ་པའམ་འཐོབ་པ་\",\n \"ཡང་དག་པར་འགྲུབ་པའམ་འཐོབ་པ་\",\n \"ཡང་དག་པར་འཇོམས་པའམ་སེལ་བ་\",\n \"ཡང་དག་པར་འཇོམས་པའམ་སྤོང་བ་\",\n \"ཡང་དག་པར་འཕགས་པ་\",\n \"ཡང་དག་པར་འཕགས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཡང་དག་པར་འཛིན་དུ་འཇུག་གམ་བྱེད་དུ་འཇུག་\",\n \"ཡང་དག་པར་རབ་ཏུ་དགའ་བར་བྱེད་པ་\",\n \"ཡང་དག་པར་རབ་ཏུ་འཇོག་གོ་\",\n \"ཡང་དག་པར་རབ་ཏུ་སྟོན་པ་\",\n \"ཡང་དག་པར་རྟོགས་པ་\",\n \"ཡང་དག་པར་རྟོགས་པའམ་ཡང་དག་པར་ཁོང་དུ་ཆུད་པ་\",\n \"ཡང་དག་པར་རྫོགས་པའི་སངས་རྒྱས་\",\n \"ཡང་དག་པར་ལོག་པ་ཐམས་ཅད་ཡང་ཏག་པར་སེལ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཡང་དག་པར་ལྡན་པའི་ལུང་\",\n \"ཡང་དག་པར་ཤེས་པར་གྱིས་ཤིག་\",\n \"ཡང་དག་པར་སྡུག་པར་འགྱུར་བའམ་ཆགས་པར་འགྱུར་བ་\",\n \"ཡང་དག་པར་སྡུད་པར་བྱེད་པ་\",\n \"ཡང་དག་པར་སྡོམ་པ་\",\n \"ཡང་དག་པར་སྡོམ་པ་\",\n \"ཡང་དག་པར་སྡོམ་པ་ལེགས\",\n \"ཡང་དག་པར་སྤོང་བ་བཞིའི་མིང་ལ་\",\n \"ཡང་དག་ཕུལ་\",\n \"ཡང་དང་ཡང་དུའམ་ཕྱིར་ཞིང་\",\n \"ཡང་དེའི་ཚེ་ཞེསའམ་དེའི་ཚེ་\",\n \"ཡང་ན་\",\n \"ཡང་ན་\",\n \"ཡང་ཕྱི་མོ་\",\n \"ཡང་བ་\",\n \"ཡང་བ་\",\n \"ཡང་བ་\",\n \"ཡང་མེས་པོ་\",\n \"ཡང་ཞིང་གཡོ་བ་ཉིད\",\n \"ཡང་འདོད་པའམ་ཕྱིར་ཞིང་འདོད་པའམ་མང་དུ་འདོད་པ\",\n \"ཡང་འབྱུང་བའི་སྲེད་པ་\",\n \"ཡང་འཛུམ་པར་མཛད་དོ་\",\n \"ཡང་ཡང་ཟ་བ་\",\n \"ཡང་སོས་\",\n \"ཡང་སློབ་\",\n \"ཡངས་པ་\",\n \"ཡངས་པ་ཅན་\",\n \"ཡངས་པའམ་རྒྱ་ཆེ་བ་\",\n \"ཡངས་པའི་སྤྱན་\",\n \"ཡད་ཡོད་\",\n \"ཡད་ཡོད་\",\n \"ཡན་ལག་\",\n \"ཡན་ལག་ཏུ་ཟུག་པ་\",\n \"ཡན་ལག་དང་ཉིད་ལག་རྣམས་གཏུབས་ཀྱང་མི་ཆོམས་པའམ་མི་བརྟུལ་པའམ་མི་རྫི་བ་\",\n \"ཡན་ལག་དྲུག་དང་ལྡན་པ་\",\n \"ཡན་ལག་བདུན་ལེགས་པར་གནས་པ་\",\n \"ཡན་ལག་མཆོག་གི་གཟུགས་དང་ལྡན་པ་\",\n \"ཡན་ལག་མཆོག་གི་སྟོབས་\",\n \"ཡན་ལག་ལྔས་ཕྱག་བྱས་\",\n \"ཡབ་དང་སྲས་མཇལ་བའི་མདོ\",\n \"ཡབ་བམ་ཇོ་ཇོ་\",\n \"ཡམ་བསྲེག་ཤིང་\",\n \"ཡམས་ཀྱི་ནད་\",\n \"ཡར་སྐྱེས་བ་\",\n \"ཡལ་\",\n \"ཡལ་ག་དང་ལོ་མ་དང་འདབ་མ་དང་ཁྲི་ཤིང་དང་ཤུན་ལྤགས་ཀྱི་སྐྱོན་དང་བྲལ་བ་\",\n \"ཡལ་ཡལ་\",\n \"ཡལ་ཡོལ་\",\n \"ཡལ་ཡོལ་\",\n \"ཡི་གེ་\",\n \"ཡི་གེ་\",\n \"ཡི་གེ་དང་བྲལ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཡི་གེ་པ་\",\n \"ཡི་གེ་མཉམ་པར་འགོད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཡི་གེ་འབྲི་བ་\",\n \"ཡི་གེ་ཤིང་\",\n \"ཡི་གེ་སློབ་པའི་གྲ་ཁང་\",\n \"ཡི་གེའི་ཚོགས་\",\n \"ཡི་དམ་ལ་བརྟན་པ་\",\n \"ཡི་དྭགས\",\n \"ཡི་དྭགས་\",\n \"ཡི་དྭགས་ཀྱི་ཡུལ་\",\n \"ཡི་བསད་པ་\",\n \"ཡི་བསད་པའམ་སྒྱིད་ལུག་པ་\",\n \"ཡིད་ཀྱི་ཁམས་\",\n \"ཡིད་ཀྱི་ཉེས་པ་སྤྱོད་པ་གསུམ་\",\n \"ཡིད་ཀྱི་ལས་ཐམས་ཅད་ཡེ་ཤེས་ཀྱི་སྔོན་དུ་འགྲོ་ཞིན་ཡེ་ཤེས་ཀྱི་རྗེས་སུ་འབྲང་བ་\",\n \"ཡིད་ཀྱི་སྐྱེ་མཆེད་\",\n \"ཡིད་ཀྱིས་བརྟགས་པ་\",\n \"ཡིད་ཀྱིས་ལེགས་པར་སྤྱོད་པ་གསུམ་\",\n \"ཡིད་གཉིས་\",\n \"ཡིད་གཞུངས་པ་\",\n \"ཡིད་གྱི་དབང་པོ་\",\n \"ཡིད་གྱི་རྣམ་པར་ཤེས་པ་\",\n \"ཡིད་གྱི་རྣམ་པར་ཤེས་པའི་ཁམས་\",\n \"ཡིད་ཆེས་པའམ་ཡིད་བརྟན་པ་\",\n \"ཡིད་ཆེས་པར་བྱ་བའི་ཕྱིར་\",\n \"ཡིད་དགའ་བའི་ལུས་ཤིན་ཏུ་སྦྱངས་པར་འགྱུར་རོ་\",\n \"ཡིད་དང་འཐད་པ་\",\n \"ཡིད་དུ་འཐད་པ་\",\n \"ཡིད་དུ་འོང་བ་\",\n \"ཡིད་དུ་འོང་བ་\",\n \"ཡིད་དུ་འོང་བའི་སྒྲ་སེང་གེའི་རྒྱལ་མཚན་\",\n \"ཡིད་བདེ་བའི་དབང་པོ་\",\n \"ཡིད་བརྟན་པའམ་ཡིད་གཅུགས་པ་\",\n \"ཡིད་མི་བདེ་བ་\",\n \"ཡིད་མི་བདེ་བའི་དབང་པོ་\",\n \"ཡིད་འཕྱོ་\",\n \"ཡིད་འབྱུང་བ་\",\n \"ཡིད་འབྱུང་བ་\",\n \"ཡིད་འབྱུང་བའམ་སྐྱོ་བ་\",\n \"ཡིད་ཡལ་\",\n \"ཡིད་ཡལ་\",\n \"ཡིད་རང་བ\",\n \"ཡིད་རྣམ་པར་དག་པ(ཡིད་རྣམ་པར་དང་བ)\",\n \"ཡིད་ལ་གཅགས་པ་\",\n \"ཡིད་ལ་བརྗོད་པའམ་རྟོགས་པ་\",\n \"ཡིད་ལ་བསམས་པ་བཞིན་རེ་བ་ཡོངས་སུ་རྫོགས་པ་\",\n \"ཡིད་ལ་བྱེད་པ་\",\n \"ཡིད་ལ་སེམས་པའི་ཟས་\",\n \"ཡུ་ཐི་ཀ\",\n \"ཡུང་བ\",\n \"ཡུང་མ་\",\n \"ཡུངས་ཀར་\",\n \"ཡུངས་མར་\",\n \"ཡུངས་མར་\",\n \"ཡུད་ཅེས་སམ་སྤྱོད་ཅེས་\",\n \"ཡུད་ཅེས་སམ་སྤྱོད་ཅེས་\",\n \"ཡུད་ཅེས་སམ་སྤྱོད་ཅེས་\",\n \"ཡུད་ཙམ་\",\n \"ཡུན་ཇི་སྲིད་ནས་\",\n \"ཡུན་རིང་པོ་\",\n \"ཡུན་རིང་པོ་\",\n \"ཡུན་རིང་པོ་ནས་སྒོམ་པས་གདུངས་པ་\",\n \"ཡུན་རིང་པོའམ་རྒྱ་ཆེ་བའམ་ཡངས་པ་\",\n \"ཡུམ་མམ་ཟ་ཟ\",\n \"ཡུར་པོ་ཆེ་\",\n \"ཡུར་ཕྲན་\",\n \"ཡུལ་\",\n \"ཡུལ་\",\n \"ཡུལ་ཀ་ཤའི་ཀའི་རས་ཕྲན་\",\n \"ཡུལ་གྱི་མི་\",\n \"ཡུལ་ངན་ནམ་རྨུས་པ་\",\n \"ཡུལ་ཐམས་ཅད་སྣང་བའི་རྒྱན་སྤོབས་པ་སྟོན་པའི་སྙིང་པོ་\",\n \"ཡུལ་དཔོན (བདག་པོ)\",\n \"ཡུལ་ན་མི་གནས་\",\n \"ཡུལ་བརྟགས་པས་གཟུགས་སུ་རུང་བ་\",\n \"ཡུལ་མ་ག་དྷཱ\",\n \"ཡུལ་འཁོར་\",\n \"ཡུལ་འཁོར་གྱི་བསོད་སྙོམས་འབྲས་བུ་ཡོད་པར་ཟ་བ་\",\n \"ཡུལ་འཁོར་བསྲུངས་\",\n \"ཡུལ་འཁོར་སྐྱོང་གིས་ཞུས་པ་\",\n \"ཡུལ་འཁོར་སྲུང་\",\n \"ཡུལ་རྒྱུ་བ་\",\n \"ཡུལ་ལས་འདས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཡུལ་ཤེས་པ་\",\n \"ཡུལ་སྲུངས\",\n \"ཡེ་ཤེས་ཀྱི་ཕ་རོལ་ཏུ་ཕྱིན་པ་\",\n \"ཡེ་ཤེས་ཀྱི་ཚོགས་ཚད་མེད་པ་ཡོངས་སུ་འཚོལ་བ་ལ་མཁས་པ་\",\n \"ཡེ་ཤེས་ཀྱི་སྔོན་དུ་འགྲོ་བས་མངོན་པར་འདུ་མི་བྱེད་ཅིང་ཁ་ན་མ་ཐོ་བ་མེད་པར་་ཚེ་རབས་ཐམས་ཅད་དུ་མངོན་དུ་ཞུགས་པ་རྣམས་\",\n \"ཡེ་ཤེས་ཀྱི་སྙིང་པོ་\",\n \"ཡེ་ཤེས་ཆེན་མོ་གླུ་དབྱངས་\",\n \"ཡེ་ཤེས་ཏོག་ཅེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཡེ་ཤེས་དཔག་ཏུ་མེད་པ་\",\n \"ཡེ་ཤེས་བཞི་\",\n \"ཡེ་ཤེས་བྱང་ཆུབ་སེམས་དཔའ་ཐམས་ཅད་ཀྱིས་ཡང་དག་པར་མནོས་པ་\",\n \"ཡེ་ཤེས་བྱིན་\",\n \"ཡེ་ཤེས་མཐའ་ཡས་པ་\",\n \"ཡེ་ཤེས་འབྱོར་བའི་སྙིང་པོ་\",\n \"ཡེ་ཤེས་འོད་\",\n \"ཡེ་ཤེས་ཡོངས་སུ་རྫོགས་པ་\",\n \"ཡེ་ཤེས་ལ་དབང་བ་\",\n \"ཡེ་ཤེས་ལ་འཇུག་པ་\",\n \"ཡེ་ཤེས་ལ་རྟོན་པར་བྱའི་རྣམ་ཤེས་ལ་རྟོན་པར་མི་བྱ་\",\n \"ཡེ་ཤེས་ལྡན་\",\n \"ཡེ་ཤེས་སྒྲོན་མ་\",\n \"ཡེ་ཤེས་སྙིང་པོ་\",\n \"ཡོ་བྱད་\",\n \"ཡོ་བྱད་ (འཚོག་ཆས་)\",\n \"ཡོ་བྱད་ཀྱི་གོས་\",\n \"ཡོ་བྱད་གང་ཡང་རུང་བའི་བར་དུ་སྦྱིན་པར་བྱེད\",\n \"ཡོ་བྱད་བསྙུངས་པ་\",\n \"ཡོ་བྱད་ལ་དབང་བ་\",\n \"ཡོང་སུ་དཀྲིས་པ་\",\n \"ཡོང་སུ་བསྔོ་བའི་ཆོ་ག་ཤེས་པ་རྣམས་\",\n \"ཡོང་སུ་བྱང་བར་བྱས་པའམ་འདྲིས་པར་བྱ་བ་\",\n \"ཡོངས་འདུས་བརྟོལ་\",\n \"ཡོངས་སུ་གཅོད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཡོངས་སུ་གཏུགས་པའམ་འཕྱོས་པ་\",\n \"ཡོངས་སུ་གཏོང་བའམ་འདོར་བ་\",\n \"ཡོངས་སུ་གདུང་བ་དག་ལས་རྣམ་པར་གྲོལ་བ་\",\n \"ཡོངས་སུ་གདུང་བ་མེད་པ་\",\n \"ཡོངས་སུ་གདུང་བའམ་ཚ་བ་\",\n \"ཡོངས་སུ་གྱུར་བ་\",\n \"ཡོངས་སུ་གྲུབ་པའི་མཚན་ཉིད་\",\n \"ཡོངས་སུ་གྲུབ་པའི་མཚན་ཉིད་\",\n \"ཡོངས་སུ་ཉམས་པ་\",\n \"ཡོངས་སུ་ཐར་བར་བྱ་བའམ་ཡོངས་སུ་གྲོལ་བ་\",\n \"ཡོངས་སུ་དག་པ་\",\n \"ཡོངས་སུ་དག་པ་\",\n \"ཡོངས་སུ་བགོས་པ་\",\n \"ཡོངས་སུ་བསྐོར་བ་\",\n \"ཡོངས་སུ་བསྐོར་བ་དང་བསྒྱུར་བ་\",\n \"ཡོངས་སུ་བསྐོར་བ་དང་བསྒྱུར་བ་\",\n \"ཡོངས་སུ་བྱང་བ་\",\n \"ཡོངས་སུ་མ་གྲུབ་པའི་མཚན་ཉིད་\",\n \"ཡོངས་སུ་མགུ་བ་\",\n \"ཡོངས་སུ་མཉེན་པར་བྱེད་པ་\",\n \"ཡོངས་སུ་མྱ་ངན་ལས་འདས་པ་\",\n \"ཡོངས་སུ་མྱ་ངན་ལས་འདས་པ་ཆེན་པོ་\",\n \"ཡོངས་སུ་ཚིམ་པར་བྱེད་ཡ་\",\n \"ཡོངས་སུ་ཚོལ་བ་\",\n \"ཡོངས་སུ་ཞེན་པ་\",\n \"ཡོངས་སུ་འགོག་པ་\",\n \"ཡོངས་སུ་འགྱུར་བ་\",\n \"ཡོངས་སུ་འདྲེན་པ་\",\n \"ཡོངས་སུ་འཛིན་པའམ་འཀག་པ་\",\n \"ཡོངས་སུ་ཡི་མི་ཆད་\",\n \"ཡོངས་སུ་རྒོད་བྱེད་\",\n \"ཡོངས་སུ་རྒྱས་པར་འགེངས་པའམ་ཡོངས་སུ་ཁྱབ་པ་\",\n \"ཡོངས་སུ་རྒྱས་བྱ་\",\n \"ཡོངས་སུ་རྟོག་པ་ལས་བྱུང་བ་\",\n \"ཡོངས་སུ་རྫོགས་པ་\",\n \"ཡོངས་སུ་ཤེས་པ་\",\n \"ཡོངས་སུ་སྐྱོབ་པ་\",\n \"ཡོངས་སུ་སྐྱོབ་པར་བྱེད་པ་\",\n \"ཡོངས་སུ་སྤངས་པ་\",\n \"ཡོངས་སུ་སྤྱད་པའམ་ཟོས་པ\",\n \"ཡོངས་སུ་སྤྱོད་\",\n \"ཡོངས་སུ་སྦྱངས་པའི་གཞི་\",\n \"ཡོངས་སུ་སྦྱངས་བ་བྱས་པའམ་བྱི་དོར་བྱས་པ་\",\n \"ཡོད་པ་\",\n \"ཡོད་པ་ཆེན་པ་\",\n \"ཡོད་པ་དང་ཕྲད་ན་སྐྱེས་བུའི་དབང་པོ་རྣམས་ཀྱི་བློ་སྐྱེ་བ་ནི་མངོན་སུམ་མོ་\",\n \"ཡོད་པའམ་ལུང་ཕོག་པ་༽་\",\n \"ཡོན་ཏན་\",\n \"ཡོན་ཏན་\",\n \"ཡོན་ཏན་ཐམས་ཅད་ཀྱི་ཚོགས་སུ་འགྱུར་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཡོན་ཏན་བློ་གྲོས་\",\n \"ཡོན་ཏན་འོད་\",\n \"ཡོན་ཏན་རྒྱ་མཚོ་\",\n \"ཡོན་ཏན་སྣ་ཚོགས་ཀྱི་མིང་ལ་\",\n \"ཡོན་པོ་\",\n \"ཡོན་པོ་\",\n \"ཡོན་ཡོངས་སུ་སྦྱོང་བ་ཆེན་པོ་\",\n \"ཡོལ་ཁང་\",\n \"ཡོལ་བ་\",\n \"ཡོས་\",\n \"ཡོས་\",\n \"ར་\",\n \"ར་\",\n \"ར་\",\n \"ར་གན་\",\n \"ར་བ་\",\n \"ར་བ་\",\n \"ར་ལུག་གི་བྲེས\",\n \"རག་ལུས་པའམ་འབྲེལ་བའམ་བགེགས་སུ་གྱུར་བ་\",\n \"རགས་ལའམ་ཆེ་ལོང་ངམ་ཆེ་བའམ་སྦོམ་པ་\",\n \"རང་གི་ངང་གིས་འགག་པ་\",\n \"རང་གི་ངོ་བོའམ་རང་བཞིན་\",\n \"རང་གི་དོན་རྗེས་སུ་ཐོབ་པ་\",\n \"རང་གི་དོན་སྦྱོར་བ་ལ་རྗེས་སུ་བརྩོན་པ་\",\n \"རང་གི་ཕྱོགས་\",\n \"རང་གི་མཚན་ཉིད་\",\n \"རང་གི་མཚན་ཉིད་སྟོང་པ་ཉིད་\",\n \"རང་གི་ཚད་མ་\",\n \"རང་གི་རིགས་ཀྱི་དཔེ་ཉེ་བར་སྦྱར་བའི་མཚན་ཉིད་\",\n \"རང་ཐག་\",\n \"རང་དབང་\",\n \"རང་དབང་ཅན་\",\n \"རང་བཞིན་\",\n \"རང་བཞིན་གྱི་གཏན་ཚིགས་\",\n \"རང་བཞིན་ཅན་\",\n \"རང་བཞིན་དུ་འདུག་པ་\",\n \"རང་བཞིན་སྟོང་པ་ཉིད་\",\n \"རང་འདུ་བ་\",\n \"རང་རིག་པ་\",\n \"རང་རྟ་\",\n \"རང་ལ་མ་གྲུབ་པ་\",\n \"རང་སངས་རྒྱས་ཀྱི་ཐེག་པ་\",\n \"རང་སངས་རྒྱས་ཀྱི་ཐེག་པ་མངོན་པར་རྟོགས་པའི་རིགས་\",\n \"རང་སངས་རྒྱས་རིམ་པའི་མིང་ལ་\",\n \"རངས་པ་སྐྱེས་\",\n \"རངས་བྱེད་ཀྱི་བུ་བརྟུལ་ཞུགས་ཅན་\",\n \"རངས་བྱེད་ཀྱི་བུ་ལྷག་སྤྱོད་\",\n \"རབ་\",\n \"རབ་ཀྱི་མཐར་ཕྱིན་པའི་བསམ་གཏན་\",\n \"རབ་ཀྱི་རྩལ་གྱིས་རྣམ་པར་གནོན་པ་\",\n \"རབ་གནོན་གྱི་སྟོབས་\",\n \"རབ་ཏུ་\",\n \"རབ་ཏུ་\",\n \"རབ་ཏུ་གནས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རབ་ཏུ་གཞག་པའམ་ཕྱེ་བ་\",\n \"རབ་ཏུ་གཡོས\",\n \"རབ་ཏུ་གཤེགས་པའམ་བསྩལ་བ་\",\n \"རབ་ཏུ་གྲུབ་པའམ་གྲགས་པ་\",\n \"རབ་ཏུ་ཆེམ་ཆེམ་\",\n \"རབ་ཏུ་ཉེ་བ་\",\n \"རབ་ཏུ་ཏེ་བོར་རབ་ཏུ་\",\n \"རབ་ཏུ་དགའ་བ་\",\n \"རབ་ཏུ་དགའ་བ་\",\n \"རབ་ཏུ་དགའ་བ་\",\n \"རབ་ཏུ་དགའ་བ་ལ་དགའ་བ་སྐྱེའོ་\",\n \"རབ་ཏུ་དབེན་པ་ལས་སྐྱེས་པ་\",\n \"རབ་ཏུ་དུལ་བ་\",\n \"རབ་ཏུ་ཕྱེ་བའམ་རབ་ཏུ་བཞག་པའམ་བརྗོད་པ་\",\n \"རབ་ཏུ་བཏིང་བ་\",\n \"རབ་ཏུ་བཞག་པ་\",\n \"རབ་ཏུ་བརྟན་པར་བྱེད་\",\n \"རབ་ཏུ་བསྔགས་པ་\",\n \"རབ་ཏུ་བསྟོད་པ་\",\n \"རབ་ཏུ་བྱུང་བ་\",\n \"རབ་ཏུ་བྱུང་བའི་གཞི་\",\n \"རབ་ཏུ་བྱེད���པའི་རྐང་པ་\",\n \"རབ་ཏུ་མང་པོ་\",\n \"རབ་ཏུ་ཚ་བ་\",\n \"རབ་ཏུ་ཞི་བ་རྣམ་པར་གདོན་མི་ཟ་བའི་ཆོ་་འཕྲུལ་བསྟན་པ་\",\n \"རབ་ཏུ་ཞུག་པའམ་བྱིང་བ་\",\n \"རབ་ཏུ་ཟག་\",\n \"རབ་ཏུ་འཁྲུགས་\",\n \"རབ་ཏུ་འགུལ་\",\n \"རབ་ཏུ་འཇིག་པ་\",\n \"རབ་ཏུ་འཇོམས་པ་\",\n \"རབ་ཏུ་འདུད་པ་\",\n \"རབ་ཏུ་འཕྱང་བ་\",\n \"རབ་ཏུ་འབར་\",\n \"རབ་ཏུ་འབྱེད་དོའམ་རབ་ཏུ་འཇོག་གོ་རབ་ཏུ་བསྐྱེད་དོ་\",\n \"རབ་ཏུ་འུར་འུར་\",\n \"རབ་ཏུ་རྟོག་པ་\",\n \"རབ་ཏུ་ལྡེག་\",\n \"རབ་ཏུ་སིམ་པ་\",\n \"རབ་ཏུ་སྐྱེ་བ་\",\n \"རབ་ཏུ་སྒྲ་སྒྲགས་\",\n \"རབ་ཏུ་སྒྲ་སྒྲགས་ཆེན་པོ་\",\n \"རབ་ཏུ་སྟོན་པ་\",\n \"རབ་ཏུ་སྤངས་པ་\",\n \"རབ་ཏུ་སྤྱངས་པ་\",\n \"རབ་ཏུ་སྦྱིན་པའི་འོས་སུ་གྱུར་བ་\",\n \"རབ་བཀྲམ\",\n \"རབ་བཀྲམ་ཆེན་པ་\",\n \"རབ་བསྔགས་\",\n \"རབ་མཆོག་\",\n \"རབ་མཛེས་\",\n \"རབ་འཇོམས་\",\n \"རབ་འབྱོར་\",\n \"རབ་ཡངས་\",\n \"རབ་རིབ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རབ་རིབ་མེད་པར་བྱེད་པ་\",\n \"རབས་ཆད་པ་\",\n \"རམ་ཕྱིས་\",\n \"རམས་\",\n \"རལ་གྲི་\",\n \"རལ་གྲི་ཀྱོག་པོ་ཐོགས་པ་\",\n \"རལ་གྲི་དགུ་པོ་\",\n \"རལ་གྲི་དགུ་པོ་\",\n \"རལ་གྲི་པ་\",\n \"རལ་གྲི་སོ་ལྟ་བུ་\",\n \"རལ་གྲིའི་ཐབས་\",\n \"རལ་གྲིའི་སོ་\",\n \"རལ་པ་གཅིག་མ་\",\n \"རལ་པ་འཕྱང་\",\n \"རལ་བུ་འབྲེག་པའི་དུས་སྟོན་\",\n \"རས་\",\n \"རས་གོས་\",\n \"རས་གོས་\",\n \"རས་བཅོས་བུ་\",\n \"རས་བལ་གྱི་སྟན་\",\n \"རས་མ་སྣོད་\",\n \"རས་ཡུག་ཆེན་\",\n \"རས་ཡུག་ཕྲན་\",\n \"རས་སམ་གོས་\",\n \"རི་\",\n \"རི་ཁྲོད་\",\n \"རི་ཁྲོད་དམ་ཚང་ཚིང་\",\n \"རི་ཁྲོད་པ་\",\n \"རི་དགས་\",\n \"རི་དགས་ཀྱི་གནས་\",\n \"རི་དགས་འཛིན་གྱི་མ་\",\n \"རི་ཕུག་\",\n \"རི་བོང་\",\n \"རི་བོང་རྡུལ་\",\n \"རི་བྱི་\",\n \"རི་བྲགས་སམ་རི་འོར་གྱི་ཕྱོགས་\",\n \"རི་མོ་མཁན་\",\n \"རི་མོར་བྱ་བའམ་རིན་པོ་ཆེར་བྱ་བ་\",\n \"རི་མོར་བྱ་བའི་རྣམ་པའི་མིང་ལ་\",\n \"རི་མོར་བྱེད་པ་་\",\n \"རི་ཞོལ་\",\n \"རི་འོར་བ་\",\n \"རི་རབ་ཀྱི་བང་རིམ་\",\n \"རི་རྩ་\",\n \"རི་ལ་ཡང་མ་ཐོགས་པར་འགྲོ་\",\n \"རི་ལས་ཐལ་བའི་ཉི་མ་བཞིན་དུ་བསྙེན་པ་\",\n \"རི་སུལ་\",\n \"རི་སྐེགས་\",\n \"རིག་པ་\",\n \"རིག་པ་དང་ཞབས་སུ་ལྡན་པ་\",\n \"རིག་པ་པོ་\",\n \"རིག་པ་བྱ་བ་\",\n \"རིག་པའི་གནས་བཅུ་བརྒྱད་ཀྱི་མིང་ལ་\",\n \"རིག་པའི་གནས་ལྔའི་མིང་ལ་\",\n \"རིག་པར་བྱེད་པ་\",\n \"རིག་བྱེད་ཀློག་ཏུ་འཇུག་\",\n \"རིག་སྔགས་\",\n \"རིག་སྔགས་འཆང་\",\n \"རིག་སྡོམ་\",\n \"རིག་སྡོམ་\",\n \"རིགས་ཀྱི་ནང་ན་རྒན་རབས་ལ་རི་མོར་བྱེད་པ་\",\n \"རིགས་ཀྱི་ས་\",\n \"རིགས་དམའ་བ་\",\n \"རིགས་ནས་རིགས་སུ་སྐྱེ་བ་\",\n \"རིགས་པ་\",\n \"རིགས་པ་\",\n \"རིགས་པའམ་འབྱོར་བའམ་ལྡན་པ་\",\n \"རིགས་པར་ཞུགས་པ་\",\n \"རིགས་པར་སྤོབས་པ་\",\n \"རིགས་བཙུན་པ་\",\n \"རིགས་བཞི་\",\n \"རིགས་མཐུན་པ་\",\n \"རིགས་མཐོ་བ་\",\n \"རིགས་མི་མཐུན་པ་\",\n \"རིགས་མེད་\",\n \"རིགས་མེད་པ་\",\n \"རིགས་ཚོགས་པའི་ནང་ན་འདུག་ཀྱང་རུང་\",\n \"རིགས་ལྔའི་མིང་ལ\",\n \"རིང་དུ་དབུགས་ཕྱུང་ན་རིང་དུ་དབུགས་ཕྱུང་ངོ་སྙམ་དུ་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"རིང་དུ་བསྐོས་པ་\",\n \"རིང་དུ་སོང་བ་\",\n \"རིང་པོ་\",\n \"རིང་བའམ་ཐུང་བ་སྐབས་དང་སྦྱར་\",\n \"རིན་ཆས་ཉོས་པ་\",\n \"རིན་ཆེན་ཀུན་ཏུ་འཕགས་\",\n \"རིན་ཆེན་གཙུག་ཏོར་ཅན་\",\n \"རིན་ཆེན་ཆར་འབེབས་\",\n \"རིན་ཆེན་ཕྱག་རྒྱ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རིན་ཆེན་མཐའ་ཡས་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རིན་ཆེན་འབྱུང་ལྡན་\",\n \"རིན་ཆེན་འོད་བཞིན་དུ་ཀུན་ཏུ་གཟེར་གཏོང་\",\n \"རིན་ཆེན་ཡལ་གའི་ལྗོན་པའི་འོད་\",\n \"རིན་ཆེན་རྒྱལ་མཚན་\",\n \"རིན་ཆེན་རྩེགས་པ་\",\n \"རིན་ཆེན་སྒྲོན་མ་\",\n \"རིན་ཐང་\",\n \"རིན་དུ་རྗེས་སུ་འབྲང་བ་\",\n \"རིན་པོ་ཆེ་ཁ་དོག་མཐའ་ཡས་\",\n \"རིན་པོ་ཆེ་དང་ནོར་བུ་དང་གསེར་དངུལ་ལ་སོགས་པའི་མིང་ལ་\",\n \"རིན་པོ་ཆེ་དཔལ་གྱི་སྙིང་པོ་\",\n \"རིན་པོ་ཆེ་ཕྲོགས་པ་\",\n \"རིན་པོ་ཆེ་བརྒྱ་བྱིན་ཐོགས་པ་\",\n \"རིན་པོ་ཆེ་མཐོན་ཀ་ཆེན་པོ་\",\n \"རིན་པོ་ཆེ་མེ་མདོག\",\n \"རིན་པོ་ཆེ་འཛམ་བུ་ཆུ་བོའི་གསེར་\",\n \"རིན་པོ་ཆེ་ལ་རེག་པ་\",\n \"རིན་པོ་ཆེ་སྣ་བདུན་དང་ལྡན་པ་\",\n \"རིན་པོ་ཆེའི་ཏོག་\",\n \"རིན་པོ་ཆེའི་ཏོག་\",\n \"རིན་པོ་ཆེའི་བྱ་རུ་\",\n \"རིན་པོ་ཆེའི་རྩེ་མོ་\",\n \"རིན་པོ་ཆེའི་སྒྲོམ་\",\n \"རིན་པོ་ཆེའི་སྙིང་པོ་\",\n \"རིན་པོ་ཆེར་སྨོས་པ་\",\n \"རིམ་གྱིས་འཕྲོག་པའམ་རྐུ་བ་\",\n \"རིམ་གྲོ་\",\n \"རིམ་གྲོ་བྱ་བ་བླ་ན་མེད་པ་\",\n \"རིམ་གྲོའི་གནས་\",\n \"རིམ་དང་ཅིག་ཅར་\",\n \"རིམ་པ་\",\n \"རིམ་པ་གཉིས་སམ་གསུམ་བརྩིགས་པ་\",\n \"རིམ་པ་གཞན་དུ་སྦྱར་བ་\",\n \"རིམ་པར་ཕྱེ་བ་\",\n \"རིམས་\",\n \"རིམས་ཀྱིས་\",\n \"རིམས་དྲག་པོ་\",\n \"རིམས་ནད་མེད་པ་\",\n \"རིམས་མི་བཟད་པ་\",\n \"རིའམ་རི་བོ་\",\n \"རིའི་མིང་ལ་\",\n \"རིའི་རྒྱལ་པོ་རི་རབ་\",\n \"རིའི་སྲས་མོ་\",\n \"རིལ་གྱིས་སམ་རླིངས་ཀྱིས་སམ་མ་ལུས་པར་འཕྲོག་པ་\",\n \"རིལ་པོར་འཛིན་པ་\",\n \"རིལ་བ་\",\n \"རིལ་བ་ཞབས་ཚགས་ཅན་\",\n \"རིལ་བ་སྤྱི་བླུགས་\",\n \"རིལ་བ་སྤྱི་བླུགས་\",\n \"རིལ་བ་སྤྱི་བླུགས་\",\n \"རིལ་ཚགས་\",\n \"རིས་མཐུན་པ་\",\n \"རིས་མཐུན་པར་འཕེན་པ་\",\n \"རུ་རྟ་\",\n \"རུ་ཤིང་ལྟར་འཛིན་པའམ་ཆེད་ཆེར་འཛིན་པ་\",\n \"རུ་སྐྱ་འཛིན་པ་\",\n \"རུང་བ་\",\n \"རུང་བ་\",\n \"རུས་གོང་གི་འདུ་ཤེས་\",\n \"རུས་ཆགས་ཀྱིས་བསྲུངས་པ་\",\n \"རུས་པ་\",\n \"རུས་པ་ལ་ཟུག་པ་\",\n \"རུས་སྦལ་\",\n \"རུས་སྦལ་གི་རྒྱབ་འདྲ་བ་རྩུབ་པ་\",\n \"རེ་བ་\",\n \"རེ་བ་ཐམས་ཅད་ཡོངས་སུ་སྐོང་བ་\",\n \"རེ་བར་བྱ་བའམ་འདོད་པར་བྱ་བའམ་ཤེས་པར་བྱ་བ་\",\n \"རེ་ཞིག་གནས་བཅའ་བ་\",\n \"རེ་ཞིག་གམ་དེ་སྲིད་\",\n \"རེ་རེ་ལས་མ་ཡིན་ནམ་རྣམ་པ་གཅིག་ཏུ་མ་ཡིན་\",\n \"རེག་ན་བདེ་བ་\",\n \"རེག་པ་\",\n \"རེག་པ་\",\n \"རེག་པའི་ཟས་\",\n \"རེག་པས་གཟུགས་སུ་རུང་བ་\",\n \"རེག་བྱ་\",\n \"རེག་བྱའི་ཁམས་\",\n \"རེག་བྱའི་སྐྱེ་མཆེད་\",\n \"རེངས་བྱེད་\",\n \"རེས་འགའ་འབྱུང་བ་ཞེའམ་ལན་འགའ་འབྱུང་བའི་ཕྱིར་\",\n \"རོ་\",\n \"རོ་ཉེ་\",\n \"རོ་བྲོ་བ་མེད་པ་\",\n \"རོ་བྲོ་བའི་མཆོག་དང་ལྡན་པ་\",\n \"རོ་མྱགས་\",\n \"རོ་ལངས་\",\n \"རོ་སྟོད་སེང་གེའི་འདྲ་བ་\",\n \"རོའི་ཁམས་\",\n \"རོའི་སྐྱེ་མཆེད་\",\n \"རོལ་མོ་\",\n \"རོལ་མོའི་སྒྲ་\",\n \"རྐང་གཅིག་པ་\",\n \"རྐང་གཉིས་ཀྱི་མཆོག་སངས་རྒྱས་ལ་སྐྱབས་སུ་མཆིའོ་\",\n \"རྐང་གདུབ་\",\n \"རྐང་པ་\",\n \"རྐང་པ་\",\n \"རྐང་པ་བཀྲུ་བའི་ས་\",\n \"རྐང་པ་བཏེག་ན་སྤར་ཞེས་བྱེད་\",\n \"རྐང་པ་བཞག་ན་ནེམས་ཤེས་བྱེད་\",\n \"རྐང་པ་མི་དགུག་\",\n \"རྐང་པ་མི་བསྣོལ་\",\n \"རྐང་མཐིལ་\",\n \"རྐང་མི་གདང་\",\n \"རྐང་མིག་ཅན་\",\n \"རྐང་མེད་\",\n \"རྐང་འབམ་\",\n \"རྐང་འབམ་\",\n \"རྐང་རྒྱན་\",\n \"རྐང་རྒྱན་\",\n \"རྐང་རྟེན་\",\n \"རྐང་རྡུམ་དུ་མི་འགྱུར་\",\n \"རྐང་ལག་བཞི་ཡིས་ཕྱེ་བ་\",\n \"རྐང་ལག་འཁུམས་པ་\",\n \"རྐང་ལག་རྒྱུས་པ་\",\n \"རྐང་ཤུ་\",\n \"རྐན་\",\n \"རྐན་མི་ཏོག་\",\n \"རྐུ་ཐབས་སུ་གནས་པ་\",\n \"རྐུ་བར་བགྲང་བ་\",\n \"རྐུ་སེམས་ཀྱིས་\",\n \"རྐུན་མ་དང་ལྷན་ཅིག་འགྲོ་བ་\",\n \"རྐུབ་\",\n \"རྐུབ་\",\n \"རྐུབ་ཚོས་\",\n \"རྐུའམ་བརྐུར་བཅུག་པ་དང་མངགས་པས་ཀྱང་\",\n \"རྐེད་པ་\",\n \"རྐེད་པ་\",\n \"རྐེད་པ་གཞུའི་ཆང་བཟུང་ལྟར་ཕྲ་བ་\",\n \"རྐེད་འཆུ་\",\n \"རྐོ་མཁན་ནམ་ཚུད་མོ་མཁན་\",\n \"རྐྱང་པ་\",\n \"རྐྱལ་\",\n \"རྐྱེན་\",\n \"རྐྱེན་བཞིའི་མིང་ལ་\",\n \"རྒ་བ་\",\n \"རྒ་བའི་སྡུག་བསྔལ་\",\n \"རྒ་ཤི་\",\n \"རྒན་ཆེས་པ་\",\n \"རྒན་པོ་\",\n \"རྒན་པོ་འཁོགས་པ་\",\n \"རྒན་ཞུགས་\",\n \"རྒན་རིམས་\",\n \"རྒལ་དཀའ་བའམ་འདའ་བར་དཀའ་བ་\",\n \"རྒལ་བ(བརྒལ་བ)\",\n \"རྒལ་བ་\",\n \"རྒལ་བའམ་མཆོངས་\",\n \"རྒས་པའམ་རྙིང་པའམ་རྙིངས་རྒན་པོ་\",\n \"རྒུ་ལ་འབྲས་བུ་བཏགས་པ་\",\n \"རྒུན་ཆང་\",\n \"རྒུན་ཆུ་\",\n \"རྒུན་འབྲུམ་\",\n \"རྒོད་པ་\",\n \"རྒོད་བྱེད་\",\n \"རྒོད་ཡས་\",\n \"རྒོད་ཡས་\",\n \"རྒོལ་བ་\",\n \"རྒོལ་བ་བདག་ཉིད་ལ་མ་གྲུབ་པ་\",\n \"རྒོལ་བའམ་སྐུལ་བའམ་རྩོད་པ་\",\n \"རྒྱ་\",\n \"རྒྱ་ཅང་\",\n \"རྒྱ་ཆེ་བ་\",\n \"རྒྱ་ཆེན་པོ་ལ་མོས་པ་\",\n \"རྒྱ་ཆེར་ཡང་དག་པར་སྟན་པར་འགྱུར་\",\n \"རྒྱ་ཆེར་རབ་ཏུ་བསྟན་\",\n \"རྒྱ་ཆེར་རོལ་པ་\",\n \"རྒྱ་མཚོ་\",\n \"རྒྱ་མཚོ་ཆེན་པོ་ལྟ་བུའི་འོད་ཟབ་མོ་འཆང་\",\n \"རྒྱ་མཚོའི་ཀླུའི་རྒྱལ་པོས་ཞུས་པ་\",\n \"རྒྱ་མཚོའི་ཀློང་གྲོང་གི་སྒོའམ་རྟ་རྒོད་མའི་ཁ་\",\n \"རྒྱ་མཚོའི་གྲུ་བོ་ཆེ་\",\n \"རྒྱ་མཚོའི་ངོགས་ན་གནས་པ་རྣམས་ཀྱི་\",\n \"རྒྱ་མཚོའི་ཕྱག་རྒྱ་\",\n \"རྒྱ་མཚོའི་མཚན་གྱི་དཔྱད་\",\n \"རྒྱ་འདེབས་པ\",\n \"རྒྱ་རྟགས་\",\n \"རྒྱ་རྟགས་ཆེན་པོ་\",\n \"རྒྱ་ཤུག་གི་འབྲུ་\",\n \"རྒྱ་སྐྱེགས་\",\n \"རྒྱ་སྐྱེགས་རྣ་\",\n \"རྒྱ་སྟོབས་ཕྲག་བརྒྱ་ན་ཀུན་སྟོབས་ཞེས་བྱའོ་\",\n \"རྒྱ་སྤོས་\",\n \"རྒྱ་སྤོས་\",\n \"རྒྱ་སྤོས་\",\n \"རྒྱ་སྲན་\",\n \"རྒྱགས་པ་\",\n \"རྒྱགས་པའམ་དྲེག་པ་\",\n \"རྒྱང་\",\n \"རྒྱང་གྲགས་ཀྱི་བཞི་ཆར་མེད་པ་\",\n \"རྒྱང་ནས་ཕོག་པ་ (རྒྱང་མདས་འཕོག་པ)\",\n \"རྒྱང་རིང་བ་\",\n \"རྒྱང་རིང་བའམ་བསྐལ་བ་\",\n \"རྒྱད་ཡས་ (རྒྱས་ཡས་)\",\n \"རྒྱན་\",\n \"རྒྱན་གྱི་དབང་པོའི་འོད་\",\n \"རྒྱན་གྱི་རྣམ་པའི་མིང་ལ་\",\n \"རྒྱན་ཏ་ལ་འདབ་\",\n \"རྒྱན་དང་མེ་ཏོག་དང་འབྲས་བུ་སྣ་ཚོགས་ཀྱི་རྩེ་མོའི་ལོ་མ་དུད་པར་གྱུར་པའི་དཔག་བསམ་གྱི་ཞིང་དག་གིས་མཛེས་པར་བྱས་པའམ་བརྒྱན་པ་\",\n \"རྒྱན་ནེའུ་ལེ་ཅན་\",\n \"རྒྱན་ཟླ་གམ་\",\n \"རྒྱན་འགྱེད་པ་\",\n \"རྒྱན་འཕྲེང་ངམ་དོ་ཤལ་\",\n \"རྒྱན་རྩེ་གསུམ་པ་\",\n \"རྒྱན་ལ་རྩེག་པ་(རྒྱན་ལ་རྩེགས་པ་) (རྒྱན་ལ་རྩེ་པ་)\",\n \"རྒྱན་སྣ་ཚོགས་ཅན་\",\n \"རྒྱབ་\",\n \"རྒྱབ་ཀྱིས་ཕྱོགས་པར་གྱུར་བ་\",\n \"རྒྱབ་བརྟེན་\",\n \"རྒྱལ་\",\n \"རྒྱལ་\",\n \"རྒྱལ་ཆེན་ནམ་ཉ་བ་\",\n \"རྒྱལ་ཆེན་བཞིའི་རིས་\",\n \"རྒྱལ་པའམ་མིའི་བླ (མི་བདག)\",\n \"རྒྱལ་པོ་\",\n \"རྒྱལ་པོ་གཟུགས་ཅན་སྙིང་པོ་\",\n \"རྒྱལ་པོ་གསལ་རྒྱལ་\",\n \"རྒྱལ་པོ་དམག་བརྒྱ་པ་\",\n \"རྒྱལ་པོ་དམག་སྟོང་པ་\",\n \"རྒྱལ་པོ་ཕལ་གྱི་མིང་ལ་\",\n \"རྒྱལ་པོ་བཞུགས་པ་\",\n \"རྒྱལ་པོ་བུ་རམ་ཤིང་སྐྱེས\",\n \"རྒྱལ་པོ་མུ་ཁྱུད་མཐའ་ཡས་\",\n \"རྒྱལ་པོ་ཚངས་པས་བྱིན་\",\n \"རྒྱལ་པོ་རབ་སྣང་\",\n \"རྒྱལ་པོ་རྒྱལ་རིགས་ཀྱི་སྤྱི་བོ་ནས་དབང་བསྐུར་བ་\",\n \"རྒྱལ་པོ་ལ་གདམས་པ་\",\n \"རྒྱལ་པོ་ཤར་བའི་བུ་\",\n \"རྒྱལ་པོའི་ཁབ་\",\n \"རྒྱལ་པོའི་ཕོ་བྲང་དུ་ནུབ་མོ་འགྲོ་བ་\",\n \"རྒྱལ་པོའི་ཕོ་བྲང་འཁོར་\",\n \"རྒྱལ་པོའི་ཕོ་བྲང་འཁོར་གྱི་ནང་ན་འདུག་ཀྱང་རུང་\",\n \"རྒྱལ་པོའི་སྲིད་དམ་ཐབས་\",\n \"རྒྱལ་པོས་བཀྲབས་པ་\",\n \"རྒྱལ་ཕྲན་\",\n \"རྒྱལ་བ་\",\n \"རྒྱལ་བ་སྦྱིན་\",\n \"རྒྱལ་བའི་གཞི་\",\n \"རྒྱལ་བའི་ཐུགས་ཀྱི་སྲས་\",\n \"རྒྱལ་བའི་བློ་གྲོས་\",\n \"རྒྱལ་བའི་མྱུ་གུ་\",\n \"རྒྱལ་བར་བྱེད་\",\n \"རྒྱལ་བུ་རྒྱལ་བྱེད་ཀྱི་ཚལ་\",\n \"རྒྱལ་བྱེད་ཚས་གནས་པའི་སྡེ་\",\n \"རྒྱལ་མཚན་\",\n \"རྒྱལ་མཚན་གྱི་རྩེ་མོ་ངེས་པར་སྒྲོགས་པ་ཞེས་བྱ་བའི་གྲངས་\",\n \"རྒྱལ་མཚན་ཐོགས་པ་\",\n \"རྒྱལ་མཚན་ནམ་གྲགས་པ་\",\n \"རྒྱལ་མཚན་རྩེ་མོའི་དཔུང་རྒྱན་\",\n \"རྒྱལ་མཚན་རྩེ་མོའི་དཔུང་རྒྱན་ཤེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྒྱལ་མོ་ག་གོན་\",\n \"རྒྱལ་ཚབ་\",\n \"རྒྱལ་རིགས་\",\n \"རྒྱལ་རིགས་ཤིང་སཱ་ལ་ཆེན་པོ་ལྟ་བུ་\",\n \"རྒྱལ་སྲས་\",\n \"རྒྱལ་སྲིད་ཀྱི་དབང་ཕྱུག་ལ་དབང་བྱེད་པར་འགྱུར་\",\n \"རྒྱལ་སྲིད་རྒྱས་པ་\",\n \"རྒྱས་པ་\",\n \"རྒྱས་པ་\",\n \"རྒྱས་པ་\",\n \"རྒྱས་པ་ལས་བྱུང་བ་\",\n \"རྒྱས་པའམ་ཁ་བྱེ་ (རྒྱས་སམ་ཁ་བྱེ་)\",\n \"རྒྱས་པའམ་ཁ་བྱེ་ (རྒྱས་སམ་ཁ་བྱེ་)\",\n \"རྒྱས་པའམ་གས་པའམ་གསལ་བ་\",\n \"རྒྱས་པའམ་འཕེལ་བ་\",\n \"རྒྱས་པའམ་ཡངས་པ་\",\n \"རྒྱས་པའམ་རྫོགས་པ་\",\n \"རྒྱས་པར་\",\n \"རྒྱས་པར་འགྱུར་བ་\",\n \"རྒྱས་བྱེད་\",\n \"རྒྱས་འཚོང་བ་\",\n \"རྒྱས་ཡས་\",\n \"རྒྱུ་\",\n \"རྒྱུ་\",\n \"རྒྱུ་\",\n \"རྒྱུ་གང་རྐྱེན་གང་\",\n \"རྒྱུ་དབང་ཕྲག་བརྒྱ་ན་རྫོགས་འཐོབ་ཞེས་བྱའོ་\",\n \"རྒྱུ་དྲུག་གི་མིང་ལ་\",\n \"རྒྱུ་བ་བཅད་པ་\",\n \"རྒྱུ་མ་\",\n \"རྒྱུ་མཐུན་པའི་འབྲས་བུ་\",\n \"རྒྱུ་རིག་\",\n \"རྒྱུ་རིག་ཆེན་པོ་\",\n \"རྒྱུ་རིག་འཛིན་ཕྲག་བརྒྱ་ན་ལག་བྱིན་ཞེས་བྱའོ་\",\n \"རྒྱུ་ལས་བྱུང་བ་\",\n \"རྒྱུ་ལྟར་སྣང་བ་\",\n \"རྒྱུ་ལྟར་སྣང་བ་\",\n \"རྒྱུ་སྐར་ཉི་ཤུ་རྩ་བརྒྱད་ཀྱི་མིང་ལ་\",\n \"རྒྱུག་\",\n \"རྒྱུག་མོས་བསྲུངས་པ་\",\n \"རྒྱུངས་པའམ་རྐང་\",\n \"རྒྱུད་གཅིག་ཏུ་གྱུར་བ་\",\n \"རྒྱུད་པ་\",\n \"རྒྱུད་བླ་མ་\",\n \"རྒྱུད་མང་བ་\",\n \"རྒྱུད་ཡས་\",\n \"རྒྱུད་ལ་ཡོད་པ་\",\n \"རྒྱུན་\",\n \"རྒྱུན་\",\n \"རྒྱུན་གྱི་རྗེས་སུ་སོང་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྒྱུན་ཆགས་\",\n \"རྒྱུན་ཆགས་པ་\",\n \"རྒྱུན་ཆགས་པ་\",\n \"རྒྱུན་ཆགས་པར་འཇུག་པ་\",\n \"རྒྱུན་ཆད་པ་\",\n \"རྒྱུན་དུ་བྱེད་པ་\",\n \"རྒྱུན་དུ་ཞུགས་པ་\",\n \"རྒྱུན་དུ་ཞུགས་པ་\",\n \"རྒྱུན་དུ་ཞུགས་པའི་ལམ་ལ་འཇུག་པ་\",\n \"རྒྱུན་ནུས་པའམ་ཆོག་པ་\",\n \"རྒྱུན་མི་གཅོད་པའམ་མི་གཏོང་བའམ་མི་ལྷོད་པ་\",\n \"རྒྱུན་མི་འཆད་པའི་འཁོར་ལོ་\",\n \"རྒྱུན་འཆད་པ་\",\n \"རྒྱུན་ཡང་དག་པར་བཅད་པ་\",\n \"རྒྱུན་ལས་བཟློག་པ་\",\n \"རྒྱུན་ཤེས་ཀྱི་བུ་\",\n \"རྒྱུའམ་གཏན་ཚིགས་\",\n \"རྒྱུའམ་བྱེད་པ་\",\n \"རྒྱུའི་གཙོ་བོ་\",\n \"རྒྱུའི་རྐྱེན་\",\n \"རྒྱུའི་རྒྱུན་\",\n \"རྒྱུར་བྱས་པའི་གཟུགས་\",\n \"རྒྱུར་ཡང་\",\n \"རྒྱུས་པ་\",\n \"རྔ་(རྔ་བོ་ཆེ)\",\n \"རྔ་ཁང་ (སྔ་ཁང་)\",\n \"རྔ་བོ་ཆེ་\",\n \"རྔ་མུ་ཀུན་ད་\",\n \"རྔ་མོ་\",\n \"རྔ་ཡབ་\",\n \"རྔ་ཡབ་གཞན་\",\n \"རྔ་ཡབ་ཐོགས་པ་\",\n \"རྔམ་པ་\",\n \"རྔའི་སྒྲ་\",\n \"རྔུལ་\",\n \"རྔུལ་གཟན་\",\n \"རྔུལ་གཟན་གྱི་གཟན་\",\n \"རྔུལ་ཅིང་དྲི་མ་ཆགས་ཆགས་སུ་བསྒྲུབས་པ་\",\n \"རྔེའུ་\",\n \"རྔོན་པ་\",\n \"རྗི་ཕྱོད་ཕྱོད་\",\n \"རྗེ་ངར་\",\n \"རྗེ་པོའམ་ཇོ་བོ་\",\n \"རྗེ་བཙུན་\",\n \"རྗེད་པ་\",\n \"རྗེའུ་རིགས་\",\n \"རྗེས་ཁོལ་གྱི་མཚན་ཉིད་ཀྱི་འབྲེལ་བ་\",\n \"རྗེས་མི་མཐུན་པའམ་ལུགས་སུ་མི་འབྱུང་བ་\",\n \"རྗེས་ལ་ཐོབ་པ་\",\n \"རྗེས་སུ་ཆགས་པ་\",\n \"རྗེས་སུ་ཆགས་པ་བདོ་བར་མ་བྱས་པ་\",\n \"རྗེས་སུ་དཔག་པ་\",\n \"རྗེས་སུ་དཔག་པར་བྱ་བ་ལ་ཡོད་པ་\",\n \"རྗེས་སུ་དྲན་པ་དྲུག་གི་མིང་ལ་\",\n \"རྗེས་སུ་དྲན་པ་བླ་ན་མེད་པ་\",\n \"རྗེས་སུ་བགྱིད་དོ་\",\n \"རྗེས་སུ་བཅས་པ་\",\n \"རྗེས་སུ་བཤད་པ་\",\n \"རྗེས་སུ་བསྟན་པ་\",\n \"རྗེས་སུ་བསྟན་པའི་ཆོ་འཕྲུལ་\",\n \"རྗེས་སུ་བྱེད་པའམ་རྗེས་སུ་འཇུག་པའམ་རྗེས་སུ་འགྱུར་བ་\",\n \"རྗེས་སུ་མཐུན་པ་\",\n \"རྗེས་སུ་མཐུན་པ་\",\n \"རྗེས་སུ་མཐུན་པ་\",\n \"རྗེས་སུ་མཐུན་པའམ་ལུགས་འབྱུང་བ་\",\n \"རྗེས་སུ་མཐུན་པའི་ཆོས་དྲུག་\",\n \"རྗེས་སུ་མཐུན་པའི་བཟོད་པ་\",\n \"རྗེས་སུ་མཐོང་བ་\",\n \"རྗེས་སུ་མི་མཐོང་བ་\",\n \"རྗེས་སུ་ཚོལ་བ་\",\n \"རྗེས་སུ་འགྲོ་བ་\",\n \"རྗེས་སུ་འགྲོ་བ་\",\n \"རྗེས་སུ་འགྲོ་བར་བྱས་བའམ་རྗེས་སུ་རྟོགས་པར་བྱས་བ་\",\n \"རྗེས་སུ་འཇུག་པ་\",\n \"རྗེས་སུ་འཇུག་པ་\",\n \"རྗེས་སུ་འཕྲོད་པ་\",\n \"རྗེས་སུ་འབྲང་བ་\",\n \"རྗེས་སུ་འབྲང་བའམ་རྗེས་སུ་སྙེགས་་པའམ་རྗེས་སུ་གཉེར་བ་\",\n \"རྗེས་སུ་འབྲེལ་བ་\",\n \"རྗེས་སུ་འབྲེལ་བ་\",\n \"རྗེས་སུ་འབྲེལ་བ་\",\n \"རྗེས་སུ་ཡོངས་སུ་སྐྱོང་\",\n \"རྗེས་སུ་རབ་ཏུ་རྟོག་པ་\",\n \"རྗེས་སུ་རྟོགས་པར་བྱ་\",\n \"རྗེས་སུ་རྟོགས་པར་ཤེས་པ་\",\n \"རྗེས་སུ་སོང་བའམ་རྗེས་སུ་ཞུགས་པའམ་རྗེས་སུ་མཐན་པ་\",\n \"རྗེས་སུ་སྐྱེས་པའམ་མཐུན་པར་སྐྱེས་པ་\",\n \"རྗེས་སུ་སྒྲུབ་པོ་\",\n \"རྗེས་སུ་སློབ་པོ་\",\n \"རྗོད་པར་བྱེད་པ་\",\n \"རྙིལ་\",\n \"རྙིས་པ་\",\n \"རྙེད་པ་\",\n \"རྙེད་པ་བླ་ན་མེད་པ་\",\n \"རྙེད་པ་ལས་རྙེད་པ་སྒྲུབ་པ་\",\n \"རྙེད་པར་དཀའ་བའམ་དཀོན་པ་\",\n \"རྙེད་པས་རྙེད་པར་བྱེད་འདོད་པ་\",\n \"རྙེད་སླ་བའམ་མོད་པ་\",\n \"རྙོག་པ་ཅན་\",\n \"རྙོག་པ་མེད་པ་\",\n \"རྙོང་ངམ་བྱུག་པའམ་སྐྱང་ནུལ་\",\n \"རྟ་\",\n \"རྟ་\",\n \"རྟ་\",\n \"རྟ་གཙང་གི་མཆོད་སྦྱིན་\",\n \"རྟ་ཅང་ཤེས་\",\n \"རྟ་ཐུལ་\",\n \"རྟ་དབྱངས\",\n \"རྟ་བབས་\",\n \"རྟ་མཆོག་རིན་པོ་ཆེ་\",\n \"རྟ་ཞོན་པ་ལ་ཆོས་མི་བཤད་\",\n \"རྟ་རྒོད་\",\n \"རྟ་རྒོད་མ་\",\n \"རྟ་རྣ་\",\n \"རྟ་ལ་གཞོན་པ་\",\n \"རྟག་ཏུ་བརྩོན་\",\n \"རྟག་ཏུ་མྱོས་\",\n \"རྟག་ཏུ་ཟླ་མཚན་ཟག་པ་\",\n \"རྟག་ཏུ་འགྲུས་ཆེ་བ་\",\n \"རྟག་ཏུ་རྒྱུན་མི་འཆད་པ་\",\n \"རྟག་ཏུ་རྗེས་སུ་འབྲང་བར་འགྱུར་\",\n \"རྟག་ཏུ་ལག་བརྐྱངས་\",\n \"རྟག་ཏུ་སྦྱོར་བ་\",\n \"རྟག་པ་\",\n \"རྟག་པ་ཡང་མ་ཡིན་མི་རྟག་པ་ཡང་མ་ཡིན་\",\n \"རྟག་པའི་རིམས་\",\n \"རྟག་པར་རྒྱུན་མི་འཆད་པར་སེམས་མཉམ་པར་བཞག་པ\",\n \"རྟག་རེ་འཁོར་\",\n \"རྟགས་མཚན་ཐོགས་པ་\",\n \"རྟའི་བྲེས་\",\n \"རྟའི་ཚོགས་\",\n \"རྟའི་རྒྱལ་པོ་སྤྲིན་གྱི་ཤུགས་ཅན་\",\n \"རྟིང་པ་\",\n \"རྟུན་ངེས་པའམ་གཟུ་ལུམས་ཅན་\",\n \"རྟུན་པ་\",\n \"རྟེན་\",\n \"རྟེན་ཅིང་འབྲེལ་བར་འབྱུང་བའི་ཡན་ལག་བཅུ་གཉིས་ཀྱི་མིང་ལ་\",\n \"རྟེན་དུ་གྱུར་བ་གཟུགས་སུ་ཡོད་པའི་ཕྱིར་རམ་གཞིག་ཏུ་རུང་བའི་ཕྱིར་\",\n \"རྟེན་པ་\",\n \"རྟེན་པ་བཞི་དང་ལྡན་པ་\",\n \"རྟེན་འཕྱེ་\",\n \"རྟེའུ་\",\n \"རྟོག་ཁང་\",\n \"རྟོག་གེ་\",\n \"རྟོག་གེ་\",\n \"རྟོག་གེ་བ་\",\n \"རྟོག་གེའི་སྤྱོད་ཡུལ་མ་ཡིན་པ་\",\n \"རྟོག་པ་\",\n \"རྟོག་པ་དང་བྲལ་བའི་མཚན་ཉིད་\",\n \"རྟོག་མི་ནུས་པ\",\n \"རྟོགས་པ་\",\n \"རྟོགས་པ་\",\n \"རྟོགས་པ་ཁོང་དུ་ཆུད་པ་\",\n \"རྟོགས་པའམ་ཁོང་དུ་ཆུད་པ་\",\n \"རྟོགས་པའི་བདག་ཉིད་\",\n \"རྟོགས་པར་ཁོང་དུ་ཆུད་པ་\",\n \"རྟོགས་པར་དཀའ་བ་\",\n \"རྟོགས་པར་བརྗོད་པའི་སྡེ་\",\n \"རྟོགས་པས་སྲིད་པའི་གཞི་ཐམས་ཅད་ཁོང་དུ་ཆུད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྟོགས་འགྲོ་\",\n \"རྟོགས་འགྲོ་\",\n \"རྟོགས་འགྲོ་\",\n \"རྟོགས་འགྲོ་ཆེན་པོ་\",\n \"རྟོགས་ཡས་\",\n \"རྟོགས་ཡས་\",\n \"རྟོན་པ (སྟོན་པ)\",\n \"རྟོན་པ་བཞིའི་མིང་ལ་\",\n \"རྡུང་བའམ་འཐུབ་པ་\",\n \"རྡུལ་\",\n \"རྡུལ་\",\n \"རྡུལ་ཕྲ་མོ་\",\n \"རྡུལ་ཕྲ་རབ་\",\n \"རྡུལ་བཟང་\",\n \"རྡུལ་མཛེས་མེ་ཏོག་རྒྱལ་མཚན་\",\n \"རྡུལ་མེད་ཅིང་རྡུལ་དང་བྲལ་བའི་ཚུལ་དང་ལྡན་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྡེག་གོ་འཚོག་གོ་གསོད་དོ་\",\n \"རྡེག་པའམ་བསྣུམ་པའམ་བཏབ་པ\",\n \"རྡོ་ཐལ་\",\n \"རྡོ་བ་\",\n \"རྡོ་བ་\",\n \"རྡོ་མཁན་\",\n \"རྡོ་རྗེ་\",\n \"རྡོ་རྗེ་ཁྲོ་གཉེར་ཅན་མ\",\n \"རྡོ་རྗེ་དབྱིངས་ཀྱི་དབང་ཕྱུག་མ་\",\n \"རྡོ་རྗེ་པད་མ་\",\n \"རྡོ་རྗེ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྡོ་རྗེ་རི་རབ་ཀྱི་རྩེ་མོའི་ཁང་པ་བརྩེགས་པའི་གཟུངས་\",\n \"རྡོ་རྗེ་རྩེ་གཅིག་\",\n \"རྡོ་རྗེ་ལྕགས་ཀྱུ་མ་\",\n \"རྡོ་རྗེ་ལྗོན་པ་ཟེར་བའི་རྒྱལ་མཚན་\",\n \"རྡོ་རྗེ་ལྟ་བུ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྡོ་རྗེ་ལྟར་སྲ་བའི་མིག་\",\n \"རྡོ་རྗེ་སེམས་དཔའི་ཡེ་ཤེས་ཀྱི་ཕྱག་རྒྱ་མ་\",\n \"རྡོ་རྗེ་སྲ་བ་\",\n \"རྡོ་རྗེའི་དཀྱིལ་འཁོར་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྡོ་རྗེའི་དབྱིག་\",\n \"རྡོ་རྗེའི་སྙིང་པོ་\",\n \"རྡོ་ལེབ་\",\n \"རྡོའི་རྒྱལ་པོ་སྟེ་གཡུ་\",\n \"རྡོའི་སྙིང་པ་\",\n \"རྡོལ་བ་\",\n \"རྣ་གཅིག་པ་\",\n \"རྣ་གྱོན་\",\n \"རྣ་ཆ་\",\n \"རྣ་ཆ་གདུབ་སྐོར་\",\n \"རྣ་བ་གླང་པོ་ཆེའི་ལྟ་བུ་\",\n \"རྣ་བ་དང་སྣ་དང་ལྕེ་དང་ལུས་དང་ཡིད་ཀྱི་འདུས་ཏེ་རེག་པ་ལས་བྱུང་བའི་ཚོར་བ་བདེ་བའང་རུང་སྡུག་བསྔལ་བའང་རུང་སྡུག་བསྔལ་ཡང་མ་ཡིན་བདེ་བའང་མ་ཡིན་པའང་རུང་\",\n \"རྣ་བ་ཕག་པའི་ལྟ་བུ་\",\n \"རྣ་བ་བ་ལང་གི་ལྟ་བུ་\",\n \"རྣ་བ་བོང་བུའི་ལྟ་བུ་\",\n \"རྣ་བ་རྟའི་ལྟ་བུ་\",\n \"རྣ་བ་སྤྲེའུའི་ལྟ་བུ་\",\n \"རྣ་བའི་ཁམས་\",\n \"རྣ་བའི་དབང་པོ་\",\n \"རྣ་བའི་དབང་པོ་\",\n \"རྣ་བའི་རྣམ་པར་ཤེས་པ་\",\n \"རྣ་བའི་རྣམ་པར་ཤེས་པའི་ཁམས་\",\n \"རྣ་བའི་སྐྱེ་མཆེད་\",\n \"རྣ་བླགས་པ་\",\n \"རྣ་མཆོག་སྦུ་གུ་འཆས་པ་ (རྣ་མཆོག་སྦུས་སུ་འཆས་པ་)\",\n \"རྣ་མེད་པ་\",\n \"རྣ་ལམ་དུ་གྲགས་པར་མི་འགྱུར་\",\n \"རྣ་ཤལ་\",\n \"རྣ་སྤགས་\",\n \"རྣག་\",\n \"རྣག་གཟན་\",\n \"རྣམ་ཐོས་ཀྱི་བུ་\",\n \"རྣམ་ཐོས་ཀྱི་བུ་\",\n \"རྣམ་པ་\",\n \"རྣམ་པ་གཅིག་ཏུ་གྱུར་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྣམ་པ་ཐམས་ཅད་ཀྱི་མཆོག་དང་ལྡན\",\n \"རྣམ་པ་ཐམས་ཅད་ཀྱི་མཆོག་དང་ལྡན་པ་\",\n \"རྣམ་པ་ཐམས་ཅད་ཀྱི་མཆོག་དང་ལྡན་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྣམ་པ་ཐམས་ཅད་དམ་ཡེ་\",\n \"རྣམ་པ་ཐམས་ཅད་དུ་ཐམས་ཅད་\",\n \"རྣམ་པ་ཐམས་ཅད་དུ་འོད་བྱེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྣམ་པ་དང་བཅས་པ་\",\n \"རྣམ་པ་དང་བཅས་ཡུལ་ཕྱོགས་དང་བཅས་གཞི་ཅི་ལས་འགྱུར་བ་དང་བཅས་པ་སྔོན་གྱི་གནས་རྗེས་སུ་དྲན་པ་\",\n \"རྣམ་པ་མེད་པ་\",\n \"རྣམ་པ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྣམ་པའམ་བྱད་བཞིན་ནམ་ཚུལ་\",\n \"རྣམ་པར་གཏོང་བ་ལ་དགའ་བ་\",\n \"རྣམ་པར་གནོན་པའམ་རྣམ་པར་སེལ་བ་\",\n \"རྣམ་པར་གཞག་པ་\",\n \"རྣམ་པར་གཞག་པ་\",\n \"རྣམ་པར་གཞག་པ་གདགས་པ་ཕྲག་བརྒྱ་ན་རྒྱུ་རིག་འཛིན་ཆེས་བྱའོ་\",\n \"རྣམ་པར་གཞག་པ་བསམ་གྱིས་མི་ཁྱབ་པ་\",\n \"རྣམ་པར་གཟིགས་\",\n \"རྣམ་པར་གཡེང་བྱེད་པའམ་རྣམ་པར་འཐོར་བར་བྱེད་པ\",\n \"རྣམ་པར་གསལ་བ་\",\n \"རྣམ་པར་གྱུར་བ་\",\n \"རྣམ་པར་གྲགས་པ་\",\n \"རྣམ་པར་གྲགས་པ་\",\n \"རྣམ་པར་གྲགས་པ་\",\n \"རྣམ་པར་གྲོལ་ན་བདག་རྣམ་པར་གྲོལ་ལོ་སྙམ་པའི་ཡེ་ཤེས་མཐོང་བ་འབྱུང་ངོ་\",\n \"རྣམ་པར་གྲོལ་བ་ཉམས་པ་མེད་པ་\",\n \"རྣམ་པར་གྲོལ་བའི་ཕུང་པོ་\",\n \"རྣམ་པར་གྲོལ་བའི་ཟླ་བ་\",\n \"རྣམ་པར་གྲོལ་བའི་ཡེ་ཤེས་མཐོང་བའི་ཕུང་པོ་\",\n \"རྣམ་པར་གྲོལ་བའི་ལམ་\",\n \"རྣམ་པར་གྲོལ་བར་འགྱུར་\",\n \"རྣམ་པར་ཉམས་པར་བྱས་པ་\",\n \"རྣམ་པར་ཉམས་པར་འགྱུར་བའམ་འགལ་བ་\",\n \"རྣམ་པར་ཐར་བ་བརྒྱད་ཀྱི་མིང་ལ་\",\n \"རྣམ་པར་ཐར་བའི་སྒོ་གསུམ་གྱི་མིང་ལ་\",\n \"རྣམ་པར་དང་པ་\",\n \"རྣམ་པར་དཔྱད་པར་བྱ་བ་\",\n \"རྣམ་པར་དབྱེ་བ་\",\n \"རྣམ་པར་དམར་བའི་འདུ་ཤེས་\",\n \"རྣམ་པར་དོར་བ་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྣམ་པར་ཕྱེ་སྟེ་ལུང་བསྟན་པ་\",\n \"རྣམ་པར་ཕྱེ་སྡེ་སྨྲ་བའི་སྡེ་\",\n \"རྣམ་པར་ཕྱེས་པ་\",\n \"རྣམ་པར་བཅིངས་པ་\",\n \"རྣམ་པར་བམ་པའི་འདུ་ཤེས་\",\n \"རྣམ་པར་བརྗོད་པ་\",\n \"རྣམ་པར་བརྡ་ཤེས་ལྡན་ཕྲག་བརྒྱ་ན་བརྡ་ཤེས་ཀུན་ཞེས་བྱའོ་\",\n \"རྣམ་པར་བཤད་པ་\",\n \"རྣམ་པར་བསྒྲུབ་པ་ཉེ་བར་གནས་པའི་མཚན་ཉིད་\",\n \"རྣམ་པར་མ་བརྟགས་པའི་སྐུ་མི་མངའ་བ་\",\n \"རྣམ་པར་མངོན་པར་སྒྲུབ་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྣམ་པར་མཛེས་པ་\",\n \"རྣམ་པར་མི་རྟོག་པ་\",\n \"རྣམ་པར་ཚིག་པའི་འདུ་ཤེས་\",\n \"རྣམ་པར་ཞི་བ་\",\n \"རྣམ་པར་ཟོས་བའི་འདུ་ཤེས་\",\n \"རྣམ་པར་འཁྲུག་པར་བྱེད་པའི་རླུང་གི་དཀྱིལ་འཁོར་\",\n \"རྣམ་པར་འགྱུར་བ་\",\n \"རྣམ་པར་འགྱེད་པ་\",\n \"རྣམ་པར་འགྲན་པ་\",\n \"རྣམ་པར་འགྲེལ་བ་\",\n \"རྣམ་པར་འཇུག་པའམ་རྣམ་པར་སྒོམ་པ་\",\n \"རྣམ་པར་འཇོག་\",\n \"རྣམ་པར་འཇོམས་\",\n \"རྣམ་པར་འཐག་པ་ཐམས་ཅད་བསྡུས་པ་\",\n \"རྣམ་པར་འཐོར་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྣམ་པར་འཐོར་བའམ་རྣམ་པར་བཀྲམ་པ་\",\n \"རྣམ་པར་འཐོར་བའི་འདུ་ཤེས་\",\n \"རྣམ་པར་འདུད་\",\n \"རྣམ་པར་འདྲེན་པ་\",\n \"རྣམ་པར་འཕེལ་བ་\",\n \"རྣམ་པར་འཕྲུལ་བའི་རྒྱལ་པོས་ཞུས་པ་\",\n \"རྣམ་པར་འཕྲུལ་བའི་སྟོབས་\",\n \"རྣམ་པར་འབུས་བཞིགས་པའི་འདུ་ཤེས་\",\n \"རྣམ་པར་འབྱེད་\",\n \"རྣམ་པར་འཚེ་བ་\",\n \"རྣམ་པར་འཚེ་བ་ལས་འབྱིན་པ་ནི་སྙིང་རྗེ་\",\n \"རྣམ་པར་ཡོངས་སུ་བསྒྱུར་བ་\",\n \"རྣམ་པར་རིག་པར་བྱ་བ་\",\n \"རྣམ་པར་རིག་པར་བྱེད་བ་\",\n \"རྣམ་པར་རིག་བྱེད་\",\n \"རྣམ་པར་རིག་བྱེད་མ་ཡིན་པ་\",\n \"རྣམ་པར་རོལ་པ་\",\n \"རྣམ་པར་རྒྱལ་པར་བྱས་པ་ལས་རྣམ་པར་རྒྱལ་བ་\",\n \"རྣམ་པར་རྒྱལ་བ་གནོན་པ་\",\n \"རྣམ་པར་རྒྱལ་བ་མངའ་བ་\",\n \"རྣམ་པར་རྒྱལ་བའི་ཁང་བ་\",\n \"རྣམ་པར་རྒྱལ་བྱེད་\",\n \"རྣམ་པར་རྒྱུ་བ་\",\n \"རྣམ་པར་རྟོག་པ་དང་བཅས་པ་\",\n \"རྣམ་པར་རྟོག་པ་དང་བཅས་པ་\",\n \"རྣམ་པར་རྟོག་པ་མེད་པ་\",\n \"རྣམ་པར་རྟོག་པ་མེད་པ་\",\n \"རྣམ་པར་རྟོགས་སོ་\",\n \"རྣམ་པར་རྣགས་པའི་འདུ་ཤེས་\",\n \"རྣམ་པར་ལྟ་བའམ་གཡས་གཡོན་དུ་ལྟ་བ་\",\n \"རྣམ་པར་ལྟུང་བྱེད་\",\n \"རྣམ་པར་ལྡན་པ་\",\n \"རྣམ་པར་ཤེས་པ་\",\n \"རྣམ་པར་ཤེས་པ་བདག་གི་ཡིན་\",\n \"རྣམ་པར་ཤེས་པ་ཙམ་དུ་སྨྲ་བ་\",\n \"རྣམ་པར་ཤེས་པ་རིགས་གཅིག་པ་\",\n \"རྣམ་པར་ཤེས་པ་ལ་བདག་གནས་\",\n \"རྣམ་པར་ཤེས་པའི་ཕུང་པོ\",\n \"རྣམ་པར་ཤེས་པའི་མིང་ལ་\",\n \"རྣམ་པར་ཤེས་པའི་ཟས་\",\n \"རྣམ་པར་ཤེས་པར་བྱེད་པའི་མཚན་ཉིད་\",\n \"རྣམ་པར་ཤེས་མཐའ་ཡས་སྐྱེ་མཆེད་\",\n \"རྣམ་པར་སྒྱུར་བ་་\",\n \"རྣམ་པར་སྒྲ་འབྱིན་\",\n \"རྣམ་པར་སྔོས་པའི་འདུ་ཤེས་\",\n \"རྣམ་པར་སྡང་བ་\",\n \"རྣམ་པར་སྣང་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"རྣམ་པར་སྣང་བར་བྱས་\",\n \"རྣམ་པར་སྣང་བྱེད་\",\n \"རྣམ་པར་སྣང་མཛད་\",\n \"རྣམ་པར་སྤངས་པ་\",\n \"རྣམ་པར་སྤྲོས་པ་མེད་པ་\",\n \"རྣམ་པར་སྤྲོས་པས་གོ་བའམ་ཞི་བ་ཏུ་བཤད་ན་གོ་བ་\",\n \"རྣམ་པར་སྨིན་པ་རྒྱ་ཆེ་བ་\",\n \"རྣམ་པར་སྨིན་པའི་འབྲས་བུ་\",\n \"རྣམ་པར་སྨིན་པའི་རྒྱུ་\",\n \"རྣམ་པར་སྨོད་པ་\",\n \"རྣམ་ཕྱོད་\",\n \"རྣམ་ཕྱོད་\",\n \"རྣམ་འགྲེལ་\",\n \"རྣམ་འབྱུང་\",\n \"རྣམ་འབྱུང་ཆེན་པོ་\",\n \"རྣམ་འབྱུང་ཕྲག་བརྒྱ་ན་དེའི་མཚན་ཉིད་ཅེས་བྱའོ་\",\n \"རྣམ་ཤེས་མཐའ་ཡས་སྐྱེ་མཆེད་\",\n \"རྣར་སྙན་པ་\",\n \"རྣལ་དུ་བཀོད་པ་\",\n \"རྣལ་དུ་བབ་བམ་འདུག་པ་\",\n \"རྣལ་འབྱོར་\",\n \"རྣལ་འབྱོར་\",\n \"རྣལ་འབྱོར་\",\n \"རྣལ་འབྱོར་བ་\",\n \"རྣལ་འབྱོར་སྤྱོད་པ་\",\n \"རྣལ་འབྱོར་སྤྱོད་པ་དང་རྣལ་འབྱོར་གྱི་ཡན་ལག་གྱི་མིང་ལ་\",\n \"རྣོན་པོ་\",\n \"རྦ་རླབས་དང་བཅས་པ་\",\n \"རྦོད་གཏོང་\",\n \"རྨ་\",\n \"རྨ་བྱ་\",\n \"རྨ་བྱ་\",\n \"རྨ་བྱ་\",\n \"རྨ་བྱའི་བརྟུལ་ཞུགས་ཅན་\",\n \"རྨ་ཤིང་\",\n \"རྨ་སར་པ་\",\n \"རྨད་ཁྱེར་བ་སྨྲ་བ་\",\n \"རྨད་དུ་བྱུང་བ་\",\n \"རྨད་དུ་བྱུང་བའི་ཆོས་ཀྱི་སྡེ་\",\n \"རྨའི་ཐན་ཀོར་\",\n \"རྨི་ལམ་\",\n \"རྨི་ལམ་དུ་རྨི་བའི་རྫས་\",\n \"རྨི་ལམ་ནའམ་རྨི་ལམ་དུ་རྨིས་པ་\",\n \"རྨི་ལྟས་ཀྱི་སྤྱད་\",\n \"རྨིག་པ་\",\n \"རྨུགས་པ་\",\n \"རྨུགས་བྱེད་\",\n \"རྨུགས་འཛིན་\",\n \"རྨུགས་ཤེས་སོང་བ་འམ་བློང་བ་\",\n \"རྨེལ་བ་(རྨལ་བ་)\",\n \"རྨོ་ཡས་\",\n \"རྨོ་ཡས་\",\n \"རྨོག་གམ་འཚེམ་ཞུ་\",\n \"རྨོངས་པའམ་རྨོང་བ་\",\n \"རྨོངས་བྱེད་\",\n \"རྨོའམ་རྨེད་\",\n \"རྨོས་ཡལ་\",\n \"རྨྱ་བ་\",\n \"རྩ་\",\n \"རྩ་བ་\",\n \"རྩ་བ་མེད་པ་\",\n \"རྩ་བ་འབྱུང་བ་ལ་འདུག་པ་\",\n \"རྩ་བའམ་ཐག་པ་\",\n \"རྩ་མཁྲིས་\",\n \"རྩ་མདུད་མེད་པ་\",\n \"རྩ་མི་མངོན་པ་\",\n \"རྩ་མུན་ཛ་དང་བལ་བ་ཛ་ལྟ་བུར་གྱུར་བ་\",\n \"རྩ་ལག་\",\n \"རྩངས་པ་\",\n \"རྩབ་མོ་\",\n \"རྩལ་ཆེན་\",\n \"རྩལ་པོ་ཆེ\",\n \"རྩལ་ལྡན་\",\n \"རྩི་\",\n \"རྩིག་པ་\",\n \"རྩིག་པ་ལ་ཡང་ཐད་ཀར་འགྲོ་ར་བ་ལ་ཡང་ཐད་ཀར་འགྲོ་\",\n \"རྩིག་པ་སྟུག་པོ་ལྟ་བུ་རགས་པ་\",\n \"རྩིབ་ལོགས་\",\n \"རྩིབ་ལོགས་སྒྱེས་\",\n \"རྩིབས་\",\n \"རྩིབས་ཀྱི་མུ་ཁྱུད་\",\n \"རྩིབས་ཆེན་\",\n \"རྩིབས་ལོགས་ཚ་བ་\",\n \"རྩིའི་གཞི་\",\n \"རྩིས་\",\n \"རྩིས་\",\n \"རྩིས་ཀྱི་བླ་\",\n \"རྩིས་པ་ཆེན་པོའམ་རྩིས་མཁན་ཆེན་པ་\",\n \"རྩིས་མཁན་\",\n \"རྩུབ་པ་\",\n \"རྩུབ་འགྱུར་ཚལ་\",\n \"རྩེ་བ་\",\n \"རྩེ་མོ་\",\n \"རྩེ་རྗེ་\",\n \"རྩེད་གྲོགས་ཀྱི་མ་མ་(རྩེད་འགྲོགས་ཀྱི་མ་མ་)\",\n \"རྩོག་བུས་མ་ཡིན་\",\n \"རྩོད་པ་\",\n \"རྩོད་པ་\",\n \"རྩོད་པ་ཞི་བར་བྱེད་པའི་ཆོས་བདུན་ལ་\",\n \"རྩོད་པ་སྨྲ་བ་\",\n \"རྩོད་པའི་གཞི་\",\n \"རྩོད་པའི་དུས་\",\n \"རྩོད་མེད་\",\n \"རྩོམ་པ་\",\n \"རྩྭ་ (རྩ་)\",\n \"རྩྭ་བཀྲམ་པ་ལྟ་བུར་འོས་པ་\",\n \"རྩྭ་འཚོང་\",\n \"རྫ་གཟོང་\",\n \"རྫ་མ་\",\n \"རྫ་མཁན\",\n \"རྫ་རྔ་\",\n \"རྫ་རྔ་ཁ་གཅིག་པ་\",\n \"རྫ་རྔ་ཆེན་པོ་\",\n \"རྫས་\",\n \"རྫས་\",\n \"རྫས་ལས་བྱུང་བའི་བསོད་ནམས་བྱ་བའི་དངོས་པོ་\",\n \"རྫི་\",\n \"རྫི་ཕྱོགས་\",\n \"རྫི་ཕྱོགས་མ་ཡིན་པ་\",\n \"རྫི་ཕྱོད་\",\n \"རྫི་ཕྱོད་\",\n \"རྫི་ཕྱོད་ཕྱོད་\",\n \"རྫི་མ་ནང་དུ་འཇུག་པ་\",\n \"རྫི་མ་སྟུག་པ་\",\n \"རྫིང་\",\n \"རྫུ་འཕྲུལ་གྱི་ཆོ་འཕྲུལ་\",\n \"རྫུ་འཕྲུལ་གྱི་བྱ་བ་ཤེས་པ་\",\n \"རྫུ་འཕྲུལ་གྱི་ཡུལ་རྣམ་པ་མང་པོ་མྱོང་བར་བྱེད་པ་ཡིན་\",\n \"རྫུ་འཕྲུལ་གྱི་རྐང་པ་བཞིའི་མིང་ལ་\",\n \"རྫུ་འཕྲུལ་ལ་དབང་བ་\",\n \"རྫུན་དུ་སྨྲ་བ་སྤོང་བ་\",\n \"རྫུས་ཏེ་སྐྱེ་བ་\",\n \"རྫོགས་འཐོབ་ཕྲག་བརྒྱ་ན་བགྲང་རྟོགས་ཞེས་བྱའོ་\",\n \"རྫོགས་ལྡན་གྱི་དུས་\",\n \"རྫོང་\",\n \"རྫོང་གི་ལྷ་མོ་\",\n \"རྫོང་ངམ་བགྲོད་དཀའ་བ་\",\n \"རྫོང་སྲུངས་\",\n \"རྭ་\",\n \"རྭ་\",\n \"རླངས་པ་\",\n \"རླངས་པ་\",\n \"རླན་དང་བཅས་པ་\",\n \"རླིག་གཅིག་\",\n \"རླིག་པ་\",\n \"རླིག་པའི་ནང་དུ་མཚན་ནུབ་པ་\",\n \"རླིག་མེད་\",\n \"རླིག་རླུགས་\",\n \"རླུང་\",\n \"རླུང་\",\n \"རླུང་གི་ཁམས་\",\n \"རླུང་གི་ཕྱོགས་\",\n \"རླུང་གིས་འཇིག་པ་\",\n \"རླུང་དམར་རམ་རླུང་\",\n \"རློམ་སེམས་\",\n \"ལ་གཅན་པ་\",\n \"ལ་ཉེ་\",\n \"ལ་ཉེའམ་ལྟས་ཀྱི་རིག་པ་\",\n \"ལ་ཏུ་\",\n \"ལ་དམར་\",\n \"ལ་ཕུག་གསར་པའམ་གཞོན་ནུ་\",\n \"ལ་ཕུག་ནར་སོན་པའམ་ཆེན་པོ་\",\n \"ལ་བ་\",\n \"ལ་བ་\",\n \"ལ་བའམ་སྣམ་བུ་\",\n \"ལ་ལར་\",\n \"ལ་ལར་ཟད་པར་ཆུ་དང་མེ་དང་རླུང་དང་སྔོན་པོ་དང་སེར་པོ་དང་དམར་པོ་དང་དཀར་པོའོ་ཞེས་སྟེང་དང་འོག་དང་ཐད་ཀར་གཉིས་སུ་མེད་ཅིང་ཚད་མེད་པར་འདུ་ཤེས་སུ་བྱེད་\",\n \"ལ་ལར་ཟད་པར་སའོ་ཞེས་སྟེང་དང་འོག་དང་ཐད་ཀར་གཉིས་སུ་མེད་ཅིང་ཚད་མེད་པར་འདུ་ཤེས་སུ་བྱེད་\",\n \"ལག་\",\n \"ལག་གི་བླ་\",\n \"ལག་གི་ལས་བྱེད་པ་\",\n \"ལག་ན་གདུགས་ཐོགས་པ་ལ་ཆོས་མི་བཤད་\",\n \"ལག་ན་དགྲ་ཆ་ཐོགས་པ་ལ་ཆོས་མི་བཤད་\",\n \"ལག་ན་ཕྱག་རྒྱ་རིན་པོ་ཆེ་\",\n \"ལག་ན་མདུང་ཐོགས་\",\n \"ལག་ན་མཚོན་ཐོགས་པ་ལ་ཆོས་མི་བཤད་\",\n \"ལག་ན་འཁར་བ་ཐོགས་པ་ལ་ཆོས་མི་བཤད་\",\n \"ལག་ན་རལ་གྲི་ཐོགས་པ་ལ་ཆོས་མི་བཤད་\",\n \"ལག་ན་རིན་ཆེན་\",\n \"ལག་ན་རྡོ་རྗེ་\",\n \"ལག་པ་\",\n \"ལག་པ་\",\n \"ལག་པ་གཅིག་\",\n \"ལག་པ་བརྐྱང་བ་\",\n \"ལག་པ་མི་བསྐྱོད་\",\n \"ལག་པ་མི་ལྡག་པ་\",\n \"ལག་པ་མི་སྤྲུག་\",\n \"ལག་པ་མི་སྦྲེལ་\",\n \"ལག་པ་འཇས་ཏེ་སྟེབས་པ་\",\n \"ལག་པའི་རྒྱབ་\",\n \"ལག་པའི་སོར་མོ་ཟླུམ་པོར་འཇས་པ་\",\n \"ལག་པས་ཟས་དང་འབགས་པས་ཆུ་སྣོད་ལ་མི་གཟུང་\",\n \"ལག་བཟང་\",\n \"ལག་བཟངས་ཀྱིས་ཞུས་པ་\",\n \"ལག་བརྡའ་བྱེད་པ་\",\n \"ལག་བྱིན་ཕྲག་བརྒྱ་ན་རྒྱུ་དབང་ཞེས་བྱའོ་\",\n \"ལག་མཐིལ་\",\n \"ལག་མཐིལ་\",\n \"ལག་མཐིལ་ལྟར་མཉམ་པ་\",\n \"ལག་མེད་\",\n \"ལག་འགྲོ་\",\n \"ལག་རྒྱན་\",\n \"ལག་རྒྱན་\",\n \"ལག་རྡུམ་\",\n \"ལག་རྡུམ་དུ་མི་འགྱུར་\",\n \"ལག་རྩིས་\",\n \"ལག་སོར་རྡུམ་པོ་\",\n \"ལག་སྤྱོད་ཀྱི་བུ་\",\n \"ལགས་སོའམ་ལོས་ཏེའམ་ངེས་པར་\",\n \"ལང་ཀར་གཤེགས་པ་\",\n \"ལང་ག་ལིའི་མེ་ཏོག་\",\n \"ལང་ཚོ་\",\n \"ལང་ཚོ་ལ་བབ་པ་\",\n \"ལང་ལིང་\",\n \"ལངས་\",\n \"ལངས་ནས་\",\n \"ལན་\",\n \"ལན་\",\n \"ལན་ཀན་གྱི་ཀ་བ་\",\n \"ལན་ཀན་གྱི་དྲ་བ་\",\n \"ལན་ཀན་གྱི་རྟེན་མ་\",\n \"ལན་ཀན་ནམ་ཁ་ཁྱེར་རམ་སྟེགས་བུ་\",\n \"ལན་གཅིག་གཉིས་ཕྲད་པ་\",\n \"ལན་གདབ་པ་\",\n \"ལན་གསུམ་དུ་བཟླས་ཏེ་ཆོས་ཀྱི་འཁོར་ལོ་རྣམ་པ་བཅུ་གཉིས་སུ་བསྐོར་བ་\",\n \"ལན་གསུམ་བསྐོར་བ་བྱས་ནས་\",\n \"ལན་གྲངས་གཞན་ལ་མྱོང་བར་འགྱུར་བ་\",\n \"ལན་ཅིག་ཕྱིར་འོང་བ་\",\n \"ལན་ཅིག་ཕྱིར་འོང་བ་\",\n \"ལན་ཅིག་ཕྱིར་འོང་བ་ལ་འཇུག་པ་\",\n \"ལན་དུ་ཕན་འདོགས་པ་ལ་མི་རེ་བ་\",\n \"ལན་དུ་ཕན་འདོགས་སུ་རེ་བ་\",\n \"ལན་བུ་\",\n \"ལན་མང་དུ་བྱས་པ་\",\n \"ལན་ཚྭ་\",\n \"ལན་ཚྭ་\",\n \"ལན་ལྡོནའམ་གཏོང་བ་\",\n \"ལམ་\",\n \"ལམ་\",\n \"ལམ་\",\n \"ལམ་\",\n \"ལམ་\",\n \"ལམ་\",\n \"ལམ་གཅོད་(ཆོད)ཅིང་འདུག་པ་\",\n \"ལམ་གསུང་བ་\",\n \"ལམ་གྱི་རྒྱུན་མ་བཅད་པ་་\",\n \"ལམ་གྱིས་དུབ་པ་\",\n \"ལམ་གྱིས་འཚོ་བ་\",\n \"ལམ་ཆེན་བསྟན་\",\n \"ལམ་ཐུགས་སུ་ཆུད་པ་\",\n \"ལམ་དུ་བྱས་པའམ་བགྲོད་པར་བྱས་པ་\",\n \"ལམ་ན་བལ་ཐོགས་པ་\",\n \"ལམ་པོ་ཆེ་\",\n \"ལམ་ཕྲན་བསྟན་\",\n \"ལམ་བཞིའི་མིང་ལ་\",\n \"ལམ་མ་ནོར་བར་སྟོན་པ་\",\n \"ལམ་མཁྱེན་པ་\",\n \"ལམ་མཆོག་འགྲོ་བ་\",\n \"ལམ་འགོག་པའམ་བར་ཆད་བྱེད་པ་\",\n \"ལམ་ཡོངས་སུ་འདྲེན་པ་\",\n \"ལམ་རྒྱགས་\",\n \"ལམ་རྒྱལ་བ་\",\n \"ལམ་ལ་ཆོས་ཤེས་པ་\",\n \"ལམ་ལ་ཆོས་ཤེས་པའི་བཟོད་པ་\",\n \"ལམ་ལ་རྗེ་སུ་རྟོགས་པའི་ཤེས་པ\",\n \"ལམ་ལ་རྗེ་སུ་རྟོགས་པར་ཤེས་པའི་བཟོད་པ་\",\n \"ལམ་ལྟར་བཅོས་པ་\",\n \"ལམ་ཤེས་པ་\",\n \"ལམ་སུན་པར་བྱེད་པ་\",\n \"ལམ་སྟོན་པ་\",\n \"ལམ་སྟོན་པ་\",\n \"ལས་\",\n \"ལས་\",\n \"ལས་ཀྱི་གཞི་\",\n \"ལས་ཀྱི་བགོ་སྐལ་ལ་སྤྱོད་པ་\",\n \"ལས་ཀྱི་རྣམ་པར་སྨིན་པ་མཁྱེན་པའི་སྟོབས་\",\n \"ལས་ཀྱི་རྣམ་པར་སྨིན་པ་ལ་སོགས་པའི་མིང་ལ་\",\n \"ལས་ཀྱི་སྐྱེ་གནས་པ་\",\n \"ལས་ཀྱི་སྒྲིབ་པ་རྒྱུན་གཅོད་པ་\",\n \"ལས་ཀྱི་སྒྲིབ་པའི་རྒྱུན་བཅད་པ་\",\n \"ལས་དང་པོ་པ་\",\n \"ལས་དང་པོ་རྣམས་ཀྱི་དེད་དཔོན་\",\n \"ལས་བདག་གྱིར་བྱེད་པ་\",\n \"ལས་བརྗོད་པ་\",\n \"ལས་བརྗོད་པ་གཉིས་པ་\",\n \"ལས་བརྗོད་པ་གསུམ་པ་\",\n \"ལས་བརྗོད་པ་དང་པོ་\",\n \"ལས་བརྟེན་པར་བྱ་བ་\",\n \"ལས་བྱེད་པ་\",\n \"ལས་བྱེད་པ་\",\n \"ལས་མི་མཐུན་པའི་གཞི་\",\n \"ལས་འཛིན་པ་\",\n \"ལས་རྣམ་པར་འབྱེད་པ་\",\n \"ལས་ལ་དབང་བ་\",\n \"ལས་སུ་བསྐོ་པ་\",\n \"ལས་སུ་རུང་བ་\",\n \"ལས་སྣ་ཚོགས་ཅན་ནམ་བཟོ་སྣ་ཚོགས་ཅན་\",\n \"ལི་ཁ་ར་\",\n \"ལི་ཁར་ཤིང་འཕེལ\",\n \"ལི་ཁྲི་\",\n \"ལིག་བུ་མིག་\",\n \"ལིང་ཏོག་སེར་པོ་\",\n \"ལུག་\",\n \"ལུག་པོང་ལྟར་སྤྱད་པ་\",\n \"ལུག་རྡུལ་\",\n \"ལུག་ལྟར་ལྐུག་པ་\",\n \"ལུགས་\",\n \"ལུང་\",\n \"ལུང་\",\n \"ལུང་དུ་མ་བསྟན་པའི་ཆོས་བཅུ་བཞིའི་མིང་ལ\",\n \"ལུང་ནོད་པའམ་འབོགས་པ་\",\n \"ལུང་ཕོག་པ་\",\n \"ལུང་བ་\",\n \"ལུང་བར་མ་\",\n \"ལུང་བསྟན་པ་བཞིའི་མིང་ལ་\",\n \"ལུང་བསྟན་པའི་སྡེ་\",\n \"ལུང་འབོགས་པ་\",\n \"ལུང་རིང་མོ་\",\n \"ལུང་རུལ་བ་ལྟ་བུར་གྱུར་པ་\",\n \"ལུང་རྣམ་པར་མ་དག་པ་བསྟན་པའི་མཚན་ཉིད་\",\n \"ལུང་ཤིན་ཏུ་རྣམ་པར་དག་པས་གཏན་ལ་དབབ་པར་བསྟན་པའི་མཚན་ཉིད་\",\n \"ལུད་\",\n \"ལུད་པ་\",\n \"ལུད་པ་ལུ་བ་\",\n \"ལུམ་བི་ནི་ (ལུམ་བའི་ཚལ)\",\n \"ལུས\",\n \"ལུས་\",\n \"ལུས་\",\n \"ལུས་ཀྱི་ཁམས་\",\n \"ལུས་ཀྱི་ངལ་བ་\",\n \"ལུས་ཀྱི་ཉེས་པ་སྤྱོད་པ་གསུམ་\",\n \"ལུས་ཀྱི་དབང་པོ་\",\n \"ལུས་ཀྱི་དབང་པོ་\",\n \"ལུས་ཀྱི་བདེ་བའང་རུང་ལུས་ཀྱི་སྡུག་བསྔལ་ཡང་རུང་སྡུག་བསྔལ་ཡང་མ་ཡིན་བདེ་བའང་མ་ཡིན་པའང་རུང་\",\n \"ལུས་ཀྱི་འདུ་བྱེད་ཤིན་ཏུ་སྦྱངས་ནས་དབུགས་ཕྱུང་ན་ལུས་ཀྱི་འདུ་བྱེད་ཤིན་ཏུ་སྦྱངས་ནས་དབུགས་ཕྱུང་ངོ་སྙམ་དུ་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"ལུས་ཀྱི་འདུ་བྱེད་ཤིན་ཏུ་སྦྱངས་ནས་དབུགས་བརྔུབས་ན་ལུས་ཀྱི་འདུ་བྱེད་ཤིན་ཏུ་སྦྱངས་ནས་དབུགས་བརྔུབས་སོ་སྙམ་དུ་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"ལུས་ཀྱི་འདུ་བྱེད་ཤིན་ཏུ་སྦྱངས་པ་\",\n \"ལུས་ཀྱི་རྣམ་པར་ཤེས་པ་\",\n \"ལུས་ཀྱི་རྣམ་པར་ཤེས་པའི་ཁམས་\",\n \"ལུས་ཀྱི་ལས་ཐམས་ཅད་ཡེ་ཤེས་ཀྱི་སྔོན་དུ་འགྲོ་ཞིང་ཡེ་ཤེས་ཀྱི་རྗེས་སུ་འབྲང་བ་\",\n \"ལུས་ཀྱི་ལེགས་པར་སྤྱོད་པ་གསུམ་\",\n \"ལུས་ཀྱི་སྐྱེ་མཆེད་\",\n \"ལུས་ཀྱི་སྐྱོན་ཡང་དག་པར་སེལ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ལུས་ཀྱི་སྟོད་ནས་མེ་འབར་\",\n \"ལུས་ཀྱི་སྟོབས་\",\n \"ལུས་ཀྱི་སྨད་ནས་ཆུ་གྲང་མོའི་རྒྱུན་་འབབ་\",\n \"ལུས་ཀྱིས་ཐམས་ཅད་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་ཕྱུང་ན་ལུས་ཀྱིས་ཐམས་ཅད་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་ཕྱུང་ངོ་སྙམ་དུ་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"ལུས་ཀྱིས་ཐམས་ཅད་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་བརྔུབས་ན་ལུས་ཀྱིས་ཐམས་ཅད་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་བརྔུབས་སོ་སྙམ་དུ་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"ལུས་ཀྱིས་མངོན་དུ་བྱེད་པ\",\n \"ལུས་ཀྱིས་རེག་པ་\",\n \"ལུས་གཅིག་ལ་འདུ་ཤེས་གཅིག་པ་དག་དཔེར་ན་དགེ་རྒྱས་ཀྱི་ལྷ་རྣམས་སོ་\",\n \"ལུས་གཅ���ག་ལ་འདུ་ཤེས་ཐ་དད་པ་དག་དཔེར་ན་འདོད་གསལ་བ་རྣམས་སོ་\",\n \"ལུས་གཉེར་མས་གང་བ་\",\n \"ལུས་གླེབས་པ་འདྲ་བ་\",\n \"ལུས་ངན་གྱི་ཕྱོགས་\",\n \"ལུས་ངན་པོ་\",\n \"ལུས་ཅན་\",\n \"ལུས་ཉམ་ཆུང་བ་\",\n \"ལུས་ཉམས་པ་\",\n \"ལུས་ཐ་དད་ཅིང་འདུ་ཤེས་ཐ་དད་པ་དག་དཔེར་ན་མི་རྣམས་དང་ལྷ་ཁ་གཅིག་གོ་\",\n \"ལུས་ཐ་དད་ལ་འདུ་ཤེས་གཅིག་པ་དག་དཔེར་ན་ཚངས་རིས་ཀྱི་ལྷ་དག་དང་པོར་འབྱུང་བའོ་\",\n \"ལུས་ཐམས་ཅད་ཀྱིས་ལྗིད་ཀྱིས་མི་དབབ་\",\n \"ལུས་དང་ངག་དང་ཡིད་ཀྱི་ལས་ཀྱི་མཐའ་དགེ་བ་བཅུ་དང་ལྡན་པ་རྣམས་\",\n \"ལུས་དང་ངག་དང་ཡིད་ཀྱི་ལས་ཀྱི་མཐའ་དོན་ཡོད་པ་ལ་བརྩོན་པ\",\n \"ལུས་དང་ལུས་ཀྱི་ཡན་ལག་ལ་སོགས་པའི་མིང་ལ་\",\n \"ལུས་དྲན་པ་ཉེ་བར་བཞག་པ་\",\n \"ལུས་བསྒྱུར་བ་\",\n \"ལུས་མ་དྲལ་བའམ་མ་གཤེགས་པ་\",\n \"ལུས་མ་བསྒོམས་པའམ་ལུས་མ་སྦྱངས་པ་\",\n \"ལུས་མི་བསྒྱུར་\",\n \"ལུས་མེད་ཐུལ་\",\n \"ལུས་ཚ་བ་\",\n \"ལུས་ཞིག་ནས་\",\n \"ལུས་འཕགས་\",\n \"ལུས་འཕགས་པའི་རི་\",\n \"ལུས་རྒུ་བས་འཁར་བ་ལ་བརྟེན་པ་\",\n \"ལུས་རྨ་མཚན་ཅན་\",\n \"ལུས་རྩ་ཕིར་འཐོན་པས་ཁེགས་པ་\",\n \"ལུས་ཤིན་ཏུ་བཀྲ་བ་\",\n \"ལུས་ཤིན་ཏུ་སྦྱངས་པས་བདེ་བ་མྱོང་བར་བྱེད་དོ་\",\n \"ལུས་ས་ལྟར་བཟང་བ་\",\n \"ལུས་སམ་མཐོ་བ་\",\n \"ལུས་སམ་ཚིག་སྦྱོར་བ་\",\n \"ལུས་སིམ་པར་བྱེད་པ་\",\n \"ལུས་སྲུངས\",\n \"ལུས་སྲུལ་པོ་\",\n \"ལེ་དོང་ར་\",\n \"ལེ་རྒན་རྩི་\",\n \"ལེ་ལོ་\",\n \"ལེ་ལོ་\",\n \"ལེ་ཤི་\",\n \"ལེགས་ཐོས་\",\n \"ལེགས་པ་\",\n \"ལེགས་པའམ་དགེ་བའམ་ཆེ་བ་\",\n \"ལེགས་པའི་བློ་གྲོས་\",\n \"ལེགས་པའི་བློ་གྲོས་མ་\",\n \"ལེགས་པར་གནས་པ་\",\n \"ལེགས་པར་གསུངས་པའམ་ལེགས་པར་སྨྲས་པ\",\n \"ལེགས་པར་དཔྱད་པའམ་ལེགས་པར་འགྲོ་བ་\",\n \"ལེགས་པར་བཀྲུས་པའམ་བཤལ་བ་\",\n \"ལེགས་པར་བགོས་བ་\",\n \"ལེགས་པར་བརྩམས་པ་\",\n \"ལེགས་པར་བརྩམས་པ་\",\n \"ལེགས་པར་བཤད་པ\",\n \"ལེགས་པར་བསམས་པ་སེམས་པ་\",\n \"ལེགས་པར་བསྙེན་པར་རྫོགས་པ་\",\n \"ལེགས་པར་བྱ་བའི་ལས་བྱེད་པ་\",\n \"ལེགས་པར་བྱང་བ་\",\n \"ལེགས་པར་མཆོད་པ་\",\n \"ལེགས་པར་མཉན་པ་\",\n \"ལེགས་པར་མཛེས་པ་\",\n \"ལེགས་པར་ཟས་བཟབ་\",\n \"ལེགས་པར་ཟས་བླང་བ་\",\n \"ལེགས་པར་འཛིན་པའམ་ལེགས་པར་ཆུབ་པ་\",\n \"ལེགས་པར་ཡང་དག་བཞུགས་\",\n \"ལེགས་པར་རབ་ཏུ་བྱུང་བ་\",\n \"ལེགས་པར་རབ་ཏུ་རྟོག་པ་\",\n \"ལེགས་པར་རམ་ཤིན་ཏུ་མཛེས་པར་བྱས་པ་\",\n \"ལེགས་པར་རྟོགས་པ་\",\n \"ལེགས་པར་སད་པའམ་ལེགས་པར་ཁོན་དུ་ཆུད་པའམ་ལེགས་པར་ཤེད་རྫོགས་པ་\",\n \"ལེགས་པར་སྐྱེས་པ་\",\n \"ལེགས་པར་སྡོམ་པ་\",\n \"ལེགས་པར་སྦེད་པའམ་གསང་ཐུབ་པ་\",\n \"ལེགས་པར་སྦྱར་བ་\",\n \"ལེགས་པར་སྦྱར་བའམ་ལེགས་པར་བསྒྲུབ་པའམ་ལེགས་པར་བསྡུ་བའི་ཕྱིར་\",\n \"ལེགས་པར་སྦྱིན་སྲེག་བྱས་\",\n \"ལེགས་པར་སྨིན་པ་\",\n \"ལེགས་པར་སྨྲ་བ་བརྗོད་པ་\",\n \"ལེགས་བྱིན་\",\n \"ལེགས་བྱིན་ཆེན་པོ་\",\n \"ལེགས་མཐོང་\",\n \"ལེགས་མཐོང་ཆེན་པོ་\",\n \"ལེགས་མཐོང་དགའ་བྱེད་\",\n \"ལེགས་འབྱུང་\",\n \"ལེགས་འབྱུང་\",\n \"ལེགས་འོང\",\n \"ལེགས་ཤིན་ཏུ་བཀྲ་བ་\",\n \"ལེགས་སུ་སྨོན་པ་\",\n \"ལེགས་སོ་ཞེས་བྱ་བ་བྱིན་ཏེ་\",\n \"ལེགས་སོ་ལེགས་སོ་\",\n \"ལེན་པ་\",\n \"ལེན་པ་\",\n \"ལེན་པ་\",\n \"ལེན་པ་\",\n \"ལེན་པ་མི་མངའ་བ་\",\n \"ལེན་པ་མེད་པར་ཟག་པ་རྣམས་ལས་སེམས་རྣམ་པར་གྲོལ་བ་\",\n \"ལེན་པའམ་འཛིན་པ་\",\n \"ལེན་པའི་རྒྱུ་\",\n \"ལེན་པའི་རྣམ་པར་ཤེས་པ་\",\n \"ལེའུ་\",\n \"ལེའུར་ཕྱེ་བ་\",\n \"ལེའུར་བཅད་པ་\",\n \"ལོ་\",\n \"ལོ་\",\n \"ལོ་ཉི་ཤུ་མ་ལོན་པར་བསྙེན་པར་རྫོགས་པར་བྱེད་པ་\",\n \"ལོ་ཏང་ཉན་\",\n \"ལོ་དྲུག་གི་དུས་སྟོན་\",\n \"ལོ་བཅུ་དྲུག་ཏུ་འཆང་བ་\",\n \"ལོ་མ་\",\n \"ལོ་མ་རལ་གྲི་ལྟ་བུའི་ནགས་\",\n \"ལོ་མ་སེར་\",\n \"ལོ་མའི་སྤྱིལ་བུ་\",\n \"ལོ་རྒྱུས་\",\n \"ལོ་རྒྱུས་ (ལོ་གྲགས་ཅེའོ)\",\n \"ལོ་ལེགས་པ་\",\n \"ལོ་ལྔའི་དུས་སྟོན་\",\n \"ལོག་པ་ཉིད་དུ་ངེས་པ་\",\n \"ལོག་པ་ཉིད་དུ་ངེས་པའི་ཕུང་པོ་\",\n \"ལོག་པ་དད་སེལ་\",\n \"ལོག་པའི་ང་རྒྱལ་\",\n \"ལོག་པའི་ཤེས་པ་\",\n \"ལོག་པར་ལྟ་བ་\",\n \"ལོག་པར་ལྟ་བ་\",\n \"ལོག་པར་ལྟ་བ་སྤོང་བ་\",\n \"ལོག་པར་ལྟ་བ་སྤོང་བར་ནུས་པའམ་སྤང་བར་རུང་བ་\",\n \"ལོག་པར་ལྟུང་བ་\",\n \"ལོག་པོ་པའམ་འདམ་པོ་པ་\",\n \"ལོག་འདྲེན་\",\n \"ལོང་ཀ་\",\n \"ལོང་བའམ་ལྡོངས་པ་\",\n \"ལོང་བུ་\",\n \"ལོང་བུ་མི་མངོན་པ་\",\n \"ལོང་བུའི་སྟེང་དུ་ལོང་བུ་མི་བཞག་\",\n \"ལོངས་\",\n \"ལོངས་སྤྱོད་\",\n \"ལོངས་སྤྱོད་འབྲི་བའི་གནས་དྲུག་ལ་\",\n \"ལོངས་སྤྱོད་རྫོགས་པའི་སྐུ་\",\n \"ལྐུག་པ་\",\n \"ལྐོག་ཤལ་\",\n \"ལྒང་པ་\",\n \"ལྔ་\",\n \"ལྔ་ཆ་\",\n \"ལྔ་ཆ་\",\n \"ལྔ་པ་\",\n \"ལྔ་བ་\",\n \"ལྔ་བཅུ་\",\n \"ལྔ་བརྒྱ་རྒྱང་གྲགས་\",\n \"ལྔ་འཛིན་གྱི་རྒྱལ་པོ་\",\n \"ལྔ་ལེན་པ་\",\n \"ལྔ་སྟོན་\",\n \"ལྔས་རྩེན་\",\n \"ལྕག་ཀྱུས་ཐབས་\",\n \"ལྕག་ཕོད་\",\n \"ལྕགས་\",\n \"ལྕགས་ཀྱི་གཞོང་རིངས་\",\n \"ལྕགས་ཀྱི་གར་བུ་\",\n \"ལྕགས་ཀྱི་ཐོ་ལུམ་\",\n \"ལྕགས་ཀྱི་ཚ་ཚ་\",\n \"ལྕགས་ཀྱི་ཤིང་ཤལ་མ་རིའི་ནགས་\",\n \"ལྕགས་ཀྱི་སིལ་ཁྲོལ་\",\n \"ལྕགས་གཟར་(ལྕགས་བཟར་)\",\n \"ལྕགས་ཐག་\",\n \"ལྕགས་མགར་\",\n \"ལྕགས་མདའ་\",\n \"ལྕགས་རྡུལ་\",\n \"ལྕང་མ་\",\n \"ལྕང་ལོ་ཅན་\",\n \"ལྕམ་ཁྲིས་ཅན་\",\n \"ལྕི་བ་\",\n \"ལྕི་བ་\",\n \"ལྕེ་ཕྱུང་སྟེ་ཟས་མི་བཟའ་\",\n \"ལྕེ་བཞར་\",\n \"ལྕེ་སྤྱང་(ཅེ་སྤྱང)\",\n \"ལྕེ་སྤྱང་མོའི་སྒྲ་\",\n \"ལྕེའི་ཁམས་\",\n \"ལྕེའི་དབང་པོ་\",\n \"ལྕེའི་དབང་པོ་\",\n \"ལྕེའི་རྣམ་པར་ཤེས་པ་\",\n \"ལྕེའི་རྣམ་པར་ཤེས་པའི་ཁམས་\",\n \"ལྕེའི་སྐྱེ་མཆེད་\",\n \"ལྕོག་གམ་ཤིང་ཐགས་\",\n \"ལྗགས་ཀྱི་དབང་པོར་ཕྱུང་སྟེ་\",\n \"ལྗགས་དམར་བ་\",\n \"ལྗགས་མཉེན་པ་\",\n \"ལྗགས་ཤིན་ཏུ་རིང་ཞིང་སྲབ་པ་\",\n \"ལྗགས་སྲབ་པ་\",\n \"ལྗང་སྔོའི་བུ་\",\n \"ལྗབ་ལྗིབ་\",\n \"ལྗི་བ་\",\n \"ལྗི་བུ་\",\n \"ལྗིད་གནོན་\",\n \"ལྗོངས་འཇོམས་པ་\",\n \"ལྗོངས་སམ་ཡུལ་གྱི་སྐྱེ་བོའི་གནས\",\n \"ལྗོན་པ་\",\n \"ལྟ་ན་སྡུག་\",\n \"ལྟ་ན་སྡུག་པ་\",\n \"ལྟ་བ་\",\n \"ལྟ་བ་\",\n \"ལྟ་བ་ངན་པ་\",\n \"ལྟ་བ་ཉམས་པ་\",\n \"ལྟ་བ་ཐ་དད་པ་དང་བག་ལ་ཉལ་དང་ཀུན་ནས་དཀྲིས་པའི་ཉོན་མོངས་པ་རབ་ཏུ་ཞི་བར་བྱེད་པ་ལ་མཁས་པ་\",\n \"ལྟ་བ་ཐིབས་པོ་\",\n \"ལྟ་བ་མཆོག་ཏུ་འཛིན་པ་\",\n \"ལྟ་བ་ཡ་ང་བ་\",\n \"ལྟ་བའི་དགོན་པ་\",\n \"ལྟ་བའི་རྣམ་པའམ་ལྟ་བར་གྱུར་བ་\",\n \"ལྟ་བའི་སྙིགས་མ་\",\n \"ལྟ་བར་གྱུར་བ་མི་འདོར་བ་\",\n \"ལྟ་བར་བྱིང་བ་\",\n \"ལྟ་བར་འགྱུར་བའམ་ལྟ་བར་བྱས་པ་\",\n \"ལྟག་ཆོད་\",\n \"ལྟག་ཆོད་(ལྟག་གཅོད)\",\n \"ལྟག་པ་\",\n \"ལྟད་མོའི་ས་\",\n \"ལྟས་དང་མཚན་མར་གཟུང་བའི་མིང་ལ་\",\n \"ལྟས་མཁན་\",\n \"ལྟས་སུ་འབྱུང་མ་\",\n \"ལྟུང་\",\n \"ལྟུང་བ་\",\n \"ལྟུང་བ་\",\n \"ལྟུང་བ་།་\",\n \"ལྟུང་བ་མ་འདྲེས་པ་\",\n \"ལྟུང་བ་མེད་\",\n \"ལྟུང་བ་ལས་བསླང་བ་\",\n \"ལྟུང་བའམ་བོ་བ་\",\n \"ལྟུང་བར་འགྱུར་བའི་ཆོས་\",\n \"ལྟུང་བྱེད་\",\n \"ལྟུང་བྱེད་\",\n \"ལྟུང་བྱེད་དགུ་བཅུའི་མིང་\",\n \"ལྟེ་བ་\",\n \"ལྟེ་བ་\",\n \"ལྟེ་བ་ཁུང་\",\n \"ལྟེ་བ་གྱས་ཕྱོགས་སུ་འཁྱིལ་བ་\",\n \"ལྟེ་བ་ཟབ་པ་\",\n \"ལྟེ་བུར་\",\n \"ལྟེང་ཀ\",\n \"ལྟེང་རྒྱས་འོད་སྲུང་\",\n \"ལྟོ་ཆེ་བ་\",\n \"ལྟོ་ཆེ་བའམ་ཟ་ཕོད་པ་\",\n \"ལྟོ་བ་\",\n \"ལྟོ་འཕྱེ་ཆེན་པོ་\",\n \"ལྟོ་འཕྱེ་ཆེན་པོའི་དབང་པོའི་མིང་ལ་\",\n \"ལྟོ་འཕྱེ་བདག་པོ་\",\n \"ལྡང་\",\n \"ལྡང་བ་\",\n \"ལྡང་བར་འགྱུར་\",\n \"ལྡང་སྐོ་སྐ (བསེ་ཁ་སྒོ)\",\n \"ལྡན་པ་\",\n \"ལྡན་པ་\",\n \"ལྡུམ་ར་\",\n \"ལྡེ་མིག་\",\n \"ལྡེག་\",\n \"ལྡེམ་པོར་དགོངས་པ་བཞིའི་མིང་ལ་\",\n \"ལྡེའུའམ་སྐུ་སྐ་\",\n \"ལྡོག་པ (བཟློག་པ)\",\n \"ལྡོག་པ་སེལ་བ་\",\n \"ལྡོགས་པ་\",\n \"ལྡོང་རོས་\",\n \"ལྡོན་\",\n \"ལྡོབ་སྐྱེན་པ་\",\n \"ལྦ་བ་\",\n \"ལྦུ་བ་རྡོས་པ་\",\n \"ལྷ་\",\n \"ལྷ་ཁང་བསྲུང་བ་\",\n \"ལྷ་ཆེན་པོ་\",\n \"ལྷ་ཆེན་པོ་\",\n \"ལྷ་དང་ཀླུ་ལ་སོགས་པའི་མིང་ལ་\",\n \"ལྷ་དང་མི་རྣམས་ཀྱི་འཁོར་ལོ་བཞིའི་མིང་ལ་\",\n \"ལྷ་དང་མིའི་བར་དག་ལ་ཡང་དག་པར་ཤིན་ཏུ་བསྟན་པ་\",\n \"ལྷ་དང་ལྷ་མ་ཡིན་གྱི་སྒོ་མཐའ་ཡས་འདྲེན་པའི་ལྷ་མ་ཡིན་\",\n \"ལྷ་དབང་བློ་\",\n \"ལྷ་བཞོས་\",\n \"ལྷ་མ་ཡིན་\",\n \"ལྷ་མ་ཡིན་གྱི་དབང་པོའི་མིང་ལ་\",\n \"ལྷ་མ་ཡིན་གྱི་འདུན་ས་ནོར་བཟང་\",\n \"ལྷ་མཚམས་\",\n \"ལྷ་མོ་\",\n \"ལྷ་མོ་སྒྱུ་འཕྲུལ་མ་\",\n \"ལྷ་ཚེ་རིང་པོ་\",\n \"ལྷ་འབངས་སམ་ནང་བྱན་ནམ་རྩེ་རྒོད་\",\n \"ལྷ་ཡིད་དགའ་\",\n \"ལྷ་ཡུལ་\",\n \"ལྷ་ཡུལ་ནས་བབས་པ་\",\n \"ལྷ་རྗེས་སུ་དྲན་པའོ་\",\n \"ལྷ་ལ་གཏོར་བ་\",\n \"ལྷ་ལག་ན་གཞོང་ཐོགས་\",\n \"ལྷག་ན་མེད་པ་\",\n \"ལྷག་པའི་ང་རྒྱལ་\",\n \"ལྷག་པའི་བསམ་པ་\",\n \"ལྷག་པའི་བསམ་པའི་སྟོབས་\",\n \"ལྷག་པའི་ཚུལ་ཁྲིམས་\",\n \"ལྷག་པའི་ཤེས་རབ་\",\n \"ལྷག་པའི་སེམས་\",\n \"ལྷག་པར་ཆགས་པ་\",\n \"ལྷག་པར་ཆགས་པར་གྱུར་པ་\",\n \"ལྷག་པར་དམིགས་པ་\",\n \"ལྷག་པར་ཞེན་པ་\",\n \"ལྷག་མ་\",\n \"ལྷག་མ་མེད་པ་\",\n \"ལྷག་མ་ཡོད་པ་\",\n \"ལྷག་མཐོང་\",\n \"ལྷག་མར་མ་བྱས་པ་སྟོབ་པ་\",\n \"ལྷག་མར་མ་བྱས་པའི་བཟའ་བ་\",\n \"ལྷང་ངེ་\",\n \"ལྷང་ཚེར་\",\n \"ལྷན་ཅིག་གནས་པ་\",\n \"ལྷན་ཅིག་གམ་ཐབས་གཅིག\",\n \"ལྷན་ཅིག་གམ་ཐབས་གཅིག\",\n \"ལྷན་ཅིག་གམ་བཅས་སམ་\",\n \"ལྷན་ཅིག་བྱེད་པའི་རྐྱེན་\",\n \"ལྷན་ཅིག་འགྲོགས་པའི་འབྲེལ་བ\",\n \"ལྷན་ཅིག་འབྱུང་བའི་རྒྱུ་\",\n \"ལྷན་ཅིག་སྐྱེས་བ་་\",\n \"ལྷན་ཅིག་སྤྱོད་པ་\",\n \"ལྷན་ནེ་\",\n \"ལྷན་པ་གློན་པ་\",\n \"ལྷན་པའམ་གནས་པ་\",\n \"ལྷབ་ལྷུབ་\",\n \"ལྷབས་\",\n \"ལྷམ་\",\n \"ལྷམ་པ་\",\n \"ལྷམ་བུ་ཆུ་གཤེར་\",\n \"ལྷམ་མཁན་ནམ་ཀོ་ལྤགས་མཁན་\",\n \"ལྷམ་མཐོན་པོ་གྱོན་པ་ལ་ཆོས་མི་བཤད་\",\n \"ལྷམ་མེ་\",\n \"ལྷམ་ཡུ་ཅན་\",\n \"ལྷམ་སྒྲོག་གུ་ཅན་\",\n \"ལྷའི་དབང་པོ་བརྒྱ་བྱིན་\",\n \"ལྷའི་དབང་པོའི་དབྱངས་ལྟར་སྙན་པ་\",\n \"ལྷའི་བུ་མོ་\",\n \"ལྷའི་བུ་མོ་\",\n \"ལྷའི་བུ་མོ་\",\n \"ལྷའི་བུ་འཚམས་བཟང་བ་\",\n \"ལྷའི་བུ་ཡོངས་སུ་དགའ་ལྡན་\",\n \"ལྷའི་བུ་རབ་འཐབ་བྲལ་\",\n \"ལྷའི་བུ་རབ་འཕྲུལ་དགའ་\",\n \"ལྷའི་བློ་གྲོས་འོད་\",\n \"ལྷའི་མདུན་མའམ་ལྷའི་འདུན་ས་\",\n \"ལྷའི་མིག (ལྷའི་སྤྱན)\",\n \"ལྷའི་འཇིག་རྟེན་\",\n \"ལྷའི་ཡང་ལྷ་\",\n \"ལྷའི་རྣ་བ (ལྷའི་སྙན)\",\n \"ལྷར་བཅས་\",\n \"ལྷས་བྱིན་\",\n \"ལྷུག་པར་གཏོང་བ་\",\n \"ལྷུང་གཟེད་དོ་གསུམ་ལས་ལྷག་པར་ལེན་པ་\",\n \"ལྷུང་གཟེད་བཞག་པའི་གདུ་བུ་\",\n \"ལྷུང་བཟེད་\",\n \"ལྷུང་བཟེད་ཀྱི་ཁ་གཡོགས་\",\n \"ལྷུང་བཟེད་ཀྱི་ནང་དུ་ཟས་ཀྱི་ལྷག་མ་བླུགས་ཏེ་མི་འདོར་\",\n \"ལྷུང་བཟེད་ཀྱི་སྣོད་\",\n \"ལྷུང་བཟེད་ཀྱི་སྣོད་\",\n \"ལྷུང་བཟེད་ཁས་དབུབ་\",\n \"ལྷུང་བཟེད་ཆུང་ངུ་\",\n \"ལྷུང་བཟེད་ནག་པ་ཅན་\",\n \"ལྷུང་བཟེད་མི་བྱོག་\",\n \"ལྷུང་བཟེད་མི་སྐྱོམ་\",\n \"ལྷུང་བཟེད་ཚོལ་བ་\",\n \"ལྷུང་བཟེད་འཆང་བ་\",\n \"ལྷུང་བཟེད་ལ་བལྟ་བ་\",\n \"ལྷུན་པོ\",\n \"ལྷུན་པོ་\",\n \"ལྷུན་པོ་ཤིན་ཏུ་འབྱུང་བ་\",\n \"ལྷུན་པོའི་རྩེ་འཛིན་གཞོན་ནུར་གྱུར་པ་\",\n \"ལྷུན་པོའི་སྟོབས་འཇོམས་པ་\",\n \"ལྷུན་ཡས་\",\n \"ལྷུན་ཡས་\",\n \"ལྷུར་ལེན་པ་\",\n \"ལྷོ་\",\n \"ལྷོ་ནུབ་\",\n \"ལྷོ་ཕྱོགས་དམའ་ན་\",\n \"ལྷོ་ཕྱོགས་མཐོ་\",\n \"ལྷོག་པ་\",\n \"ལྷོད་པ་དང་ལྷོད་པ་མ་ཡིན་པ་\",\n \"ཤ་\",\n \"ཤ་ཀུ་ནི་\",\n \"ཤ་ཀུ་ནི་ཆེན་པོ་\",\n \"ཤ་ཀོན་ནམ་འཁོན་ཡོད་པ་\",\n \"ཤ་ནའི་རས་\",\n \"ཤ་བཀྲ་\",\n \"ཤ་བཀྲ་\",\n \"ཤ་མདོག་དཀར་ཆེས་པ་\",\n \"ཤ་མདོག་དམར་ཆེས་པ་\",\n \"ཤ་མདོག་སེར་ཆེས་པ་\",\n \"ཤ་མདོག་སྣོ་ཆེས་པ་\",\n \"ཤ་མཚན་\",\n \"ཤ་མཚན་གྱི་དཔྱད་\",\n \"ཤ་ཟ་\",\n \"ཤ་ཟའི་སྐད་\",\n \"ཤ་འཚོང་བ་\",\n \"ཤ་རུའི་བུ་བརྟུལ་ཞུགས་ཅན\",\n \"ཤ་སྦྲང་\",\n \"ཤང་ངམ་ཤོང་\",\n \"ཤང་ཤང་ཏེའུ་\",\n \"ཤང་ཤང་ཏེའུའི་སྒྲ་དབྱངས་བསྒྲགས་པ་\",\n \"ཤངས་གཙང་བ་\",\n \"ཤངས་མཐོ་བ་\",\n \"ཤན་པ་\",\n \"ཤམ་ཐབས་\",\n \"ཤམ་ཐབས་ཀྱི་གཟན་\",\n \"ཤམ་ཐབས་ལ་ཟླུམ་པོར་བགོ་པ་\",\n \"ཤམ་ཐབས་ལ་རྣམ་པ་བདུན་\",\n \"ཤམ་བུ་\",\n \"ཤར་\",\n \"ཤར་གྱི་རི་བོའི་སྡེ་\",\n \"ཤར་གྱི་ལུས་འཕགས་\",\n \"ཤར་ཕྱོགས་དམའ་ན\",\n \"ཤར་ཕྱོགས་མཐོ་\",\n \"ཤར་བ་\",\n \"ཤར་བ་བཟོ་སྦྱངས་\",\n \"ཤར་བའམ་འདུས་པའམ་སྤྱི་\",\n \"ཤར་ལྷོ་\",\n \"ཤས་ཆེ་བ་ཤེས་བྱ་བའམ་ལུང་པའི་མདའ་\",\n \"ཤཱ་ཀྱ་ཐུབ་པ་\",\n \"ཤཱ་ཀྱ་བློ་\",\n \"ཤཱ་ཀྱ་སེང་གེ་\",\n \"ཤཱ་ཀྱའི་བུར་མི་རུང་བའམ་ཤཱ་ཀྱའི་བུར་མ་ཡིན་པ་\",\n \"ཤཱ་ཀྱའི་སྐྱེས་མཆོག་\",\n \"ཤཱ་རིའི་བུ་\",\n \"ཤཱཀྱ་བཞེས་གཉེན\",\n \"ཤི་བའི་ནོར་བགོ་བ་\",\n \"ཤི་བའི་ནོར་རྫས་\",\n \"ཤིག་\",\n \"ཤིག་\",\n \"ཤིང་གེལ་པ་\",\n \"ཤིང་ང་དཔུང་བཅད་\",\n \"ཤིང་ཉ་གྲོ་དྷ་ལྟར་ཆུ་ཞེང་གབ་པ་\",\n \"ཤིང་ཏ་ལ་\",\n \"ཤིང་ཏུ་མྱུར་བར་འཇུག་པ་\",\n \"ཤིང་ཏོག་འགྲིམ་པ་(ཤིང་ཏོག་འདྲིམ་པ་)\",\n \"ཤིང་ཐུན་\",\n \"ཤིང་དྲུང་\",\n \"ཤིང་དྲུང་ངམ་ལྗོན་པའི་འོག་\",\n \"ཤིང་དྲུངས་པ་\",\n \"ཤིང་བལ་གྱི་འདབ་མ་\",\n \"ཤིང་བལ་གྱིས་གོས་པར་བྱས་པ་\",\n \"ཤིང་མཁན་\",\n \"ཤིང་མཁན་\",\n \"ཤིང་མཁན་\",\n \"ཤིང་མངར་\",\n \"ཤིང་ཚྭ་\",\n \"ཤིང་རུལ་བ་ལྟ་བུར་གྱུར་པ་\",\n \"ཤིང་རྟ་\",\n \"ཤིང་རྟ་\",\n \"ཤིང་རྟ་བཅུ་པ་\",\n \"ཤིང་རྟ་བརྒྱ་པ་\",\n \"ཤིང་རྟ་སྣ་ཚོགས་ཀྱི་ཚལ་\",\n \"ཤིང་རྟགས་བཙུགས་\",\n \"ཤིང་རྟའི་ཐབས་\",\n \"ཤིང་རྟའི་མདའ་\",\n \"ཤིང་རྟའི་ཚོགས་\",\n \"ཤིང་རྟའི་འཕང་ལོ་ཙམ་\",\n \"ཤིང་རྟའི་སྲོག་ཤིང་ཙམ་གྱི་རྒྱུན་༽་\",\n \"ཤིང་ཤུན་\",\n \"ཤིང་ཤུན་གྱི་སྟན་\",\n \"ཤིང་སཱ་ལ་\",\n \"ཤིན་ཏུ་\",\n \"ཤིན་ཏུ་གནས་པ་\",\n \"ཤིན་ཏུ་གསལ་བའམ་ཤིན་ཏུ་དྲན་པ་\",\n \"ཤིན་ཏུ་ངེས་པའམ་ཤིན་ཏུ་གཏན་ལ་ཕབ་པའམ་ཤིན་ཏུ་བརྟགས་པ་\",\n \"ཤིན་ཏུ་དགའ་བར་བྱེད་པ་\",\n \"ཤིན་ཏུ་དང་བ་\",\n \"ཤིན་ཏུ་དུལ་བ་\",\n \"ཤིན་ཏུ་ཕྱིས་པའམ་བསྲབས་པའམ་བཞར་བ་\",\n \"ཤིན་ཏུ་བརྗོད་དུ་མེད་པ་\",\n \"ཤིན་ཏུ་བརྟན་པ་\",\n \"ཤིན་ཏུ་བསྟེན་\",\n \"ཤིན་ཏུ་བསྡམས་པ་\",\n \"ཤིན་ཏུ་བྱུང་བའམ་བཏོན་པ་\",\n \"ཤིན་ཏུ་མཐོང་\",\n \"ཤིན་ཏུ་མི་གསལ་བའམ་ཅིན་ཏུ་མི་དྲན་པ་\",\n \"ཤིན་ཏུ་ཡོངས་སུ་དག་པ་\",\n \"ཤིན་ཏུ་རིང་བ་\",\n \"ཤིན་ཏུ་རྒྱས་པའི་སྡེ་\",\n \"ཤིན་ཏུ་རྣམ་པར་ཕྱེ་བ་\",\n \"ཤིན་ཏུ་རྫོགས་པར་བྱས་པ\",\n \"ཤིན་ཏུ་སྤྱངས་པ་\",\n \"ཤིན་ཏུ་སྤྱད་པའི་རྒྱལ་མཚན་\",\n \"ཤིན་ཏུ་སྦྱངས་དཀའ་བ་\",\n \"ཤིན་ཏུ་སྦྱངས་པ་ཡང་དག་བྱང་ཆུབ་ཀྱི་ཡན་ལག་\",\n \"ཤིན་ཏེ་མེད་པའམ་སྙིགས་མ་མེད་པ་\",\n \"ཤིན་རྟ་མཁན་ནམ་ལྷམ་མཁན་\",\n \"ཤིས་པར་བརྗོད་པ་\",\n \"ཤིས་མཛད་\",\n \"ཤུ་དག་\",\n \"ཤུ་བ་\",\n \"ཤུག་པ་\",\n \"ཤུགས་ཀྱིས་སམ་མགྱོགས་པས་པ་\",\n \"ཤུགས་ཆེན་མཐུ་ཐོབ་\",\n \"ཤུགས་འཕྱོ་\",\n \"ཤུགས་འཕྱོ་\",\n \"ཤུགས་སམ་མགྱོགས་པ་པ\",\n \"ཤུར་བུ་\",\n \"ཤུར་རྡོག་ (ཤུ་རྡོག་)\",\n \"ཤེད་བུ་\",\n \"ཤེད་ལས་སྐྱེས་\",\n \"ཤེལ་\",\n \"ཤེལ་མིག་\",\n \"ཤེས་ཀྱི་ཁེ་འདོད་པ་\",\n \"ཤེས་གསལ་\",\n \"ཤེས་ནས་དད་པ་\",\n \"ཤེས་པ་པོ་\",\n \"ཤེས་པ་བཅུའི་མིང་ལ་\",\n \"ཤེས་པ་བརྡ་སྤྲོད་པ་\",\n \"ཤེས་པ་བྱེད་པ་མ་ཡིན་པ་\",\n \"ཤེས་པ་ཡང་མེད་དམ་མི་མངོན་པའམ་མི་སྣང་བ་\",\n \"ཤེས་པ་ཡོད་པ་\",\n \"ཤེས་པར་གྱུར་\",\n \"ཤེས་པར་བྱ་བར་སེམས་པ་\",\n \"ཤེས་པར་བྱེད་པའི་གཏན་ཚིགས་\",\n \"ཤེས་བཞིན་གྱི་བརྫུན་སྨྲ་བ་\",\n \"ཤེས་བཞིན་མ་ཡིན་པ་\",\n \"ཤེས་བཞིན་མ་ཡིན་པ་\",\n \"ཤེས་རབ་\",\n \"ཤེས་རབ་ཀྱི་དབང་པོ་\",\n \"ཤེས་རབ་ཀྱི་དབང་པོ་\",\n \"ཤེས་རབ་ཀྱི་ནོར་\",\n \"ཤེས་རབ་ཀྱི་ཕ་རོལ་ཏུ་ཕྱིན་པ་\",\n \"ཤེས་རབ་ཀྱི་ཕ་རོལ་ཏུ་ཕྱིན་པ་བདུན་བརྒྱ་པ་\",\n \"ཤེས་རབ་ཀྱི་ཕ་རོལ་ཏུ་ཕྱིན་པ་བརྒྱད་སྟོང་བ་\",\n \"ཤེས་རབ་ཀྱི་ཕ་རོལ་ཏུ་ཕྱིན་པ་ལྔ་བརྒྱ་པ་\",\n \"ཤེས་རབ་ཀྱི་ཕ་རོལ་ཏུ་ཕྱིན་པ་ལྟར་བཅོས་པ་\",\n \"ཤེས་རབ་ཀྱི་ཕ་རོལ་ཏུ་ཕྱིན་པ་སུམ་བརྒྱ་པ་\",\n \"ཤེས་རབ་ཀྱི་ཕ་རོལ་ཏུ་ཕྱིན་པ་སྟོང་ཕྲག་བརྒྱ་པ་\",\n \"ཤེས་རབ་ཀྱི་ཕུང་པོ་\",\n \"ཤེས་རབ་ཀྱི་བྱིན་གྱིས་བརླབས་པ་\",\n \"ཤེས་རབ་ཀྱི་སྟོབས་\",\n \"ཤེས་རབ་ཀྱི་སྟོབས་\",\n \"ཤེས་རབ་ཀྱིས་རྣམ་པར་གྲོལ་བ་\",\n \"ཤེས་རབ་ཅན་\",\n \"ཤེས་རབ་ཆེ་བ་\",\n \"ཤེས་རབ་ཉམས་ཆུང་བ (ཤེས་རབ་ཞན་པ)\",\n \"ཤེས་རབ་ཉམས་པ་མེད་པ་\",\n \"ཤེས་རབ་དང་ལྡན་པ་\",\n \"ཤེས་རབ་མགྱོགས་པ་\",\n \"ཤེས་རབ་མཉམ་པ་མེད་པ་\",\n \"ཤེས་རབ་མྱུར་བ་\",\n \"ཤེས་རབ་ཞན་བ་\",\n \"ཤེས་རབ་ཟབ་པ་\",\n \"ཤེས་རབ་ཟིལ་གྱིས་མི་ནོན་པ་\",\n \"ཤེས་རབ་འཆལ་བ་\",\n \"ཤེས་རབ་ཡངས་པ་\",\n \"ཤེས་རབ་རིན་པོ་ཆེ་དང་ལྡན་པ་\",\n \"ཤེས་རབ་རྣམ་པ་གསུམ་གྱི་མིང་ལ་\",\n \"ཤེས་རབ་རྣོ་བ་\",\n \"ཤེས་རབ་ཤིན་ཏུ་རྣམ་པར་གྲོལ་བ་\",\n \"ཤེས་རབ་སྒྲོན་མ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"ཤེས་ལྡན་\",\n \"ཤོ་གམ་\",\n \"ཤོ་གམ་པ་\",\n \"ཤོམ་པ་ལ་སྦྱོར་ཀ་བྱེད་པ་\",\n \"ཤོར་བའམ་བཀྲབས་པ་\",\n \"ཤོར་བུ་ཕྲེའུ་\",\n \"ས་\",\n \"ས་ཀུན་ལ་དབང་བའི་རྒྱལ་པོ་\",\n \"ས་ཁོང་ན་གསེར་ཡོད་པ་\",\n \"ས་ག་\",\n \"ས་གནོན་པ་\",\n \"ས་གཞན་དུ་སྤོས་པའི་སྤྱོད་པའི་གཞི་\",\n \"ས་གཤིན་པ་\",\n \"ས་གྱོ་བའི་རྣམ་པའི་མིང་ལ་\",\n \"ས་ཆེན་པོ་པ་\",\n \"ས་ཆེན་པོ་ལ་བརྟེན་ནས་ཚོགས་པའི་དབང་གིས་ས་བོན་ཐམས་ཅད་རྣམ་པར་སྐྱེའོ་\",\n \"ས་དཀར་\",\n \"ས་དང་སྟོབས་དང་མི་འཇིགས་པ་འཆང་བ་\",\n \"ས་ནས་ས་གཞན་དུ་འཕར་བ་\",\n \"ས་ཕུག་\",\n \"ས་བཅུ་བ་\",\n \"ས་བདག་གམ་རྒྱལ་པོ་\",\n \"ས་བརྐོ་བ་\",\n \"ས་བསྲུང་གི་བུ་\",\n \"ས་བོན་གྱི་ཚོགས་དང་འབྱུང་བའི་ཚོགས་འཇིག་པ་\",\n \"ས་བོན་འདེབས་སུ་འཇུག་\",\n \"ས་བོན་རུལ་བ་\",\n \"ས་བླ་\",\n \"ས་ཞག་\",\n \"ས་འཚོ་མ་\",\n \"ས་འཛིན་པ་\",\n \"ས་ཡ་\",\n \"ས་ཡ་\",\n \"ས་རི་\",\n \"ས་ལ་མི་ལྟུང་བར་བྱ་བའི་ཕྱིར་\",\n \"ས་ལ་ཡང་སྟེང་དུ་འབྱུང་བ་དང་བྱེའི་ཟུལ་བྱེད་དེ་དཔེར་ན་ཆུ་ལ་བྱ་བ་བཞིན་ནོ་\",\n \"ས་ལུའི་ལྗང་པ་\",\n \"ས་སྟེང་མཚོན་ཆ་མཆོག་ཏུ་མི་ཟད་པ་\",\n \"ས་སྟེངས་དཔལ་\",\n \"ས་སྟོན་སྡེ་\",\n \"སངས་རྒྱས་\",\n \"སངས་རྒྱས་ཀྱི་གནས་པ་གཉིས་སུ་མེད་པ་དམ་པའི་ཕ་རོལ་ཏུ་སོན་པ་བརྙེས་པ་\",\n \"སངས་རྒྱས་ཀྱི་གནས་པས་གནས་པ་\",\n \"སངས་རྒྱས་ཀྱི་ཆེ་བ་ཉིད་ཚད་མེད་པ་བརྙེས་པ་\",\n \"སངས་རྒྱས་ཀྱི་ཆོས་མ་འདྲེས་པ་བཅུ་བརྒྱད་ཀྱི་མིང་ལ་\",\n \"སངས་རྒྱས་ཀྱི་མཛད་པ་ལྷུན་གྱིས་གྲུབ་པ་རྒྱུན་མི་འཆད་པ་\",\n \"སངས་རྒྱས་ཀྱི་ཚུལ་ལམ་ལུགས་\",\n \"སངས་རྒྱས་ཀྱི་ཞིང་\",\n \"སངས་རྒྱས་ཀྱི་ཞིང་གི་བཀོད་པ་མཐའ་ཡས་པར་སྨོན་པ་ལ་འཇུག་པས་ཡོངས་སུ་གཟུང་བ་\",\n \"སངས་རྒྱས་ཀྱི་ཞིང་སྣ་ཚོགས་ནས་འདུས་པ་\",\n \"སངས་རྒྱས་ཀྱི་ཡང་དག་པར་སྡུད་པ་\",\n \"སངས་རྒྱས་ཀྱི་ཡུལ་\",\n \"སངས་རྒྱས་ཀྱི་ཡུལ་ཐམས་ཅད་ལ་མཁས་པ་\",\n \"སངས་རྒྱས་ཀྱི་རྒྱན་བྱིན་གྱིས་རླབས་པ་\",\n \"སངས་རྒྱས་ཀྱི་རྡོ་རྗེ་འཛིན་བའི་མཚམས་སྦྱོར་བ་\",\n \"སངས་རྒྱས་ཀྱི་ས་\",\n \"སངས་རྒྱས་ཀྱི་ས་ཀུན་ཏུ་འོད་\",\n \"སངས་རྒྱས་ཀྱི་སྐུའི་ཁ་དོག་ཡོངས་སུ་རྫོགས་པ་མངོན་པར་སྒྲུབ་པ་\",\n \"སངས་རྒྱས་ཀྱི་སྤྱན་\",\n \"སངས་རྒྱས་ཉིད་འཐོབ་པོ་\",\n \"སངས་རྒྱས་ཐམས་ཅད་ཀྱི་ཡུལ་ལ་འཇུག་པ་ཡེ་ཤེས་སྣང་བའི་རྒྱན་\",\n \"སངས་རྒྱས་ཐམས་ཅད་དང་མཉམ་པ་ཉིད་བརྙེས་པ་\",\n \"སངས་རྒྱས་དཔག་ཏུ་མེད་པ་ལ་གསོལ་བ་འདེབས་མཁས་པ་\",\n \"སངས་རྒྱས་ཕལ་པོ་ཆེ་\",\n \"སངས་རྒྱས་རྗེས་སུ་དྲན་པ་\",\n \"སངས་རྒྱས་སྐྱོང་\",\n \"སད་པའམ་བགམ་པ་\",\n \"སབ་མ་ (སབ་མོ་)\",\n \"སབ་མོས་བསྐོར་བའམ་རིབ་མས་བསྐོར་བ་\",\n \"སའི་ཁམས་\",\n \"སའི་བཅུད་\",\n \"སའི་མིང་སྟེ་(འབྱུང་པོའི་རྟེན་)\",\n \"སའི་རྡུལ་ཕྲ་རབ་\",\n \"སའི་སྙིང་ཁུ་\",\n \"སའི་སྙིང་པོ་\",\n \"སའི་སྟེང་\",\n \"སའི་སྟེང་ངམ་སའི་གཞི་\",\n \"སར་སྒྲོག་རིགས་ཀྱི་སྡེ་\",\n \"སལ་སལ་\",\n \"སལ་སལ་\",\n \"སཱ་ལུ་\",\n \"སཱི་ཏཱའི་ཀླུའི་རྒྱལ་པོ་\",\n \"སཱུརཡ་དང་མ་འདོམ་ན་ཉི་མའི་སྙིང་པོ (འདོམ་ན་ཉི་གདུག་སྙིང་པོ)\",\n \"སིན་དྷུའི་ཀླུའི་རྒྱལ་པོ་\",\n \"སིལ་སྙན་\",\n \"སུག་སྨེལ་\",\n \"སུན་འབྱིན་\",\n \"སུན་འབྱིན་དུ་རྒོལ་བ་\",\n \"སུམ་ཅུ་\",\n \"སུམ་ཅུ་རྩ་གསུམ་པ་\",\n \"སུམ་ཆ་\",\n \"སུམ་མདོ་\",\n \"སུམ་མདོའི་རིས་མཚན་ཅན་\",\n \"སུམ་རྩེགས་འཇིག་བྱེད་\",\n \"སུའི་\",\n \"སེ་གོལ་གཏོགས་པ་ཙམ་\",\n \"སེ་གོལ་གྱི་སྒྲ་\",\n \"སེ་མོ་དོ་\",\n \"སེ་རལ་ཕྲེང་\",\n \"སེང་གེ་\",\n \"སེང་གེ་ཅང་ཤེས་\",\n \"སེང་གེ་ཟླ་བ་\",\n \"སེང་གེ་འགྲམ་\",\n \"སེང་གེ་རྣམ་པར་འགྱིངས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"སེང་གེ་རྣམ་པར་རོལ་པ་\",\n \"སེང་གེ་རྣམ་པར་རྩེ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"སེང་གེའི་ཁྲི་བཞམས་པ་\",\n \"སེང་གེའི་ཁྲི་བཤམས་པ་\",\n \"སེང་གེའི་རྩལ་\",\n \"སེང་གེའི་སྒྲ་སྒྲོགས་\",\n \"སེང་གེའི་སྒྲའི་ཤུགས་\",\n \"སེང་གེའི་སྟབས་སུ་གཤེགས་པ་\",\n \"སེང་གེས་ཞུས་པ་\",\n \"སེང་རས་\",\n \"སེང་རས་\",\n \"སེང་ལྡེང་\",\n \"སེང་ལྡེང་ཅན་\",\n \"སེང་ལྡེང་ནགས་པ་\",\n \"སེན་མོ་\",\n \"སེན་མོ་གཅིག་པ་\",\n \"སེན་མོ་མཐོ་བ་\",\n \"སེན་མོ་མདོག་སྣུམ་པ་\",\n \"སེན་མོ་ཟངས་ཀྱི་མདོག་ལྟ་བུ་\",\n \"སེམས་ཀུན་གྱིས་བསམས་ཏེ་\",\n \"སེམས་ཀྱི་ཏིང་ངེ་འཛིན་སྤོང་བའི་འདུ་བྱེད་དང་ལྡན་པའི་རྫུ་འཕྲུལ་གྱི་རྐང་པ་\",\n \"སེམས་ཀྱི་དབང་ཐམས་ཅད་ཀྱི་དམ་པའི་ཕ་རོལ་ཏུ་སོན་བ་ཐོབ་པ་\",\n \"སེམས་ཀྱི་བདེ་བའང་རུང་སེམས་ཀྱི་སྡུག་བསྔལ་ཡང་རུང་སྡུག་བསྔལ་ཡང་མ་ཡིན་བདེ་བ་ཡང་མ་ཡིན་པའང་རུང་\",\n \"སེམས་ཀྱི་འདུ་བྱེད་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་ཕྱུང་ན་སེམས་ཀྱི་འདུ་བྱེད་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་ཕྱུང་ངོ་ཞེས་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"སེམས་ཀྱི་འདུ་བྱེད་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་བརྔུབས་ན་སེམས་ཀྱི་འདུ་བྱེད་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་བརྔུབས་སོ་སྙམ་དུ་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"སེམས་ཀྱི་འདུ་བྱེད་ཤིན་ཏུ་སྦྱངས་ནས་དབུགས་ཕྱུང་ན་སེམས་ཀྱི་འདུ་བྱེད་ཤིན་ཏུ་སྦྱངས་ནས་དབུགས་ཕྱུང་ངོ་སྙམ་དུ་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"སེམས་ཀྱི་འདུ་བྱེད་ཤིན་ཏུ་སྦྱངས་ནས་དབུགས་བརྔུབས་ན་སེམས་ཀྱི་འདུ་བྱེད་ཤིན་ཏུ་སྦྱངས་ནས་དབུགས་བརྔུབས་སོ་ཞེས་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"སེམས་ཀྱི་རྗེས་སུ་འཇུག་པ་\",\n \"སེམས་ཀྱི་རྣམ་གྲངས་ཤེས་པ་\",\n \"སེམས་ཀྱི་སྐད་ཅིག་མ་བཅུ་དྲུག་གི་མིང་ལ་\",\n \"སེམས་ཀྱི་སྤྱོད་པ་\",\n \"སེམས་ཀྱིས་ཀུན་ནས་མནར་བ་\",\n \"སེམས་ཁོང་དུ་ཆད་པ་\",\n \"སེམས་ཁྲལ་ཁྲུལ་དུ་གྱུར་པ་\",\n \"སེམས་ཁྲིད་\",\n \"སེམས་གཉིས་ཕྲད་པ་མེད་པ་\",\n \"སེམས་གནས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"སེམས་གཞན་\",\n \"སེམས་གཡེང་བའམ་སེམས་འཁྲུགས་པ་\",\n \"སེམས་གསེར་ལྟར་ཤིན་ཏུ་ཡོངས་སུ་སྦྱང་བ་\",\n \"སེམས་གྱ་གྱུ་ཅན་\",\n \"སེམས་ཅན་\",\n \"སེམས་ཅན་གི་གནས་དགུའི་མིང་ལ་\",\n \"སེམས་ཅན་གྱི་སེམས་དང་སྤྱོད་པ་ཤེས་པ་ཕྲ་མོ་ལ་མོས་ཤིང་འཇུག་པ་ལ་མཁས་པ་\",\n \"སེམས་ཅན་གྱི་སྙིགས་མ་\",\n \"སེམས་ཅན་ཐམས་ཅད་ཀྱི་བསམ་པ་ལེགས་པར་སྒྲུབ་པར་ཤེས་པ་\",\n \"སེམས་ཅན་ཐམས་ཅད་ཀྱི་བྱ་བ་ཅི་ཡོད་པ་སྙམ་པ་\",\n \"སེམས་ཅན་ཐམས་ཅད་ཀྱི་སྟོན་པ་\",\n \"སེམས་ཅན་ཐམས་ཅད་ལ་གཟིགས་པའི་ས་ལ་བཞུག་པ་\",\n \"སེམས་ཅན་ཐམས་ཅད་ལ་ཕན་པར་བརྩོན་པ་\",\n \"སེམས་ཅན་དབུགས་མ་བྱུང་བ་རྣམས་དབུགས་དབྱུང་ངོ་\",\n \"སེམས་ཅན་དམྱལ་བ་\",\n \"སེམས་ཅན་འཚོང་བ་\",\n \"སེམས་ཅན་རྣམས་ནི་ཆགས་པ་མེད་པའི་ཡེ་ཤེས་དམ་པ་ཁྱད་པར་དུ་འཕགས་པ་ཡོངས་སུ་མྱ་ངན་ལས་འདས་པའི་འདི་བཏབ་ཞིང་གང་འདི་ཉན་ཐོས་ཀྱི་ཐེག་པ་དང་རང་སངས་རྒྱས་ཀྱི་ཐེག་པ་དམན་པ་ཚོལ་བ་ཡིན་གྱིས་དེ་དག་ལ་གང་འདི་སངས་རྒྱས་ཀྱི་ཡེ་ཤེས་པ་ལ་དམིགས་པར་བྱ་བའི་ཕིར་རྒྱ་ཆེན་པོ་ལ་བློས་མོས་པར་བྱའོ་ཤེས་སེམས་ཅན་རྣམས་ལ་དེ་བཞིན་གཤེགས་པའི་ཐུགས་རྗེ་ཆེན་པོ་སྐྱེའོ་\",\n \"སེམས་ཅན་སྣོད་དུ་མ་གྱུར་པ་\",\n \"སེམས་ཐམས་ཅད་ལ་སེམས་མཉམ་པ་\",\n \"སེམས་ཐོགས་པ་མེད་པ་\",\n \"སེམས་དང་བ་\",\n \"སེམས་དང་མཚུངས་པར་ལྡན་པའི་འདུ་བྱེད་དང་སེམས་དང་ལྡན་པ་མ་ཡིན་པའི་འདུ་བྱེད་ཀྱི་མིང་ལ་\",\n \"སེམས་དཔའ་ཆེན་པོ་\",\n \"སེམས་དྲང་པོ་\",\n \"སེམས་དྲན་པ་ཉེ་བར་བཞག་པ་\",\n \"སེམས་ནམ་མཁའ་དང་མཚུངས་པ་\",\n \"སེམས་པ་\",\n \"སེམས་པ་\",\n \"སེམས་པད་མ་ལྟར་མ་གོས་པ་\",\n \"སེམས་པའམ་སེམས་ཁོང་དུ་ཆུད་པ་\",\n \"སེམས་བཏུད་པའམ་སེམས་བསྡུས་པ་\",\n \"སེམས་བསྒྱུར་བ་\",\n \"སེམས་མཉམ་པར་བཞག་ན་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"སེམས་མཉམ་པར་མ་གཞག་པ་མེད་པ་\",\n \"སེམས་མི་གཡོས་བ་\",\n \"སེམས་མི་ཞུམ་ཀུན་ཏུ་མི་ཤུམ་\",\n \"སེམས་མེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"སེམས་མེད་པར་གནས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"སེམས་ཞུམ་པ་མེད་པ་\",\n \"སེམས་འཁྲུགས་པ་\",\n \"སེམས་ཡང་དག་པར་མྱོང་ནས་དབུགས་བརྔུབས་ན་སེམས་ཡང་དག་པར་མྱོང་ནས་དབུགས་བརྔུབས་སོ་ཞེས་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"སེམས་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་ཕྱུང་ན་སེམས་ཡང་དག་པར་མྱོང་ཞིང་དབུགས་ཕྱུང་ངོ་ཞེས་ཡང་དག་པ་ཇི་ལྟ་བ་བཞིན་དུ་རབ་ཏུ་ཤེས་སོ་\",\n \"སེམས་རངས་པར་གྱུར་བ་\",\n \"སེམས་རངས་པར་བྱའོ་\",\n \"སེམས་རབ་ཏུ་འཛིན་ནོ་\",\n \"སེམས་རིན་པོ་ཆེ་ལྟར་ཤིན་ཏུ་ཡོངས་སུ་དག་པ་\",\n \"སེམས་རིའི་རྒྱལ་པོ་རི་རབ་ལྟར་མི་སྒུལ་བ་\",\n \"སེམས་རྒྱ་མཚོ་ལྟར་ཟབ་པ་\",\n \"སེམས་རྙེད་པ་དང་བཀུར་སྟི་ཐམས་ཅད་དང་བྲལ་བ་\",\n \"སེམས་ལ་དབང་བ་\",\n \"སེམས་ལས་བྱུང་བའི་ཆོས་རྣམས་\",\n \"སེམས་ཤིན་ཏུ་རྣམ་པར་གྲོལ་བ་\",\n \"སེམས་སིམ་པར་བྱེད་པ་\",\n \"སེའུ་\",\n \"སེར་ཅན་ནམ་གཤེར་ཆེ་བ་\",\n \"སེར་པོ་\",\n \"སེར་སྐྱ་\",\n \"སེར་སྐྱ་\",\n \"སེར་སྐྱའི་གནས་ཀྱི་གྲོང་ཁྱེར་\",\n \"སེར་སྣ་\",\n \"སེར་སྣ་ཅན་\",\n \"སེལ་བ་\",\n \"སེལ་བ་\",\n \"སེལ་བའམ་འཇོམས་པ་\",\n \"སོ་\",\n \"སོ་གཅིག་\",\n \"སོ་གཅིག་པ་\",\n \"སོ་གཉིས་\",\n \"སོ་གདུག་པའམ་སྦྲུལ་གདུག་པ་\",\n \"སོ་གསུམ་\",\n \"སོ་གླང་པོ་ཆེའི་ལྟ་བུ་\",\n \"སོ་ཐམ་ཐམ་པ་\",\n \"སོ་དགུ་\",\n \"སོ་དོག་ (སོ་དག་གོ་)\",\n \"སོ་དྲུག་\",\n \"སོ་ཕག་\",\n \"སོ་ཕག་གི་ལྟ་བུ་\",\n \"སོ་ཕྲོད་ (སོ་བྲོད་)\",\n \"སོ་བ་ལང་གི་ལྟ་བུ་\",\n \"སོ་བདུན་\",\n \"སོ་བཞི་\",\n \"སོ་བརྒྱད་\",\n \"སོ་བོང་བུའི་ལྟ་བུ་\",\n \"སོ་མེད་\",\n \"སོ་རྟའི་ལྟ་བུ་\",\n \"སོ་ལྔ་\",\n \"སོ་ཤིང་\",\n \"སོ་སོ་ཇི་རིགས་པར་\",\n \"སོ་སོ་བ་\",\n \"སོ་སོ་བ་\",\n \"སོ་སོ་ཡང་དག་པར་རིག་པ་ངེས་པ་ལ་འཇུག་པ་\",\n \"སོ་སོ་ཡང་དག་པར་རིག་པ་བཞིའི་མིང་ལ་\",\n \"སོ་སོའམ་རེ་རེ་\",\n \"སོ་སོའི་དཔེར་བརྗོད་\",\n \"སོ་སོའི་བདེན་པ་བསྩལ་བ་\",\n \"སོ་སོའི་སྐྱེ་བོ་\",\n \"སོ་སོར་ངེས་པ་\",\n \"སོ་སོར་ཐར་པ་\",\n \"སོ་སོར་བརྟག་པར་བྱ་བ་\",\n \"སོ་སོར་བརྟགས་པ་མ་ཡིན་པའི་འགོག་པ་\",\n \"སོ་སོར་བརྟགས་པའི་འགོག་པ་\",\n \"སོ་སོར་བཤགས་པའི་ཆོས་བཞི་མིང་ལ་\",\n \"སོ་སོར་བཤགས་པར་བྱ་བ་བཞི་\",\n \"སོ་སོར་མ་རྟོགས་པའི་བཏང་སྙོམས་མེད་པ་\",\n \"སོ་སོར་མདངས་འཕྲོག་མ་\",\n \"སོ་སོར་མྱོང་བར་འགྱུར་\",\n \"སོ་སོར་འགྱེད་པ་\",\n \"སོ་སོར་རྟོག་པའི་ཡེ་ཤེས་\",\n \"སོ་སོར་སྤང་བ་\",\n \"སོ་སྟོ་\",\n \"སོ་སྤྲེའུའི་ལྟ་བུ་\",\n \"སོ་སྲུངས\",\n \"སོང་\",\n \"སོད་ཅིག་\",\n \"སོན་པ་\",\n \"སོམ་ཉིའམ་ནེམ་ནུར་\",\n \"སོའི་དྲི་མའམ་སོ་སྐྱག་།་སོ་རྐྱག་\",\n \"སོར་\",\n \"སོར་\",\n \"སོར་གཉིས་འཁྲིས་པ་\",\n \"སོར་གདུབ་\",\n \"སོར་གདུབ་\",\n \"སོར་གདུབ་\",\n \"སོར་མོ་\",\n \"སོར་མོ་དྲུག་པ་\",\n \"སོར་མོ་བྱིན་གྱིས་ཕྲ་བ་\",\n \"སོར་མོ་མེད་པ་\",\n \"སོར་མོ་འབྱར་བ་\",\n \"སོར་མོ་རིང་བ་\",\n \"སོར་མོ་རྣམས་ཟླུམ་པ་\",\n \"སོར་མོ་རྣམས་རྒྱས་\",\n \"སོར་མོའི་ཕྲེང་བ་ལ་ཕན་པ་\",\n \"སོས་ཀ་ (སོ་ཀ་)\",\n \"སོས་ཀའི་ཚ་བའི་དུས་\",\n \"སོས་ཀའི་ཟླ་བའི་ཐ་མ་ལ་\",\n \"སྐ་རགས་\",\n \"སྐག་\",\n \"སྐད་ཀྱི་དབྱིངས་\",\n \"སྐད་གཅིག་པ་\",\n \"སྐད་ཅིག་\",\n \"སྐད་འབྱིན་པ་\",\n \"སྐབས་\",\n \"སྐབས་འདི་ལ་\",\n \"སྐམ་པར་འགྱུར་\",\n \"སྐམ་ལ་ཕྱིན་པ་\",\n \"སྐམ་ལའམ་ཐང་ལ་\",\n \"སྐམ་ལས་སྐྱེས་པ་\",\n \"སྐར་ཁུང་\",\n \"སྐར་ཁུང་དྲ་བ་ཅན་\",\n \"སྐར་མ་ལ་དགའ་བ་\",\n \"སྐར་མཁན་\",\n \"སྐར་མདའ་ལྟུང་བ་\",\n \"སྐར་མདའི་གདོང་ངམ་སྣང་\",\n \"སྐར་མའམ་སྒྲོན་མའམ་ཏ་ལ་ལ་\",\n \"སྐར་མའི་དཔྱད་\",\n \"སྐར་མའི་ཚོགས་སམ་སྣང་བར་བྱེད་པའི་ཚོགས་\",\n \"སྐར་མའི་འོད་དམ་མེའི་འོད་\",\n \"སྐར་མའི་ཡི་གེ་\",\n \"སྐར་མའི་རིག་པ་\",\n \"སྐར་འབལ་བ་\",\n \"སྐར་འོད་\",\n \"སྐལ་པ་ཅན་དང་སྤུ་ལ་འབབ་པ་\",\n \"སྐལ་བ་ཅན་དུ་འགྱུར་\",\n \"སྐལ་བ་དང་བཅས་པའམ་སྐལ་བ་མཉམ་པ་\",\n \"སྐལ་བ་མཉམ་པའི་རྒྱུ་\",\n \"སྐལ་བའམ་ཆ་\",\n \"སྐལ་ལྡན་\",\n \"སྐས་\",\n \"སྐུ་ཁོ་ལག་ཡངས་ཤིང་བཟང་བ་\",\n \"སྐུ་གཙང་བ་\",\n \"སྐུ་གསུམ་ལ་\",\n \"སྐུ་བསྲུངས་\",\n \"སྐུ་བྱད་བལྟ་བས་ཆོག་མི་ཤེས་པ་\",\n \"སྐུ་བྱི་དོར་བྱས་པ་ལྟ་བུ་\",\n \"སྐུ་མཚུངས་པ་མེད་པ་\",\n \"སྐུ་ཞུམ་པ་མེད་པ་\",\n \"སྐུ་འཁྲིལ་བག་ཆགས་པ་\",\n \"སྐུ་འཇམ་པ་\",\n \"སྐུ་འཇིག་རྟེན་གྱི་ཁམས་ཐམས་ཅད་དུ་རབ་ཏུ་ཁྱབ་པ་\",\n \"སྐུ་ཡན་ལག་དང་ཉིང་ལག་ཤིན་ཏུ་རྣམ་པར་འབྱེད་པ་\",\n \"སྐུ་རིམ་པར་འཚམ་པ་\",\n \"སྐུ་རྒྱས་པ་\",\n \"སྐུ་རྣམ་པར་དག་པ་\",\n \"སྐུ་ལ་སྨེ་བ་དང་གནག་བག་མེད་པ་\",\n \"སྐུ་ཤིན་ཏུ་གཞོན་མདོག་ཅན་\",\n \"སྐུ་ཤིན་ཏུ་གྲིམས་པ་\",\n \"སྐུད་པ་\",\n \"སྐུན་དོང་\",\n \"སྐུའི་སྤུ་གྱེན་དུ་ཕྱོགས་པ་\",\n \"སྐུར་བ་འདེབས་པ་\",\n \"སྐུར་རམ་བཏང་\",\n \"སྐུལ་བྱེ་\",\n \"སྐུས་འཛུགས་པའམ་ཡལ་ཟུག་ཁྲ་བ་\",\n \"སྐེ་ཙེ་འབྲུ་\",\n \"སྐེ་ཚེ་\",\n \"སྐེ་རགས་\",\n \"སྐེ་རགས་ (སྐ་རགས་)\",\n \"སྐེ་རགས་ཕོ་གུ་ཅན\",\n \"སྐེམ་པ་\",\n \"སྐེམ་པ་\",\n \"སྐེམ་པོ་\",\n \"སྐེམ་བྱེད་\",\n \"སྐོ་ཁང་ངམ་བ་གམ་སྐབས་དང་སྦྱར་\",\n \"སྐོ་ཅིག་པ་\",\n \"སྐོ་ད་མྱུང་\",\n \"སྐོག་སྐྱའམ་བྱི་སྐུ་\",\n \"སྐོན་པུ་ཁ་སྦྱར་\",\n \"སྐོམ་པ་\",\n \"སྐོམ་པ་\",\n \"སྐོམ་པ་རྣམས་ནི་ངོམས་པར་གྱུར་\",\n \"སྐོམ་མམ་བཏུང་བ་\",\n \"སྐོམ་འདོད་པ་ལ་སྐོམ་\",\n \"སྐྱ་བསེང་གི་བུ་\",\n \"སྐྱ་བོ་\",\n \"སྐྱ་རེངས་\",\n \"སྐྱ་རེངས་ཐ་མ་\",\n \"སྐྱ་རེངས་དང་པོ་ཤར་བ་\",\n \"སྐྱ་རེངས་བར་མ་\",\n \"སྐྱ་རེངས་ཤར་བ་\",\n \"སྐྱ་རྦ་བ་(སྐྱ་སྦ་པ་)\",\n \"སྐྱ་སྣར་(སྐྱ་ནར་)\",\n \"སྐྱ་སྣར་ཁྲ་བོ་\",\n \"སྐྱ་སྣར་ཆེན་པོ་\",\n \"སྐྱ་སྣར་བཀྲ་ཆེན་\",\n \"སྐྱང་འཕྱེས་ (སྐྱང་འཕྱིས་)\",\n \"སྐྱབས (གློང)\",\n \"སྐྱབས་\",\n \"སྐྱབས་\",\n \"སྐྱབས་ཀྱི་རྣམ་པའི་མིང་ལ་\",\n \"སྐྱབས་གསུམ་དུ་འགྲོ་བའི་མིང་ལ་\",\n \"སྐྱབས་འོས་\",\n \"སྐྱབས་སྒྲོན་རྒྱལ་མཚན་\",\n \"སྐྱིགས་བུ་\",\n \"སྐྱིགས་བུ་\",\n \"སྐྱིལ་མོ་ཀྲུང་བཅས་ཏེ་བཞུགས་སོ་\",\n \"སྐྱུ་རུ་ར་\",\n \"སྐྱུག་ཉེས་\",\n \"སྐྱུག་བྲོ་བ་\",\n \"སྐྱུར་བ་\",\n \"སྐྱུར་རྩི་\",\n \"སྐྱུར་རྩི་ཆེན་པོ་\",\n \"སྐྱེ་གནས་བཞིའི་མིང་ལ་\",\n \"སྐྱེ་དགུའི་བདག་\",\n \"སྐྱེ་དགུའི་བདག་མོ་ཆེན་མོགཽཏམི་\",\n \"སྐྱེ་བ་\",\n \"སྐྱེ་བ་\",\n \"སྐྱེ་བ་གཅིག་གིས་ཐོགས་པ་\",\n \"སྐྱེ་བ་ཐོབ་པ་\",\n \"སྐྱེ་བ་དང་འཕེལ་བ་\",\n \"སྐྱེ་བ་པོ་\",\n \"སྐྱེ་བ་ལ་དབང་བ་\",\n \"སྐྱེ་བའི་ཆར་གཏོགས་པ་\",\n \"སྐྱེ་བའི་སྡུག་བསྔལ་\",\n \"སྐྱེ་བའི་སྲིད་པ་\",\n \"སྐྱེ་བུ་དང་པོ་\",\n \"སྐྱེ་བུ་དམ་པ་\",\n \"སྐྱེ་བོ་དང་མི་མང་པོས་གང་བ་\",\n \"སྐྱེ་བོ་ཕལ་པོ་ཆེའི་\",\n \"སྐྱེ་བོ་མང་པོ་དགའ་བ་\",\n \"སྐྱེ་བོ་མང་པོ་པ་\",\n \"སྐྱེ་མཆེད་དྲུག་\",\n \"སྐྱེ་མཆེད་བཅུ་གཉིས་ཀྱི་མིང་ལ་\",\n \"སྐྱེ་མཆེད་རྣམས་བསྡམས་པ་\",\n \"སྐྱེད་མོའི་ཚལ་\",\n \"སྐྱེད་མོས་ཚལ་བསྲུང་བ་\",\n \"སྐྱེད་མོས་ཚལ་ལམ་ནགས་འདབ་\",\n \"སྐྱེར་པ་\",\n \"སྐྱེས་ཀྱི་དུས་བཏབ་པ་\",\n \"སྐྱེས་ནས་མྱོང་བར་འགྱུར་བ་\",\n \"སྐྱེས་ནས་ཡོངས་སུ་མྱ་ངན་ལས་འདའ་བ་\",\n \"སྐྱེས་པ་\",\n \"སྐྱེས་པ་\",\n \"སྐྱེས་པ་ནས་མ་ནིང་དུ་གྱུར་པ་\",\n \"སྐྱེས་པ་མེད་པར་བུད་མེད་དང་ལམ་དུ་འགྲོ་བ་\",\n \"སྐྱེས་པ་འདྲ་བའི་བུད་མེད་\",\n \"སྐྱེས་པའམ་ཕོ་\",\n \"སྐྱེས་པའི་རབས་ཀྱི་སྡེ་\",\n \"སྐྱེས་བུ་\",\n \"སྐྱེས་བུ་ཁྱུ་མཆོག་\",\n \"སྐྱེས་བུ་ཆེན་པོ་\",\n \"སྐྱེས་བུ་ཆེན་པོའི་མཚན་སུམ་ཅུ་རྩ་གཉིས་ཀྱི་མིང་ལ་\",\n \"སྐྱེས་བུ་དམ་པ་ལ་བརྟེན་པ་\",\n \"སྐྱེས་བུ་བར་མ་\",\n \"སྐྱེས་བུ་བྱེད་པའི་འབྲས་བུ་\",\n \"སྐྱེས་བུ་མཆོག་\",\n \"སྐྱེས་བུ་འདུལ་བའི་ཁ་ལོ་བསྒྱུར་བ་\",\n \"སྐྱེས་བུ་སྐྱེས་མཆོག་\",\n \"སྐྱེས་བུས་མ་བྱས་པ་\",\n \"སྐྱོ་ན་འདོད་ཆགས་དང་བྲལ་བར་འགུར་རོ་\",\n \"སྐྱོ་བ་\",\n \"སྐྱོ་མ་\",\n \"སྐྱོ་སྔོགས་བྱེད་པ་(སྐྱོ་བརྔོགས་བྱེད་པ་)\",\n \"སྐྱོན་\",\n \"སྐྱོན་དུ་བགྲང་བ་\",\n \"སྐྱོན་ནམ་ཉེས་པ་\",\n \"སྐྱོན་ནམ་རྙོག་པ་\",\n \"སྐྱོན་ནས་སྨྲ་བ་\",\n \"སྐྱོན་བསལ་བ་\",\n \"སྐྱོན་མེད་པ་\",\n \"སྐྱོན་མེད་པ་\",\n \"སྐྱོན་མེད་པར་ཞུགས་པ་\",\n \"སྐྱོབ་པ་\",\n \"སྐྱོབ་པ་\",\n \"སྐྱོབ་སྟོན་\",\n \"སྐྲ་\",\n \"སྐྲ་\",\n \"སྐྲ་གྱེན་དུ་འགྲེང་བ་ལྟ་བུ་\",\n \"སྐྲ་ཆན་པས་མི་བྲེག་\",\n \"སྐྲ་དཀར་བ་\",\n \"སྐྲ་དོ་ཀེར་ཅན་ལ་ཆོས་མི་བཤད་\",\n \"སྐྲ་བ་ལང་གི་སྤུ་འདྲ་བ་\",\n \"སྐྲ་བཟེད་\",\n \"སྐྲ་བཤད་འཛིངས་པ་\",\n \"སྐྲ་བྲེག་\",\n \"སྐྲ་མེད་པ་\",\n \"སྐྲ་ཞིག་པ་ལྟ་བུ་\",\n \"སྐྲ་ལྗང་ཁུ་བ་\",\n \"སྐྲ་སེར་\",\n \"སྐྲ་སེར་\",\n \"སྐྲ་སེར་སྐྱ་\",\n \"སྐྲ་སྒྲ་སྒྲེ་ཅན་\",\n \"སྐྲན་\",\n \"སྐྲའི་ཁྱོན་ནམ་བྱིས་པའི་ལམ་\",\n \"སྐྲའི་རྐང་རྟེན་\",\n \"སྐྲའི་རྩེ་མོ་\",\n \"སྐྲའི་རྩེ་མོ་མཐའའམ་ཆ་ཤས་\",\n \"སྐྲོད་པ་\",\n \"སྒ་\",\n \"སྒང་ངམ་མཐོ་བ་\",\n \"སྒལ་ཚིགས་\",\n \"སྒུར་པོ་\",\n \"སྒུར་པོ་\",\n \"སྒུར་པོ་\",\n \"སྒུར་བ་\",\n \"སྒེག་པའམ་རོལ་པའམ་མཛེས་པ་\",\n \"སྒེག་རྫས་\",\n \"སྒེའུ་གཤེར་\",\n \"སྒོ་\",\n \"སྒོ་ཁང་སྟེང་གི་བསིལ་ཁང་\",\n \"སྒོ་གཏན་ཟུང་ཅན་\",\n \"སྒོ་གླེགས་\",\n \"སྒོ་ང་ལས་སྐྱེ་བ་\",\n \"སྒོ་དཔོན་ཆེན་པོ་\",\n \"སྒོ་པ་\",\n \"སྒོ་བསྲུངས་པ་\",\n \"སྒོ་འཕར་\",\n \"སྒོ་ལྕགས་\",\n \"སྒོ་སྐྱེས་\",\n \"སྒོམ་པ\",\n \"སྒོམ་པ་ལ་དགའ་བ་\",\n \"སྒོམས་པས་སྤང་བར་བྱ་བ་\",\n \"སྒོའུ་ཆུང་བསྲུང་བ་\",\n \"སྒྱུ་\",\n \"སྒྱུ་བྱེད་པ་\",\n \"སྒྱུ་མ་\",\n \"སྒྱུ་མ་དང་སྨིག་རྒྱུ་དང་ཆུ་ཟླ་དང་རྨི་ལམ་དང་བྲག་ཆ་དང་མིག་ཡོར་དང་གཟུགས་བརྙན་དང་སྤྲུལ་པ་ལྟ་བུའི་ཆོས་ལ་མོས་པ་\",\n \"སྒྱུ་མ་བྱེད་པའམ་སྒྱུ་མ་བྱེད་པའི་སློབ་མ་མཁས་པ་\",\n \"སྒྱུ་མ་ལ་སོགས་པའི་དཔེའི་མིང་ལ་\",\n \"སྒྱུ་མཁན་\",\n \"སྒྱུ་མེད་པ་\",\n \"སྒྱུ་རྩལ་\",\n \"སྒྱུ་རྩལ་ཤེས་ཀྱི་བུ་རིང་དུ་འཕུར་\",\n \"སྒྱུག་མོ་\",\n \"སྒྱུར་པོ་\",\n \"སྒྲ་\",\n \"སྒྲ་\",\n \"སྒྲ་\",\n \"སྒྲ་གཅན་\",\n \"སྒྲ་གཅན་\",\n \"སྒྲ་གཅན་འཛིན་\",\n \"སྒྲ་གཅན་འཛིན་\",\n \"སྒྲ་གསལ་བ་\",\n \"སྒྲ་གྲག་པར་ཕོག་པ་\",\n \"སྒྲ་གྲགས་གི་བུ་\",\n \"སྒྲ་ངེས་པར་བརྗོད་པ་\",\n \"སྒྲ་ཆེན་པོའི་དབང་ཕྱུག་\",\n \"སྒྲ་ཆེན་པོའི་དབྱངས་ཀྱི་རྒྱལ་པོ་\",\n \"སྒྲ་ཆེན་པོའི་རྗེས་སུ་འཇུག་མ་\",\n \"སྒྲ་ཐམས་ཅད་ཀྱི་རྗེས་སུ་ཞུགས་པ་\",\n \"སྒྲ་ཐམས་ཅད་རྫོགས་པར་བྱེད་པ་\",\n \"སྒྲ་དབྱངས་ཀྱི་ཡི་གེ་དང་བྲལ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"སྒྲ་དབྱངས་ཡིད་དུ་འོང་བ་\",\n \"སྒྲ་དབྱངས་རྣམ་པར་དག་པ་\",\n \"སྒྲ་བརྙན (བྲག་ཅ)\",\n \"སྒྲ་བསྐྱུང་བ་\",\n \"སྒྲ་མཉེན་པའམ་སྙན་པ་\",\n \"སྒྲ་མི་སྙན་\",\n \"སྒྲ་མི་སྙན་གྱི་ཟླ་བ་\",\n \"སྒྲ་མི་སྙན་གྱི་རྒྱལ་པོ་\",\n \"སྒྲ་ལ་མཁས་པ་\",\n \"སྒྲ་ལས་བྱུང་བ་\",\n \"སྒྲ་སྙན་པ (སྐད་སྙན་པ)\",\n \"སྒྲ་སྲོག་གི་བུ་\",\n \"སྒྲག་པའམ་སྒྲ་འབྱིན་པ་\",\n \"སྒྲགས་མངོན་པར་གོ་བར་བྱེད་པ་\",\n \"སྒྲའི་ཁམས་\",\n \"སྒྲའི་ཚངས་པ་\",\n \"སྒྲའི་རིག་པ་\",\n \"སྒྲའི་སྐྱེ་མཆེད་\",\n \"སྒྲིན་པོ་\",\n \"སྒྲིབ་པ་\",\n \"སྒྲིབ་པ་\",\n \"སྒྲིབ་པ་ཐམས་ཅད་རྣམ་པར་སེལ་བ་\",\n \"སྒྲིབ་པ་དང་ཆོད་པ་དང་ཀུན་ནས་ལྡང་བ་ཐམས་ཅད་དང་བྲལ་བ་\",\n \"སྒྲིབ་པ་དང་རྣམ་པར་བྲལ་བ་\",\n \"སྒྲིབ་པ་ཕྲག་བརྒྱ་ན་རྒྱ་སྟོབས་ཞེས་བྱའོ་\",\n \"སྒྲིབ་པ་མི་མངའ་བའི་རྟོགས་པར་ཁོང་དུ་ཆུད་པ་\",\n \"སྒྲིམ་པའམ་འཇུག་པའམ་བཟོ་བ་\",\n \"སྒྲུབ་པ་\",\n \"སྒྲུབ་པ་\",\n \"སྒྲུབ་པ་\",\n \"སྒྲུབ་པ་\",\n \"སྒྲུབ་པ་པོ་\",\n \"སྒྲུབ་པ་ཕུན་���ུམ་ཚོགས་པ་\",\n \"སྒྲུབ་པའམ་བཞག་པ་\",\n \"སྒྲུབ་པའམ་སྦྱར་བ་\",\n \"སྒྲུབ་པའི་གྲོགས་མཆོག་\",\n \"སྒྲེགས་པ་\",\n \"སྒྲོག་གུའི་རྟེན་མ་\",\n \"སྒྲོན་མ་འབར་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"སྒྲོན་མའམ་མར་མེ་\",\n \"སྒྲོལ་བ་\",\n \"སྒྲོལ་བ་པོ་\",\n \"སྒྲོལ་བྱེད་\",\n \"སྒྲོལ་མ་\",\n \"སྔ་དྲོ་\",\n \"སྔ་ན་མེད་པ་\",\n \"སྔ་ཕྱི་\",\n \"སྔ་ཕྱི་མེད་པ་\",\n \"སྔ་ཕྱི་མེད་པ་\",\n \"སྔ་ཚོམས་ཚོགས་\",\n \"སྔགས་ཀྱི་རྒྱུད་\",\n \"སྔགས་ཀྱི་རྒྱུད་ནས་འབྱུང་བའི་མིང་ལ་\",\n \"སྔགས་ཀྱི་སྤྱོད་པ་\",\n \"སྔགས་པ་\",\n \"སྔངས་པར་བྱེད་པ་\",\n \"སྔར་བྱས་པའམ་སྔར་དྲངས་པའམ་སྔོན་འདྲན་པ་\",\n \"སྔས་ཚངས་ཅན་\",\n \"སྔས་ཚངས་ཅན་\",\n \"སྔོ་བསངས་\",\n \"སྔོན་གྱི་གནས་རྗེས་སུ་དྲན་པ་མཁྱེན་པའི་སྟོབས་\",\n \"སྔོན་གྱི་གནས་རྗེས་སུ་དྲན་པ་ཤེས་པ་\",\n \"སྔོན་གྱི་ཆུང་མ་\",\n \"སྔོན་གྱི་ཆོ་ག་\",\n \"སྔོན་གྱི་དུས་སམ་ཚེ་\",\n \"སྔོན་གྱི་མཁན་པོའི་མིང་ལ་\",\n \"སྔོན་གྱི་མཐའ་འམ་མུ་\",\n \"སྔོན་གྱི་མཐའ་འམ་མུ་\",\n \"སྔོན་གྱི་རབས་\",\n \"སྔོན་གྱི་རྒྱལ་བ་་བཞུགས་པ་\",\n \"སྔོན་དུ་འགྲོ་བ་\",\n \"སྔོན་དུ་འདྲེན་པ་\",\n \"སྔོན་པོ་\",\n \"སྔོན་པོར་འགྱུར་དུ་མི་རུང་བའམ་མི་བཏུབ་\",\n \"སྔོན་བྱུང་བ་\",\n \"སྔོན་བྱུང་བ་\",\n \"སྔོན་ཡང་བསོད་ནམས་བྱས་པ་\",\n \"སྔོན་ལོགས་ཀྱི་སྲིད་པ་\",\n \"སྙན་གྱི་དབང་པོ་མ་ཉམས་པ་\",\n \"སྙན་ངག་མཁན་\",\n \"སྙན་དངགས་\",\n \"སྙན་པ་\",\n \"སྙན་པ་\",\n \"སྙན་པའམ་གྲགས་པ་\",\n \"སྙན་པར་སྨྲ་བ་\",\n \"སྙན་མཉམ་པ་\",\n \"སྙན་ཚིག་གི་རིག་བྱེད་\",\n \"སྙན་ཞིང་འཇེབས་པ\",\n \"སྙན་ཤལ་སྟུག་ཅིང་རིང་བ་\",\n \"སྙིགས་མ་ཐམས་ཅད་སེལ་བ་\",\n \"སྙིགས་མ་ལྔའི་མིང་ལ་\",\n \"སྙིང་\",\n \"སྙིང་ག་\",\n \"སྙིང་གདེང་(གདང་)ངམ་གཉའ་\",\n \"སྙིང་དགའ་བར་བྱེད་པ་\",\n \"སྙིང་དུ་སྡུག་པ་\",\n \"སྙིང་པོ་\",\n \"སྙིང་པོ་\",\n \"སྙིང་པོ་ (སྙིང་)\",\n \"སྙིང་པོ་དང་ལྡན་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"སྙིང་པོ་ནི་ཨིན་དྲ་ནི་ལ་\",\n \"སྙིང་པོ་མ་ཡིན་པ་མེད་པར་གྱུར་པ་\",\n \"སྙིང་པོ་མཆོག་\",\n \"སྙིང་པོ་མེད་པ་\",\n \"སྙིང་པོའམ་མངལ་\",\n \"སྙིང་པོའམ་སྲ་བ་\",\n \"སྙིང་རྗེ་\",\n \"སྙིང་རྗེ་ཅན་\",\n \"སྙིང་རྗེ་ཆེན་པོ་པད་མ་དཀར་པོ་\",\n \"སྙིང་རྗེ་བ་\",\n \"སྙིང་རྗེའམ་སྙིང་བརྩེ་བ་\",\n \"སྙིང་རྗེའི་བདག་ཉིད་ཅན་\",\n \"སྙིང་སྟོབས་\",\n \"སྙིང་སྟོབས་ལྡན་\",\n \"སྙེ་མའམ་དོག་པ་\",\n \"སྙེ་མའམ་དོག་པ་\",\n \"སྙོད་ཅིང་སྟོབ་པ་\",\n \"སྙོན་པ་\",\n \"སྙོམ་པའམ་དུབ་པ་\",\n \"སྙོམས་པར་འཇུག་པའི་ཕུང་པོ་\",\n \"སྙོམས་པར་འཇུག་པའི་མིང་ལ་\",\n \"སྙོམས་ལས་\",\n \"སྟ་རེ་\",\n \"སྟག་(གཟིག)\",\n \"སྟན་གཅིག་པ་\",\n \"སྟན་ནང་ཚངས་ཅན་\",\n \"སྟན་ནང་ཚངས་ཅན་\",\n \"སྟན་ལ་མ་བརྟགས་པར་\",\n \"སྟར་བུ་\",\n \"སྟིང་བ་ (རྙིང་པ་)\",\n \"སྟུག་པོ་\",\n \"སྟུག་པོ་བསྐོད་པ་\",\n \"སྟེགས་པའམ་སྒེག་པའམ་འཛིམ་པ་\",\n \"སྟེགས་བུ་\",\n \"སྟེགས་བུ་\",\n \"སྟེགས་སམ་ཟམ་པ་\",\n \"སྟེང་\",\n \"སྟེན་པར་འདོད་པའམ་གནས་པར་འདོད་པ་\",\n \"སྟེའུ་ཀ་ཉ་རྔ་མ་\",\n \"སྟེའུ་ཀ་མ་\",\n \"སྟོང་\",\n \"སྟོང་\",\n \"སྟོང་\",\n \"སྟོང་\",\n \"སྟོང་གཉིས་བར་མའི་འཇིག་རྟེན་གྱི་ཁམས་\",\n \"སྟོང་གསུམ་གྱི་སྟོང་ཆེན་པོའི་འཇིག་རྟེན་གྱི་ཁམས་\",\n \"སྟོང་ཆེ་ཆུང་དང་གླིང་བཞི་དང་ཁམས་གསུམ་དང་འཇིག་རྟེན་པའི་ལྷ་ལ་སོགས་པའི་མིང་ལ་\",\n \"སྟོང་ཆེན་པོ་རབ་ཏུ་འཇོམས་པ་\",\n \"སྟོང་ཉིས་རྒྱ་ལྔ་བཅུ་\",\n \"སྟོང་པ་\",\n \"སྟོང་པ་ཉིད་\",\n \"སྟོང་པ་ཉིད་\",\n \"སྟོང་པ་ཉིད་ཀྱི་སྤྱོད་ཡུལ་པ་་\",\n \"སྟོང་པ་ཉིད་སྟོང་པ་ཉིད་\",\n \"སྟོང་པ་བཅུ་བརྒྱད་ཀྱི་མིང་ལ་\",\n \"སྟོང་འཁྱིལ་མ་\",\n \"སྟོང་སྤྱི་ཕུད་ཀྱི་འཇིག་རྟེན་གྱི་ཁམས་\",\n \"སྟོད་ཀོར་\",\n \"སྟོད་ཀོར་ནང་ཚངས་ཅན་\",\n \"སྟོན་\",\n \"སྟོན་\",\n \"སྟོན་པ་\",\n \"སྟོན་པ་\",\n \"སྟོན་པའི་བསྟན་པ་སྤྱོད་པ་\",\n \"སྟོན་པར་བྱེད་པའམ་མཐོང་པར་བྱེད་པ་\",\n \"སྟོན་མོ་\",\n \"སྟོན་ཟླ་ཐ་ཆུང་ལ་ཐལ་བ་\",\n \"སྟོན་ཟླ་ཐ་ཆུངས་སྨིན་དྲུག་\",\n \"སྟོན་ཟླ་འབྲིང་པོ་ཐ་སྐར་\",\n \"སྟོན་ཟླ་ར་བ་ཁྲུམ་སྨད་\",\n \"སྟོན་ས་\",\n \"སྟོབས་\",\n \"སྟོབས་ཀྱི་ཕ་རོལ་ཏུ་ཕྱིན་པ་\",\n \"སྟོབས་ཆེན་\",\n \"སྟོབས་དང་བདེ་བ་ལ་རེག་པར་གནས་སམ་\",\n \"སྟོབས་པོ་ཆེའི་མདོ་\",\n \"སྟོབས་བཅུ་པ་\",\n \"སྟོབས་བསྐྱེད་པ་\",\n \"སྟོབས་མཆོག་གི་སྟོབས་\",\n \"སྟོབས་མིག་\",\n \"སྟོབས་མིག་ཆེན་པོ་\",\n \"སྟོབས་འཁོར་\",\n \"སྟོབས་འཁོར་ཆེན་པོ་\",\n \"སྟོབས་ཡངས་རྒྱུའི་བློ་གྲོས་\",\n \"སྟོབས་ཡས་\",\n \"སྟོབས་ཡས་\",\n \"སྟོབས་རྣམས་ལ་བརྫི་བ་མེད་པ་\",\n \"སྟོབས་ལྔའི་མིང་ལ་\",\n \"སྟོབས་སྐྱེད་པ་\",\n \"སྠ་ལ་\",\n \"སྠ་ལ་ཆེན་པོ་\",\n \"སྡང་བའམ་འགྲས་པ་\",\n \"སྡང་བའི་སེམས་དང་ལྡན་པ་\",\n \"སྡན་གྲོགས་\",\n \"སྡིག་ཏོ་\",\n \"སྡིག་པ་\",\n \"སྡིག་པ་\",\n \"སྡིག་པ་ཅན་གྱི་ས་\",\n \"སྡིག་པ་བསལ་བའི་ཆོས་ཅན་\",\n \"སྡིག་པ་མི་དགེ་བའི་ཆོས་མ་སྐྱེས་པ་རྣམས་མི་བསྐྱེད་པའི་ཕྱིར་འདུན་པ་བསྐྱེད་དོ་\",\n \"སྡིག་པ་མི་དགེ་བའི་ཆོས་སྐྱེས་པ་རྣམས་སྤོང་བའི་ཕྱིར་འདུན་པ་བསྐྱེད་དོ་\",\n \"སྡིག་པ་ཞི་བ་\",\n \"སྡིག་པ་རྣམ་པར་སྦྱངས་པ་\",\n \"སྡིག་པ་རྣམ་པར་སྦྱངས་པ་\",\n \"སྡིག་པ་སྤངས་པའམ་སྦྱངས་པ་\",\n \"སྡིག་པའམ་གདུག་པ་\",\n \"སྡིག་པའི་ཆོས་ཅན་\",\n \"སྡིག་པའི་ཆོས་ཅན་\",\n \"སྡིག་པའི་འགྲོགས་པོ་དང་བརྟེན་པ\",\n \"སྡིག་འཇོམས་\",\n \"སྡིག་སྡིག་ལྟའི་མཚན་ཉིད་\",\n \"སྡིག་སྦྲུལ་\",\n \"སྡུག་པ་\",\n \"སྡུག་པ་\",\n \"སྡུག་པ་དང་བྲལ་བའི་སྡུག་བསྔལ\",\n \"སྡུག་ཕོངས་པ་\",\n \"སྡུག་བསྔལ་\",\n \"སྡུག་བསྔལ་ཀུན་འབྱུང་བ་སྤང་བར་བྱ་\",\n \"སྡུག་བསྔལ་གསུམ་གྱི་མིང་ལ་\",\n \"སྡུག་བསྔལ་གྱི་དབང་པོ་\",\n \"སྡུག་བསྔལ་གྱི་ཕུང་པོ་ཐམས་ཅད་བཟོད་པའི་ལུས་ལེན་པས་སེམས་ཅན་གྱི་ཁམས་ཐམས་ཅད་ཡོངས་སུ་མི་གཏོང་བ་རྣམས་\",\n \"སྡུག་བསྔལ་གྱི་ཚོར་བས་གཟིར་བ་(སྡུག་བསྔལ་གྱི་ཚོར་བས་ཟིན་པ་)\",\n \"སྡུག་བསྔལ་གྱི་སྡུག་བསྔལ་\",\n \"སྡུག་བསྔལ་བ་\",\n \"སྡུག་བསྔལ་བ་\",\n \"སྡུག་བསྔལ་བ་\",\n \"སྡུག་བསྔལ་བརྒྱད་ཀྱི་མིང་ལ་\",\n \"སྡུག་བསྔལ་མཐར་འབྱིན་པའམ་སྡུག་བསྔལ་གྱི་མཐར་བྱེད་པ་\",\n \"སྡུག་བསྔལ་མི་ཟད་པ་རྩུབ་པ་ཚ་བ་\",\n \"སྡུག་བསྔལ་འགོག་པ་མངོན་དུ་བྱ་\",\n \"སྡུག་བསྔལ་འགོག་པར་འགྱུར་བའི་ལམ་བསྒོམ་པར་བྱ་\",\n \"སྡུག་བསྔལ་འགོག་པར་འགྱུར་བའི་ལམ་བསྒོམས་\",\n \"སྡུག་བསྔལ་འཕགས་པའི་བདེན་པ་ཡོངས་སུ་ཤེས་པར་བྱ་\",\n \"སྡུག་བསྔལ་ཡོངས་སུ་ཤེས་\",\n \"སྡུག་བསྔལ་ལ་ཆོས་ཤེས་པ་\",\n \"སྡུག་བསྔལ་ལ་རྗེས་སུ་རྟོགས་པ་ཤེས་པའི་བཟོད་པ་\",\n \"སྡུག་བསྔལ་ལ་རྗེས་སུ་རྟོགས་པའི་ཤེས་པ་\",\n \"སྡུག་བསྔལ་ཤེས་པ་\",\n \"སྡུང་བསྔལ་ལ་ཆོས་ཤེས་པའི་བཟོད་བ་\",\n \"སྡུད་སྣ་\",\n \"སྡུས་པའི་སྡོམ་\",\n \"སྡེ་པ་གཞན་དག་\",\n \"སྡེ་སྣའམ་སྡེ་དཔོན་\",\n \"སྡེ་སྣོད་གསུམ་\",\n \"སྡེབ་སྦྱོར་\",\n \"སྡེབ་སྦྱོར་བསྡུས་པ་\",\n \"སྡེའམ་དམག་\",\n \"སྡེའམ་དམག་\",\n \"སྡེའམ་ཚན་\",\n \"སྡེའམ་ཚན་ནམ་ཚོགས\",\n \"སྡེར་སྤྱད་ཀྱི་ཞལ་ཏ་པ་\",\n \"སྡོང་པོ་བཀོད་པ་\",\n \"སྡོང་བུ་\",\n \"སྡོང་བུ་ནི་བཻ་ཌཱུ་རྱ་\",\n \"སྡོང་བུའི་སྨན་\",\n \"སྡོང་རིས་\",\n \"སྡོད་\",\n \"སྡོད་ཅིག་\",\n \"སྡོད་ཅིང་འདུག་\",\n \"སྡོད་ཅིང་འདུག་\",\n \"སྡོད་པ་\",\n \"སྡོམ་\",\n \"སྡོམ་པ་\",\n \"སྡོམ་པ་\",\n \"སྡོམ་པ་ཆགས་\",\n \"སྡོམ་བརྩོན་\",\n \"སྡོམས་ཏེ་སྤོང་བ་\",\n \"སྣ་གཅིག་སྤྱོད་པ་\",\n \"སྣ་གླང་པོ་ཆེའི་ལྟ་བུ་\",\n \"སྣ་ཆེན་པོ་ལ་གཏོགས་པ་\",\n \"སྣ་ཕག་གི་ལྟ་བུ་\",\n \"སྣ་བ་ལང་གི་ལྟ་བུ་\",\n \"སྣ་བོང་བུའི་ལྟ་བུ་\",\n \"སྣ་མའི་མེ་ཏོག་\",\n \"སྣ་མའི་མེ་ཏོག་\",\n \"སྣ་མེད་\",\n \"སྣ་ཚོགས་རྒྱན་གྱི་དབྱངས་\",\n \"སྣ་ཚོགས་སྡེ་\",\n \"སྣ་རྟའི་ལྟ་བུ་\",\n \"སྣ་ལེབ་\",\n \"སྣ་སྤྲེའུའི་ལྟ་བུ་\",\n \"སྣ་སྦུབས་གཅིག་པ་\",\n \"སྣག་གི་གཉེན་མཚམས་སམ་ཕའམ་རྒན་ཞུགས་\",\n \"སྣག་ཚ་\",\n \"སྣང་བ་\",\n \"སྣང་བ་\",\n \"སྣང་བ་\",\n \"སྣང་བ་ཐོབ་པ་\",\n \"སྣང་བ་ནས་མུན་ཁྲོད་དུ་འགྲོ་བ་\",\n \"སྣང་བ་ནས་སྣང་བར་འགྲོ་བ་\",\n \"སྣང་བ་མཆེད་པ་\",\n \"སྣང་བ་མཛེས་འབྱུང་\",\n \"སྣང་བ་མེད་པ་\",\n \"སྣང་བ་ཤུགས་མཆོག་རྒྱལ་མཚན་\",\n \"སྣང་བའམ་འོད་\",\n \"སྣང་བར་བྱས་\",\n \"སྣང་བར་བྱེད་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"སྣང་བར་འགྱུར་ཅིང་མི་སྣང་བར་ཡང་འགྱུར་\",\n \"སྣང་ལྡང་གཙུག་ཕུད་ཅན་\",\n \"སྣབས་\",\n \"སྣམ་བུ་\",\n \"སྣམ་བུ་\",\n \"སྣམ་སྦྱར་\",\n \"སྣམ་སྦྱར་ནང་ཤུན་ཅན་\",\n \"སྣམ་སྦྱར་སུམ་རིམ་པ་\",\n \"སྣའི་ཁམས་\",\n \"སྣའི་དབང་པོ་\",\n \"སྣའི་དབང་པོ་\",\n \"སྣའི་བུག་\",\n \"སྣའི་རྣམ་པར་ཤེས་པ་\",\n \"སྣའི་རྣམ་པར་ཤེས་པའི་ཁམས་\",\n \"སྣའི་སྐྱེ་མཆེད་\",\n \"སྣར་བསྐོས་པ་\",\n \"སྣར་བླུགས་པའི་སྤྱད་\",\n \"སྣར་མ་\",\n \"སྣུམ་ཁུར་\",\n \"སྣུམ་པ་\",\n \"སྣུམ་པའམ་གཤེར་བ་\",\n \"སྣོད་སྤྱད་འགེད་པ་\",\n \"སྣོད་སྤྱད་འགྲུབ་པ་\",\n \"སྣྲུབས་\",\n \"སྣྲེལ་གཞི་\",\n \"སྣྲེལ་ཞི་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"སྣྲོན་\",\n \"སྤ་གོང་ངམ་ཡུལ་ཡུལ་བུར་གྱུར་བ་\",\n \"སྤ་སྐོངས་པའམ་སྤ་བཀོད་པའམ་ཟིལ་གྱིས་ནོན་པའམ་ཟིལ་གྱིས་མནན་པ་\",\n \"སྤ་སྒོང་བར་འགྱུར་ཞེའམ་ཡི་བསད་པར་འགྱུར་།་སྤ་གོང་བའམ་ཡི་བསད་པར་འགྱུར་\",\n \"སྤང་བའི་ལྟུང་བྱེད་\",\n \"སྤང་བའི་ལྟུང་བྱེད་སུམ་བཅུའི་མིང་ལ་\",\n \"སྤང་མ་\",\n \"སྤང་ལེབ་ཁང་\",\n \"སྤང་སྤོས་\",\n \"སྤངས་ཏེ་\",\n \"སྤངས་པ་དང་འདོར་བ་ལ་སོགས་པའི་མིང་ལ་\",\n \"སྤངས་པའི་རྗེས་སུ་ཕྱོགས་པ་\",\n \"སྤུ་\",\n \"སྤུ་གྲིའི་སོ་\",\n \"སྤུ་ཟིང་ཞེས་བྱེད་པ་\",\n \"སྤུ་རེ་རེ་ནས་སྐྱེས་ཤིང་གྱས་སུ་འཁྱིལ་བ་\",\n \"སྤུ་ལ་འབབ་པ་དང་རུང་བ་\",\n \"སྤུ་ས་ལ་ལྷུང་བ་ལྟ་བུ་\",\n \"སྤུག་\",\n \"སྤུངས་པའི་དངོས་པོ་མེད་པའམ་ཕུང་པོར་གྱུར་པ་མ་ཡིན་པ\",\n \"སྤུན་\",\n \"སྤེན་པ་\",\n \"སྤེལ་མ་\",\n \"སྤོ་བ་\",\n \"སྤོང་བ་\",\n \"སྤོང་བ་པ་\",\n \"སྤོང་བའམ་འདོར་བ་\",\n \"སྤོད་\",\n \"སྤོད་\",\n \"སྤོབས་པ་གྲོལ་བ་\",\n \"སྤོབས་པ་བརྩེགས་པ་\",\n \"སྤོབས་པ་མཐའ་ཡས་པ་\",\n \"སྤོབས་པ་མཐའ་ཡས་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"སྤོབས་པ་མེད་པ་\",\n \"སྤོབས་པ་རྒྱུན་མི་འཆད་པ་\",\n \"སྤོབས་པ་སོ་སོ་ཡང་དག་པར་རིག་པ་\",\n \"སྤོས་\",\n \"སྤོས་ཀྱི་གླང་པོ་ཆེ་\",\n \"སྤོས་ཀྱི་གླང་པོའི་སྟོབས་\",\n \"སྤོས་ཀྱི་ངད་ལྡན་\",\n \"སྤོས་ཀྱི་རྒྱལ་པོའམ་ལིག་ཤི་བེར་\",\n \"སྤོས་ཀྱི་རྣམ་པའི་མིང་ལ་\",\n \"སྤོས་ཀྱི་ཤིང་\",\n \"སྤོས་དང་ཁ་དོག་དང་དབྱུག་པ་དང་ཕྱེང་བ་ཐོགས་པ་སྤོང་བ་དང་\",\n \"སྤོས་འཚོང་\",\n \"སྤོས་ལྡན་མ་\",\n \"སྤོས་སོ་\",\n \"སྤོས་སྦྱར་བ་\",\n \"སྤྱང་(ཅེ་སྤྱང)\",\n \"སྤྱང་ཀི་\",\n \"སྤྱན་གསལ་རྒྱས་\",\n \"སྤྱན་དཀར་ནག་འབྱེས་ཤིང་པད་མའི་འདབ་མའི་མདངས་པ་ལྟ་བུ་\",\n \"སྤྱན་དྲང་པ་\",\n \"སྤྱན་པ་\",\n \"སྤྱན་མཐོན་མཐིང་ལ་བའི་རྫི་མ་ལྟ་བུ་\",\n \"སྤྱན་ཡངས་པ་\",\n \"སྤྱན་རས་གཟིགས་དབང་ཕྱུག་\",\n \"སྤྱན་རྣམ་པར་དག་པ་\",\n \"སྤྱི་\",\n \"སྤྱི་\",\n \"སྤྱི་གཙུག་རྣམ་པར་ལྟ་བ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"སྤྱི་ཆེན་པོ་\",\n \"སྤྱི་ཐེར་\",\n \"སྤྱི་བོ་\",\n \"སྤྱི་བོ་སྐྱེས་\",\n \"སྤྱི་མོ་\",\n \"སྤྱི་རྟོལ་ཅན་ནམ་ཁྭའམ་བྱ་རོག་\",\n \"སྤྱིན་\",\n \"སྤྱིའི་དོན་\",\n \"སྤྱིའུ་ཚུགས་\",\n \"སྤྱིའུ་ཚུགས་\",\n \"སྤྱིར་བཏང་བ་\",\n \"སྤྱིལ་པོའམ་རྩ་ཁང་\",\n \"སྤྱིས་བརྩན་པའམ་སྤྱི་རྟོལ་ཆེ་བ་\",\n \"སྤྱུག་ཤིག\",\n \"སྤྱོ་བ\",\n \"སྤྱོད་པ་\",\n \"སྤྱོད་པ་དང་ལྡན་པ་ཞེས་བྱ་བའི་ཏིང་ངེ་འཛིན་\",\n \"སྤྱོད་པ་དམན་པ (དམན་པ་ལ་འཇུག་པ)\",\n \"སྤྱོད་པ་མི་གསལ་བ་\",\n \"སྤྱོད་པའི་སྟོབས་\",\n \"སྤྱོད་ཡུལ་\",\n \"སྤྱོད་ཡུལ་གྱིས་མི་འཕྲོགས་པ་\",\n \"སྤྱོད་ཡུལ་ཡོངས་སུ་དག་པ་\",\n \"སྤྱོད་ཡུལ་རན་པར་མཐུན་པ་\",\n \"སྤྱོད་ལམ་\",\n \"སྤྱོད་ལམ་རབ་ཏུ་ཞི་བ་ཕུན་སུམ་ཚོགས་པ་\",\n \"སྤྱོམས་པའམ་སྨོད་པ་\",\n \"སྤྱོས་འམ་བརྒྱད་པའམ་ཚར་གཅད་པ་བྱ་\",\n \"སྤྲ་བའི་མེ་ཏོག་\",\n \"སྤྲགས་པའམ་ཕྱི་བ་\",\n \"སྤྲས་པ་\",\n \"སྤྲས་པ་\",\n \"སྤྲས་པའམ་སྲིངས་པའམ་བཀོད་པ་\",\n \"སྤྲི་\",\n \"སྤྲིན་\",\n \"སྤྲིན་གྱི་རྩ་བ་ནར་བར་སྣང་བ་ལས་ཆར་འབབ་པར་རྗེས་སུ་དཔག་པ\",\n \"སྤྲིན་མེད་\",\n \"སྤྲིན་འཁྲིགས་པར་སྣང་བའམ་མཐོང་བ་\",\n \"སྤྲིན་འབྱུང་\",\n \"སྤྲུག་པ་\",\n \"སྤྲུལ་པ་\",\n \"སྤྲུལ་པའི་སྐུ་\",\n \"སྤྲེའུ་\",\n \"སྤྲེའུ་\",\n \"སྤྲེའུ་\",\n \"སྤྲོ་བ་\",\n \"སྤྲོ་བ་\",\n \"སྤྲོ་བའམ་བརྩོན་པ་\",\n \"སྤྲོས་དང་བྲལ་བ་\",\n \"སྤྲོས་པ་མེད་པ་\",\n \"སྦ་\",\n \"སྦགས་པའམ་ནོས་པ་\",\n \"སྦར་ཡས་\",\n \"སྦར་ཡས་\",\n \"སྦལ་པ་\",\n \"སྦལ་བ་\",\n \"སྦལ་མིག་བྱེ་བ་\",\n \"སྦལ་མིག་བྱེ་བ་\",\n \"སྦལ་མིག་འཐོན་པ་\",\n \"སྦས་པའམ་བསྲུངས་པ་\",\n \"སྦུངས་སྐྱེས་པའམ་པག་རྩ་སྐྱེས་པ་\",\n \"སྦུན་པ་\",\n \"སྦུར་མའི་མེ་ཆུང་ངུ་\",\n \"སྦུར་ལོང་\",\n \"སྦེད་པ་\",\n \"སྦོམ་པོའམ་རགས་པ་\",\n \"སྦོམས་སུའམ་ཟབས་སུ་\",\n \"སྦོར་བུ་ཙེ་ཤེལ་\",\n \"སྦོས་པ་\",\n \"སྦྱངས་པའམ་དུལ་བ་\",\n \"སྦྱངས་པའི་ཡོན་ཏན་\",\n \"སྦྱངས་པའི་ཡོན་ཏན་བཅུ་གཉིས་ཀྱི་མིང་ལ་\",\n \"སྦྱངས་ཚགས་\",\n \"སྦྱར་ཐུག་\",\n \"སྦྱར་བ་\",\n \"སྦྱར་བ་\",\n \"སྦྱར་བ་ལས་བྱུང་བ་\",\n \"སྦྱར་བའི་ཆང་\",\n \"སྦྱར་རོ་\",\n \"སྦྱིན་གནས་\",\n \"སྦྱིན་གནས་\",\n \"སྦྱིན་པ་\",\n \"སྦྱིན་པ་\",\n \"སྦྱིན་པ་\",\n \"སྦྱིན་པ་པོ་\",\n \"སྦྱིན་པ་ལ་འགྱེད་པར་དགའ་བ་\",\n \"སྦྱིན་པ་ལས་བྱུང་བའི་བསོད་ནམས་བྱ་བའི་དངོས་པོ་\",\n \"སྦྱིན་པའི་ཕ་རོལ་ཏུ་ཕྱིན་པ་\",\n \"སྦྱིན་པར་བྱ་བ་\",\n \"སྦྱིན་པར་བྱེད་པ་\",\n \"སྦྱིན་པར་བྱེད་པ་\",\n \"སྦྱིན་བདག་\",\n \"སྦྱིན་བྱེད་མའི་བུ་\",\n \"སྦྱིན་སྲེག་\",\n \"སྦྱིན་སྲེག་གི་ཡོ་བྱད་\",\n \"སྦྱིན་སྲེག་བྱའོ་\",\n \"སྦྱིན་སྲེག་བྱས་\",\n \"སྦྱིན་སྲེག་བྱེད་པ་\",\n \"སྦྱོང་བ་\",\n \"སྦྱོར་བ་\",\n \"སྦྱོར་བ་\",\n \"སྦྱོར་བ་\",\n \"སྦྱོར་བ་ལས་བྱུང་བ་\",\n \"སྦྱོར་བ་ལས་བྱུང་བ་\",\n \"སྦྱོར་བ་སྣ་ཚོགས་\",\n \"སྦྱོར་བའི་སྟོབས་\",\n \"སྦྲ་\",\n \"སྦྲང་གྱབ་ (སྦྲང་ཡབ་)\",\n \"སྦྲང་བུ་\",\n \"སྦྲང་བུ་\",\n \"སྦྲང་བུ་མཆུ་རིངས་\",\n \"སྦྲང་བུའི་སྦྲང་རྩི་\",\n \"སྦྲང་རྩི་\",\n \"སྦྲང་རྩི་\",\n \"སྦྲང་རྩི་\",\n \"སྦྲང་རྩི་མ་སྐོལ་བ\",\n \"སྦྲང་རྩིའི་ཚིགས་མའམ་པྲ་ཚིལ་\",\n \"སྦྲང་རྩིར་བྱེད་\",\n \"སྦྲང་སྐྱབས་\",\n \"སྦྲིད་\",\n \"སྦྲིད་པ་\",\n \"སྦྲུལ་\",\n \"སྦྲུལ་ཁས་བསྡིགས་པ་\",\n \"སྦྲུལ་གྱི་གདེངས་ཀ་\",\n \"སྦྲུལ་གྱི་མགོ་ལྟ་བུ་\",\n \"སྦྲུལ་གྱི་ལུས་བསྐྱིལ་བ་\",\n \"སྦྲུལ་མགོའི་གདེངས་ཀ་ལྟར་སྨད་གཡོགས་མི་བགོ་བར་བསླབ་པར་བྱ་\",\n \"སྦྲུལ་ཚོགས་ཅན་\",\n \"སྨད་གཡོགས་དང་སྟོད་གཡོགས་སུ་བཅས་པ་\",\n \"སྨད་པ་\",\n \"སྨད་པ་\",\n \"སྨད་པ་\",\n \"སྨད་པའམ་སྤྱོ་བ་\",\n \"སྨད་པར་བྱ་བ་\",\n \"སྨད་འཆལ་\",\n \"སྨན་\",\n \"སྨན་གཅེའུ་\",\n \"སྨན་གྱི་བླ་བེེཌཱུརཡ་འོད་ཀྱི་རྒྱལ་པོ\",\n \"སྨན་པ་\",\n \"སྨན་པ་\",\n \"སྨན་པ་\",\n \"སྨན་ཕོར་\",\n \"སྨན་བཀུས་ཏེ་བོར་བ་\",\n \"སྨན་ལྗོངས་\",\n \"སྨིག་མའི་ལྡུམ་བུ་\",\n \"སྨིག་རྐང་\",\n \"སྨིག་རྒྱུ (རི་དྭགས)\",\n \"སྨིག་རྒྱུ་\",\n \"སྨིན་དྲུག་\",\n \"སྨིན་དྲུག་བུ་\",\n \"སྨིན་མ་\",\n \"སྨིན་མ་འཇམ་པ་\",\n \"སྨིན་མ་སྣུམ་པ་\",\n \"སྨིན་མ་སྤུ་མཉམ་བ་\",\n \"སྨིན་ཚུགས་རིང་བ་\",\n \"སྨེ་བ་\",\n \"སྨེ་བའི་དཔྱད་\",\n \"སྨོང་བ་དཀར་པོ་\",\n \"སྨོད་པའམ་འཕྱ་བ་\",\n \"སྨོད་པའི་གྲངས་ལ་\",\n \"སྨོད་པར་བྱེད་པ་\",\n \"སྨོན་གནས་ཤེས་པ\",\n \"སྨོན་ལམ་གྱི་ཕ་རོལ་ཏུ་ཕྱིན་པ་\",\n \"སྨོན་ལམ་གྱི་སྟོབས་\",\n \"སྨོན་ལམ་ལ་གནས་པ་ཐམས་ཅད་དང་བྲལ་བ་\",\n \"སྨོན་ལམ་ལ་དབང་བ་\",\n \"སྨོས་པ་\",\n \"སྨོས་འདྲིན་\",\n \"སྨོས་ཡས་\",\n \"སྨྱན་བྱེད་པ་\",\n \"སྨྱིག་གུ་\",\n \"སྨྱིག་གུ་\",\n \"སྨྱིག་མ་\",\n \"སྨྱུག་མ་མཁན་\",\n \"སྨྱུང་ངམ་གསོར་\",\n \"སྨྱོ་བྱེད་\",\n \"སྨྲ\",\n \"སྨྲ་བ་\",\n \"སྨྲ་བ་གཅེས་སྤྲས་ལ་དགོས་པའི་ཆོས་\",\n \"སྨྲ་བ་ཆད་པས་བཅད་པ་\",\n \"སྨྲ་བ་ལས་བྱུང་བ་\",\n \"སྨྲ་བའམ་བརྗོད་པ་\",\n \"སྨྲ་བའམ་བརྗོད་པ་\",\n \"སྨྲ་བའི་གཞི་\",\n \"སྨྲ་བའི་ཚུལ་\",\n \"སྨྲ་བའི་ཚུལ་ཤེས་པར་བྱ་བ་\",\n \"སྨྲ་བའི་ཞལ་ཆེ་བ་\",\n \"སྨྲ་བའི་རྒྱན་\",\n \"སྨྲ་བའི་སེང་གེ་\",\n \"སྨྲ་འདོད་ཀྱི་བུ་མོའི་བུ་ཡང་དག་་རྒྱལ་བ་ཅན (སྒྲ་བྱེད་ཀྱི་བུ་མོ་ཡང་དག་རྒྱལ་བ་ཅན)\",\n \"སྨྲས་པའམ་བརྗོད་པ་\",\n \"སྨྲས་པའམ་བརྗོད་པ་\",\n \"སྨྲེ་སྔགས་འདོན་པ་\",\n \"སྩོགས་པ་ (སོགས་པ་)\",\n \"སྲ་བ་ཉིད་\",\n \"སྲ་བརྐྱང་\",\n \"སྲ་བརྐྱང་\",\n \"སྲ་བརྐྱང་ཀྱི་གཞི་\",\n \"སྲ་བརྐྱང་གདིང་བ་\",\n \"སྲ་བརྐྱང་ཕྱུང་བ་\",\n \"སྲ་བརྐྱང་བཏིང་བ་\",\n \"སྲ་བརྐྱང་བཏིང་བ་\",\n \"སྲ་ཞིང་བརྟན་པ་\",\n \"སྲ་རྩི་\",\n \"སྲ་རྩི་ཕོག་\",\n \"སྲང་གཅིག་\",\n \"སྲང་ངམ་ཁྱམས་\",\n \"སྲང་ཕྱེད་\",\n \"སྲན་ཆུང་\",\n \"སྲན་མ་\",\n \"སྲན་ཚོད་\",\n \"སྲབ་སྐྱོགས་\",\n \"སྲབ་སྐྱོགས་\",\n \"སྲབ་སྐྱོགས་སམ་སྣ་ཐག་\",\n \"སྲམ་\",\n \"སྲི་ཤིང་སྣ་མ་\",\n \"སྲིད་དུ་\",\n \"སྲིད་པ་\",\n \"སྲིད་པ་\",\n \"སྲིད་པ་ཀུན་ཏུ་སྦྱོར་བ་ཡོངས་སུ་ཟད་པ་\",\n \"སྲིད་པ་ཐ་མ་པ་\",\n \"སྲིད་པ་འཕོ་བ་\",\n \"སྲིད་པའི་དགོན་པ་\",\n \"སྲིད་པའི་བཙོན་ར་\",\n \"སྲིད་པའི་ཚད་མ་\",\n \"སྲིད་པའི་འདོད་ཆགས་པ་\",\n \"སྲིད་མཐར་འབྱིན\",\n \"སྲིད་སྒྲུབ་\",\n \"སྲིད་སྲུངས་གི་རིག་བྱེད་\",\n \"སྲིན་ཁོག་\",\n \"སྲིན་པོ་\",\n \"སྲིན་བལ་\",\n \"སྲིན་བལ་གྱི་སྟན་\",\n \"སྲིན་བུ་\",\n \"སྲིན་བུ་པད་མ་\",\n \"སྲིན་བུ་ཕྲེའུ་\",\n \"སྲིན་བུ་མེ་ཁྱེར་\",\n \"སྲིན་ལག\",\n \"སྲིལ་ལམ་མུག་པ་\",\n \"སྲུ་མོ་\",\n \"སྲུང་མཛད་\",\n \"སྲུབ་མ་\",\n \"སྲུལ་པོ་\",\n \"སྲེ་(སྟེ་)\",\n \"སྲེ་ད་\",\n \"སྲེ་བོའམ་སྟག་རིའམ་ཁྲ་བའམ་འདྲེས་པ་\",\n \"སྲེག་གོ་ཚིག་གོ\",\n \"སྲེག་པ་\",\n \"སྲེག་པ་\",\n \"སྲེག་བླུག་གི་རྫས་\",\n \"སྲེད་པ་\",\n \"སྲེད་པ་དང་བྲལ་བ་\",\n \"སྲེད་པ་ལས་ཡོངས་སུ་གྲོལ་བ་\",\n \"སྲེད་མེད་བུའི་སྟོབས་\",\n \"སྲོ་མ་\",\n \"སྲོ་མ་\",\n \"སྲོག་\",\n \"སྲོག་ཀྱང་གཞན་ལ་ལུས་ཀྱང་གཞན་\",\n \"སྲོག་གཅོད་པ་སྤོང་བ་\",\n \"སྲོག་གཅོད་པ་སྤོང་བ་\",\n \"སྲོག་གི་དབང་པོ་\",\n \"སྲོག་གི་དབང་པོ་\",\n \"སྲོག་ཆགས་\",\n \"སྲོག་ཆགས་ཀོ་ཀའམ་མཙ་མིམ\",\n \"སྲོག་ཆགས་དང་བཅས་པ་ལ་སྤྱོད་པ་\",\n \"སྲོག་ཆགས་དང་བཅས་པའི་ཆུ་ལ་སྤྱོད་པ་\",\n \"སྲོག་ཆགས་སུ་གྱུར་པ་\",\n \"སྲོག་ཆགས་སུ་གྱུར་བའམ་སྲོག་ཆགས་འབྱུང་བ་\",\n \"སྲོག་དང་ཕྲལ་བ་\",\n \"སྲོག་དེ་ལུས་དེ་ཡིན་\",\n \"སྲོག་བཅད་པ་\",\n \"སྲོག་ཤིང་\",\n \"སྲོག་ཤིང་ངམ་ཡུ་བ་\",\n \"སླ་ང་\",\n \"སླར་གཤེགས་སུ་གསོལ་བ་\",\n \"སླར་གསུངས་པ་\",\n \"སླར་གྲུངས་པ་\",\n \"སླར་བཏང་བའམ་ལན་བཏབ་པ་\",\n \"སླར་བཟློག་པ་\",\n \"སླར་ལོག་ནས་\",\n \"སླར་སྨྲ་བའམ་སླར་ཟློས་པ་\",\n \"སླར་སྨྲ་བར་བྱ་བ་\",\n \"སླུ་བ་\",\n \"སླུ་བ་\",\n \"སླུ་བ་\",\n \"སླུ་བའི་ཆོས་ཅན་\",\n \"སླེ་གདམས་པ་\",\n \"སློག་དང་བཅས་\",\n \"སློག་པ་\",\n \"སློང་བ་\",\n \"སློང་བ་པོ་\",\n \"སློང་བའམ་ལྡང་བར་བྱེད་པ་\",\n \"སློང་བའི་ཕྱིར་དུ་དགེ་སློང་\",\n \"སློབ་དཔོན་\",\n \"སློབ་དཔོན་གྱི་དཔེ་མཁྱུད་\",\n \"སློབ་དཔོན་དགོངས་སུ་གསོལ་\",\n \"སློབ་པ་\",\n \"སློབ་པ་བསད་པ་\",\n \"སློབ་པ་ཡང་མ་ཡིན་མི་སློབ་པ་ཡང་མ་ཡིན་\",\n \"སློབ་མ་\",\n \"སློབ་མ་ལྡོངས་ཤེས་སྨྲ་བ་(སློབ་པས་ལྡོངས་ཤེས་སྨྲས་པ་)\",\n \"སློབ་མ་ཤིན་ཏུ་དུལ་བ་མཐའ་ཡས་པའི་ཚོགས་མངའ་བ་\",\n \"ཧ་ཅང་ཐུང་བ་\",\n \"ཧ་ཅང་འཇོལ་བ་མ་ཡིན་པ་\",\n \"ཧ་ཅང་འཕྲོ་བར་མི་བྱེད་\",\n \"ཧ་ཅང་ཡང་མི་གྲང་\",\n \"ཧ་ཅང་ཡང་མི་ཉེ་\",\n \"ཧ་ཅང་ཡང་མི་དྲོ་\",\n \"ཧ་ཅང་ཡང་མི་རིང་\",\n \"ཧ་ཅང་རིང་བ་\",\n \"ཧ་ཅང་སྦོམ་པོ་\",\n \"ཧ་ཅང་སྨྲ་བ་མང་དུ་མི་བྱ་\",\n \"ཧ་ཅན་རྩེངས་པ་མ་ཡིན་པ་\",\n \"ཧན་ཏང་གིས་བཏབ་པའམ་སློང་བར་གྱུར་བ་\",\n \"ཧུ་ཧུ་མི་བྱ་\",\n \"ཧུད་ཧུད་པོ་\",\n \"ཧྭགས་\",\n \"ཨ་ག་རུ་\",\n \"ཨ་ག་རུ་ནག་པ་\",\n \"ཨ་གས་\",\n \"ཨ་ཆུ་ཟེར་བ་\",\n \"ཨ་ཏི་མུག་ཏ་ཀ་\",\n \"ཨ་རུ་ར་\",\n \"ཨ་ལ་ལ་ཞེས་ཅ་ཅོ་དང་གཞའི་སྒྲ\",\n \"ཨ་ས་ན་\",\n \"ཨ་སྨ་ཀའི་རྒྱལ་པོ་\",\n \"ཨར་ཀའི་མེ་ཏོག་\",\n \"ཨར་མོ་ནིག་ལྟ་བུའི་རྡོ་ལེབ་\",\n \"ཨིཎྜྲ་ཉི་ལ\",\n \"ཨུ་ཏ་པ་ལ་ལྟར་གས་པ་\",\n \"ཨུ་ཤཱི་རའི་རི་\",\n \"ཨུཏ་པ་ལ་\",\n \"ཨུཏ་པ་ལའི་རྩ་བ་\",\n \"ཨུཏ་པ་ལའི་རྩ་བ་\",\n \"ཨུཏཔལའི་མདོག་\",\n \"ཨེ་མའམ་ཨ་ལ་ལ་\",\n \"ཨེ་རན་ད\",\n \"ཨོན་ཏང་ངམ་འོ་ན་\",\n \"ཨོལ་མདུད\"\n];\nmodule.exports=entries;",
    "var indexes=[\n 8556,\n 7747,\n 9535,\n 9531,\n 9509,\n 6101,\n 1077,\n 3703,\n 6338,\n 6378,\n 3814,\n 6102,\n 5733,\n 4281,\n 5732,\n 5735,\n 5734,\n 501,\n 4302,\n 4292,\n 3744,\n 9404,\n 9511,\n 6038,\n 6375,\n 2914,\n 5909,\n 6310,\n 6316,\n 6143,\n 3721,\n 4505,\n 3723,\n 4289,\n 4372,\n 2113,\n 7047,\n 5520,\n 2306,\n 7636,\n 3559,\n 669,\n 4454,\n 2219,\n 6356,\n 696,\n 7442,\n 5277,\n 2368,\n 2301,\n 7586,\n 2211,\n 6355,\n 728,\n 3141,\n 3153,\n 5416,\n 3147,\n 3138,\n 5415,\n 3150,\n 3144,\n 1725,\n 3675,\n 3700,\n 7438,\n 453,\n 6801,\n 486,\n 491,\n 7443,\n 6974,\n 6473,\n 582,\n 326,\n 702,\n 700,\n 1860,\n 2234,\n 6440,\n 1083,\n 3764,\n 5754,\n 4005,\n 6325,\n 2239,\n 2204,\n 701,\n 325,\n 6662,\n 2237,\n 6232,\n 7576,\n 6692,\n 4850,\n 6691,\n 249,\n 7634,\n 1741,\n 3610,\n 1245,\n 1383,\n 1275,\n 1274,\n 1277,\n 1276,\n 1293,\n 4453,\n 6713,\n 1291,\n 2743,\n 1073,\n 2179,\n 2178,\n 7619,\n 89,\n 8107,\n 6111,\n 6343,\n 5892,\n 8991,\n 9247,\n 9464,\n 3956,\n 4296,\n 4112,\n 8996,\n 8993,\n 8995,\n 8992,\n 8994,\n 3281,\n 8999,\n 4273,\n 6909,\n 5609,\n 5605,\n 6561,\n 5093,\n 6907,\n 6906,\n 6908,\n 6560,\n 6559,\n 189,\n 190,\n 191,\n 195,\n 194,\n 193,\n 192,\n 5603,\n 3810,\n 5045,\n 4037,\n 6019,\n 4099,\n 4100,\n 5111,\n 2543,\n 5517,\n 3359,\n 3588,\n 4388,\n 3626,\n 4333,\n 5002,\n 5003,\n 5004,\n 3391,\n 499,\n 3444,\n 3436,\n 3418,\n 3428,\n 3423,\n 3405,\n 3413,\n 3378,\n 3379,\n 3402,\n 3429,\n 3408,\n 3395,\n 3393,\n 3421,\n 3384,\n 3407,\n 3392,\n 3370,\n 3401,\n 3394,\n 3375,\n 3373,\n 3374,\n 3451,\n 3398,\n 3439,\n 3426,\n 3445,\n 3432,\n 3435,\n 3382,\n 1451,\n 3376,\n 3409,\n 3387,\n 3440,\n 3417,\n 3442,\n 3377,\n 3380,\n 3390,\n 3431,\n 3438,\n 3427,\n 3396,\n 3372,\n 3411,\n 3381,\n 3420,\n 3412,\n 3446,\n 3425,\n 3385,\n 3406,\n 3434,\n 3410,\n 3400,\n 3404,\n 3419,\n 3437,\n 3433,\n 3383,\n 3416,\n 3389,\n 3424,\n 3386,\n 3388,\n 3371,\n 3403,\n 3397,\n 3443,\n 3441,\n 3399,\n 3422,\n 3415,\n 3430,\n 3414,\n 3369,\n 3627,\n 6545,\n 937,\n 8874,\n 4110,\n 7415,\n 8715,\n 9100,\n 2608,\n 5630,\n 6899,\n 2527,\n 940,\n 9578,\n 1956,\n 9318,\n 2186,\n 2185,\n 5383,\n 780,\n 7713,\n 9317,\n 7397,\n 60,\n 7398,\n 1994,\n 8619,\n 2326,\n 2763,\n 1884,\n 4531,\n 4523,\n 4123,\n 5828,\n 5679,\n 7665,\n 8510,\n 8509,\n 5674,\n 5663,\n 9475,\n 9557,\n 5673,\n 9486,\n 9112,\n 9113,\n 8648,\n 5942,\n 5925,\n 7198,\n 2391,\n 8714,\n 8724,\n 8713,\n 8711,\n 8712,\n 1480,\n 3837,\n 892,\n 7801,\n 2138,\n 7799,\n 7800,\n 417,\n 7302,\n 129,\n 4111,\n 5180,\n 8777,\n 8893,\n 8504,\n 4780,\n 5049,\n 4148,\n 7236,\n 4147,\n 5067,\n 1964,\n 4653,\n 7320,\n 5288,\n 7269,\n 5484,\n 8936,\n 5859,\n 1129,\n 5929,\n 7498,\n 5342,\n 4096,\n 2040,\n 3030,\n 3044,\n 3045,\n 2210,\n 7341,\n 9279,\n 5763,\n 6661,\n 4526,\n 5688,\n 5060,\n 5059,\n 5110,\n 5220,\n 2206,\n 8566,\n 7123,\n 2758,\n 3661,\n 2638,\n 6631,\n 8143,\n 7980,\n 7852,\n 8144,\n 8094,\n 514,\n 6659,\n 3848,\n 30,\n 3269,\n 5070,\n 5071,\n 9623,\n 5021,\n 5675,\n 5677,\n 5676,\n 3978,\n 5696,\n 6960,\n 7421,\n 8734,\n 4007,\n 3130,\n 6848,\n 4006,\n 4027,\n 1469,\n 3783,\n 5217,\n 5065,\n 9344,\n 8515,\n 9401,\n 9544,\n 2553,\n 5522,\n 18,\n 7284,\n 300,\n 6814,\n 4238,\n 4070,\n 7030,\n 6817,\n 4069,\n 4068,\n 8756,\n 5062,\n 3094,\n 4197,\n 7832,\n 8133,\n 7960,\n 8134,\n 8090,\n 9655,\n 6239,\n 7973,\n 9516,\n 8571,\n 8126,\n 9182,\n 8187,\n 7830,\n 7096,\n 8840,\n 7845,\n 8659,\n 9551,\n 8649,\n 6058,\n 9183,\n 9184,\n 7094,\n 9517,\n 9532,\n 8336,\n 9325,\n 2806,\n 3351,\n 3352,\n 7988,\n 8621,\n 9083,\n 5821,\n 6057,\n 2067,\n 2030,\n 1638,\n 9452,\n 2521,\n 2056,\n 7263,\n 3076,\n 3870,\n 4345,\n 4346,\n 9263,\n 3874,\n 8852,\n 5907,\n 5992,\n 6425,\n 1108,\n 4280,\n 5033,\n 3447,\n 5569,\n 5588,\n 5590,\n 6546,\n 5647,\n 5639,\n 6607,\n 5640,\n 5634,\n 5623,\n 5652,\n 5633,\n 6466,\n 7594,\n 8774,\n 7765,\n 4841,\n 1749,\n 7192,\n 9260,\n 3099,\n 41,\n 7193,\n 2341,\n 5628,\n 6649,\n 5572,\n 5645,\n 5632,\n 5650,\n 5653,\n 5631,\n 4317,\n 9233,\n 5437,\n 5150,\n 4936,\n 3088,\n 8202,\n 8122,\n 7954,\n 8183,\n 6728,\n 231,\n 7732,\n 6911,\n 6839,\n 751,\n 6720,\n 6719,\n 4806,\n 6618,\n 6892,\n 7760,\n 1726,\n 4754,\n 4658,\n 1483,\n 4227,\n 9665,\n 9681,\n 3682,\n 3704,\n 8604,\n 1847,\n 7226,\n 5346,\n 9627,\n 5943,\n 5106,\n 5345,\n 7337,\n 8116,\n 8117,\n 8682,\n 5799,\n 8678,\n 4310,\n 2077,\n 6807,\n 8203,\n 4661,\n 1070,\n 9594,\n 8313,\n 1803,\n 1802,\n 22,\n 7793,\n 371,\n 4189,\n 9586,\n 1754,\n 4076,\n 3899,\n 4251,\n 7110,\n 6962,\n 9295,\n 9296,\n 2722,\n 8024,\n 7731,\n 5741,\n 9569,\n 2993,\n 4755,\n 5125,\n 4588,\n 1623,\n 4698,\n 1337,\n 8115,\n 7803,\n 2833,\n 7291,\n 7834,\n 8137,\n 7962,\n 8138,\n 8091,\n 8939,\n 7426,\n 2033,\n 3050,\n 7791,\n 6050,\n 7671,\n 3078,\n 7463,\n 3913,\n 6894,\n 2969,\n 1201,\n 2676,\n 1640,\n 1653,\n 9430,\n 4519,\n 5286,\n 8738,\n 6663,\n 6664,\n 1477,\n 9178,\n 5749,\n 5721,\n 8046,\n 7910,\n 1503,\n 6702,\n 7003,\n 7745,\n 9084,\n 8572,\n 8651,\n 6939,\n 6184,\n 6172,\n 6171,\n 9119,\n 6271,\n 3886,\n 6283,\n 5737,\n 6192,\n 6525,\n 3480,\n 9036,\n 9102,\n 5487,\n 3824,\n 4015,\n 9356,\n 6788,\n 9515,\n 5155,\n 7693,\n 4554,\n 2479,\n 5460,\n 5461,\n 7292,\n 5784,\n 1834,\n 9293,\n 5680,\n 9197,\n 9432,\n 8591,\n 2693,\n 2202,\n 8561,\n 8610,\n 126,\n 8786,\n 2089,\n 1219,\n 1941,\n 7414,\n 597,\n 2705,\n 7274,\n 7386,\n 8820,\n 8900,\n 9335,\n 4297,\n 8809,\n 3129,\n 8875,\n 8873,\n 9229,\n 7375,\n 7038,\n 3620,\n 639,\n 558,\n 5158,\n 5678,\n 5724,\n 5783,\n 5782,\n 611,\n 7807,\n 7727,\n 8485,\n 2617,\n 3090,\n 6452,\n 3775,\n 8768,\n 2207,\n 3082,\n 3089,\n 6766,\n 4744,\n 3999,\n 4493,\n 4548,\n 4547,\n 1670,\n 1780,\n 3726,\n 3360,\n 3510,\n 4503,\n 3521,\n 7077,\n 7078,\n 6071,\n 66,\n 6876,\n 6647,\n 6537,\n 6469,\n 88,\n 3474,\n 3496,\n 3505,\n 679,\n 1425,\n 5835,\n 1495,\n 9292,\n 5838,\n 9237,\n 4441,\n 7330,\n 7331,\n 4713,\n 2639,\n 7249,\n 2918,\n 1738,\n 9644,\n 7294,\n 9534,\n 1742,\n 2512,\n 2514,\n 4603,\n 4646,\n 4579,\n 4640,\n 7821,\n 7689,\n 7688,\n 7683,\n 754,\n 2515,\n 2495,\n 2106,\n 5614,\n 7238,\n 5822,\n 1796,\n 3222,\n 5576,\n 5627,\n 3000,\n 2513,\n 2561,\n 4671,\n 8080,\n 8081,\n 8179,\n 7888,\n 8018,\n 7883,\n 8013,\n 7856,\n 7984,\n 8076,\n 8178,\n 7943,\n 7944,\n 8077,\n 6044,\n 8019,\n 7889,\n 6640,\n 6641,\n 7983,\n 7855,\n 4691,\n 7885,\n 8015,\n 7884,\n 8014,\n 7881,\n 8011,\n 7882,\n 8012,\n 7887,\n 8017,\n 1185,\n 9219,\n 4746,\n 8790,\n 8791,\n 8887,\n 2878,\n 4662,\n 4900,\n 2879,\n 8631,\n 2881,\n 6645,\n 5766,\n 7817,\n 7802,\n 6256,\n 4500,\n 5508,\n 1752,\n 1490,\n 1518,\n 1501,\n 6489,\n 2762,\n 2610,\n 9041,\n 7521,\n 9494,\n 8922,\n 4241,\n 3547,\n 4247,\n 4242,\n 8876,\n 8886,\n 6930,\n 5325,\n 3761,\n 3316,\n 3320,\n 9177,\n 9188,\n 7108,\n 8609,\n 6127,\n 6578,\n 569,\n 3576,\n 4939,\n 318,\n 6682,\n 3605,\n 1582,\n 4095,\n 1951,\n 6867,\n 3212,\n 2140,\n 1921,\n 1927,\n 2126,\n 1577,\n 414,\n 1950,\n 2248,\n 7060,\n 7098,\n 4855,\n 5381,\n 7254,\n 2945,\n 415,\n 2249,\n 3213,\n 8044,\n 7710,\n 4856,\n 7255,\n 7709,\n 5375,\n 808,\n 4462,\n 624,\n 5747,\n 866,\n 4404,\n 7874,\n 5941,\n 5899,\n 3674,\n 6073,\n 9674,\n 5748,\n 6070,\n 4972,\n 7158,\n 5428,\n 5287,\n 9622,\n 9085,\n 8653,\n 7179,\n 9621,\n 4431,\n 4432,\n 6131,\n 3609,\n 4035,\n 4034,\n 4036,\n 6924,\n 3817,\n 7153,\n 8607,\n 2072,\n 4538,\n 3036,\n 6819,\n 2063,\n 2602,\n 2603,\n 7379,\n 7479,\n 2601,\n 3991,\n 9455,\n 5344,\n 3139,\n 7380,\n 7411,\n 5207,\n 8016,\n 7886,\n 2962,\n 5170,\n 4726,\n 5171,\n 5596,\n 5595,\n 6478,\n 3471,\n 3294,\n 8477,\n 4911,\n 8851,\n 4536,\n 3998,\n 1934,\n 7825,\n 5440,\n 5804,\n 5801,\n 5802,\n 3476,\n 4309,\n 5800,\n 6956,\n 6955,\n 4502,\n 4402,\n 3911,\n 8872,\n 7099,\n 8884,\n 4742,\n 471,\n 3025,\n 1364,\n 9526,\n 3176,\n 3173,\n 2742,\n 2895,\n 7513,\n 4627,\n 2108,\n 4484,\n 648,\n 9166,\n 7986,\n 8057,\n 6247,\n 5550,\n 4433,\n 1496,\n 409,\n 2923,\n 69,\n 338,\n 2898,\n 9624,\n 8204,\n 8306,\n 8314,\n 8427,\n 1107,\n 9031,\n 9032,\n 5467,\n 6138,\n 6137,\n 6288,\n 6202,\n 4353,\n 6201,\n 6091,\n 6198,\n 6199,\n 6197,\n 6169,\n 685,\n 6092,\n 92,\n 8539,\n 3945,\n 3465,\n 1401,\n 6139,\n 6200,\n 3946,\n 6285,\n 2586,\n 4839,\n 5121,\n 1625,\n 6041,\n 8816,\n 9242,\n 8868,\n 9427,\n 3711,\n 2492,\n 7475,\n 7476,\n 8552,\n 8597,\n 1875,\n 8501,\n 4000,\n 1846,\n 8799,\n 9435,\n 8801,\n 8802,\n 8896,\n 8800,\n 6424,\n 6426,\n 4940,\n 8365,\n 4143,\n 5703,\n 1865,\n 202,\n 200,\n 1852,\n 1881,\n 7643,\n 201,\n 1874,\n 6237,\n 8764,\n 1902,\n 5369,\n 77,\n 6372,\n 9303,\n 9407,\n 2099,\n 7276,\n 6608,\n 5959,\n 6380,\n 1061,\n 2629,\n 5598,\n 5053,\n 6804,\n 2255,\n 312,\n 5142,\n 4234,\n 9133,\n 9181,\n 9246,\n 5999,\n 2489,\n 7490,\n 4444,\n 9224,\n 708,\n 6730,\n 3681,\n 9577,\n 9207,\n 8583,\n 9206,\n 8582,\n 7484,\n 6207,\n 1251,\n 2643,\n 3243,\n 5160,\n 4003,\n 301,\n 5602,\n 2695,\n 6803,\n 7549,\n 600,\n 5468,\n 3193,\n 7646,\n 8924,\n 4056,\n 9584,\n 5902,\n 5903,\n 656,\n 7024,\n 2729,\n 1114,\n 7854,\n 7982,\n 2000,\n 5138,\n 4773,\n 2102,\n 5119,\n 3672,\n 7827,\n 8173,\n 7930,\n 8060,\n 6800,\n 5246,\n 9474,\n 9473,\n 8658,\n 9118,\n 9117,\n 4924,\n 1965,\n 8807,\n 7086,\n 7085,\n 7087,\n 3037,\n 9116,\n 6684,\n 6683,\n 4012,\n 3964,\n 1978,\n 4137,\n 9506,\n 4319,\n 6054,\n 6569,\n 4695,\n 1500,\n 4461,\n 9018,\n 3367,\n 4916,\n 3586,\n 3336,\n 5820,\n 3347,\n 1099,\n 1102,\n 4650,\n 7256,\n 5013,\n 2859,\n 2475,\n 4078,\n 7232,\n 2840,\n 5665,\n 5667,\n 4009,\n 4291,\n 5672,\n 5666,\n 3872,\n 3871,\n 5775,\n 3906,\n 4010,\n 8645,\n 5668,\n 431,\n 5761,\n 5975,\n 5963,\n 5964,\n 3996,\n 5990,\n 5991,\n 5518,\n 4974,\n 3456,\n 4963,\n 4932,\n 8341,\n 3924,\n 8754,\n 100,\n 4931,\n 1126,\n 5164,\n 337,\n 5769,\n 3860,\n 6539,\n 497,\n 298,\n 8667,\n 3823,\n 3779,\n 3796,\n 1461,\n 8097,\n 3688,\n 5772,\n 3695,\n 8329,\n 8950,\n 9030,\n 9673,\n 4224,\n 9037,\n 3183,\n 3184,\n 5188,\n 7272,\n 5184,\n 3748,\n 9640,\n 3952,\n 9350,\n 1331,\n 9063,\n 7101,\n 4183,\n 4182,\n 9639,\n 632,\n 3460,\n 566,\n 9666,\n 3459,\n 8252,\n 8253,\n 8254,\n 8260,\n 8257,\n 8258,\n 8255,\n 8259,\n 7926,\n 8056,\n 2041,\n 2043,\n 3713,\n 8256,\n 4734,\n 1765,\n 159,\n 1773,\n 642,\n 5042,\n 299,\n 5044,\n 3658,\n 5043,\n 7486,\n 2605,\n 2822,\n 2316,\n 6987,\n 2607,\n 2821,\n 6799,\n 2820,\n 2755,\n 3095,\n 4907,\n 4906,\n 9619,\n 4908,\n 3602,\n 3728,\n 5425,\n 5426,\n 8491,\n 2044,\n 4718,\n 9648,\n 7721,\n 7496,\n 7722,\n 6484,\n 7090,\n 5084,\n 5085,\n 5046,\n 2565,\n 6669,\n 1614,\n 542,\n 213,\n 535,\n 4494,\n 6734,\n 7614,\n 1359,\n 1256,\n 2661,\n 1252,\n 2660,\n 6921,\n 1263,\n 1262,\n 1151,\n 2183,\n 5607,\n 5608,\n 7605,\n 7626,\n 7449,\n 1815,\n 7615,\n 7617,\n 7620,\n 7795,\n 5210,\n 8053,\n 7923,\n 3730,\n 3689,\n 984,\n 7326,\n 2556,\n 6979,\n 2066,\n 2029,\n 8486,\n 1637,\n 3016,\n 8098,\n 7297,\n 7242,\n 7724,\n 2191,\n 4322,\n 2910,\n 2911,\n 147,\n 8717,\n 6619,\n 1125,\n 7764,\n 2547,\n 2403,\n 3250,\n 2282,\n 6596,\n 6725,\n 5573,\n 6852,\n 2046,\n 7125,\n 1184,\n 9415,\n 6179,\n 6181,\n 6180,\n 678,\n 3557,\n 6676,\n 9329,\n 8428,\n 8534,\n 7298,\n 6791,\n 9417,\n 6857,\n 7911,\n 8040,\n 9440,\n 6836,\n 4696,\n 4748,\n 5758,\n 2291,\n 2290,\n 6838,\n 839,\n 777,\n 2320,\n 2321,\n 2307,\n 7686,\n 2620,\n 3939,\n 3938,\n 2616,\n 2956,\n 4706,\n 2710,\n 5519,\n 5408,\n 3835,\n 3492,\n 7335,\n 5475,\n 5476,\n 5247,\n 6133,\n 5406,\n 3859,\n 1093,\n 4330,\n 6253,\n 4355,\n 4329,\n 4344,\n 4334,\n 4153,\n 6387,\n 5090,\n 5091,\n 4332,\n 2242,\n 4357,\n 422,\n 743,\n 4799,\n 4341,\n 9161,\n 9261,\n 9162,\n 9574,\n 8372,\n 8371,\n 2939,\n 9646,\n 7321,\n 4328,\n 8326,\n 9170,\n 4347,\n 9547,\n 238,\n 8626,\n 6306,\n 3296,\n 8478,\n 715,\n 4682,\n 2951,\n 9121,\n 4211,\n 4163,\n 4165,\n 5051,\n 3345,\n 9194,\n 3346,\n 4994,\n 4996,\n 4997,\n 4993,\n 4995,\n 9489,\n 2012,\n 2780,\n 2816,\n 2814,\n 9524,\n 3263,\n 4059,\n 4062,\n 4061,\n 4060,\n 515,\n 1688,\n 1930,\n 2950,\n 2772,\n 9211,\n 2771,\n 4352,\n 241,\n 2801,\n 5850,\n 3650,\n 8419,\n 6639,\n 2800,\n 6716,\n 2778,\n 4053,\n 1330,\n 7772,\n 4065,\n 4717,\n 2819,\n 972,\n 9487,\n 2013,\n 3151,\n 7602,\n 3482,\n 2815,\n 2817,\n 7015,\n 7240,\n 4413,\n 4412,\n 9287,\n 1705,\n 4414,\n 2471,\n 6507,\n 2470,\n 247,\n 71,\n 7502,\n 3066,\n 6679,\n 5511,\n 8941,\n 9105,\n 6490,\n 2155,\n 7222,\n 1798,\n 1805,\n 6597,\n 389,\n 1807,\n 114,\n 1134,\n 534,\n 1479,\n 6694,\n 793,\n 1369,\n 588,\n 3774,\n 1135,\n 17,\n 1889,\n 1064,\n 2488,\n 1339,\n 6430,\n 121,\n 2136,\n 7712,\n 923,\n 7120,\n 1117,\n 7258,\n 1804,\n 9146,\n 9330,\n 9513,\n 9512,\n 1175,\n 8673,\n 8672,\n 8671,\n 3635,\n 7144,\n 7145,\n 7146,\n 831,\n 32,\n 532,\n 590,\n 178,\n 169,\n 181,\n 171,\n 172,\n 173,\n 175,\n 174,\n 166,\n 176,\n 184,\n 187,\n 180,\n 183,\n 177,\n 179,\n 182,\n 170,\n 196,\n 167,\n 186,\n 185,\n 188,\n 168,\n 138,\n 4466,\n 586,\n 1424,\n 547,\n 381,\n 537,\n 860,\n 608,\n 531,\n 980,\n 1162,\n 1169,\n 1168,\n 660,\n 2546,\n 585,\n 2466,\n 990,\n 9456,\n 3856,\n 7466,\n 810,\n 4782,\n 2577,\n 383,\n 1475,\n 3654,\n 4595,\n 1163,\n 4596,\n 1799,\n 870,\n 9560,\n 1628,\n 1408,\n 1029,\n 873,\n 1198,\n 802,\n 3556,\n 1612,\n 662,\n 5122,\n 2559,\n 1288,\n 211,\n 3634,\n 3660,\n 2887,\n 7137,\n 2888,\n 2883,\n 9222,\n 5565,\n 5589,\n 6541,\n 6750,\n 5654,\n 6732,\n 226,\n 2524,\n 7132,\n 5626,\n 8844,\n 5000,\n 4382,\n 3916,\n 9156,\n 6156,\n 4651,\n 5919,\n 1050,\n 1308,\n 1319,\n 1119,\n 1187,\n 1072,\n 2890,\n 936,\n 2540,\n 3965,\n 3966,\n 8638,\n 6453,\n 7726,\n 7493,\n 5112,\n 7725,\n 9270,\n 2698,\n 8915,\n 7194,\n 7227,\n 7640,\n 1885,\n 8025,\n 7892,\n 2259,\n 8602,\n 8603,\n 7089,\n 1389,\n 1966,\n 3317,\n 8580,\n 4557,\n 8378,\n 7794,\n 7154,\n 8381,\n 4501,\n 3466,\n 711,\n 764,\n 75,\n 76,\n 572,\n 1415,\n 692,\n 3662,\n 5105,\n 1310,\n 4793,\n 1685,\n 9297,\n 8330,\n 9319,\n 8221,\n 8222,\n 8223,\n 8224,\n 8227,\n 8228,\n 8225,\n 8335,\n 8229,\n 8226,\n 2270,\n 7824,\n 4201,\n 5568,\n 2263,\n 9657,\n 9658,\n 9659,\n 9660,\n 8379,\n 8384,\n 9262,\n 9504,\n 3982,\n 3981,\n 3980,\n 2494,\n 2827,\n 8881,\n 9597,\n 4075,\n 6605,\n 4739,\n 5264,\n 3722,\n 2238,\n 1355,\n 5272,\n 7251,\n 7624,\n 1871,\n 816,\n 817,\n 818,\n 815,\n 819,\n 814,\n 1220,\n 6651,\n 1654,\n 1106,\n 5267,\n 4757,\n 7589,\n 7611,\n 2244,\n 4665,\n 6783,\n 4878,\n 7524,\n 2522,\n 4621,\n 4622,\n 3715,\n 4520,\n 1090,\n 1096,\n 7818,\n 8230,\n 1549,\n 70,\n 7468,\n 7470,\n 9364,\n 9365,\n 8541,\n 2116,\n 2115,\n 7423,\n 2258,\n 438,\n 1121,\n 2725,\n 638,\n 1170,\n 6534,\n 637,\n 555,\n 7680,\n 2257,\n 2451,\n 8895,\n 6342,\n 6421,\n 6344,\n 6371,\n 8668,\n 3750,\n 5815,\n 4318,\n 2027,\n 7041,\n 1017,\n 2175,\n 107,\n 890,\n 693,\n 1024,\n 897,\n 155,\n 908,\n 899,\n 635,\n 1033,\n 1394,\n 895,\n 538,\n 6374,\n 7647,\n 3944,\n 5464,\n 8899,\n 5333,\n 7056,\n 2103,\n 150,\n 6499,\n 1728,\n 5960,\n 2256,\n 1343,\n 4886,\n 3354,\n 3256,\n 2899,\n 6714,\n 7675,\n 4118,\n 6037,\n 3539,\n 5552,\n 7151,\n 8353,\n 9579,\n 9589,\n 3603,\n 4369,\n 3209,\n 6737,\n 7850,\n 7978,\n 6959,\n 951,\n 6439,\n 7184,\n 1407,\n 822,\n 865,\n 7485,\n 6573,\n 6496,\n 131,\n 811,\n 836,\n 891,\n 835,\n 838,\n 837,\n 13,\n 4577,\n 4578,\n 8118,\n 31,\n 4131,\n 268,\n 4686,\n 4891,\n 8004,\n 9189,\n 5419,\n 4506,\n 4892,\n 9419,\n 1854,\n 8007,\n 8008,\n 7876,\n 4149,\n 5061,\n 5082,\n 3934,\n 8198,\n 6185,\n 6061,\n 8000,\n 7870,\n 7508,\n 2633,\n 5913,\n 5860,\n 5861,\n 5862,\n 4890,\n 9199,\n 8072,\n 7939,\n 8073,\n 7940,\n 5321,\n 2511,\n 1971,\n 8374,\n 8375,\n 8366,\n 8364,\n 8373,\n 8376,\n 1698,\n 9565,\n 8377,\n 720,\n 5360,\n 6064,\n 2055,\n 4692,\n 1674,\n 823,\n 1311,\n 1306,\n 6519,\n 1427,\n 1428,\n 1305,\n 7162,\n 789,\n 8923,\n 5731,\n 5752,\n 7446,\n 7448,\n 7831,\n 8193,\n 8131,\n 7959,\n 8132,\n 8089,\n 7097,\n 977,\n 1341,\n 1982,\n 1983,\n 5803,\n 6001,\n 3680,\n 3747,\n 1561,\n 6160,\n 6161,\n 2609,\n 7583,\n 7588,\n 7581,\n 5141,\n 5127,\n 4761,\n 2574,\n 1143,\n 1645,\n 1142,\n 1617,\n 1639,\n 5847,\n 8446,\n 163,\n 767,\n 1629,\n 1632,\n 1631,\n 1630,\n 8447,\n 1692,\n 6970,\n 1683,\n 2548,\n 6844,\n 6845,\n 3311,\n 1514,\n 7684,\n 3469,\n 1960,\n 1188,\n 4194,\n 321,\n 319,\n 320,\n 8688,\n 6644,\n 1437,\n 1426,\n 1470,\n 763,\n 681,\n 1399,\n 3861,\n 3877,\n 4405,\n 3498,\n 8139,\n 7961,\n 7833,\n 8140,\n 8092,\n 6984,\n 5500,\n 469,\n 2652,\n 563,\n 576,\n 9244,\n 8822,\n 8823,\n 8824,\n 4514,\n 2587,\n 4512,\n 2493,\n 7816,\n 7504,\n 3058,\n 1571,\n 4486,\n 484,\n 3062,\n 1232,\n 1231,\n 1031,\n 905,\n 587,\n 4359,\n 2317,\n 6552,\n 4455,\n 3057,\n 4468,\n 489,\n 565,\n 7906,\n 8036,\n 3530,\n 9596,\n 1084,\n 3653,\n 3759,\n 1085,\n 3302,\n 4728,\n 7505,\n 8050,\n 7920,\n 7822,\n 7879,\n 8010,\n 1086,\n 3220,\n 5839,\n 4427,\n 8210,\n 8320,\n 8291,\n 8292,\n 8293,\n 8294,\n 8300,\n 8297,\n 8298,\n 8295,\n 8299,\n 8296,\n 4424,\n 8390,\n 9422,\n 8405,\n 8404,\n 8403,\n 5788,\n 8391,\n 3233,\n 3709,\n 2861,\n 689,\n 1768,\n 3595,\n 2483,\n 2875,\n 65,\n 995,\n 996,\n 2496,\n 6993,\n 604,\n 7573,\n 393,\n 688,\n 8866,\n 8867,\n 3710,\n 2868,\n 8861,\n 8862,\n 8513,\n 2438,\n 8905,\n 2445,\n 9259,\n 5243,\n 7025,\n 9230,\n 8484,\n 8843,\n 8481,\n 1448,\n 1199,\n 9420,\n 8483,\n 8494,\n 3235,\n 2873,\n 2869,\n 9208,\n 3472,\n 8858,\n 6593,\n 8850,\n 2576,\n 9266,\n 8815,\n 9283,\n 6855,\n 8859,\n 9268,\n 1363,\n 9265,\n 8860,\n 8585,\n 8907,\n 8584,\n 8588,\n 8559,\n 8657,\n 8863,\n 1421,\n 1745,\n 2754,\n 6884,\n 5463,\n 3124,\n 5431,\n 1180,\n 4031,\n 4032,\n 4693,\n 9046,\n 9045,\n 4464,\n 2858,\n 5684,\n 5301,\n 3,\n 8904,\n 2436,\n 5300,\n 2851,\n 6249,\n 3892,\n 5567,\n 7205,\n 8312,\n 9411,\n 7452,\n 7455,\n 1915,\n 6140,\n 6142,\n 6141,\n 6093,\n 4884,\n 2428,\n 1550,\n 4434,\n 4759,\n 985,\n 983,\n 9352,\n 2535,\n 2028,\n 2304,\n 8797,\n 8614,\n 6989,\n 9540,\n 2172,\n 1014,\n 1635,\n 1021,\n 1459,\n 1065,\n 400,\n 1063,\n 2994,\n 8175,\n 6042,\n 8051,\n 8339,\n 7904,\n 8034,\n 8177,\n 7935,\n 8068,\n 7936,\n 8069,\n 3787,\n 7031,\n 2517,\n 3594,\n 722,\n 526,\n 840,\n 1418,\n 5199,\n 52,\n 2518,\n 3503,\n 687,\n 4284,\n 3495,\n 7921,\n 2865,\n 2866,\n 1830,\n 3795,\n 4136,\n 540,\n 3799,\n 4134,\n 266,\n 6174,\n 6173,\n 4694,\n 2965,\n 4594,\n 396,\n 286,\n 67,\n 8063,\n 4598,\n 2967,\n 5629,\n 9275,\n 2964,\n 6588,\n 5249,\n 7461,\n 8385,\n 9423,\n 8396,\n 8395,\n 8394,\n 5785,\n 2079,\n 7627,\n 3670,\n 1006,\n 4106,\n 358,\n 357,\n 255,\n 6580,\n 6579,\n 5384,\n 1122,\n 4725,\n 4409,\n 7353,\n 8155,\n 3293,\n 4790,\n 8156,\n 2158,\n 519,\n 4707,\n 2413,\n 6477,\n 7522,\n 130,\n 7157,\n 1314,\n 1316,\n 1013,\n 551,\n 8476,\n 4288,\n 3501,\n 1313,\n 3506,\n 5981,\n 3453,\n 7156,\n 3268,\n 659,\n 3257,\n 3246,\n 3292,\n 4422,\n 4421,\n 770,\n 3845,\n 3846,\n 3844,\n 7819,\n 7635,\n 8472,\n 253,\n 5307,\n 359,\n 254,\n 365,\n 360,\n 363,\n 364,\n 362,\n 361,\n 5152,\n 5389,\n 1224,\n 1223,\n 1215,\n 436,\n 9631,\n 1225,\n 1216,\n 6514,\n 6461,\n 3164,\n 3163,\n 8587,\n 8586,\n 1008,\n 3120,\n 3337,\n 464,\n 1327,\n 3481,\n 6558,\n 410,\n 8387,\n 9294,\n 9555,\n 9556,\n 9243,\n 9086,\n 9424,\n 8550,\n 8652,\n 9205,\n 9425,\n 9554,\n 8399,\n 8398,\n 8397,\n 9426,\n 5786,\n 8821,\n 6121,\n 3630,\n 7166,\n 3693,\n 3694,\n 3692,\n 3895,\n 3639,\n 1969,\n 9193,\n 9186,\n 3972,\n 3896,\n 8796,\n 4775,\n 5331,\n 5335,\n 5441,\n 2632,\n 3461,\n 6529,\n 2640,\n 6942,\n 6522,\n 6521,\n 1387,\n 1325,\n 1397,\n 6520,\n 7161,\n 4629,\n 5254,\n 8606,\n 3518,\n 8605,\n 6967,\n 4024,\n 2564,\n 1309,\n 7428,\n 1977,\n 1959,\n 7049,\n 6735,\n 6736,\n 6530,\n 593,\n 2374,\n 2566,\n 9682,\n 9683,\n 9016,\n 4910,\n 9307,\n 6024,\n 6289,\n 6222,\n 5011,\n 6182,\n 6026,\n 4262,\n 6025,\n 6039,\n 6040,\n 9306,\n 4245,\n 4348,\n 9029,\n 7318,\n 5644,\n 9302,\n 1962,\n 5412,\n 239,\n 5418,\n 5236,\n 6419,\n 7307,\n 4327,\n 43,\n 2614,\n 7308,\n 6155,\n 6154,\n 8192,\n 8130,\n 6153,\n 2409,\n 8623,\n 4913,\n 6132,\n 6882,\n 6868,\n 7268,\n 1183,\n 7575,\n 1690,\n 476,\n 1709,\n 3652,\n 6893,\n 2100,\n 8456,\n 6423,\n 2453,\n 1067,\n 1747,\n 8455,\n 8454,\n 8457,\n 68,\n 379,\n 1354,\n 6832,\n 9251,\n 1068,\n 8841,\n 8596,\n 8643,\n 2508,\n 8458,\n 8349,\n 8350,\n 6985,\n 4565,\n 7792,\n 8021,\n 7891,\n 457,\n 9345,\n 8808,\n 2506,\n 7733,\n 9343,\n 9564,\n 5832,\n 5840,\n 5571,\n 1792,\n 929,\n 7691,\n 8368,\n 1544,\n 6721,\n 5600,\n 5580,\n 6599,\n 1545,\n 5564,\n 2,\n 4473,\n 4469,\n 4479,\n 863,\n 4471,\n 4475,\n 4472,\n 4482,\n 4478,\n 4467,\n 4481,\n 4470,\n 4480,\n 392,\n 387,\n 2415,\n 2439,\n 8906,\n 207,\n 146,\n 208,\n 4828,\n 4827,\n 4829,\n 4830,\n 81,\n 1417,\n 206,\n 369,\n 165,\n 1321,\n 1161,\n 137,\n 1449,\n 205,\n 1440,\n 1413,\n 125,\n 1794,\n 1806,\n 5594,\n 1574,\n 5597,\n 7763,\n 7061,\n 690,\n 640,\n 5592,\n 1686,\n 1573,\n 8358,\n 8434,\n 2373,\n 6495,\n 4570,\n 4720,\n 6565,\n 6504,\n 3793,\n 1543,\n 1557,\n 1589,\n 1579,\n 1580,\n 1560,\n 1590,\n 1558,\n 1559,\n 5646,\n 5624,\n 5561,\n 4571,\n 6722,\n 6436,\n 4575,\n 4576,\n 5622,\n 4648,\n 8433,\n 5558,\n 1333,\n 7293,\n 4802,\n 2094,\n 5570,\n 5575,\n 1052,\n 8111,\n 5591,\n 7190,\n 9374,\n 5615,\n 9378,\n 8430,\n 8431,\n 8432,\n 7395,\n 7518,\n 655,\n 718,\n 8147,\n 8148,\n 8114,\n 8775,\n 9274,\n 9269,\n 8445,\n 6491,\n 6483,\n 4647,\n 2227,\n 6548,\n 8444,\n 5586,\n 5648,\n 8112,\n 8120,\n 7434,\n 8514,\n 4896,\n 9371,\n 5641,\n 5559,\n 6765,\n 2476,\n 2477,\n 7199,\n 5928,\n 6196,\n 6636,\n 9152,\n 9393,\n 5984,\n 5985,\n 5986,\n 6340,\n 7664,\n 1748,\n 6851,\n 450,\n 4630,\n 4758,\n 3758,\n 48,\n 765,\n 6723,\n 9347,\n 9346,\n 1791,\n 1430,\n 973,\n 1442,\n 6712,\n 1790,\n 7820,\n 1344,\n 960,\n 86,\n 1729,\n 3475,\n 1467,\n 4751,\n 1611,\n 212,\n 959,\n 4941,\n 4942,\n 6012,\n 978,\n 6008,\n 9091,\n 726,\n 3267,\n 3087,\n 5201,\n 3079,\n 1458,\n 4408,\n 6517,\n 1166,\n 6516,\n 9529,\n 16,\n 3616,\n 3615,\n 3598,\n 5191,\n 1454,\n 4294,\n 4295,\n 4760,\n 2025,\n 5128,\n 154,\n 1463,\n 1028,\n 1016,\n 2174,\n 448,\n 1023,\n 8772,\n 5151,\n 1953,\n 9291,\n 1987,\n 6949,\n 6313,\n 6294,\n 4225,\n 709,\n 732,\n 915,\n 470,\n 72,\n 560,\n 731,\n 698,\n 1402,\n 9605,\n 735,\n 6312,\n 1988,\n 1989,\n 3553,\n 1986,\n 3361,\n 2944,\n 500,\n 3525,\n 2146,\n 2130,\n 6947,\n 6284,\n 9403,\n 1737,\n 7052,\n 5553,\n 8207,\n 8261,\n 8262,\n 8263,\n 8264,\n 8270,\n 8267,\n 8268,\n 8265,\n 8269,\n 8266,\n 8317,\n 5193,\n 9395,\n 8733,\n 8732,\n 7497,\n 4943,\n 4976,\n 1697,\n 1264,\n 2387,\n 6623,\n 2509,\n 5875,\n 6324,\n 6339,\n 4246,\n 6320,\n 6302,\n 6053,\n 2337,\n 7319,\n 4237,\n 5954,\n 3339,\n 3470,\n 3270,\n 3301,\n 6098,\n 5987,\n 5988,\n 6099,\n 4377,\n 4378,\n 3122,\n 3132,\n 3849,\n 6611,\n 8660,\n 3126,\n 1586,\n 1584,\n 1588,\n 1587,\n 1578,\n 1585,\n 1583,\n 1624,\n 6901,\n 1218,\n 1718,\n 1552,\n 7685,\n 3850,\n 7329,\n 3838,\n 4079,\n 9477,\n 4527,\n 968,\n 9609,\n 8416,\n 9608,\n 6476,\n 9628,\n 4261,\n 4265,\n 74,\n 1353,\n 6688,\n 9652,\n 7317,\n 7023,\n 7777,\n 2536,\n 1905,\n 1898,\n 7977,\n 7849,\n 9598,\n 3332,\n 8362,\n 8363,\n 3353,\n 4926,\n 5427,\n 7557,\n 7350,\n 7556,\n 7555,\n 548,\n 3248,\n 2401,\n 227,\n 2519,\n 236,\n 643,\n 3550,\n 3364,\n 390,\n 7046,\n 6598,\n 1398,\n 721,\n 2955,\n 668,\n 1404,\n 4133,\n 5587,\n 4233,\n 7729,\n 7728,\n 9154,\n 8333,\n 5819,\n 4051,\n 4050,\n 4157,\n 4158,\n 9604,\n 8464,\n 3192,\n 9232,\n 2700,\n 2690,\n 3156,\n 3155,\n 8468,\n 4231,\n 5263,\n 5318,\n 4064,\n 5040,\n 610,\n 7271,\n 4952,\n 4356,\n 5489,\n 1700,\n 7784,\n 9503,\n 7464,\n 7527,\n 9536,\n 3914,\n 6170,\n 3949,\n 3781,\n 6120,\n 6126,\n 6125,\n 6287,\n 7528,\n 3271,\n 3305,\n 6009,\n 3322,\n 6326,\n 6327,\n 3450,\n 4195,\n 269,\n 9603,\n 1091,\n 6923,\n 8145,\n 8146,\n 8095,\n 6308,\n 6307,\n 5373,\n 6311,\n 6108,\n 6384,\n 6386,\n 694,\n 96,\n 697,\n 5096,\n 5097,\n 776,\n 3649,\n 5953,\n 5187,\n 5177,\n 5181,\n 4524,\n 5681,\n 5682,\n 6337,\n 4176,\n 6445,\n 4177,\n 6427,\n 7278,\n 6336,\n 4040,\n 3663,\n 8903,\n 5074,\n 2437,\n 5471,\n 9391,\n 5075,\n 2784,\n 4777,\n 7244,\n 2856,\n 6626,\n 4349,\n 859,\n 1289,\n 219,\n 3790,\n 9380,\n 432,\n 944,\n 5270,\n 4660,\n 4778,\n 6112,\n 4983,\n 3920,\n 4956,\n 4955,\n 5793,\n 2842,\n 3001,\n 2998,\n 6567,\n 2997,\n 3590,\n 3002,\n 2745,\n 5882,\n 9273,\n 6913,\n 6798,\n 2855,\n 2853,\n 8493,\n 3770,\n 9580,\n 970,\n 4530,\n 4351,\n 9583,\n 8719,\n 4049,\n 5063,\n 737,\n 2667,\n 73,\n 1446,\n 416,\n 2182,\n 7630,\n 1812,\n 1813,\n 6667,\n 143,\n 3894,\n 5900,\n 6246,\n 4551,\n 3321,\n 6062,\n 3825,\n 2634,\n 2721,\n 9171,\n 5185,\n 3792,\n 2834,\n 2568,\n 3973,\n 3974,\n 4190,\n 7203,\n 2932,\n 3879,\n 9010,\n 2567,\n 7506,\n 2165,\n 9169,\n 9098,\n 9680,\n 3930,\n 329,\n 330,\n 331,\n 281,\n 278,\n 366,\n 279,\n 9449,\n 8812,\n 1174,\n 5759,\n 6950,\n 7893,\n 8022,\n 1859,\n 3928,\n 3927,\n 1842,\n 1873,\n 545,\n 328,\n 9450,\n 6165,\n 7839,\n 7967,\n 5738,\n 5739,\n 5740,\n 7838,\n 7966,\n 9686,\n 322,\n 7970,\n 7842,\n 1975,\n 1974,\n 8722,\n 8382,\n 9552,\n 5268,\n 8882,\n 3110,\n 3108,\n 8450,\n 8451,\n 8449,\n 8440,\n 391,\n 4045,\n 8383,\n 5702,\n 4528,\n 9476,\n 5309,\n 4228,\n 969,\n 9122,\n 1801,\n 6910,\n 7873,\n 8003,\n 6675,\n 8785,\n 6774,\n 6761,\n 9250,\n 5262,\n 5149,\n 2691,\n 8630,\n 3554,\n 5299,\n 1056,\n 5298,\n 762,\n 376,\n 1433,\n 2312,\n 2313,\n 2311,\n 6674,\n 5278,\n 2854,\n 4605,\n 4664,\n 5269,\n 2681,\n 5260,\n 2673,\n 7459,\n 8574,\n 7195,\n 1707,\n 7526,\n 4962,\n 3260,\n 3679,\n 3988,\n 5856,\n 6634,\n 7362,\n 2790,\n 6633,\n 6549,\n 6274,\n 5018,\n 4685,\n 5914,\n 8302,\n 8303,\n 8304,\n 8305,\n 8461,\n 4679,\n 3633,\n 8460,\n 6860,\n 4610,\n 3734,\n 6479,\n 544,\n 4609,\n 8200,\n 8028,\n 7898,\n 4721,\n 1776,\n 2825,\n 2060,\n 4130,\n 8683,\n 7286,\n 8692,\n 8979,\n 4774,\n 9202,\n 9528,\n 3851,\n 9519,\n 6072,\n 3290,\n 6279,\n 6227,\n 6225,\n 6334,\n 1109,\n 4895,\n 5686,\n 6273,\n 4655,\n 5072,\n 5955,\n 5956,\n 6927,\n 4973,\n 4964,\n 3921,\n 4982,\n 4981,\n 1094,\n 3468,\n 3989,\n 6373,\n 4371,\n 5969,\n 4216,\n 7001,\n 5343,\n 2474,\n 2482,\n 8516,\n 3840,\n 6480,\n 2733,\n 1848,\n 6166,\n 3535,\n 612,\n 633,\n 7981,\n 7853,\n 6983,\n 3491,\n 2867,\n 6229,\n 6698,\n 6946,\n 9451,\n 9571,\n 7491,\n 9641,\n 2002,\n 2001,\n 7487,\n 6474,\n 4082,\n 9200,\n 6762,\n 5857,\n 5483,\n 5482,\n 9591,\n 9590,\n 2070,\n 7114,\n 8512,\n 9394,\n 1910,\n 2036,\n 2236,\n 6030,\n 3314,\n 6673,\n 7489,\n 6677,\n 2431,\n 8817,\n 7933,\n 8064,\n 7934,\n 8065,\n 1217,\n 7310,\n 5248,\n 7912,\n 8041,\n 7947,\n 7948,\n 8104,\n 5723,\n 6586,\n 7992,\n 5161,\n 1315,\n 5699,\n 6926,\n 9213,\n 9397,\n 7147,\n 7134,\n 5952,\n 9353,\n 7408,\n 4426,\n 5351,\n 6011,\n 8123,\n 8184,\n 7955,\n 8211,\n 8212,\n 8213,\n 8214,\n 8220,\n 8217,\n 8321,\n 8218,\n 8215,\n 5918,\n 8219,\n 8216,\n 2838,\n 9366,\n 5935,\n 2726,\n 9271,\n 6776,\n 4283,\n 1,\n 1351,\n 1164,\n 6471,\n 6485,\n 6498,\n 1358,\n 6446,\n 6540,\n 7088,\n 3912,\n 9235,\n 3718,\n 6331,\n 6332,\n 3717,\n 2720,\n 2037,\n 1572,\n 2171,\n 1034,\n 906,\n 6230,\n 7303,\n 4208,\n 4835,\n 4854,\n 4853,\n 58,\n 4440,\n 7218,\n 240,\n 2260,\n 6621,\n 1680,\n 28,\n 885,\n 7766,\n 2222,\n 4805,\n 2220,\n 2221,\n 4797,\n 6690,\n 8845,\n 2379,\n 2375,\n 4724,\n 9379,\n 1244,\n 809,\n 4483,\n 4858,\n 4857,\n 4866,\n 4865,\n 4862,\n 4861,\n 4870,\n 4869,\n 7332,\n 2223,\n 2999,\n 2560,\n 7754,\n 2505,\n 7895,\n 5350,\n 6296,\n 3273,\n 4477,\n 862,\n 871,\n 7540,\n 6591,\n 7541,\n 40,\n 25,\n 6564,\n 5933,\n 5934,\n 3462,\n 4495,\n 3757,\n 8208,\n 8318,\n 8271,\n 8272,\n 8273,\n 8274,\n 8280,\n 8277,\n 8278,\n 8275,\n 8279,\n 8276,\n 267,\n 2462,\n 6568,\n 2007,\n 6583,\n 3206,\n 7531,\n 627,\n 2009,\n 7216,\n 2168,\n 3540,\n 5410,\n 6303,\n 6049,\n 6,\n 8654,\n 1661,\n 3479,\n 3264,\n 4499,\n 3733,\n 5534,\n 3259,\n 2872,\n 2870,\n 2871,\n 3313,\n 1652,\n 3295,\n 8474,\n 7965,\n 7837,\n 5327,\n 5326,\n 6834,\n 6084,\n 6094,\n 9576,\n 3085,\n 446,\n 6595,\n 5833,\n 9360,\n 3645,\n 4081,\n 3826,\n 4066,\n 7363,\n 2789,\n 3929,\n 2717,\n 6078,\n 6043,\n 7383,\n 9542,\n 5047,\n 5202,\n 3969,\n 4451,\n 8205,\n 8308,\n 8309,\n 8793,\n 8315,\n 8241,\n 5780,\n 3558,\n 4104,\n 875,\n 4550,\n 6487,\n 6448,\n 270,\n 7349,\n 8757,\n 716,\n 5535,\n 713,\n 3979,\n 4544,\n 8708,\n 7197,\n 5757,\n 5123,\n 884,\n 1160,\n 947,\n 6742,\n 394,\n 867,\n 1266,\n 7875,\n 8006,\n 1626,\n 4763,\n 4415,\n 1706,\n 7409,\n 8414,\n 6718,\n 1055,\n 6863,\n 930,\n 1257,\n 9125,\n 9460,\n 141,\n 1342,\n 9488,\n 8883,\n 7809,\n 1057,\n 5190,\n 6318,\n 6609,\n 6610,\n 1538,\n 6570,\n 3216,\n 2305,\n 2302,\n 5283,\n 6902,\n 4788,\n 4611,\n 7358,\n 7862,\n 7956,\n 8124,\n 7828,\n 8185,\n 8301,\n 3280,\n 3283,\n 3279,\n 8209,\n 8281,\n 8282,\n 8283,\n 8284,\n 8290,\n 8287,\n 8288,\n 8285,\n 8289,\n 8286,\n 8319,\n 1190,\n 5917,\n 2621,\n 2596,\n 6168,\n 2295,\n 7723,\n 7979,\n 7133,\n 2071,\n 546,\n 9634,\n 4923,\n 8082,\n 8181,\n 7949,\n 7950,\n 8083,\n 8084,\n 7951,\n 8085,\n 4700,\n 2110,\n 2906,\n 2929,\n 1899,\n 4631,\n 4642,\n 7707,\n 6937,\n 7900,\n 8030,\n 1535,\n 7122,\n 2759,\n 7623,\n 7622,\n 7907,\n 6830,\n 7250,\n 3033,\n 8037,\n 7445,\n 34,\n 6506,\n 7865,\n 1894,\n 3788,\n 6563,\n 1892,\n 1693,\n 3685,\n 3548,\n 7582,\n 1361,\n 2430,\n 2900,\n 4672,\n 617,\n 8109,\n 5313,\n 8167,\n 8168,\n 6715,\n 7014,\n 8608,\n 6889,\n 8854,\n 1139,\n 1779,\n 6733,\n 7755,\n 4657,\n 7941,\n 8074,\n 7942,\n 8075,\n 5320,\n 2917,\n 1887,\n 740,\n 7374,\n 1895,\n 1888,\n 2034,\n 1005,\n 1015,\n 2173,\n 948,\n 1022,\n 153,\n 1030,\n 998,\n 3997,\n 1878,\n 8557,\n 8837,\n 7472,\n 4175,\n 8698,\n 276,\n 3084,\n 2569,\n 7113,\n 6752,\n 2809,\n 8058,\n 7928,\n 9299,\n 4966,\n 4965,\n 8533,\n 4375,\n 5946,\n 6376,\n 9320,\n 8538,\n 5372,\n 6915,\n 7625,\n 6756,\n 8780,\n 4229,\n 1515,\n 7706,\n 3919,\n 2908,\n 2751,\n 2852,\n 8565,\n 7148,\n 2832,\n 3123,\n 3121,\n 7593,\n 7004,\n 7591,\n 7599,\n 4522,\n 4001,\n 1548,\n 949,\n 456,\n 132,\n 8078,\n 7945,\n 8180,\n 7946,\n 8079,\n 755,\n 1800,\n 7280,\n 7282,\n 1618,\n 7283,\n 784,\n 1541,\n 6638,\n 2680,\n 7749,\n 2666,\n 7927,\n 9127,\n 2658,\n 55,\n 6952,\n 6951,\n 4954,\n 1047,\n 7334,\n 395,\n 658,\n 1783,\n 6554,\n 7418,\n 6553,\n 3238,\n 8811,\n 2490,\n 1177,\n 1995,\n 8423,\n 874,\n 8424,\n 8425,\n 911,\n 747,\n 4677,\n 880,\n 9180,\n 6903,\n 4787,\n 5282,\n 8530,\n 4515,\n 7993,\n 7376,\n 7106,\n 5279,\n 7111,\n 6770,\n 7323,\n 7322,\n 7757,\n 1939,\n 8176,\n 6767,\n 6455,\n 7390,\n 8784,\n 8570,\n 2541,\n 1619,\n 7413,\n 4545,\n 1786,\n 451,\n 9448,\n 4619,\n 4618,\n 1755,\n 7717,\n 4537,\n 7974,\n 7846,\n 8038,\n 7908,\n 7053,\n 2782,\n 4437,\n 4600,\n 2781,\n 7382,\n 6228,\n 6880,\n 2735,\n 2864,\n 2738,\n 4933,\n 8551,\n 7913,\n 8043,\n 7915,\n 8787,\n 8618,\n 7300,\n 1704,\n 1867,\n 6743,\n 8615,\n 8857,\n 1851,\n 8507,\n 1868,\n 1869,\n 444,\n 61,\n 4428,\n 148,\n 3049,\n 1981,\n 4708,\n 1980,\n 1497,\n 1506,\n 7637,\n 7995,\n 5745,\n 1866,\n 2226,\n 2732,\n 2461,\n 2728,\n 8781,\n 7305,\n 8782,\n 956,\n 820,\n 6928,\n 7631,\n 2774,\n 5083,\n 7863,\n 2704,\n 2709,\n 2718,\n 1192,\n 447,\n 6535,\n 9228,\n 204,\n 4298,\n 9429,\n 6600,\n 962,\n 1647,\n 9289,\n 8639,\n 7172,\n 9348,\n 8497,\n 8865,\n 8647,\n 4047,\n 4080,\n 7270,\n 5378,\n 4048,\n 4071,\n 5855,\n 5995,\n 5880,\n 5854,\n 4383,\n 78,\n 3583,\n 7494,\n 3581,\n 3786,\n 5014,\n 5886,\n 4084,\n 8909,\n 4085,\n 8935,\n 8627,\n 9034,\n 3782,\n 7029,\n 4090,\n 4510,\n 9546,\n 9165,\n 4240,\n 9315,\n 5778,\n 6032,\n 9311,\n 9124,\n 6033,\n 9313,\n 9312,\n 6004,\n 6105,\n 3464,\n 7653,\n 5979,\n 5980,\n 5978,\n 5469,\n 4977,\n 4978,\n 5771,\n 4772,\n 6055,\n 5621,\n 2702,\n 2671,\n 5031,\n 5030,\n 5073,\n 5029,\n 5041,\n 5050,\n 3923,\n 3917,\n 7366,\n 2485,\n 4747,\n 118,\n 1127,\n 578,\n 7367,\n 2580,\n 5054,\n 5055,\n 4411,\n 9147,\n 3967,\n 5056,\n 5039,\n 5058,\n 9446,\n 5038,\n 4279,\n 7345,\n 4561,\n 5423,\n 8465,\n 3195,\n 1816,\n 4278,\n 1444,\n 1027,\n 606,\n 2467,\n 792,\n 7070,\n 4490,\n 645,\n 748,\n 2443,\n 404,\n 910,\n 898,\n 665,\n 769,\n 813,\n 795,\n 807,\n 6434,\n 913,\n 783,\n 1392,\n 3160,\n 3159,\n 3024,\n 7650,\n 7796,\n 7207,\n 7208,\n 8469,\n 4539,\n 5377,\n 1569,\n 667,\n 864,\n 844,\n 1465,\n 2837,\n 6958,\n 903,\n 1079,\n 6953,\n 4927,\n 2473,\n 7682,\n 1194,\n 2472,\n 2196,\n 4783,\n 4992,\n 3348,\n 6109,\n 6110,\n 4951,\n 4950,\n 2991,\n 1651,\n 284,\n 4429,\n 8547,\n 9458,\n 8598,\n 4239,\n 830,\n 7471,\n 7262,\n 6278,\n 6277,\n 7399,\n 8442,\n 7564,\n 9349,\n 8443,\n 6524,\n 8191,\n 7958,\n 8190,\n 8129,\n 8088,\n 2687,\n 4768,\n 7369,\n 7714,\n 7651,\n 5311,\n 3671,\n 3009,\n 6842,\n 8197,\n 4845,\n 4901,\n 6864,\n 7410,\n 2484,\n 4844,\n 1128,\n 2581,\n 7480,\n 7769,\n 2884,\n 4889,\n 4628,\n 2364,\n 4807,\n 5032,\n 3355,\n 5421,\n 2948,\n 5443,\n 5715,\n 5983,\n 4156,\n 4567,\n 8684,\n 9505,\n 3992,\n 9684,\n 3993,\n 4021,\n 437,\n 5209,\n 4008,\n 4928,\n 4026,\n 2575,\n 7548,\n 2685,\n 2689,\n 2382,\n 2688,\n 4546,\n 5736,\n 6932,\n 3756,\n 5767,\n 5768,\n 1182,\n 9076,\n 6444,\n 8,\n 2628,\n 2627,\n 1643,\n 6523,\n 2631,\n 1862,\n 1863,\n 1849,\n 6281,\n 6282,\n 7361,\n 4719,\n 4513,\n 3006,\n 5195,\n 3007,\n 3514,\n 723,\n 1406,\n 1462,\n 3575,\n 3028,\n 3636,\n 6835,\n 8888,\n 3577,\n 647,\n 370,\n 382,\n 3841,\n 3784,\n 3836,\n 3303,\n 3619,\n 4041,\n 4042,\n 506,\n 6562,\n 3749,\n 5620,\n 8033,\n 7903,\n 8902,\n 8641,\n 4591,\n 2788,\n 4593,\n 8518,\n 1825,\n 1322,\n 6789,\n 2031,\n 1687,\n 7510,\n 1696,\n 9462,\n 741,\n 6328,\n 6329,\n 4681,\n 2442,\n 2068,\n 1346,\n 199,\n 8910,\n 8914,\n 8912,\n 1795,\n 4633,\n 3791,\n 6797,\n 2787,\n 6533,\n 6872,\n 6829,\n 522,\n 2435,\n 8579,\n 8694,\n 7054,\n 7681,\n 9368,\n 8500,\n 1771,\n 8835,\n 2281,\n 4089,\n 5306,\n 8773,\n 6891,\n 510,\n 511,\n 1984,\n 1081,\n 3763,\n 6890,\n 5315,\n 6379,\n 6234,\n 7396,\n 7039,\n 5355,\n 7196,\n 8448,\n 162,\n 9014,\n 4674,\n 2542,\n 2048,\n 2345,\n 7127,\n 7815,\n 3080,\n 7126,\n 7678,\n 2457,\n 6828,\n 4320,\n 6319,\n 2697,\n 9405,\n 9510,\n 1420,\n 7458,\n 520,\n 7511,\n 5474,\n 4975,\n 8869,\n 7107,\n 1551,\n 6216,\n 5656,\n 4187,\n 3023,\n 1357,\n 3020,\n 3032,\n 3021,\n 3038,\n 3022,\n 3019,\n 4114,\n 8723,\n 4115,\n 7767,\n 9342,\n 6771,\n 9341,\n 7644,\n 9654,\n 4186,\n 9190,\n 2957,\n 3059,\n 8792,\n 3072,\n 8795,\n 6183,\n 3493,\n 4124,\n 4256,\n 9008,\n 6206,\n 4098,\n 3330,\n 2500,\n 8963,\n 1735,\n 8964,\n 9669,\n 8752,\n 8753,\n 1890,\n 8962,\n 8961,\n 8679,\n 8691,\n 9629,\n 8949,\n 4252,\n 7288,\n 9042,\n 1829,\n 4275,\n 9668,\n 9667,\n 6205,\n 8965,\n 2098,\n 7020,\n 4113,\n 5485,\n 8637,\n 9563,\n 9492,\n 5922,\n 6157,\n 9508,\n 1141,\n 2497,\n 9223,\n 5245,\n 5241,\n 2818,\n 5238,\n 232,\n 3707,\n 8096,\n 9209,\n 3862,\n 79,\n 1990,\n 4202,\n 2385,\n 9514,\n 7315,\n 919,\n 6784,\n 6701,\n 5261,\n 1855,\n 2744,\n 4729,\n 2045,\n 2562,\n 6300,\n 490,\n 3074,\n 8488,\n 2919,\n 1350,\n 1886,\n 2739,\n 8487,\n 621,\n 3073,\n 6295,\n 5539,\n 2319,\n 7572,\n 1059,\n 1060,\n 1858,\n 6556,\n 4730,\n 7704,\n 2197,\n 6293,\n 5411,\n 7612,\n 3011,\n 7055,\n 1259,\n 7071,\n 7069,\n 841,\n 216,\n 225,\n 45,\n 1300,\n 1301,\n 868,\n 1302,\n 1303,\n 7788,\n 909,\n 7632,\n 1901,\n 8540,\n 4584,\n 8771,\n 7267,\n 9158,\n 4135,\n 4212,\n 7669,\n 7670,\n 4185,\n 6972,\n 4207,\n 2959,\n 9160,\n 9568,\n 6016,\n 9110,\n 3335,\n 4121,\n 2805,\n 5374,\n 8919,\n 4122,\n 341,\n 343,\n 342,\n 339,\n 4549,\n 340,\n 3659,\n 7005,\n 5340,\n 4184,\n 2637,\n 2650,\n 4458,\n 8195,\n 2648,\n 3065,\n 1657,\n 3517,\n 2876,\n 2877,\n 2642,\n 2641,\n 2844,\n 50,\n 7929,\n 7836,\n 8059,\n 7964,\n 7916,\n 51,\n 3648,\n 5159,\n 1843,\n 934,\n 6270,\n 4723,\n 6299,\n 6298,\n 4504,\n 3684,\n 4517,\n 7163,\n 7164,\n 7165,\n 2446,\n 8730,\n 7229,\n 5229,\n 2992,\n 2973,\n 5211,\n 3282,\n 5227,\n 2977,\n 5226,\n 5230,\n 2981,\n 2978,\n 9009,\n 2429,\n 4167,\n 5493,\n 3325,\n 4620,\n 2590,\n 473,\n 4274,\n 116,\n 1746,\n 2644,\n 1553,\n 6945,\n 2480,\n 465,\n 1722,\n 2510,\n 9077,\n 9592,\n 9593,\n 7812,\n 388,\n 3162,\n 3773,\n 6710,\n 8052,\n 3165,\n 7759,\n 2668,\n 5432,\n 4038,\n 2412,\n 8047,\n 845,\n 6648,\n 4825,\n 4826,\n 7922,\n 976,\n 9331,\n 8149,\n 8150,\n 1562,\n 8706,\n 6531,\n 2662,\n 7206,\n 3813,\n 2051,\n 6082,\n 5316,\n 674,\n 3487,\n 9470,\n 5317,\n 7186,\n 9409,\n 2767,\n 2766,\n 628,\n 4615,\n 1678,\n 1167,\n 2481,\n 7744,\n 9502,\n 4141,\n 4146,\n 4145,\n 8536,\n 2214,\n 5533,\n 5531,\n 5256,\n 6755,\n 399,\n 3010,\n 738,\n 4848,\n 1644,\n 3106,\n 8489,\n 1719,\n 1157,\n 2418,\n 1191,\n 3043,\n 1066,\n 4803,\n 2532,\n 2250,\n 7412,\n 3876,\n 1976,\n 6577,\n 6257,\n 5255,\n 5167,\n 5977,\n 6259,\n 6250,\n 5146,\n 5509,\n 5685,\n 7346,\n 6243,\n 6242,\n 6251,\n 3891,\n 9485,\n 6248,\n 2245,\n 2294,\n 5523,\n 419,\n 7027,\n 2208,\n 5722,\n 6442,\n 5148,\n 3842,\n 6260,\n 6263,\n 6261,\n 1499,\n 5304,\n 1474,\n 1498,\n 5310,\n 833,\n 6368,\n 6369,\n 8702,\n 9465,\n 1326,\n 7357,\n 2342,\n 1511,\n 7356,\n 4874,\n 1509,\n 7716,\n 6366,\n 6367,\n 6117,\n 4067,\n 5088,\n 1817,\n 8853,\n 8917,\n 7139,\n 397,\n 7140,\n 1740,\n 372,\n 620,\n 1753,\n 7407,\n 9642,\n 9643,\n 1608,\n 847,\n 1675,\n 3954,\n 7770,\n 6969,\n 8360,\n 2622,\n 9072,\n 9073,\n 310,\n 9416,\n 6990,\n 2441,\n 2434,\n 7840,\n 7968,\n 2271,\n 2265,\n 6088,\n 2367,\n 7013,\n 4074,\n 4336,\n 4335,\n 4339,\n 8415,\n 3772,\n 2613,\n 6267,\n 6266,\n 6268,\n 3940,\n 59,\n 6265,\n 2843,\n 4077,\n 2846,\n 2845,\n 4142,\n 9615,\n 4220,\n 1101,\n 3714,\n 5380,\n 5376,\n 7225,\n 302,\n 1105,\n 9212,\n 3716,\n 5698,\n 3878,\n 256,\n 5842,\n 6107,\n 5993,\n 5843,\n 7062,\n 6280,\n 95,\n 8422,\n 5844,\n 7092,\n 6017,\n 9257,\n 9215,\n 9214,\n 2491,\n 9581,\n 2407,\n 2552,\n 3242,\n 2468,\n 1814,\n 7130,\n 5225,\n 8681,\n 921,\n 6555,\n 2592,\n 1880,\n 574,\n 303,\n 7512,\n 9549,\n 3241,\n 5251,\n 8361,\n 2828,\n 1672,\n 6977,\n 1763,\n 6624,\n 1914,\n 7328,\n 507,\n 4626,\n 982,\n 1007,\n 8748,\n 8747,\n 8766,\n 8741,\n 8749,\n 8746,\n 8745,\n 8743,\n 8765,\n 8740,\n 8767,\n 8744,\n 8742,\n 568,\n 3552,\n 6497,\n 8818,\n 3086,\n 5252,\n 2195,\n 8680,\n 478,\n 2600,\n 4731,\n 39,\n 8686,\n 3255,\n 3205,\n 2645,\n 6547,\n 607,\n 105,\n 2768,\n 9454,\n 5404,\n 9410,\n 9453,\n 1360,\n 5480,\n 4616,\n 4812,\n 2850,\n 2849,\n 8499,\n 8836,\n 474,\n 512,\n 1916,\n 7924,\n 8054,\n 773,\n 623,\n 5370,\n 8141,\n 8142,\n 83,\n 8093,\n 1917,\n 6668,\n 6769,\n 521,\n 7447,\n 6986,\n 7209,\n 5156,\n 1909,\n 6508,\n 6745,\n 7460,\n 6753,\n 3702,\n 5366,\n 5403,\n 2038,\n 1918,\n 1908,\n 1907,\n 5516,\n 2558,\n 2090,\n 1242,\n 7798,\n 477,\n 1547,\n 2684,\n 2686,\n 1919,\n 5273,\n 2177,\n 1297,\n 9543,\n 7570,\n 3166,\n 1913,\n 761,\n 2459,\n 2748,\n 5200,\n 1204,\n 2340,\n 6822,\n 5501,\n 7457,\n 9500,\n 8640,\n 7076,\n 6826,\n 1820,\n 4213,\n 8981,\n 5387,\n 3528,\n 8677,\n 2139,\n 2159,\n 1945,\n 7698,\n 4109,\n 2117,\n 2141,\n 4108,\n 2125,\n 2940,\n 6696,\n 8980,\n 8976,\n 3319,\n 8974,\n 6357,\n 9051,\n 9024,\n 9057,\n 9053,\n 3578,\n 3531,\n 9054,\n 6226,\n 6831,\n 3288,\n 6824,\n 8982,\n 7336,\n 9056,\n 2953,\n 5131,\n 9059,\n 9058,\n 9023,\n 2946,\n 4491,\n 9060,\n 9675,\n 9155,\n 9068,\n 9055,\n 8975,\n 8977,\n 8892,\n 2091,\n 596,\n 3762,\n 1087,\n 2348,\n 3863,\n 9582,\n 6849,\n 6850,\n 4125,\n 3365,\n 3527,\n 3561,\n 1414,\n 3562,\n 8562,\n 8502,\n 5538,\n 4019,\n 3829,\n 9370,\n 8929,\n 9375,\n 9376,\n 3621,\n 5796,\n 3738,\n 4305,\n 8417,\n 6333,\n 2595,\n 6114,\n 6286,\n 6116,\n 6115,\n 6358,\n 8704,\n 7051,\n 7937,\n 8070,\n 8071,\n 7938,\n 3698,\n 3667,\n 3463,\n 9441,\n 4834,\n 8901,\n 3665,\n 3666,\n 3100,\n 3101,\n 1968,\n 4716,\n 3172,\n 4117,\n 3299,\n 7558,\n 7553,\n 7554,\n 6400,\n 6396,\n 6395,\n 6394,\n 6346,\n 6275,\n 6407,\n 6383,\n 4364,\n 3564,\n 6210,\n 5694,\n 6233,\n 6223,\n 6347,\n 6348,\n 6397,\n 3937,\n 6213,\n 6212,\n 6211,\n 6341,\n 3529,\n 6305,\n 4511,\n 9635,\n 3338,\n 3622,\n 5098,\n 6790,\n 5891,\n 5548,\n 8613,\n 6068,\n 115,\n 5417,\n 9120,\n 7378,\n 4644,\n 4673,\n 6865,\n 1931,\n 8473,\n 4232,\n 8367,\n 4043,\n 8418,\n 2954,\n 6792,\n 6793,\n 6652,\n 3350,\n 3349,\n 8532,\n 9305,\n 5889,\n 5810,\n 5807,\n 5811,\n 5814,\n 5808,\n 2166,\n 1076,\n 2024,\n 6695,\n 801,\n 128,\n 926,\n 932,\n 7220,\n 925,\n 2357,\n 2723,\n 746,\n 3812,\n 6330,\n 1811,\n 425,\n 1810,\n 1140,\n 5442,\n 2943,\n 2314,\n 5982,\n 5452,\n 7018,\n 7019,\n 1720,\n 7641,\n 7441,\n 2422,\n 2421,\n 7501,\n 7117,\n 8838,\n 9383,\n 4373,\n 6417,\n 6422,\n 4299,\n 6315,\n 5817,\n 5830,\n 5827,\n 8716,\n 6875,\n 5086,\n 9611,\n 1993,\n 1935,\n 6704,\n 4054,\n 4055,\n 6063,\n 5462,\n 9025,\n 9168,\n 4652,\n 1429,\n 3227,\n 6592,\n 3254,\n 3226,\n 265,\n 243,\n 7138,\n 502,\n 9359,\n 1340,\n 9284,\n 3131,\n 3225,\n 3224,\n 9664,\n 5076,\n 5077,\n 4690,\n 4569,\n 7752,\n 3234,\n 8066,\n 8174,\n 2014,\n 1568,\n 8067,\n 3230,\n 7880,\n 7877,\n 8343,\n 5157,\n 3097,\n 4880,\n 2916,\n 6948,\n 2933,\n 4689,\n 4876,\n 2093,\n 7705,\n 4879,\n 7761,\n 7743,\n 4703,\n 2912,\n 8563,\n 7676,\n 1777,\n 2209,\n 4881,\n 4882,\n 6501,\n 543,\n 8564,\n 7067,\n 509,\n 495,\n 5232,\n 5231,\n 1345,\n 7180,\n 7762,\n 4893,\n 1775,\n 2591,\n 1510,\n 1531,\n 4152,\n 1529,\n 6518,\n 2737,\n 1523,\n 1522,\n 876,\n 1329,\n 1525,\n 4169,\n 4204,\n 2783,\n 4350,\n 7351,\n 6089,\n 6912,\n 6816,\n 9501,\n 1636,\n 946,\n 106,\n 9285,\n 907,\n 2054,\n 2583,\n 9277,\n 1200,\n 1785,\n 7173,\n 4606,\n 7237,\n 2520,\n 7609,\n 1761,\n 1717,\n 2606,\n 8819,\n 3111,\n 9361,\n 3114,\n 3113,\n 3109,\n 3105,\n 3112,\n 245,\n 8490,\n 3115,\n 798,\n 6538,\n 2549,\n 3951,\n 6238,\n 260,\n 258,\n 259,\n 261,\n 6622,\n 5216,\n 2449,\n 4394,\n 7552,\n 5693,\n 5242,\n 6437,\n 8832,\n 6777,\n 1048,\n 5479,\n 7354,\n 7355,\n 5244,\n 3868,\n 3961,\n 6208,\n 7348,\n 5692,\n 8351,\n 5863,\n 8705,\n 2507,\n 6147,\n 6076,\n 6075,\n 6904,\n 2020,\n 2351,\n 988,\n 4846,\n 4859,\n 4860,\n 1922,\n 2006,\n 7439,\n 7435,\n 557,\n 5871,\n 5872,\n 9159,\n 4331,\n 6136,\n 4949,\n 4948,\n 4947,\n 6317,\n 4268,\n 9431,\n 9096,\n 4733,\n 9019,\n 9545,\n 4203,\n 8549,\n 9566,\n 5145,\n 3478,\n 4058,\n 3843,\n 7427,\n 9570,\n 7044,\n 283,\n 277,\n 296,\n 282,\n 3902,\n 8926,\n 7565,\n 6470,\n 3857,\n 6620,\n 1493,\n 663,\n 333,\n 4105,\n 8878,\n 332,\n 1758,\n 1757,\n 1250,\n 4406,\n 5206,\n 3051,\n 3678,\n 3644,\n 1710,\n 53,\n 4753,\n 7384,\n 5274,\n 5108,\n 5455,\n 5477,\n 5457,\n 5458,\n 3983,\n 5456,\n 7265,\n 3984,\n 3986,\n 3046,\n 9151,\n 6741,\n 7649,\n 6653,\n 7730,\n 6843,\n 7677,\n 7021,\n 7022,\n 7429,\n 1912,\n 8242,\n 2570,\n 8243,\n 3077,\n 8244,\n 8250,\n 8247,\n 8248,\n 8245,\n 8249,\n 3083,\n 8246,\n 1853,\n 1864,\n 7425,\n 5394,\n 2032,\n 2807,\n 2803,\n 2292,\n 2327,\n 7703,\n 6933,\n 5846,\n 5852,\n 3995,\n 6000,\n 8751,\n 9144,\n 7169,\n 8916,\n 6052,\n 6051,\n 6027,\n 6028,\n 2241,\n 2287,\n 7543,\n 2288,\n 7544,\n 1120,\n 139,\n 135,\n 223,\n 9367,\n 6919,\n 2589,\n 6917,\n 7702,\n 6918,\n 869,\n 7864,\n 7994,\n 6146,\n 9148,\n 3950,\n 9149,\n 570,\n 1296,\n 1260,\n 7391,\n 1592,\n 1598,\n 1596,\n 1595,\n 1601,\n 4898,\n 1599,\n 1602,\n 1600,\n 1597,\n 1594,\n 1593,\n 3683,\n 567,\n 5906,\n 3041,\n 3040,\n 3042,\n 8035,\n 707,\n 7905,\n 7969,\n 7841,\n 5825,\n 9301,\n 7972,\n 7844,\n 7894,\n 8023,\n 8612,\n 3754,\n 23,\n 8599,\n 8581,\n 3755,\n 1179,\n 2390,\n 2315,\n 2984,\n 9198,\n 7170,\n 5848,\n 7370,\n 1985,\n 6594,\n 2952,\n 8340,\n 3104,\n 1286,\n 2328,\n 8121,\n 9602,\n 1575,\n 3815,\n 8492,\n 4325,\n 2333,\n 3572,\n 8555,\n 2005,\n 113,\n 6413,\n 9074,\n 8855,\n 5998,\n 1071,\n 6406,\n 2010,\n 4873,\n 3119,\n 1581,\n 3828,\n 768,\n 2343,\n 215,\n 3585,\n 5169,\n 1712,\n 2015,\n 812,\n 1214,\n 3128,\n 955,\n 3356,\n 2181,\n 4092,\n 8322,\n 1012,\n 8611,\n 3597,\n 3134,\n 1386,\n 2727,\n 4358,\n 1298,\n 6382,\n 5189,\n 1591,\n 164,\n 9298,\n 3368,\n 9595,\n 4905,\n 285,\n 5197,\n 8849,\n 2362,\n 8086,\n 2935,\n 1304,\n 8482,\n 8798,\n 4914,\n 198,\n 1876,\n 5208,\n 1492,\n 2370,\n 8480,\n 961,\n 2746,\n 1733,\n 2557,\n 3624,\n 1019,\n 8553,\n 2376,\n 9258,\n 4929,\n 1605,\n 664,\n 1739,\n 912,\n 3167,\n 5930,\n 5530,\n 1312,\n 5228,\n 2383,\n 1609,\n 124,\n 1744,\n 8663,\n 4398,\n 5235,\n 966,\n 2389,\n 2765,\n 3177,\n 8600,\n 8661,\n 1615,\n 2968,\n 3182,\n 1750,\n 8542,\n 2395,\n 136,\n 1026,\n 1317,\n 1620,\n 5556,\n 1756,\n 6162,\n 7246,\n 8833,\n 1906,\n 102,\n 463,\n 2406,\n 782,\n 3664,\n 3198,\n 1762,\n 4688,\n 203,\n 1627,\n 8589,\n 1324,\n 1767,\n 8655,\n 1239,\n 2416,\n 9340,\n 1633,\n 3210,\n 6152,\n 1920,\n 2996,\n 224,\n 3214,\n 246,\n 8459,\n 2799,\n 1035,\n 9607,\n 1926,\n 924,\n 4711,\n 3005,\n 3223,\n 3452,\n 1928,\n 8778,\n 140,\n 8182,\n 3228,\n 3697,\n 8828,\n 1642,\n 2433,\n 3232,\n 2618,\n 1782,\n 1172,\n 3705,\n 3236,\n 832,\n 9217,\n 3018,\n 3240,\n 1338,\n 368,\n 6304,\n 2440,\n 2626,\n 9196,\n 1789,\n 3247,\n 8578,\n 5841,\n 1650,\n 104,\n 1944,\n 3252,\n 2447,\n 931,\n 1045,\n 4749,\n 7952,\n 142,\n 2831,\n 8769,\n 1656,\n 4230,\n 8644,\n 2454,\n 3039,\n 6103,\n 8531,\n 8567,\n 4236,\n 2111,\n 8519,\n 5831,\n 4764,\n 3985,\n 1540,\n 3987,\n 986,\n 5655,\n 8517,\n 794,\n 4771,\n 1261,\n 2651,\n 2464,\n 4248,\n 1049,\n 2848,\n 644,\n 1809,\n 1668,\n 3509,\n 3056,\n 525,\n 5363,\n 6074,\n 5365,\n 2123,\n 1186,\n 2289,\n 9290,\n 991,\n 2663,\n 1268,\n 2860,\n 1118,\n 4266,\n 8897,\n 1818,\n 1676,\n 3524,\n 5080,\n 251,\n 3767,\n 5806,\n 8633,\n 4801,\n 4018,\n 1822,\n 4804,\n 1555,\n 5089,\n 758,\n 3075,\n 2137,\n 8503,\n 1826,\n 1682,\n 80,\n 3536,\n 9264,\n 5789,\n 6269,\n 1195,\n 6045,\n 209,\n 4817,\n 9240,\n 943,\n 9088,\n 3785,\n 4552,\n 144,\n 2882,\n 1368,\n 4039,\n 1001,\n 3315,\n 5114,\n 7826,\n 3549,\n 1567,\n 6431,\n 4833,\n 3794,\n 8622,\n 4303,\n 6429,\n 1840,\n 8498,\n 119,\n 4568,\n 1203,\n 3800,\n 3098,\n 2157,\n 8348,\n 3326,\n 5134,\n 3560,\n 806,\n 111,\n 4851,\n 6235,\n 7377,\n 6772,\n 9326,\n 9187,\n 6724,\n 825,\n 4887,\n 5973,\n 2498,\n 6401,\n 6411,\n 6402,\n 2958,\n 5695,\n 5433,\n 5434,\n 3968,\n 7204,\n 3651,\n 8406,\n 8407,\n 3318,\n 242,\n 571,\n 528,\n 8409,\n 8408,\n 631,\n 8369,\n 3504,\n 530,\n 3508,\n 4091,\n 9071,\n 753,\n 2646,\n 710,\n 4894,\n 1973,\n 7083,\n 6150,\n 3948,\n 4253,\n 9097,\n 5176,\n 9398,\n 4250,\n 6787,\n 2057,\n 523,\n 5742,\n 2654,\n 5697,\n 6603,\n 5196,\n 2276,\n 6796,\n 2264,\n 824,\n 879,\n 91,\n 6447,\n 4314,\n 4315,\n 4474,\n 4457,\n 3893,\n 6351,\n 9255,\n 6352,\n 3778,\n 3706,\n 3768,\n 774,\n 8913,\n 6873,\n 9523,\n 4396,\n 5117,\n 8506,\n 4138,\n 2361,\n 5367,\n 3145,\n 3092,\n 6982,\n 3093,\n 8524,\n 4709,\n 4535,\n 7858,\n 2293,\n 6806,\n 4592,\n 626,\n 7248,\n 9471,\n 5948,\n 3136,\n 9679,\n 1249,\n 1384,\n 1010,\n 1279,\n 1278,\n 1281,\n 1280,\n 1294,\n 9414,\n 1564,\n 2083,\n 5339,\n 573,\n 595,\n 5502,\n 6635,\n 2332,\n 7580,\n 2975,\n 5168,\n 2075,\n 5400,\n 5398,\n 5399,\n 5401,\n 8624,\n 4116,\n 263,\n 4354,\n 7483,\n 2683,\n 7604,\n 7187,\n 8737,\n 1512,\n 1520,\n 1521,\n 5257,\n 7275,\n 4789,\n 829,\n 749,\n 7079,\n 5280,\n 6685,\n 1478,\n 8889,\n 9600,\n 7104,\n 2836,\n 9400,\n 5718,\n 2927,\n 8413,\n 8521,\n 6944,\n 2058,\n 1100,\n 9601,\n 3467,\n 7235,\n 7234,\n 4684,\n 3117,\n 3118,\n 5506,\n 2338,\n 7808,\n 134,\n 3116,\n 4564,\n 3541,\n 2235,\n 4497,\n 1431,\n 671,\n 1443,\n 1996,\n 466,\n 4556,\n 3499,\n 7550,\n 7657,\n 8412,\n 3200,\n 4852,\n 3199,\n 887,\n 3202,\n 12,\n 2455,\n 900,\n 3201,\n 6726,\n 6654,\n 7171,\n 1267,\n 4675,\n 3253,\n 7,\n 4822,\n 4824,\n 4820,\n 101,\n 7010,\n 9234,\n 7011,\n 3673,\n 4819,\n 4821,\n 1396,\n 2504,\n 3284,\n 7338,\n 1911,\n 6615,\n 2526,\n 3739,\n 3740,\n 9239,\n 2050,\n 5203,\n 3591,\n 3818,\n 6878,\n 2785,\n 2095,\n 6515,\n 6980,\n 7403,\n 2599,\n 6874,\n 5285,\n 4786,\n 8523,\n 7295,\n 8685,\n 8545,\n 8546,\n 4587,\n 6241,\n 9442,\n 4476,\n 5392,\n 5393,\n 3219,\n 3771,\n 7872,\n 7253,\n 7645,\n 6405,\n 2080,\n 7417,\n 2081,\n 7547,\n 4521,\n 9428,\n 9499,\n 6389,\n 4393,\n 6353,\n 5068,\n 6354,\n 3454,\n 4286,\n 4386,\n 9672,\n 8436,\n 8437,\n 424,\n 7217,\n 6606,\n 161,\n 5635,\n 5636,\n 5637,\n 6705,\n 5581,\n 1373,\n 6905,\n 1808,\n 1374,\n 1372,\n 1375,\n 1356,\n 7660,\n 5582,\n 3107,\n 5562,\n 6492,\n 5616,\n 5579,\n 5593,\n 5583,\n 7661,\n 6494,\n 1362,\n 5649,\n 6957,\n 5560,\n 5563,\n 5643,\n 5642,\n 4770,\n 2269,\n 2346,\n 1924,\n 2331,\n 4867,\n 4868,\n 3854,\n 2104,\n 6703,\n 7327,\n 2019,\n 1923,\n 2011,\n 6871,\n 4863,\n 9377,\n 2084,\n 2405,\n 1566,\n 2082,\n 2404,\n 3251,\n 4864,\n 5664,\n 6786,\n 1856,\n 5720,\n 9599,\n 2023,\n 152,\n 2325,\n 1003,\n 7257,\n 1476,\n 8779,\n 1489,\n 5305,\n 1487,\n 1488,\n 6503,\n 6840,\n 9663,\n 2624,\n 6601,\n 7758,\n 3637,\n 2286,\n 974,\n 2283,\n 975,\n 8595,\n 5284,\n 4785,\n 7224,\n 2039,\n 7424,\n 1666,\n 1193,\n 1009,\n 8831,\n 2703,\n 2310,\n 2323,\n 4727,\n 3265,\n 7389,\n 4779,\n 2193,\n 5543,\n 2486,\n 413,\n 1542,\n 2247,\n 2254,\n 7059,\n 5546,\n 5547,\n 5542,\n 5541,\n 5544,\n 5545,\n 2318,\n 2232,\n 1673,\n 6612,\n 6744,\n 2322,\n 3211,\n 2253,\n 5540,\n 7529,\n 3272,\n 2252,\n 1772,\n 2324,\n 2309,\n 7247,\n 8337,\n 4738,\n 275,\n 2674,\n 2670,\n 5396,\n 6738,\n 2194,\n 6981,\n 7026,\n 7266,\n 9191,\n 19,\n 7695,\n 5352,\n 7119,\n 7040,\n 5354,\n 5505,\n 4360,\n 2588,\n 5353,\n 3607,\n 3606,\n 1703,\n 9226,\n 9236,\n 4498,\n 9218,\n 3629,\n 3631,\n 8087,\n 3628,\n 6820,\n 405,\n 5302,\n 1634,\n 1240,\n 1376,\n 1381,\n 1371,\n 5303,\n 2487,\n 1036,\n 4447,\n 654,\n 7859,\n 7989,\n 3587,\n 3287,\n 3752,\n 7953,\n 5764,\n 6264,\n 7261,\n 7260,\n 3976,\n 3977,\n 7687,\n 7601,\n 7368,\n 7603,\n 7596,\n 7068,\n 727,\n 1943,\n 7597,\n 7590,\n 5147,\n 3904,\n 5124,\n 8569,\n 5390,\n 9493,\n 6291,\n 5271,\n 7692,\n 6022,\n 6021,\n 1176,\n 6821,\n 6219,\n 8029,\n 7899,\n 5923,\n 7679,\n 3221,\n 6642,\n 7976,\n 7848,\n 5526,\n 7867,\n 7997,\n 2274,\n 997,\n 4784,\n 1896,\n 1900,\n 8739,\n 4338,\n 6920,\n 5413,\n 3175,\n 3174,\n 1904,\n 2830,\n 7102,\n 5107,\n 4321,\n 5109,\n 2775,\n 8127,\n 8188,\n 7584,\n 2928,\n 7587,\n 5253,\n 7708,\n 9111,\n 6897,\n 8161,\n 8162,\n 6643,\n 7462,\n 4918,\n 1565,\n 2533,\n 1938,\n 7578,\n 6764,\n 7075,\n 1150,\n 7371,\n 1669,\n 6637,\n 7530,\n 6581,\n 7532,\n 2097,\n 4376,\n 8522,\n 9614,\n 9613,\n 4384,\n 5976,\n 8709,\n 5823,\n 7667,\n 7668,\n 3239,\n 1731,\n 1730,\n 7690,\n 7142,\n 6509,\n 2377,\n 4796,\n 4795,\n 7359,\n 4624,\n 4365,\n 7211,\n 5911,\n 5910,\n 5898,\n 2682,\n 2779,\n 8721,\n 4897,\n 5944,\n 9157,\n 7998,\n 498,\n 7868,\n 99,\n 9616,\n 9617,\n 5878,\n 8642,\n 8669,\n 9572,\n 7181,\n 517,\n 494,\n 7392,\n 4649,\n 7805,\n 5430,\n 3125,\n 5566,\n 5574,\n 2750,\n 7185,\n 6888,\n 2275,\n 2059,\n 5515,\n 3091,\n 5521,\n 3266,\n 9399,\n 5349,\n 5118,\n 9288,\n 9567,\n 6301,\n 6500,\n 6046,\n 6454,\n 6488,\n 3034,\n 3188,\n 7135,\n 3189,\n 3502,\n 7202,\n 938,\n 8049,\n 7919,\n 5140,\n 8625,\n 7112,\n 2198,\n 5057,\n 9052,\n 3148,\n 9106,\n 2925,\n 5915,\n 5845,\n 6922,\n 8470,\n 8736,\n 7091,\n 7093,\n 3245,\n 5258,\n 5259,\n 5555,\n 8890,\n 3169,\n 3168,\n 6463,\n 3231,\n 719,\n 3229,\n 4465,\n 85,\n 6462,\n 629,\n 564,\n 1074,\n 9220,\n 6360,\n 3657,\n 916,\n 562,\n 4380,\n 561,\n 3708,\n 8153,\n 8154,\n 4272,\n 3170,\n 6465,\n 539,\n 917,\n 3515,\n 733,\n 1089,\n 93,\n 3699,\n 7259,\n 5618,\n 5578,\n 5601,\n 8932,\n 5289,\n 5691,\n 2675,\n 8039,\n 7909,\n 5066,\n 5730,\n 7477,\n 3677,\n 7324,\n 8938,\n 7890,\n 6236,\n 5368,\n 8794,\n 7121,\n 5584,\n 5585,\n 5577,\n 5683,\n 1663,\n 1664,\n 426,\n 1823,\n 1039,\n 1044,\n 1043,\n 2740,\n 1793,\n 1041,\n 1038,\n 1042,\n 1040,\n 1037,\n 4634,\n 1132,\n 5328,\n 6999,\n 3071,\n 1708,\n 7000,\n 1870,\n 6650,\n 7633,\n 1352,\n 6997,\n 7008,\n 7009,\n 2537,\n 2714,\n 6557,\n 541,\n 6998,\n 6996,\n 1000,\n 2904,\n 2199,\n 3012,\n 4,\n 625,\n 1486,\n 7621,\n 3070,\n 2886,\n 9550,\n 7177,\n 1711,\n 992,\n 7223,\n 6805,\n 6449,\n 5617,\n 5599,\n 4046,\n 4722,\n 9388,\n 1999,\n 4044,\n 1936,\n 2308,\n 6551,\n 6460,\n 8590,\n 5081,\n 8880,\n 2810,\n 4269,\n 2813,\n 699,\n 7897,\n 8027,\n 4200,\n 9636,\n 5362,\n 443,\n 6900,\n 3789,\n 8344,\n 9418,\n 1395,\n 4087,\n 4509,\n 9678,\n 8421,\n 8020,\n 452,\n 8005,\n 7985,\n 7857,\n 2109,\n 5136,\n 592,\n 3971,\n 591,\n 933,\n 6968,\n 5662,\n 2092,\n 2525,\n 2410,\n 4915,\n 4912,\n 7430,\n 7432,\n 2154,\n 1766,\n 160,\n 2135,\n 2531,\n 1778,\n 2230,\n 3026,\n 2164,\n 2122,\n 2156,\n 7149,\n 7309,\n 1659,\n 6991,\n 468,\n 467,\n 6992,\n 3532,\n 2169,\n 2839,\n 2360,\n 2170,\n 8002,\n 6975,\n 2228,\n 6973,\n 7835,\n 7963,\n 3060,\n 442,\n 2215,\n 2216,\n 6502,\n 2021,\n 2393,\n 6323,\n 6083,\n 5895,\n 5818,\n 5945,\n 9481,\n 8356,\n 8355,\n 8357,\n 8354,\n 6846,\n 8453,\n 8452,\n 7243,\n 7080,\n 4088,\n 4340,\n 4342,\n 5429,\n 2101,\n 9316,\n 3907,\n 7347,\n 730,\n 3869,\n 6859,\n 7697,\n 4285,\n 5670,\n 2555,\n 3286,\n 1423,\n 3526,\n 9490,\n 601,\n 2503,\n 3901,\n 954,\n 858,\n 826,\n 691,\n 4487,\n 579,\n 407,\n 112,\n 385,\n 3656,\n 851,\n 756,\n 712,\n 423,\n 805,\n 1481,\n 1613,\n 771,\n 766,\n 3643,\n 6047,\n 6048,\n 9087,\n 2982,\n 7176,\n 797,\n 2240,\n 821,\n 6700,\n 4363,\n 609,\n 2213,\n 2677,\n 420,\n 485,\n 9610,\n 2694,\n 1743,\n 4573,\n 7304,\n 2656,\n 1222,\n 1348,\n 6763,\n 6441,\n 7033,\n 7034,\n 1349,\n 4580,\n 3067,\n 1723,\n 4270,\n 1432,\n 1724,\n 7436,\n 2300,\n 7405,\n 4732,\n 20,\n 7537,\n 6978,\n 5357,\n 7032,\n 4529,\n 7579,\n 1347,\n 7074,\n 1832,\n 1839,\n 2719,\n 2699,\n 7525,\n 9253,\n 2659,\n 4641,\n 4792,\n 4750,\n 6825,\n 1788,\n 4766,\n 602,\n 3640,\n 3638,\n 35,\n 2465,\n 7482,\n 7481,\n 1158,\n 5712,\n 5705,\n 5896,\n 5897,\n 4987,\n 4986,\n 4985,\n 6149,\n 5701,\n 5756,\n 5773,\n 6672,\n 2812,\n 7569,\n 7654,\n 1131,\n 2554,\n 4602,\n 4607,\n 981,\n 4645,\n 4572,\n 7672,\n 7658,\n 1699,\n 7652,\n 4623,\n 6655,\n 9463,\n 979,\n 3769,\n 4678,\n 3975,\n 4659,\n 1307,\n 1320,\n 1046,\n 3063,\n 3686,\n 3669,\n 2635,\n 1546,\n 1409,\n 8345,\n 1507,\n 2647,\n 583,\n 5334,\n 3140,\n 7546,\n 2741,\n 3152,\n 7773,\n 6941,\n 3061,\n 914,\n 513,\n 1658,\n 6512,\n 479,\n 7081,\n 5341,\n 6576,\n 6505,\n 2730,\n 2734,\n 8856,\n 9241,\n 1482,\n 6435,\n 5087,\n 1439,\n 7333,\n 7131,\n 3146,\n 3137,\n 2707,\n 6773,\n 1857,\n 6292,\n 5414,\n 7585,\n 3149,\n 7610,\n 3143,\n 7387,\n 1246,\n 3731,\n 3732,\n 939,\n 2724,\n 6290,\n 1861,\n 8135,\n 8136,\n 2880,\n 2636,\n 3455,\n 3489,\n 1078,\n 7914,\n 598,\n 2711,\n 7136,\n 9107,\n 6081,\n 6252,\n 3889,\n 6254,\n 6255,\n 3890,\n 5551,\n 5144,\n 5101,\n 4442,\n 4508,\n 5834,\n 6031,\n 9304,\n 6002,\n 6035,\n 9323,\n 9145,\n 9309,\n 9310,\n 6005,\n 5422,\n 5435,\n 5444,\n 4033,\n 4953,\n 4293,\n 3827,\n 5716,\n 4961,\n 8327,\n 3608,\n 5447,\n 3942,\n 1872,\n 1841,\n 1844,\n 5445,\n 9491,\n 4324,\n 5446,\n 235,\n 6613,\n 5424,\n 5048,\n 7783,\n 5,\n 440,\n 7781,\n 5115,\n 1621,\n 7782,\n 7385,\n 4403,\n 4436,\n 7843,\n 7971,\n 2550,\n 1189,\n 4030,\n 1053,\n 493,\n 1254,\n 7533,\n 1165,\n 901,\n 4029,\n 4020,\n 4666,\n 4028,\n 4667,\n 3819,\n 1323,\n 6604,\n 1318,\n 1226,\n 7213,\n 920,\n 1970,\n 7214,\n 9575,\n 759,\n 98,\n 4485,\n 527,\n 584,\n 84,\n 3533,\n 3567,\n 683,\n 680,\n 4452,\n 8528,\n 2261,\n 6129,\n 6104,\n 6123,\n 7771,\n 6122,\n 6128,\n 6124,\n 6130,\n 8620,\n 3777,\n 675,\n 1411,\n 6217,\n 682,\n 6056,\n 686,\n 6151,\n 5524,\n 1850,\n 1648,\n 5725,\n 4680,\n 6666,\n 8577,\n 6887,\n 1534,\n 9653,\n 9527,\n 9656,\n 6687,\n 9662,\n 5420,\n 4304,\n 4313,\n 3312,\n 5527,\n 4808,\n 9104,\n 9164,\n 9103,\n 9520,\n 9521,\n 9163,\n 2086,\n 7168,\n 5962,\n 1897,\n 4016,\n 9336,\n 9522,\n 1213,\n 9587,\n 4196,\n 9651,\n 4998,\n 9484,\n 7281,\n 894,\n 6550,\n 9334,\n 5625,\n 6748,\n 7316,\n 2018,\n 2350,\n 2392,\n 7696,\n 1955,\n 2152,\n 2134,\n 4532,\n 6729,\n 1954,\n 6148,\n 7058,\n 262,\n 5099,\n 4540,\n 271,\n 2149,\n 2132,\n 5116,\n 5186,\n 9064,\n 8830,\n 6177,\n 4174,\n 4736,\n 9483,\n 6935,\n 6934,\n 8700,\n 8697,\n 4181,\n 8701,\n 3617,\n 9067,\n 8934,\n 9647,\n 6204,\n 6215,\n 9195,\n 7520,\n 9447,\n 9028,\n 4235,\n 9620,\n 4120,\n 8725,\n 8898,\n 5513,\n 9369,\n 8634,\n 4172,\n 4737,\n 4173,\n 9372,\n 4171,\n 4164,\n 5371,\n 9026,\n 3959,\n 1524,\n 5162,\n 1248,\n 2371,\n 2088,\n 2336,\n 2356,\n 8921,\n 4260,\n 7790,\n 8864,\n 8885,\n 6971,\n 434,\n 5163,\n 6870,\n 4259,\n 7141,\n 5877,\n 5876,\n 5874,\n 2074,\n 5356,\n 7918,\n 7987,\n 4604,\n 4663,\n 2931,\n 9114,\n 9137,\n 2808,\n 2469,\n 6544,\n 6543,\n 1393,\n 4326,\n 3555,\n 1419,\n 6961,\n 5478,\n 7311,\n 775,\n 5223,\n 3970,\n 8163,\n 8164,\n 5968,\n 6077,\n 3604,\n 8106,\n 5950,\n 6415,\n 6416,\n 5812,\n 2064,\n 7500,\n 4958,\n 6898,\n 5153,\n 4740,\n 5265,\n 7861,\n 6164,\n 3569,\n 6163,\n 6193,\n 6224,\n 6188,\n 6187,\n 7364,\n 6175,\n 6209,\n 7365,\n 3565,\n 4132,\n 2708,\n 7095,\n 3333,\n 3760,\n 4017,\n 3217,\n 3864,\n 3830,\n 3806,\n 3808,\n 3803,\n 3802,\n 3801,\n 7756,\n 3751,\n 3805,\n 3804,\n 3807,\n 3832,\n 1491,\n 3809,\n 4271,\n 8646,\n 5671,\n 6602,\n 6706,\n 8940,\n 3834,\n 11,\n 745,\n 650,\n 661,\n 703,\n 652,\n 7662,\n 4276,\n 9238,\n 6272,\n 8113,\n 3885,\n 7028,\n 1472,\n 550,\n 5908,\n 3833,\n 4022,\n 4025,\n 649,\n 6707,\n 6708,\n 4407,\n 3618,\n 6582,\n 7252,\n 6398,\n 6399,\n 6660,\n 7592,\n 2811,\n 6866,\n 6665,\n 7595,\n 3736,\n 3922,\n 7991,\n 1247,\n 5266,\n 7673,\n 6467,\n 8102,\n 2363,\n 1366,\n 4188,\n 2378,\n 8151,\n 8152,\n 8100,\n 7567,\n 4597,\n 4702,\n 3327,\n 5113,\n 9585,\n 4198,\n 1732,\n 7545,\n 4401,\n 9559,\n 7851,\n 2273,\n 2277,\n 2105,\n 552,\n 1528,\n 516,\n 2278,\n 2224,\n 2107,\n 1882,\n 5295,\n 1051,\n 5294,\n 6686,\n 7787,\n 2279,\n 6532,\n 7748,\n 9507,\n 3612,\n 7768,\n 7360,\n 7231,\n 2372,\n 6862,\n 1937,\n 5250,\n 4154,\n 5174,\n 5709,\n 5172,\n 5182,\n 4971,\n 3190,\n 3191,\n 3888,\n 5205,\n 505,\n 4219,\n 9078,\n 9079,\n 7219,\n 4979,\n 3915,\n 8032,\n 4178,\n 3910,\n 7221,\n 1845,\n 4023,\n 4745,\n 2769,\n 6740,\n 2231,\n 2712,\n 4585,\n 4614,\n 1196,\n 1649,\n 8848,\n 9354,\n 4877,\n 1502,\n 250,\n 7655,\n 2798,\n 2793,\n 7182,\n 2770,\n 9457,\n 6739,\n 2796,\n 2797,\n 7437,\n 4589,\n 5281,\n 5498,\n 2272,\n 7404,\n 7183,\n 5409,\n 2266,\n 2268,\n 9459,\n 7659,\n 7542,\n 7629,\n 7618,\n 1290,\n 2280,\n 7563,\n 8847,\n 8846,\n 4643,\n 4199,\n 7394,\n 2456,\n 1646,\n 2611,\n 2776,\n 2572,\n 2777,\n 6885,\n 7456,\n 6837,\n 4968,\n 4967,\n 4969,\n 5224,\n 4934,\n 1080,\n 3632,\n 5689,\n 3780,\n 8755,\n 4959,\n 4970,\n 4306,\n 5165,\n 717,\n 3291,\n 9070,\n 1883,\n 7422,\n 2262,\n 742,\n 736,\n 7444,\n 4823,\n 9661,\n 1554,\n 5921,\n 3887,\n 5770,\n 3797,\n 4935,\n 4180,\n 3096,\n 1893,\n 1835,\n 2344,\n 2184,\n 1940,\n 449,\n 8933,\n 4980,\n 5719,\n 4582,\n 4697,\n 4583,\n 3048,\n 2078,\n 4632,\n 3047,\n 3008,\n 3027,\n 893,\n 3015,\n 4710,\n 3014,\n 3055,\n 1332,\n 616,\n 7931,\n 8062,\n 8159,\n 8160,\n 8009,\n 7878,\n 1942,\n 1610,\n 7109,\n 1963,\n 4715,\n 8324,\n 8323,\n 3735,\n 3570,\n 636,\n 5348,\n 5514,\n 6100,\n 7312,\n 5466,\n 3943,\n 6113,\n 4446,\n 4456,\n 4448,\n 536,\n 1450,\n 6244,\n 4449,\n 3534,\n 580,\n 3516,\n 4463,\n 3543,\n 549,\n 734,\n 684,\n 5470,\n 6144,\n 6119,\n 9573,\n 8972,\n 9038,\n 6186,\n 6178,\n 8966,\n 7699,\n 8971,\n 8968,\n 8970,\n 8967,\n 8969,\n 2142,\n 1946,\n 2160,\n 2118,\n 2144,\n 2127,\n 2544,\n 9061,\n 8973,\n 6627,\n 4214,\n 4217,\n 4205,\n 9142,\n 3285,\n 3511,\n 6747,\n 614,\n 2649,\n 524,\n 622,\n 6575,\n 6574,\n 634,\n 4638,\n 244,\n 4639,\n 594,\n 6746,\n 2972,\n 2669,\n 5338,\n 7082,\n 8099,\n 378,\n 87,\n 5358,\n 488,\n 2692,\n 64,\n 7007,\n 7006,\n 1667,\n 157,\n 109,\n 695,\n 110,\n 1258,\n 2657,\n 7750,\n 7779,\n 1576,\n 1606,\n 7453,\n 7613,\n 5337,\n 1209,\n 615,\n 1736,\n 9225,\n 1365,\n 2299,\n 1208,\n 7406,\n 8108,\n 1516,\n 7393,\n 384,\n 613,\n 33,\n 7607,\n 1212,\n 7797,\n 1210,\n 6625,\n 7474,\n 2976,\n 7499,\n 1513,\n 6528,\n 5332,\n 3488,\n 1447,\n 589,\n 6699,\n 1211,\n 4311,\n 21,\n 7598,\n 1471,\n 791,\n 1207,\n 5336,\n 2065,\n 1671,\n 1011,\n 487,\n 492,\n 1979,\n 2004,\n 6572,\n 3776,\n 744,\n 29,\n 5659,\n 651,\n 7035,\n 7608,\n 4636,\n 7606,\n 4637,\n 7780,\n 1206,\n 6802,\n 4562,\n 4741,\n 2347,\n 4871,\n 5308,\n 2225,\n 4872,\n 1925,\n 2112,\n 2394,\n 7711,\n 2402,\n 1221,\n 3483,\n 1205,\n 5529,\n 556,\n 7073,\n 3542,\n 82,\n 7746,\n 3054,\n 2501,\n 6754,\n 2381,\n 2366,\n 9495,\n 7860,\n 7990,\n 1517,\n 8169,\n 8170,\n 8110,\n 3249,\n 480,\n 6711,\n 2201,\n 5126,\n 1760,\n 1716,\n 1715,\n 1714,\n 1713,\n 3457,\n 7200,\n 4542,\n 9612,\n 5035,\n 5034,\n 5036,\n 3690,\n 6079,\n 6881,\n 7741,\n 7325,\n 1336,\n 9466,\n 2947,\n 4676,\n 6808,\n 4560,\n 5490,\n 2076,\n 4533,\n 4496,\n 7118,\n 9396,\n 7999,\n 7869,\n 6240,\n 6879,\n 4534,\n 5805,\n 7932,\n 9677,\n 4155,\n 4683,\n 8511,\n 8575,\n 6385,\n 5974,\n 294,\n 293,\n 5554,\n 4072,\n 5006,\n 5881,\n 3484,\n 2516,\n 653,\n 5932,\n 5700,\n 234,\n 1727,\n 4170,\n 3614,\n 5795,\n 3623,\n 3545,\n 9650,\n 9248,\n 5130,\n 5139,\n 3852,\n 3853,\n 3880,\n 1997,\n 4361,\n 7503,\n 1265,\n 3865,\n 9606,\n 8687,\n 4699,\n 9541,\n 8770,\n 7742,\n 9256,\n 8429,\n 57,\n 1879,\n 7342,\n 8776,\n 3935,\n 9192,\n 9518,\n 3960,\n 5173,\n 5178,\n 5175,\n 7465,\n 4765,\n 1787,\n 8201,\n 2794,\n 2795,\n 8031,\n 7901,\n 7902,\n 9050,\n 348,\n 4343,\n 248,\n 222,\n 230,\n 1002,\n 804,\n 1774,\n 2388,\n 8103,\n 8426,\n 5657,\n 3310,\n 5438,\n 3867,\n 5491,\n 5492,\n 4654,\n 1095,\n 7638,\n 9012,\n 4166,\n 9062,\n 9013,\n 9011,\n 3297,\n 7560,\n 1932,\n 8475,\n 8420,\n 7551,\n 7245,\n 3963,\n 4558,\n 5221,\n 5858,\n 9314,\n 5926,\n 5927,\n 6020,\n 9123,\n 6018,\n 5651,\n 1604,\n 1603,\n 3331,\n 8877,\n 9433,\n 8760,\n 8763,\n 677,\n 3262,\n 8761,\n 8759,\n 8762,\n 676,\n 670,\n 4129,\n 4735,\n 9065,\n 2971,\n 8690,\n 8726,\n 8728,\n 8693,\n 9040,\n 4139,\n 8918,\n 8731,\n 1103,\n 1455,\n 7814,\n 8101,\n 4151,\n 7042,\n 5765,\n 9066,\n 3485,\n 6214,\n 6203,\n 9017,\n 7519,\n 5137,\n 8927,\n 1104,\n 5606,\n 1400,\n 6345,\n 4243,\n 4244,\n 8048,\n 6812,\n 6813,\n 6757,\n 4612,\n 5744,\n 5743,\n 5751,\n 5746,\n 9530,\n 4613,\n 1370,\n 6443,\n 2420,\n 5297,\n 1054,\n 5296,\n 3004,\n 3003,\n 9139,\n 2432,\n 5868,\n 1992,\n 6759,\n 5779,\n 5496,\n 5495,\n 5494,\n 5497,\n 1253,\n 5512,\n 462,\n 843,\n 8937,\n 5292,\n 1098,\n 459,\n 2534,\n 8537,\n 5777,\n 1097,\n 1299,\n 2885,\n 460,\n 3194,\n 5525,\n 458,\n 7343,\n 5290,\n 1283,\n 1282,\n 1285,\n 1284,\n 6854,\n 1295,\n 5293,\n 461,\n 5291,\n 4883,\n 4767,\n 9249,\n 2424,\n 127,\n 2417,\n 2425,\n 1445,\n 872,\n 9382,\n 406,\n 2423,\n 8803,\n 8805,\n 8806,\n 8804,\n 2426,\n 8871,\n 3994,\n 9254,\n 4899,\n 1434,\n 799,\n 9497,\n 2203,\n 7105,\n 5947,\n 4277,\n 6087,\n 5937,\n 9676,\n 4984,\n 9281,\n 8328,\n 7813,\n 1505,\n 4586,\n 1494,\n 4818,\n 2901,\n 7715,\n 5436,\n 1484,\n 1734,\n 1328,\n 2902,\n 1485,\n 9282,\n 4581,\n 4574,\n 5473,\n 9630,\n 4255,\n 4287,\n 4097,\n 4094,\n 3186,\n 2151,\n 6630,\n 1764,\n 2163,\n 1949,\n 7700,\n 1230,\n 1229,\n 454,\n 2121,\n 2153,\n 158,\n 1769,\n 2133,\n 641,\n 228,\n 6628,\n 229,\n 1228,\n 1227,\n 1062,\n 8505,\n 2400,\n 2399,\n 4263,\n 8960,\n 8479,\n 3298,\n 6689,\n 6629,\n 8955,\n 2397,\n 2398,\n 8696,\n 827,\n 896,\n 4093,\n 987,\n 9558,\n 6847,\n 2593,\n 8689,\n 44,\n 9649,\n 7210,\n 3187,\n 4323,\n 4257,\n 8920,\n 4258,\n 3544,\n 1660,\n 3520,\n 7381,\n 6925,\n 481,\n 3990,\n 4920,\n 5951,\n 6080,\n 2069,\n 2625,\n 5972,\n 3599,\n 2874,\n 2205,\n 922,\n 4460,\n 7566,\n 2897,\n 6731,\n 2715,\n 8675,\n 2530,\n 1702,\n 2896,\n 1144,\n 1138,\n 1146,\n 2528,\n 6297,\n 2502,\n 5379,\n 8710,\n 8703,\n 1701,\n 739,\n 1137,\n 7628,\n 5760,\n 3013,\n 2499,\n 7561,\n 1689,\n 6510,\n 4885,\n 7577,\n 2980,\n 7562,\n 1145,\n 8157,\n 8158,\n 3724,\n 3725,\n 3568,\n 8055,\n 7925,\n 1111,\n 3592,\n 2863,\n 6481,\n 6482,\n 5234,\n 8525,\n 2990,\n 2353,\n 63,\n 2655,\n 6833,\n 7230,\n 2114,\n 1530,\n 1533,\n 1532,\n 8411,\n 8410,\n 8635,\n 3822,\n 5837,\n 8535,\n 6390,\n 5103,\n 4392,\n 5717,\n 1508,\n 5619,\n 6584,\n 5836,\n 6995,\n 1824,\n 90,\n 2047,\n 4635,\n 2052,\n 2414,\n 1781,\n 7191,\n 4909,\n 3900,\n 3304,\n 4191,\n 9015,\n 4179,\n 295,\n 8699,\n 6809,\n 7523,\n 2619,\n 122,\n 8931,\n 5488,\n 4192,\n 8206,\n 8310,\n 8311,\n 8316,\n 5194,\n 8251,\n 8338,\n 3743,\n 4300,\n 5916,\n 3523,\n 5143,\n 9136,\n 6145,\n 9150,\n 9172,\n 5104,\n 7178,\n 5102,\n 5179,\n 9482,\n 9173,\n 3947,\n 6258,\n 8325,\n 4385,\n 4301,\n 6195,\n 9387,\n 1998,\n 8720,\n 9115,\n 4945,\n 5486,\n 2148,\n 2162,\n 1948,\n 2120,\n 2150,\n 2131,\n 5690,\n 6614,\n 336,\n 334,\n 264,\n 335,\n 3600,\n 8042,\n 5020,\n 5019,\n 7639,\n 4011,\n 5669,\n 4389,\n 4307,\n 5382,\n 1504,\n 2049,\n 4813,\n 9286,\n 889,\n 4810,\n 2053,\n 4814,\n 4811,\n 4816,\n 2450,\n 8616,\n 4809,\n 4815,\n 4705,\n 4704,\n 4128,\n 5708,\n 4553,\n 3953,\n 4563,\n 6877,\n 9443,\n 9362,\n 9272,\n 9444,\n 9381,\n 8788,\n 7400,\n 8814,\n 8495,\n 9363,\n 8554,\n 5794,\n 4161,\n 4162,\n 324,\n 323,\n 9027,\n 4337,\n 1092,\n 2597,\n 2303,\n 4160,\n 3366,\n 3573,\n 3574,\n 6810,\n 9461,\n 6811,\n 4960,\n 7534,\n 7535,\n 5755,\n 6066,\n 3142,\n 1751,\n 7507,\n 2786,\n 4669,\n 4590,\n 6085,\n 6758,\n 3035,\n 8930,\n 2960,\n 3358,\n 3908,\n 3258,\n 3737,\n 3357,\n 1677,\n 1367,\n 3596,\n 3642,\n 4518,\n 3362,\n 3537,\n 5661,\n 3342,\n 3306,\n 1113,\n 2411,\n 4002,\n 6370,\n 5532,\n 4267,\n 1202,\n 7012,\n 3289,\n 2630,\n 2042,\n 7279,\n 785,\n 963,\n 965,\n 964,\n 2296,\n 2297,\n 7155,\n 2298,\n 7273,\n 9390,\n 9389,\n 1759,\n 8594,\n 8593,\n 6459,\n 6159,\n 9413,\n 5611,\n 5612,\n 5610,\n 4656,\n 4743,\n 2365,\n 2218,\n 6883,\n 6458,\n 9333,\n 7666,\n 6167,\n 8199,\n 6015,\n 1972,\n 5028,\n 3955,\n 8758,\n 6457,\n 9109,\n 9108,\n 3278,\n 504,\n 3309,\n 3307,\n 3308,\n 3275,\n 3276,\n 3277,\n 3274,\n 3563,\n 5660,\n 217,\n 5536,\n 15,\n 218,\n 3820,\n 3765,\n 2970,\n 8592,\n 9094,\n 9089,\n 9101,\n 8735,\n 9092,\n 9093,\n 9392,\n 9090,\n 8891,\n 8727,\n 8729,\n 8544,\n 8543,\n 8707,\n 3729,\n 4312,\n 3593,\n 714,\n 3519,\n 7917,\n 8045,\n 6938,\n 8463,\n 8467,\n 3158,\n 3161,\n 9633,\n 7719,\n 4193,\n 3719,\n 3720,\n 2857,\n 9300,\n 9670,\n 4957,\n 8959,\n 8958,\n 8957,\n 8956,\n 9671,\n 5218,\n 4917,\n 4888,\n 2615,\n 3687,\n 5010,\n 2829,\n 5037,\n 503,\n 345,\n 344,\n 3918,\n 9080,\n 9081,\n 8664,\n 8662,\n 6007,\n 8462,\n 9231,\n 3185,\n 3154,\n 3157,\n 5750,\n 3811,\n 7066,\n 8466,\n 5449,\n 94,\n 3641,\n 49,\n 9267,\n 26,\n 1075,\n 3655,\n 9412,\n 9324,\n 5026,\n 8332,\n 4367,\n 9141,\n 272,\n 4395,\n 6727,\n 9201,\n 3936,\n 8810,\n 7043,\n 1181,\n 2963,\n 8650,\n 3932,\n 3931,\n 3933,\n 5961,\n 5965,\n 9280,\n 5791,\n 5790,\n 3742,\n 3741,\n 4362,\n 7212,\n 5166,\n 5797,\n 3798,\n 6408,\n 7313,\n 5481,\n 9321,\n 4387,\n 6940,\n 760,\n 2791,\n 6632,\n 3068,\n 7454,\n 1691,\n 2713,\n 7150,\n 3494,\n 6914,\n 8674,\n 5499,\n 3244,\n 2792,\n 2653,\n 7215,\n 1335,\n 6231,\n 2529,\n 2035,\n 3589,\n 918,\n 1032,\n 7774,\n 3957,\n 2862,\n 56,\n 5971,\n 9618,\n 4368,\n 7017,\n 3551,\n 8001,\n 7871,\n 7016,\n 9135,\n 8194,\n 4843,\n 4842,\n 6135,\n 8978,\n 2579,\n 5215,\n 6988,\n 4847,\n 1287,\n 6587,\n 9408,\n 6571,\n 4712,\n 3017,\n 7419,\n 4625,\n 9406,\n 2073,\n 7057,\n 2026,\n 1018,\n 2176,\n 1641,\n 950,\n 1453,\n 1390,\n 1435,\n 6853,\n 1436,\n 1388,\n 108,\n 1655,\n 1025,\n 787,\n 1069,\n 3029,\n 1152,\n 2582,\n 156,\n 3031,\n 1148,\n 1155,\n 1147,\n 2585,\n 1154,\n 401,\n 2584,\n 1153,\n 1156,\n 1616,\n 1149,\n 1124,\n 575,\n 3727,\n 9496,\n 3962,\n 9539,\n 3903,\n 9138,\n 5472,\n 6709,\n 7786,\n 3341,\n 7036,\n 9252,\n 5454,\n 3135,\n 2217,\n 6536,\n 6095,\n 752,\n 7037,\n 5714,\n 1412,\n 3831,\n 8636,\n 3497,\n 8568,\n 7306,\n 7100,\n 3215,\n 5451,\n 1115,\n 5192,\n 8128,\n 8189,\n 3340,\n 7160,\n 237,\n 1464,\n 3513,\n 3571,\n 9221,\n 0,\n 386,\n 373,\n 455,\n 145,\n 430,\n 6493,\n 3204,\n 886,\n 6433,\n 1422,\n 3203,\n 850,\n 779,\n 757,\n 1416,\n 103,\n 781,\n 4443,\n 7072,\n 1452,\n 374,\n 888,\n 1391,\n 1197,\n 3646,\n 7124,\n 5707,\n 5710,\n 1929,\n 5450,\n 7559,\n 4791,\n 5453,\n 673,\n 5537,\n 7045,\n 9227,\n 7896,\n 8026,\n 5816,\n 3449,\n 729,\n 3448,\n 5183,\n 5936,\n 4601,\n 4701,\n 8231,\n 3218,\n 8307,\n 5781,\n 4507,\n 3261,\n 5638,\n 8359,\n 2926,\n 6176,\n 6194,\n 4937,\n 4930,\n 3601,\n 3753,\n 553,\n 704,\n 529,\n 5762,\n 6450,\n 6646,\n 706,\n 496,\n 297,\n 1456,\n 9126,\n 6034,\n 4374,\n 4308,\n 1110,\n 4150,\n 9039,\n 289,\n 288,\n 287,\n 7420,\n 1004,\n 1133,\n 7701,\n 1234,\n 1233,\n 1236,\n 1235,\n 2267,\n 220,\n 1269,\n 7241,\n 5395,\n 7289,\n 7115,\n 6779,\n 6841,\n 581,\n 6858,\n 5359,\n 857,\n 2563,\n 4836,\n 2396,\n 883,\n 2452,\n 429,\n 6616,\n 403,\n 427,\n 849,\n 7159,\n 2408,\n 2612,\n 197,\n 2573,\n 861,\n 882,\n 7451,\n 2016,\n 646,\n 2478,\n 989,\n 852,\n 941,\n 2022,\n 855,\n 7401,\n 2545,\n 4541,\n 1662,\n 149,\n 5361,\n 7433,\n 559,\n 603,\n 877,\n 9384,\n 1237,\n 1238,\n 3064,\n 6486,\n 999,\n 856,\n 854,\n 853,\n 1136,\n 796,\n 2017,\n 1123,\n 482,\n 5873,\n 5459,\n 1958,\n 3458,\n 2190,\n 4282,\n 2061,\n 2598,\n 4670,\n 4014,\n 2701,\n 4119,\n 8232,\n 9006,\n 8233,\n 5388,\n 8234,\n 9000,\n 5092,\n 8240,\n 7776,\n 8237,\n 6936,\n 9005,\n 9021,\n 9001,\n 8238,\n 8235,\n 8239,\n 9003,\n 9007,\n 9002,\n 8236,\n 9434,\n 6542,\n 8529,\n 4776,\n 778,\n 210,\n 2773,\n 2966,\n 445,\n 7314,\n 2096,\n 9357,\n 7616,\n 2285,\n 2284,\n 8656,\n 8496,\n 151,\n 4450,\n 7440,\n 2985,\n 117,\n 9355,\n 9022,\n 9004,\n 3866,\n 6815,\n 5405,\n 7674,\n 2229,\n 4209,\n 8334,\n 9533,\n 9469,\n 6191,\n 6189,\n 6190,\n 4140,\n 9049,\n 291,\n 9048,\n 9047,\n 280,\n 290,\n 292,\n 1460,\n 8386,\n 8392,\n 8393,\n 9134,\n 3334,\n 4875,\n 7084,\n 8352,\n 7301,\n 5557,\n 9351,\n 6929,\n 433,\n 7152,\n 6314,\n 5687,\n 9478,\n 3507,\n 3881,\n 4555,\n 7064,\n 7063,\n 5129,\n 6778,\n 750,\n 4559,\n 5222,\n 3696,\n 6359,\n 5385,\n 6749,\n 6916,\n 2369,\n 6678,\n 3647,\n 6067,\n 311,\n 307,\n 120,\n 3884,\n 411,\n 305,\n 412,\n 314,\n 304,\n 308,\n 380,\n 317,\n 306,\n 315,\n 309,\n 327,\n 313,\n 316,\n 6036,\n 5893,\n 274,\n 5397,\n 6697,\n 1088,\n 9548,\n 5824,\n 5894,\n 6010,\n 6014,\n 6013,\n 9632,\n 7103,\n 8954,\n 4922,\n 4525,\n 8998,\n 8997,\n 5890,\n 9095,\n 2003,\n 7488,\n 6475,\n 5849,\n 2983,\n 3816,\n 2187,\n 9436,\n 9439,\n 9437,\n 9438,\n 8370,\n 9638,\n 6362,\n 6364,\n 6363,\n 6365,\n 8196,\n 1836,\n 37,\n 1828,\n 1827,\n 8829,\n 36,\n 3579,\n 4223,\n 9626,\n 6451,\n 5958,\n 4543,\n 9645,\n 1991,\n 5966,\n 5967,\n 2384,\n 3613,\n 1112,\n 2355,\n 2087,\n 834,\n 7143,\n 7600,\n 4838,\n 800,\n 5507,\n 2335,\n 7810,\n 4902,\n 7514,\n 6585,\n 6566,\n 3069,\n 6617,\n 2349,\n 2124,\n 418,\n 5774,\n 4004,\n 3127,\n 4370,\n 9588,\n 2419,\n 1058,\n 8908,\n 4083,\n 8911,\n 8632,\n 9033,\n 4086,\n 1334,\n 4840,\n 7515,\n 7517,\n 252,\n 1679,\n 4903,\n 2380,\n 4904,\n 9,\n 7516,\n 4762,\n 1665,\n 6976,\n 5912,\n 8560,\n 7233,\n 2753,\n 2749,\n 7352,\n 8558,\n 42,\n 6670,\n 1694,\n 6671,\n 14,\n 1831,\n 1833,\n 4102,\n 4103,\n 9337,\n 9467,\n 8944,\n 8750,\n 8945,\n 9082,\n 2961,\n 9468,\n 8948,\n 9338,\n 8943,\n 8942,\n 8947,\n 8946,\n 9043,\n 9637,\n 6658,\n 9185,\n 6656,\n 6657,\n 8573,\n 5869,\n 5439,\n 4168,\n 8928,\n 9044,\n 4249,\n 4264,\n 7299,\n 9472,\n 5853,\n 5726,\n 5711,\n 9479,\n 5727,\n 2386,\n 3855,\n 3898,\n 3897,\n 5728,\n 6065,\n 5729,\n 942,\n 1721,\n 2251,\n 9216,\n 2062,\n 2604,\n 2937,\n 881,\n 7402,\n 2936,\n 3909,\n 2523,\n 5135,\n 3668,\n 4057,\n 5870,\n 5120,\n 1952,\n 2736,\n 3538,\n 3324,\n 3766,\n 1082,\n 2913,\n 5154,\n 3611,\n 5214,\n 3512,\n 705,\n 4488,\n 508,\n 518,\n 618,\n 3566,\n 772,\n 2949,\n 8676,\n 2934,\n 3196,\n 3197,\n 3746,\n 6886,\n 4756,\n 2915,\n 3522,\n 7129,\n 2909,\n 2143,\n 4668,\n 1622,\n 2128,\n 7416,\n 6680,\n 2246,\n 672,\n 842,\n 441,\n 8105,\n 375,\n 2192,\n 1255,\n 7571,\n 4599,\n 7373,\n 4438,\n 7574,\n 7642,\n 7372,\n 4439,\n 4218,\n 9332,\n 619,\n 7065,\n 1838,\n 435,\n 1837,\n 4445,\n 8380,\n 4752,\n 2823,\n 6827,\n 2824,\n 3905,\n 4400,\n 4399,\n 4430,\n 4435,\n 8628,\n 6717,\n 9130,\n 9129,\n 2188,\n 133,\n 221,\n 9402,\n 9421,\n 8441,\n 3625,\n 8439,\n 8438,\n 5132,\n 5658,\n 6438,\n 7656,\n 1957,\n 9276,\n 8435,\n 5133,\n 1681,\n 7811,\n 356,\n 6589,\n 6590,\n 2458,\n 475,\n 2731,\n 958,\n 355,\n 5212,\n 472,\n 354,\n 2539,\n 2448,\n 4127,\n 4159,\n 7789,\n 483,\n 2847,\n 6404,\n 6403,\n 5324,\n 630,\n 6410,\n 7775,\n 8119,\n 7478,\n 5322,\n 5323,\n 1570,\n 657,\n 1410,\n 5204,\n 5319,\n 904,\n 4714,\n 4492,\n 7002,\n 5904,\n 4013,\n 7785,\n 7495,\n 1563,\n 1556,\n 6818,\n 9179,\n 4938,\n 1178,\n 9132,\n 9131,\n 8695,\n 5939,\n 5391,\n 7509,\n 1405,\n 5198,\n 9480,\n 5753,\n 6681,\n 8471,\n 6513,\n 6245,\n 6262,\n 7957,\n 8186,\n 8125,\n 7829,\n 3180,\n 3181,\n 3178,\n 1457,\n 6432,\n 1243,\n 1797,\n 1607,\n 846,\n 971,\n 967,\n 4459,\n 3179,\n 6006,\n 9140,\n 8389,\n 8388,\n 2894,\n 10,\n 2551,\n 2889,\n 5920,\n 8548,\n 8402,\n 8401,\n 8400,\n 5787,\n 5314,\n 953,\n 3486,\n 6456,\n 1468,\n 24,\n 7388,\n 8346,\n 8171,\n 8172,\n 8165,\n 8166,\n 3546,\n 7866,\n 7996,\n 402,\n 1020,\n 7806,\n 6349,\n 6350,\n 5528,\n 3081,\n 7823,\n 6966,\n 5005,\n 7467,\n 5465,\n 439,\n 993,\n 994,\n 54,\n 5503,\n 5504,\n 2672,\n 7469,\n 2578,\n 9278,\n 2623,\n 47,\n 9035,\n 5009,\n 9525,\n 2841,\n 2339,\n 7492,\n 2463,\n 1378,\n 2329,\n 2167,\n 828,\n 9385,\n 2330,\n 2359,\n 2008,\n 1241,\n 2334,\n 7536,\n 7128,\n 1379,\n 1380,\n 1385,\n 1377,\n 1382,\n 1271,\n 1272,\n 1273,\n 1292,\n 1270,\n 3875,\n 1537,\n 5312,\n 3858,\n 1473,\n 1527,\n 1536,\n 5240,\n 5239,\n 6954,\n 5237,\n 9210,\n 1403,\n 6388,\n 6409,\n 5997,\n 367,\n 6785,\n 6780,\n 6781,\n 6782,\n 7778,\n 1539,\n 7804,\n 7174,\n 9498,\n 1695,\n 7751,\n 1684,\n 8984,\n 3839,\n 8988,\n 8985,\n 8987,\n 6322,\n 6321,\n 8990,\n 3582,\n 3477,\n 8983,\n 9020,\n 8986,\n 8989,\n 4073,\n 6096,\n 3171,\n 1967,\n 6472,\n 927,\n 3102,\n 3103,\n 928,\n 3584,\n 6823,\n 3580,\n 6943,\n 6464,\n 577,\n 233,\n 3500,\n 4206,\n 9308,\n 6023,\n 9075,\n 9327,\n 9328,\n 2145,\n 2161,\n 1947,\n 4210,\n 2119,\n 2147,\n 2129,\n 3873,\n 9175,\n 3329,\n 5905,\n 5883,\n 4781,\n 9204,\n 9203,\n 3344,\n 3208,\n 554,\n 3343,\n 7285,\n 5364,\n 7431,\n 9445,\n 8520,\n 6086,\n 5713,\n 5938,\n 2665,\n 2664,\n 8617,\n 4215,\n 5100,\n 6856,\n 273,\n 5386,\n 9339,\n 6118,\n 2706,\n 4052,\n 3323,\n 1519,\n 8789,\n 2679,\n 3133,\n 2678,\n 5866,\n 5867,\n 902,\n 724,\n 408,\n 605,\n 7287,\n 878,\n 214,\n 6276,\n 725,\n 8342,\n 4316,\n 5970,\n 6414,\n 4366,\n 8839,\n 3941,\n 4489,\n 6768,\n 7264,\n 4946,\n 4944,\n 97,\n 349,\n 4423,\n 3847,\n 257,\n 347,\n 666,\n 346,\n 4608,\n 4769,\n 533,\n 4794,\n 4254,\n 4101,\n 3712,\n 4390,\n 5024,\n 6090,\n 7050,\n 3207,\n 6965,\n 7048,\n 5706,\n 2594,\n 5407,\n 2764,\n 7239,\n 599,\n 2571,\n 6861,\n 790,\n 7539,\n 377,\n 1438,\n 398,\n 7538,\n 1159,\n 7296,\n 7344,\n 6377,\n 9553,\n 6220,\n 6218,\n 6221,\n 5851,\n 1961,\n 4798,\n 3237,\n 4800,\n 3490,\n 2538,\n 2938,\n 123,\n 4991,\n 4990,\n 4989,\n 1877,\n 2200,\n 1891,\n 3053,\n 3052,\n 4381,\n 5924,\n 7847,\n 7975,\n 3473,\n 5015,\n 6393,\n 6392,\n 6391,\n 6511,\n 7720,\n 5901,\n 6869,\n 6134,\n 8629,\n 2826,\n 2802,\n 5989,\n 9625,\n 2716,\n 7175,\n 1173,\n 9167,\n 5865,\n 5329,\n 1526,\n 7718,\n 5879,\n 6751,\n 6994,\n 9358,\n 935,\n 957,\n 5233,\n 2987,\n 2974,\n 1784,\n 945,\n 2986,\n 2989,\n 2995,\n 2988,\n 3363,\n 4410,\n 4416,\n 4420,\n 2979,\n 4417,\n 7694,\n 4566,\n 2427,\n 2243,\n 7568,\n 9386,\n 5330,\n 786,\n 5704,\n 9128,\n 5023,\n 5022,\n 5008,\n 5887,\n 5884,\n 5885,\n 5994,\n 5888,\n 7277,\n 7663,\n 9143,\n 4222,\n 4221,\n 5001,\n 3926,\n 7340,\n 5549,\n 7339,\n 8670,\n 3925,\n 8527,\n 8783,\n 2460,\n 2752,\n 2756,\n 2760,\n 8925,\n 5931,\n 9174,\n 1466,\n 3883,\n 3882,\n 3676,\n 9099,\n 8813,\n 5448,\n 4397,\n 5949,\n 2942,\n 2941,\n 3328,\n 3300,\n 4107,\n 351,\n 353,\n 352,\n 350,\n 4226,\n 5219,\n 3691,\n 2761,\n 2747,\n 2757,\n 1171,\n 952,\n 788,\n 848,\n 803,\n 4516,\n 2835,\n 8061,\n 8508,\n 6059,\n 6060,\n 4379,\n 3958,\n 6069,\n 4921,\n 2907,\n 7734,\n 7740,\n 7738,\n 7739,\n 2903,\n 2891,\n 7736,\n 2930,\n 7753,\n 7735,\n 7737,\n 38,\n 3701,\n 2893,\n 2892,\n 2358,\n 6931,\n 1933,\n 8827,\n 9176,\n 9245,\n 9538,\n 9537,\n 8825,\n 8826,\n 1903,\n 6097,\n 6428,\n 6895,\n 5776,\n 6896,\n 5809,\n 5813,\n 5864,\n 6963,\n 6964,\n 5798,\n 4999,\n 4391,\n 2804,\n 7450,\n 2354,\n 1130,\n 7167,\n 1441,\n 6794,\n 6795,\n 4617,\n 2233,\n 46,\n 3821,\n 5213,\n 6158,\n 4925,\n 6029,\n 9322,\n 5007,\n 5016,\n 5012,\n 5017,\n 4144,\n 5079,\n 4063,\n 27,\n 9685,\n 4919,\n 5064,\n 5829,\n 2189,\n 5347,\n 4419,\n 5052,\n 4418,\n 2352,\n 62,\n 421,\n 8347,\n 8331,\n 5027,\n 4837,\n 4832,\n 8834,\n 1770,\n 2180,\n 2085,\n 4988,\n 5025,\n 8576,\n 8601,\n 5069,\n 5078,\n 2696,\n 4831,\n 9373,\n 5792,\n 7228,\n 9153,\n 4425,\n 2922,\n 2921,\n 6760,\n 6775,\n 6468,\n 2920,\n 2905,\n 9562,\n 2212,\n 9561,\n 7473,\n 9069,\n 7201,\n 6003,\n 8526,\n 4849,\n 5510,\n 8894,\n 8870,\n 6693,\n 8842,\n 1819,\n 2444,\n 1821,\n 8879,\n 5402,\n 428,\n 8952,\n 8666,\n 7189,\n 6526,\n 5276,\n 6527,\n 5275,\n 8953,\n 8951,\n 7188,\n 8665,\n 7116,\n 8718,\n 7648,\n 5996,\n 6418,\n 6420,\n 5940,\n 5094,\n 6361,\n 5957,\n 2924,\n 6335,\n 3745,\n 6381,\n 7290,\n 6106,\n 5095,\n 4290,\n 6309,\n 4687,\n 6412,\n 1116,\n 5604,\n 5826,\n 5613,\n 4126\n];\nmodule.exports=indexes;",
    "/** @jsx React.DOM */\n\n/* to rename the component,\n change name of ./component.js and  \"dependencies\" section of ../../component.js */\nvar React=require(\"react\");\nvar Tabarea=require(\"./tabarea.jsx\");\n//var Fileinstaller=require(\"ksana2015-webruntime\").fileinstaller;\nvar kde=require(\"ksana-database\");  // Ksana Database Engine\nvar kse=require(\"ksana-search\"); // Ksana Search Engine (run at client side)\nvar tibetan=require(\"tibetan/wylie\");\nvar Showtext=require(\"./showtext.jsx\");\n\nvar version=\"v0.1.46\";\nvar main = React.createClass({displayName: \"main\",\n  getInitialState: function() {\n    //for Mac OS X, edit info.plist\n    //  <key>CFBundleName</key>\n    document.title=\"Adarsha \"+version;\n    return {sidemenu:true,dialog:null,res:{},res_toc:[],bodytext:{file:0,page:0},db:null,toc_result:[],page:0,field:\"sutra\",scrollto:0,hide:false, wylie:false, dataN:null};\n  },\n  hideBanner:function() {\n    var header=$(\"div.header\");\n    var that=this;\n    header.animate({height: \"0px\"}, 2000, function() {\n      header.hide();\n      that.bannerHeight=0;\n      that.setBannerHeight(0);\n    });\n  },\n  toggleMenu:function(){\n    this.setState({sidemenu:!this.state.sidemenu});\n  },\n  bannerHeight:100,\n  handleResize:function() {\n    clearTimeout(this.resizetimer);\n    var that=this;\n    this.resizetimer=setTimeout(function(){\n      that.setBannerHeight(that.bannerHeight);\n    },300);\n  },\n  componentWillUnmount:function() {\n    window.removeEventListener('resize', this.handleResize);\n  },\n  componentDidMount:function() {\n    var that=this;\n    this.onReady();\n    setTimeout(function(){\n      that.hideBanner();\n    },5000);\n    //window.onhashchange = function () {that.goHashTag();} \n    window.addEventListener('resize', this.handleResize);\n  }, \n  setBannerHeight:function(bannerHeight) {\n    var ch=document.documentElement.clientHeight;\n    //this.refs[\"text-content\"].getDOMNode().style.height=ch-bannerHeight+\"px\";\n    //this.refs[\"tab-content-main\"].getDOMNode().style.height=(ch-bannerHeight-40)+\"px\";\n  },\n  componentDidUpdate:function()  {\n    this.setBannerHeight(this.bannerHeight);\n  },  \n  encodeHashTag:function(file,p) { //file/page to hash tag\n    var f=parseInt(file)+1;\n    return \"#\"+f+\".\"+p;\n  },\n  decodeHashTag:function(s) {\n    var fp=s.match(/#(\\d+)\\.(.*)/);\n    var p=parseInt(fp[2]);\n\n    var file=parseInt(fp[1])-1;\n    if (file<0) file=0;\n    if (p<0) p=0;\n    var pagename=this.state.db.getFileSegNames(file)[p]; \n    this.setPage(pagename,file);\n  },\n  goHashTag:function() {\n    this.decodeHashTag(window.location.hash || \"#1.1\");\n  \n  },  \n  genToc:function(texts,depths,voffs){\n    var out=[{depth:0,text:\"འཇང་བཀའ་འགྱུར།\"}];\n    for(var i=0; i<texts.length; i++){\n      out.push({text:texts[i],depth:depths[i],voff:voffs[i]});\n    }\n    return out; \n  },// 轉換為stacktoc 目錄格式\n  onReady:function() {\n    if (!this.state.db) kde.open(\"jiangkangyur\",function(a,db){\n        this.setState({db:db});\n        db.get([[\"fields\",\"head\"],[\"fields\",\"head_depth\"],[\"fields\",\"head_voff\"]],function(){\n          var heads=db.get([\"fields\",\"head\"]);\n          var depths=db.get([\"fields\",\"head_depth\"]);\n          var voffs=db.get([\"fields\",\"head_voff\"]);\n          var toc=this.genToc(heads,depths,voffs);\n          this.setState({toc:toc});\n          this.goHashTag();\n        }); //載入目錄\n    },this);          \n  },\n  gotofile:function(vpos,tofind){\n    //var res=kse.vpos2filepage(this.state.db,vpos);\n    var res=this.state.db.fileSegFromVpos(vpos);\n    this.showPage(res.file,res.seg,tofind);\n  },\n  showPage:function(f,p,tofind) {  \n    window.location.hash = this.encodeHashTag(f,p);\n    var that=this;\n    var pagename=this.state.db.getFileSegNames(f)[p];\n    this.setState({scrollto:pagename});\n\n    kse.highlightFile(this.state.db,f,{q:this.state.tofind || tofind,token:true},function(data){//kde\n      that.setState({bodytext:data,page:p});\n    });\n  }, \n  showText:function(n) {\n    var res=this.state.db.fileSegFromVpos(this.state.toc[n].voff);\n    if(res.file != -1) this.showPage(res.file,res.seg);\n    this.setState({dataN:n});    \n  },\n  nextfile:function() {\n    var file=this.state.bodytext.file+1;\n    var page=this.state.bodytext.page || 1;\n    this.showPage(file,page);\n    this.setState({scrollto:null});\n  },\n  prevfile:function() {\n    var file=this.state.bodytext.file-1;\n    var page=this.state.bodytext.page || 1;\n    if (file<0) file=0;\n    this.showPage(file,page);\n    this.setState({scrollto:null});\n  },\n  setPage:function(newpagename,file) {\n    var fp=this.state.db.findSeg(newpagename);\n    if (fp.length){\n      this.showPage(fp[0].file,fp[0].page);\n    }\n    //console.log(newpagename);\n  },\n  setwylie: function() {\n    this.setState({wylie:!this.state.wylie});\n    this.setState({scrollto:null});\n  },\n  render: function() {\n      var text=\"\",pagename=\"\";\n      if (this.state.bodytext) {\n        text=this.state.bodytext.text;\n        pagename=this.state.bodytext.pagename;\n    }\n    var bodytextcols=\"col-md-8\";\n    var menuclass=\"col-md-4\";\n    if (!this.state.sidemenu) {\n      bodytextcols=\"\";\n      menuclass=\"hidemenu\";\n    }\n\n    return (\n\n    React.createElement(\"div\", {className: \"row\"}, \n      React.createElement(\"div\", {className: \"header\"}, \n        React.createElement(\"img\", {width: \"100%\", src: \"./banner/banner.png\"})\n      ), \n\n      React.createElement(\"div\", {className: \"row\"}, \n        React.createElement(\"div\", {className: menuclass}, \n          React.createElement(Tabarea, {toc: this.state.toc, showText: this.showText, menuclass: menuclass, db: this.state.db, wylie: this.state.wylie, gotofile: this.gotofile, toc: this.state.toc})\n        ), \n        React.createElement(\"div\", {className: bodytextcols}, \n          React.createElement(\"div\", {className: \"text text-content\", ref: \"text-content\"}, \n            React.createElement(Showtext, {className: \"showtext\", sidemenu: this.state.sidemenu, toggleMenu: this.toggleMenu, dataN: this.state.dataN, setwylie: this.setwylie, wylie: this.state.wylie, page: this.state.page, bodytext: this.state.bodytext, text: text, nextfile: this.nextfile, prevfile: this.prevfile, setpage: this.setPage, db: this.state.db, toc: this.state.toc, scrollto: this.state.scrollto})\n          )\n        )\n      )\n    )\n\n      );\n  }\n});\n\nmodule.exports=main;",
    "/** @jsx React.DOM */\n\n/* to rename the component, change name of ./component.js and  \"dependencies\" section of ../../component.js */\n\n//var othercomponent=Require(\"other\"); \nvar React=require(\"react\");\nvar tibetan=require(\"tibetan/wylie\");\nvar namelist = React.createClass({displayName: \"namelist\",\n  getInitialState: function() {\n    return {selected:null};\n  },\n  componentDidUpdate:function() {\n    if(this.selectedentry) {\n      //this.selectedentry.removeClass(\"entry-selected\");\n      this.selectedentry.addClass(\"entry-selected\");\n    } \n  },\n  componentWillReceiveProps :function(nextProps) {\n    if (nextProps.res_toc.length!=this.props.res_toc.length) {\n      if (this.selectedentry)  this.selectedentry.removeClass(\"entry-selected\");\n      this.selectedentry=null;\n    }\n  },\n  onItemClick:function(e) {\n    var voff=parseInt(e.target.dataset.voff);\n    var parent=e.target.parentElement;\n    if (e.target.nodeName == \"HL\") {\n      voff=parseInt(e.target.parentElement.dataset.voff);\n      parent=e.target.parentElement.parentElement;\n    }\n    if (this.selectedentry)  this.selectedentry.removeClass(\"entry-selected\");\n    //  $(e.target).addClass(\"entry-selected\");\n    this.selectedentry=$(e.target);\n\n    //<span>{e.target.innerHTML}</span>\n    this.props.gotofile(voff);\n  },\n  renderNameItem: function(item,idx) {\n    var context=\"\";\n    if(this.props.wylie == false){\n      var tofind=this.props.tofind;\n      context=item.text.replace(tofind,function(t){return '<span class=\"hl\">'+t+\"</span>\";});\n    }\n    if(this.props.wylie == true){\n      var tofind=tibetan.romanize.toWylie(this.props.tofind,null,false);\n      context=tibetan.romanize.toWylie(item.text,null,false).replace(tofind,function(t){return '<hl>'+t+\"</hl>\";});\n    }\n      \n    return (\n      React.createElement(\"div\", null, \n        idx+1, \".\", React.createElement(\"a\", {herf: \"#\", className: \"item\", \"data-voff\": item.voff, onClick: this.onItemClick, dangerouslySetInnerHTML: {__html:context}})\n      ) \n      )\n  },\n  renderCount:function() {\n    if (!this.props.res_toc || !this.props.res_toc.length) {\n      return null;\n    } else {\n      return React.createElement(\"span\", null, this.props.res_toc.length, React.createElement(\"br\", null))      \n    }\n  },\n  render: function() {\n    \n    return (\n      React.createElement(\"div\", {className: \"namelist\"}, \n        this.renderCount(), \n        this.props.res_toc.map(this.renderNameItem)\n      )\n    );\n  }\n});\nmodule.exports=namelist;",
    "/** @jsx React.DOM */\n\n/* to rename the component, change name of ./component.js and  \"dependencies\" section of ../../component.js */\n\n//var othercomponent=Require(\"other\"); \nvar React=require(\"react\");\nvar tibetan=require(\"tibetan/wylie\");\nvar resultlist=React.createClass({displayName: \"resultlist\",  //should search result\n  show:function() {\n    if(this.props.wylie == false) var tofind=this.props.tofind;\n    if(this.props.wylie == true ) var tofind=tibetan.toWylie(this.props.tofind,null,false);\n    \n    try {\n      var t = new RegExp(tofind,\"g\"); \n      return this.props.res.excerpt.map(function(r,i){ // excerpt is an array \n      \n        var context=\"\";\n        if(this.props.wylie == false) context=r.text;//r.text.replace(t,function(tofind){return \"<hl>\"+tofind+\"</hl>\"});\n        if(this.props.wylie == true) context=tibetan.toWylie(r.text,null,false).replace(t,function(tofind){return \"<hl>\"+tofind+\"</hl>\"});\n        return React.createElement(\"div\", {\"data-vpos\": r.hits[0][0]}, \n        React.createElement(\"a\", {onClick: this.gotopage, className: \"pagename\"}, r.segname), \n          React.createElement(\"div\", {className: \"resultitem\", dangerouslySetInnerHTML: {__html:context}})\n        )\n      },this);\n    } catch(e) {\n    return null;\n  }\n  }, \n  gotopage:function(e) {\n    var vpos=parseInt(e.target.parentNode.dataset['vpos']);\n    this.props.gotofile(vpos,this.props.tofind);\n  },\n  renderCount:function() {\n    var hit=this.props.res.tochit ||this.props.res.rawresult.length;\n\n    return React.createElement(\"span\", null, hit, \" hits\");\n  },\n  warnTooMuch:function() {\n    if (this.props.res.excerptOverflow)  {\n      return React.createElement(\"div\", {className: \"alert alert-danger\", role: \"danger\"}, \n        \"Please refine your search or click number beside table of content to narrow down the range.\"\n      )\n    }\n  },\n  render:function() {\n    if (this.props.res) {\n      if (this.props.res.excerpt&&this.props.res.excerpt.length) {\n          return React.createElement(\"div\", {className: \"results\"}, \n                  this.renderCount(), React.createElement(\"br\", null), this.show(), \n                  React.createElement(\"br\", null), this.warnTooMuch()\n                  )\n      } else {\n        return React.createElement(\"div\", null)\n      }\n    }\n    else {\n      return React.createElement(\"div\", null, \"type keyword to search\")\n    } \n  }\n});\nmodule.exports=resultlist; ",
    "var searchSutra=function(tofind,toc){\n\tvar out=[];\n\ttry {\n\t\tvar reg=new RegExp(tofind,\"g\"); //this might throw\n\t\ttoc.map(function(item){\n\t\t\tif(item.depth==3 && item.text.match(reg)){\n\t\t\t\tout.push(item);\n\t\t\t}\n\t\t});\n\t\treturn out;\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\treturn out;\n\t}\n}\n\nvar searchKacha=function(tofind,toc){\n\tvar out=[];\n\ttry {\n\t\tvar reg=new RegExp(tofind,\"g\"); //this might throw\n\t\ttoc.map(function(item){\n\n\t\t\tif(item.depth!=3 && item.depth!=0 && item.text.match(reg)){\n\t\t\t\tout.push(item);\n\t\t\t}\n\t\t});\n\t\treturn out;\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\treturn out;\n\t}\n}\n\nvar search_api={searchSutra:searchSutra,searchKacha:searchKacha}\nmodule.exports=search_api;",
    "/** @jsx React.DOM */\n\n//var othercomponent=Require(\"other\"); \nvar React=require(\"react\");\nvar Namelist=require(\"./namelist.jsx\");\nvar Resultlist=require(\"./resultlist.jsx\");\nvar tibetan=require(\"tibetan/wylie\");\nvar kse=require(\"ksana-search\"); // Ksana Search Engine (run at client side)\nvar search_api=require(\"./search_api\");\n\nvar searcharea= React.createClass({displayName: \"searcharea\",\n  getInitialState: function() {\n    return {res:{},res_toc:[]};\n  },\n  showExcerpt:function(n) {\n    var voff=this.props.toc[n].voff;\n    var end=this.props.toc[n].end;\n    var hit=this.props.toc[n].hit;\n   // var searchtabid=$(\".tab-pane#Search\").attr(\"id\");\n    $('.nav a[href=#Search]').tab('show');\n    $(\"label.searchmode\").removeClass(\"active\");\n    $(\"label[data-type='fulltext']\").addClass(\"active\");\n    this.dosearch(null,null,[voff,end,hit]);\n  },\n  searchtypechange:function(e) {\n    this.refs.tofind.getDOMNode().focus();\n    this.dosearch(null,null,0);\n  },\n  clicksearch:function(e) {\n    if (!e || !e.target) return null;\n    this.refs.tofind.getDOMNode().value=e.target.innerHTML;\n    this.searchtypechange();\n  },\n  renderInputSyntax:function() {\n    if (!this.refs.searchtype) return;\n    var field=$(this.refs.searchtype.getDOMNode()).find(\".active\")[0].dataset.type;\n    if (this.refs && this.refs.tofind && this.refs.tofind.getDOMNode().value.length==0){\n      if (field==\"fulltext\") {\n        return (\n        React.createElement(\"div\", {className: \"syntaxhelper\"}, \n          React.createElement(\"div\", null, React.createElement(\"b\", null, \"Wildcards:\"), \" ? * \", React.createElement(\"br\", null), \n            \"? match single unknown syllable:\", React.createElement(\"br\", null), \n              \"e.g: \", React.createElement(\"a\", {href: \"#\", onClick: this.clicksearch}, \"bde ? snying\"), \" 1 syllable in between\", React.createElement(\"br\", null), \n              \"e.g: \", React.createElement(\"a\", {href: \"#\", onClick: this.clicksearch}, \"མི་2?་པ\"), \" 2 syllables in between\", React.createElement(\"br\", null), \n            \"* match a range of unknown syllables:\", React.createElement(\"br\", null), \n              \"e.g: \", React.createElement(\"a\", {href: \"#\", onClick: this.clicksearch}, \"mi 5* pa\"), \" 1 to 5 syllables in between\", React.createElement(\"br\", null)\n\n          ), \n          React.createElement(\"div\", null, React.createElement(\"b\", null, \"Word separator:\"), \n           \"/ or ། (shad) \", React.createElement(\"br\", null), \n              \"e.g: \", React.createElement(\"a\", {href: \"#\", onClick: this.clicksearch}, \"bde/snying\"), React.createElement(\"br\", null)\n          )\n        )\n          ) \n      } else if (field==\"sutra\") {\n        return (\n          React.createElement(\"div\", {className: \"syntaxhelper\"}, \n            \"Type \", React.createElement(\"a\", {href: \"#\", onClick: this.clicksearch, style: {fontSize:\"300%\"}}, \"་\"), \"(tsheg) to display all titles.\"\n          )\n        )\n      } else {\n        return (\n          React.createElement(\"div\", {className: \"syntaxhelper\"}, \n            \"Type \", React.createElement(\"a\", {href: \"#\", onClick: this.clicksearch, style: {fontSize:\"300%\"}}, \"་\"), \"(tsheg) to display table of content.\"\n          )\n        )\n      }\n\n    } else return null;\n    \n  },\n  tofindchange:function(e) {\n    clearTimeout(this.tofindtimer);\n    var that=this;\n    this.tofindtimer=setTimeout(function(){\n      that.dosearch(null,null,0);\n    },300);\n    //var field=e.target.parentElement.dataset.type;\n  },\n  renderinputs:function(searcharea) {  // input interface for search // onInput={this.searchtypechange}\n    if (this.props.db) {\n      return (    \n        React.createElement(\"div\", {className: \"button-group \"}, \n            React.createElement(\"input\", {ref: \"tofind\", className: \"tofind searchinput input-lg form-control\", type: \"search\", id: \"tofind\", onInput: this.tofindchange, \n            placeholder: \"Type Tibetan or Wylie transliteration\"})\n        )\n        )          \n    } else {\n      return React.createElement(\"span\", null, \"loading database....\")\n    }\n  },   \n  startsearch:function() {\n    var that=this;\n    setTimeout(function(){\n      that.refs.tofind.getDOMNode().focus();  \n    },500);\n  },\n  removeLeadingEndingSpace:function(tofind) {\n    if (!tofind || tofind.length<2) return tofind;\n    return tofind.replace(/^་/,\"\").replace(/་$/,\"\");\n  },\n  dosearch: function(e,reactid,start_end){\n    var start=start_end,tochit=0;\n    var end=this.props.db.get(\"meta\").vsize;\n    if (typeof start_end!=\"number\" && typeof start_end[0]==\"number\") {\n      start=start_end[0];\n      end=start_end[1];\n      tochit=start_end[2];\n    }\n    var field=$(this.refs.searchtype.getDOMNode()).find(\".active\")[0].dataset.type;\n    var tofind=this.refs.tofind.getDOMNode().value.trim();\n    tofind=tofind.replace(/\\\\/g,\"\\\\\\\\\"); //escape operator\n    tofind=tofind.replace(/\\*/g,\"**\"); //escape operator\n\n    tofind=tibetan.fromWylie(tofind);//tibetan.romanize.fromWylie(tofind)\n    tofind=tofind.replace(/༌༌/g,\"*\");\n    tofind=this.removeLeadingEndingSpace(tofind);\n\n    field=field || this.state.field;\n    if(field == \"fulltext\"){\n      var that=this;\n      kse.search(this.props.db,tofind,{phrase_sep:\"།\",\n        range:{start:start,end:end,maxhit:100}},function(engineContext,data){ //call search engine          \n        data.tochit=tochit;\n        data.excerptOverflow=false;\n        that.setState({res:data, tofind:tofind, res_toc:[] });  \n      });\n    }\n    if(field == \"kacha\"){\n      var res_kacha=search_api.searchKacha(tofind,this.props.toc);\n      if(tofind != \"\") this.setState({res_toc:res_kacha||[], tofind:tofind, res:[]});\n      else this.setState({res_toc:[], tofind:tofind, res:[]});\n    }\n    if(field == \"sutra\"){\n      var res_sutra=search_api.searchSutra(tofind,this.props.toc);\n      if(tofind != \"\") this.setState({res_toc:res_sutra||[], tofind:tofind, res:[]});\n      else this.setState({res_toc:[], tofind:tofind, res:[]});\n    }  \n  },\n  render: function() {\n    return (\n     React.createElement(\"div\", null, \n        React.createElement(\"div\", {className: \"slight\"}, React.createElement(\"br\", null)), \n        this.renderinputs(\"title\"), \n        React.createElement(\"div\", {className: \"center\"}, \n          React.createElement(\"div\", {className: \"btn-group\", \"data-toggle\": \"buttons\", ref: \"searchtype\", onClick: this.searchtypechange}, \n            React.createElement(\"label\", {\"data-type\": \"sutra\", className: \"btn btn-default btn-xs searchmode\"}, \n            React.createElement(\"input\", {type: \"radio\", name: \"field\", autocomplete: \"off\"}, React.createElement(\"img\", {title: \"མདོ་མིང་འཚོལ་བ། Title Search\", width: \"25\", src: \"./banner/icon-sutra.png\"}))\n            ), \n            React.createElement(\"label\", {\"data-type\": \"kacha\", className: \"btn btn-default btn-xs searchmode\"}, \n            React.createElement(\"input\", {type: \"radio\", name: \"field\", autocomplete: \"off\"}, React.createElement(\"img\", {title: \"དཀར་ཆག་འཚོལ་བ། Table of Content Search\", width: \"25\", src: \"./banner/icon-kacha.png\"}))\n            ), \n            React.createElement(\"label\", {\"data-type\": \"fulltext\", className: \"btn btn-default btn-xs searchmode active\"}, \n            React.createElement(\"input\", {type: \"radio\", name: \"field\", autocomplete: \"off\"}, React.createElement(\"img\", {title: \"ནང་དོན་འཚོལ་བ།  Full Text Search\", width: \"25\", src: \"./banner/icon-fulltext.png\"}))\n            )\n          )\n        ), \n        this.renderInputSyntax(), \n        React.createElement(Namelist, {wylie: this.props.wylie, res_toc: this.state.res_toc, tofind: this.state.tofind, gotofile: this.props.gotofile}), \n        React.createElement(Resultlist, {className: \"resultlist\", wylie: this.props.wylie, res: this.state.res, tofind: this.state.tofind, gotofile: this.props.gotofile})\n      )\n    );\n  }\n});\nmodule.exports=searcharea;",
    "/** @jsx React.DOM */\n\n//var othercomponent=Require(\"other\"); \nvar React=require('react');\nvar Defbox=require(\"./defbox.jsx\");\nvar corres_api=require(\"./corres_api\");\nvar dict_api=require(\"./dict_api\");\nvar jPedurma=require(\"pedurma\").jPedurma;\nvar dPedurma=require(\"pedurma\").dPedurma;\nvar hPedurma=require(\"pedurma\").hPedurma;\nvar mappings={\"J\":jPedurma,\"D\":dPedurma,\"H\":hPedurma};\n\nvar showseg= React.createClass({displayName: \"showseg\",\n  getInitialState: function() {\n    return {recen:\"lijiang\",showCorres:false,clickedCorrespb:{},clickedChPos:{left:0,top:0},openBox:\"\",vpos:0,seperateLine:false};\n  },\n  componentWillReceiveProps: function(nextProps) {\n    this.setState({showCorres:false,openBox:false});\n  },\n  getImgName: function(volpage) {\n    var p=volpage.split(\".\");\n    var v=\"000\"+p[0];\n    var vol=v.substr(v.length-3,v.length);\n    var pa=\"000\"+p[1].substr(0,p[1].length-1);\n    var page=pa.substr(pa.length-3,pa.length);\n    var side=p[1].substr(p[1].length-1);\n\n    return vol+\"/\"+vol+\"-\"+page+side;\n  },\n  getAllCorresPages: function(pbJ) {\n    var corresPages={};\n    for(var i in mappings) {\n      if(i != \"J\") corresPages[i] = corres_api.dosearch(pbJ,mappings[\"J\"],mappings[i]);\n    }\n\n    return corresPages;\n  },\n  addCorresImage:function(pb,recen) {\n    var r;// if(recen==\"J\") r=\"lijiang\";\n    if(recen==\"D\") r=\"derge\";\n    if(recen==\"H\") r=\"lhasa\";   \n    var c={pb:pb,recen:r};\n    this.setState({clickedCorrespb:c,showCorres:true});\n\n    console.log(\"rendering\",r,pb);\n  },\n  togglePageImg: function(e) {\n    if(e.target.nodeName == \"SPAN\" && e.target.getAttribute(\"vpos\")) {\n      var vpos=e.target.getAttribute(\"vpos\");\n      var def=dict_api.exhaustiveFind(e.target.textContent);//\"ཀུ་བ་\"\n      var clickedChPos = $('span[vpos=\"'+vpos+'\"]').position();\n      this.setState({openBox:true,clickedChPos:clickedChPos,def:def,vpos:vpos});\n    } else //this.setState({openBox:false});\n    if(e.target.dataset.type==\"goCorres\") {\n      this.addCorresImage(e.target.dataset.pb,e.target.dataset.recen);\n      return;\n    }\n    if (e&& e.target && e.target.nextSibling && e.target.nextSibling.nextSibling &&\n      e.target.nextSibling.nextSibling.nodeName==\"IMG\") {\n      if (e.target && e.target.dataset) {\n        var pb=e.target.dataset.pb;\n        if (pb) {\n          this.props.removeImage(pb);\n          this.setState({seperateLine:false});\n        }\n      }\n    } else {\n      var pb=null;\n      if (e.target && e.target.dataset) {\n        if(e.target.nodeName==\"SPAN\") pb=e.target.parentElement.dataset.pb;//add parentElement\n        else pb=e.target.dataset.pb\n      }\n      if (pb) {\n        this.props.addImage(pb);\n        this.setState({seperateLine:true});\n      } else {\n        //if (e && e.target && e.target.previousSibling && e.target.previousSibling\n        //  && e.target.previousSibling.previousSibling && e.target.previousSibling.previousSibling.previousSibling.dataset){\n        if(e && e.target && e.target.dataset.img){\n          //var pb=e.target.previousSibling.previousSibling.previousSibling.dataset.pb;\n          var pb=e.target.dataset.img;\n          if (pb) {\n            this.props.removeImage(pb);\n            this.setState({seperateLine:false});\n          }\n        }\n      }  \n    }    \n  },\n  renderPb: function(seg){\n    if(this.props.clickedpb && this.props.clickedpb.indexOf(seg.pb)>-1){\n      var imgName, imgLink;\n      var corresPage=this.getAllCorresPages(seg.pb);\n      if(!this.state.showCorres) {\n        imgName=this.getImgName(seg.pb);\n        imgLink=\"http://res.cloudinary.com/www-dharma-treasure-org/image/upload/\"+this.props.recen+\"/\"+imgName+\".jpg\";//\n        //imgLink=\"../adarsha_img/\"+this.props.recen+\"/\"+imgName+\".jpg\";\n        //imgLink=\"../001-002a.jpg\";\n      } else {\n        imgName=this.getImgName(this.state.clickedCorrespb.pb);\n        imgLink=\"http://res.cloudinary.com/www-dharma-treasure-org/image/upload/\"+this.state.clickedCorrespb.recen+\"/\"+imgName+\".jpg\";//\n        //imgLink=\"../adarsha_img/\"+this.state.clickedCorrespb.recen+\"/\"+imgName+\".jpg\";\n        //imgLink=\"../001-002a.jpg\";\n      }\n\n      return (\n        React.createElement(\"div\", null, \n          React.createElement(\"a\", {href: \"#\", \"data-pb\": seg.pb}, seg.pb), \n          \"  \" + ' ' +\n          \"Derge:\", React.createElement(\"a\", {\"data-type\": \"goCorres\", \"data-recen\": \"D\", \"data-pb\": corresPage.D}, corresPage.D), \n          \"  \" + ' ' +\n          \"Lhasa:\", React.createElement(\"a\", {\"data-type\": \"goCorres\", \"data-recen\": \"H\", \"data-pb\": corresPage.H}, corresPage.H), \n\n          React.createElement(\"img\", {className: \"sourceimage\", \"data-img\": seg.pb, width: \"100%\", src: imgLink}), React.createElement(\"br\", null)\n        )\n      );\n      nextpagekeepcrlf=true;\n    } else {\n      return (\n        React.createElement(\"div\", null, \n          React.createElement(\"a\", {href: \"#\", \"data-pb\": seg.pb}, seg.pb, React.createElement(\"img\", {width: \"25\", \"data-pb\": seg.pb, src: \"banner/imageicon.png\"}))\n        )\n      );\n    }\n  },\n  removeDefBox: function() {\n    console.log(\"scrolled\");\n  },\n  render: function() {\n    var seg=this.props.segs ||{};\n    if(typeof seg != \"undefined\") var linkedPb = this.renderPb(seg);//{this.props.segs.pb}\n    var content=this.props.segs.text;\n    if(this.state.seperateLine) content=content.replace(/\\n/g,\"<br/>\");\n    return (\n     React.createElement(\"div\", {onScroll: this.removeDefBox}, \n        React.createElement(\"div\", {onKeypress: this.keyup, onClick: this.togglePageImg, ref: \"pagetext\", className: \"pagetext\"}, \n          linkedPb, \n          React.createElement(\"div\", {dangerouslySetInnerHTML: {__html: content}})\n        ), \n        React.createElement(Defbox, {vpos: this.state.vpos, clickedChPos: this.state.clickedChPos, def: this.state.def, openBox: this.state.openBox})\n      )\n    );\n  }\n});\nmodule.exports=showseg;",
    "/** @jsx React.DOM */\n\n//var othercomponent=Require(\"other\"); \nvar React=require(\"react\");\nvar Textcontrolbar=require(\"./textcontrolbar.jsx\");\nvar Showseg=require(\"./showseg.jsx\");\nvar tibetan=require(\"tibetan/wylie\");\n\nvar showtext = React.createClass({displayName: \"showtext\",\n  getInitialState: function() {\n    return {message:\"\",pageImg:\"\",clickedpb:[],clickedCorrespb:[],recen:\"lijiang\",clickedChPos:{left:0,top:0},openBox:\"\",vpos:0};\n  },\n  shouldComponentUpdate:function(nextProps,nextState) {\n    if (nextProps.page!=this.props.page && typeof nextProps.page != \"number\") { //typeof NaN = \"number\"\n      nextState.clickedpb=[]; //reset image\n      nextState.clickedCorrespb=[]; //reset corres image\n    }\n    return true;\n  },\n  componentWillReceiveProps: function() {\n    this.shouldscroll=true;\n  },\n  excerptCopy:function() {\n      var gui = nodeRequire('nw.gui');\n      // We can not create a clipboard, we have to receive the system clipboard\n      var clipboard = gui.Clipboard.get();\n\n      var selection = window.getSelection();\n      var range = selection.getRangeAt(0); \n      if (range) { \n        var container = document.createElement(\"div\");\n        container.appendChild(range.cloneContents());\n        var source=$(\"#address\").html().replace(/<.*?>/g,\"/\");\n        var text=container.innerHTML + \"(\"+source+\")\";\n        text=text.replace(/<.*?>/g,\"\");\n        clipboard.set(text);\n        this.setState({message:\"Text copied to clipboard with source infomation\"});\n      }\n  },\n  handleKeyUp:function(e) {\n    if (e.keyCode==67 && e.ctrlKey){\n      if (typeof process!=\"undefined\" && process.versions&&process.versions[\"node-webkit\"]) {\n        e.preventDefault();\n        this.excerptCopy();\n      }\n    }\n  },\n\n  componentDidMount:function() {\n    this.textcontent=$(\".text-content\");\n    window.addEventListener(\"keyup\", this.handleKeyUp);\n  },\n  componentWillUnmount:function() {\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\n  },\n  onImageError:function() {\n    console.log(\"image error\");\n  },\n  checkImageLoaded:function() {\n    var pagetext=this.refs.pagetext.getDOMNode();\n    var images=pagetext.querySelectorAll(\"IMG.sourceimage\");\n    for (var i=0;i<images.length;i++) {\n      var img=images[i];\n      if (img.naturalWidth==0) {\n        img.src=\"banner/image_notfound.png\";\n      }\n    }\n  },\n  componentDidUpdate: function()  {\n    if(this.shouldscroll && this.props.scrollto && this.props.scrollto.match(/[abc]/) ){\n      var p=this.props.scrollto.match(/\\d+.(\\d+)[abc]/);\n      this.textcontent.scrollTop( 0 );\n      if(p[1]!=1){\n        $(\"a[data-pb]\").removeClass(\"scrolled\");      \n        var pb=$(\"a[data-pb='\"+this.props.scrollto+\"']\");\n        if(pb.length) {\n          this.textcontent.scrollTop( pb.position().top-120 );\n          pb.addClass(\"scrolled\");\n        }\n      }\n    } else if(this.shouldscroll){\n      $(\".text-content\").scrollTop( 0 );\n    }\n    var that=this;\n    clearTimeout(this.checkimagetimer);\n    this.checkimagetimer=setTimeout(function(){\n      that.checkImageLoaded();\n    },2000);\n    this.shouldscroll=false;\n  },\n  hitClick: function(n){\n    if(this.props.showExcerpt) this.props.showExcerpt(n);\n  },\n  removeImage:function(pb) {\n    var clickedpb=this.state.clickedpb;\n    var idx=clickedpb.indexOf(pb);\n    if (idx>-1) clickedpb.splice(idx,1);\n    this.setState({clickedpb:clickedpb});\n  },\n  addImage:function(pb) {\n    var clickedpb=this.state.clickedpb;\n    var idx=clickedpb.indexOf(pb);//idx=clickedpb.indexOf(clickedpb)\n    if (idx==-1) clickedpb.push(pb);\n    this.setState({clickedpb:clickedpb,recen:\"lijiang\"});\n  },\n  getSegsFromFile: function(file) {\n    var segs=[], pb=[], text=[];\n    var that=this;\n    var out=\"\",lastidx=0,nextpagekeepcrlf=false;\n\n    file.replace(/<pb n=\"(.*?)\"><\\/pb>/g,function(m,m1,idx){\n      var pagetext=file.substring(lastidx+m.length,idx);\n      pb.push(m1);\n      text.push(pagetext);\n      lastidx=idx;\n    });\n    var t1=file.substr(file.lastIndexOf(\"<pb\"));\n    var t=t1.replace(/<pb n=\"(.*?)\"><\\/pb>/,\"\");\n    text.push(t);\n    pb.map(function(item,i){\n      segs.push({pb:item,text:text[i+1]});\n    });\n    //console.log(\"pb:\",pb.length,\"text:\",text.length);\n    return segs;\n  },\n  scroll:function() {\n    console.log(\"scrolled!\");\n  },\n  render: function() {\n    var content=this.props.text||\"\";\n    if (this.props.wylie) content=tibetan.toWylie(content,null,false);\n    //content=this.renderpb(content);\n    var that=this;\n    var s=this.getSegsFromFile(content);\n    var segs=[];\n    s.map(function(item){\n      segs.push(React.createElement(Showseg, {segs: item, clickedpb: that.state.clickedpb, recen: that.state.recen, addImage: that.addImage, addCorresImage: that.addCorresImage, removeImage: that.removeImage}));\n    });\n\n    return (\n      React.createElement(\"div\", {className: \"cursor\", onScroll: this.scroll}, \n        React.createElement(Textcontrolbar, {message: this.state.message, sidemenu: this.props.sidemenu, toggleMenu: this.props.toggleMenu, dataN: this.props.dataN, setwylie: this.props.setwylie, wylie: this.props.wylie, page: this.props.page, bodytext: this.props.bodytext, next: this.props.nextfile, prev: this.props.prevfile, setpage: this.props.setpage, db: this.props.db, toc: this.props.toc}), \n        React.createElement(\"br\", null), React.createElement(\"br\", null), \n        React.createElement(\"div\", {ref: \"pagetext\"}, segs)\n      )\n    );\n  }\n});\nmodule.exports=showtext;",
    "var React=require(\"react\");\nvar Stacktoc=require(\"ksana2015-stacktoc\").component;  //載入目錄顯示元件\nvar Searcharea=require(\"./searcharea.jsx\");\nvar tibetan=require(\"tibetan/wylie\");\nvar tabarea = React.createClass({displayName: \"tabarea\",\n  getInitialState: function() {\n    return {res:{},res_toc:[]};\n  },\n  setBannerHeight:function(bannerHeight) {\n    var ch=document.documentElement.clientHeight;\n    this.refs[\"tab-content\"].getDOMNode().style.height=(ch-bannerHeight)+\"px\";//-40\n  },\n  componentDidUpdate:function()  {\n    this.setBannerHeight(100);\n  },  \n  textConverter:function(t) {\n    if(this.props.wylie == true) return tibetan.toWylie(t,null,false); \n    return t; \n  },\n  render: function() {\n    return (\n      React.createElement(\"div\", null, \n        React.createElement(\"div\", {className: \"borderright\"}, \n          React.createElement(\"ul\", {className: \"nav nav-tabs\", role: \"tablist\"}, \n            React.createElement(\"li\", {className: \"active\"}, React.createElement(\"a\", {href: \"#Catalog\", role: \"tab\", \"data-toggle\": \"tab\", title: \"Catalog\"}, React.createElement(\"img\", {width: \"25\", src: \"./banner/icon-read.png\"}))), \n            React.createElement(\"li\", null, React.createElement(\"a\", {href: \"#Search\", role: \"tab\", onClick: this.startsearch, \"data-toggle\": \"tab\", title: \"Search\"}, React.createElement(\"img\", {width: \"25\", src: \"./banner/search.png\"})))\n          ), \n\n          React.createElement(\"div\", {className: \"tab-content\", ref: \"tab-content\"}, \n            React.createElement(\"div\", {className: \"tab-pane fade in active\", id: \"Catalog\"}, \n              React.createElement(Stacktoc, {className: \"stacktoc\", textConverter: this.textConverter, showText: this.props.showText, showExcerpt: this.showExcerpt, \n              opts: {tocbar:\"banner/bar.png\",tocbar_start:\"banner/bar_start.png\",stopAt:\"་\",\n              maxitemlength:42,tocstyle:\"vertical_line\"}, \n              hits: this.state.res.rawresult, data: this.props.toc, goVoff: this.state.goVoff})\n            ), \n\n            React.createElement(\"div\", {className: \"tab-pane fade\", id: \"Search\"}, \n              React.createElement(Searcharea, {db: this.props.db, wylie: this.props.wylie, gotofile: this.props.gotofile, toc: this.props.toc})\n            )\n          )\n        )\n      )\n    );\n  }\n});\nmodule.exports=tabarea;",
    "var React=require(\"react\");\nvar tibetan=require(\"tibetan/wylie\");\nvar Textcontrolbar = React.createClass({displayName: \"Textcontrolbar\",\n  getInitialState: function() {\n    return {address:0,fontsize:125,message:\"\"};\n  },\n  filepage2vpos:function(file,page) {\n    var out=[];\n    if(!this.props.db || !this.props.toc) return 0;\n    var offsets=this.props.db.getFileSegOffsets(file);\n    var voff=offsets[page];\n\n    var n=this.findByVoff(voff);//toc裡的第幾項\n    var parents=this.enumAncestors(n) || [];\n\n    for(var i=0; i<parents.length; i++){\n      out.push(this.props.toc[parents[i]].text);\n    }\n    return out.join('<img src=\"banner/slash.png\"></img>');\n  },\n\n  findByVoff: function(voff) {\n    if(!this.props.toc) return 0;\n    for (var i=0;i<this.props.toc.length;i++) {\n      var t=this.props.toc[i];\n      if (t.voff>voff) return i-1;\n    }\n    return 0; //return root node\n  },\n  enumAncestors: function(cur) {\n    var toc=this.props.toc;\n    if (!toc || !toc.length) return;\n    //var cur=this.state.cur;\n    if (cur==0) return [];\n    var n=cur;\n    var depth=toc[cur].depth - 1;\n    var parents=[];\n    while (n>=0 && depth>0) {\n      if (toc[n].depth==depth) {\n        parents.unshift(n);\n        depth--;\n      }\n      n--;\n    }\n    parents.unshift(0); //first ancestor is root node\n    parents.push(cur);\n\n    return parents;\n  },\n  getAddress: function() {\n   if (!this.props.bodytext)return;\n   var file=this.props.bodytext.file;\n   var page=this.props.page;\n   var res=this.filepage2vpos(file,page);\n\n   if(this.props.wylie == false) return res;\n   if(this.props.wylie == true) return tibetan.toWylie(res,null,false);    \n  },\n  increasefontsize:function() {\n    var fontsize=parseFloat($(\".pagetext\").css(\"font-size\"));\n    fontsize=fontsize*1.1;\n    if (fontsize>40) return;\n    $(\".pagetext\").css(\"font-size\",fontsize+\"px\")\n                  .css(\"line-height\",(fontsize*1.7)+\"px\");\n  },\n  decreasefontsize:function() {\n    var fontsize=parseFloat($(\".pagetext\").css(\"font-size\"));\n    fontsize=fontsize/1.1;\n    if (fontsize<12) return;\n    $(\".pagetext\").css(\"font-size\",fontsize+\"px\")\n    .css(\"line-height\",(fontsize*1.7)+\"px\");\n  },\n  componentWillReceiveProps:function(nextProps) {\n    this.setState({message:nextProps.message});\n    var that=this;\n    if(nextProps.message) {\n      $(that.refs.message.getDOMNode()).show();\n    } else {\n      $(that.refs.message.getDOMNode()).hide();\n    }\n  },\n  componentDidUpdate:function() {\n    var that=this;\n    if (this.state.message) {\n      setTimeout(function(){\n        that.setState({message:\"\"});\n        $(that.refs.message.getDOMNode()).hide();\n      },3000);\n    }\n  },\n  renderSideMenuButton:function() {\n    if (this.props.sidemenu) {\n      return React.createElement(\"button\", {className: \"btn btn-default\", title: \"Hide Side Menu\", onClick: this.props.toggleMenu}, React.createElement(\"img\", {width: \"20\", src: \"./banner/hidemenu.png\"}))\n    } else {\n      return React.createElement(\"button\", {className: \"btn btn-default\", title: \"Show Side Menu\", onClick: this.props.toggleMenu}, React.createElement(\"img\", {width: \"20\", src: \"./banner/showmenu.png\"}))\n    }\n  },\n  render: function() {   \n   return React.createElement(\"div\", {className: \"cursor controlbar\"}, \n            this.renderSideMenuButton(), \n            React.createElement(\"button\", {className: \"btn btn-default\", title: \"Previous File\", onClick: this.props.prev}, React.createElement(\"img\", {width: \"20\", src: \"./banner/prev.png\"})), \n            React.createElement(\"button\", {className: \"btn btn-default\", title: \"Next File\", onClick: this.props.next}, React.createElement(\"img\", {width: \"20\", src: \"./banner/next.png\"})), \n\n            React.createElement(\"button\", {className: \"btn btn-default right\", title: \"Contact Us\"}, React.createElement(\"a\", {href: \"http://www.dharma-treasure.org/en/contact-us/\", target: \"_new\"}, React.createElement(\"img\", {width: \"20\", src: \"./banner/icon-info.png\"}))), \n            React.createElement(\"button\", {className: \"btn btn-default right\", title: \"Toggle Wylie Transliteration\", onClick: this.props.setwylie}, React.createElement(\"img\", {width: \"20\", src: \"./banner/icon-towylie.png\"})), \n\n            React.createElement(\"button\", {className: \"btn btn-default right\", title: \"Increase Font Size\", onClick: this.increasefontsize}, React.createElement(\"img\", {width: \"20\", src: \"./banner/increasefontsize.png\"})), \n            React.createElement(\"button\", {className: \"btn btn-default right\", title: \"Decrease Font Size\", onClick: this.decreasefontsize}, React.createElement(\"img\", {width: \"20\", src: \"./banner/decreasefontsize.png\"})), \n            React.createElement(\"span\", {ref: \"message\", className: \"alert alert-success right\"}, this.state.message), \n            React.createElement(\"br\", null), \n            React.createElement(\"br\", null), React.createElement(\"span\", {id: \"address\", dangerouslySetInnerHTML: {__html:this.getAddress()}})\n          )\n  }  \n});\nmodule.exports=Textcontrolbar;",
    "var tokenizers=require('./tokenizers');\nvar normalizeTbl=null;\nvar setNormalizeTable=function(tbl,obj) {\n\tif (!obj) {\n\t\tobj={};\n\t\tfor (var i=0;i<tbl.length;i++) {\n\t\t\tvar arr=tbl[i].split(\"=\");\n\t\t\tobj[arr[0]]=arr[1];\n\t\t}\n\t}\n\tnormalizeTbl=obj;\n\treturn obj;\n}\nvar normalize1=function(token) {\n\tif (!token) return \"\";\n\ttoken=token.replace(/[ \\n\\.,，。！．「」：；、]/g,'').trim();\n\tif (!normalizeTbl) return token;\n\tif (token.length==1) {\n\t\treturn normalizeTbl[token] || token;\n\t} else {\n\t\tfor (var i=0;i<token.length;i++) {\n\t\t\ttoken[i]=normalizeTbl[token[i]] || token[i];\n\t\t}\n\t\treturn token;\n\t}\n}\nvar isSkip1=function(token) {\n\tvar t=token.trim();\n\treturn (t==\"\" || t==\"　\" || t==\"※\" || t==\"\\n\");\n}\nvar normalize_tibetan=function(token) {\n\treturn token.replace(/[།་ ]/g,'').trim();\n}\n\nvar isSkip_tibetan=function(token) {\n\tvar t=token.trim();\n\treturn (t==\"\" || t==\"　\" ||  t==\"\\n\");\t\n}\nvar simple1={\n\tfunc:{\n\t\ttokenize:tokenizers.simple\n\t\t,setNormalizeTable:setNormalizeTable\n\t\t,normalize: normalize1\n\t\t,isSkip:\tisSkip1\n\t}\n\t\n}\nvar tibetan1={\n\tfunc:{\n\t\ttokenize:tokenizers.tibetan\n\t\t,setNormalizeTable:setNormalizeTable\n\t\t,normalize:normalize_tibetan\n\t\t,isSkip:isSkip_tibetan\n\t}\n}\nmodule.exports={\"simple1\":simple1,\"tibetan1\":tibetan1}",
    "/* \n  custom func for building and searching ydb\n\n  keep all version\n  \n  getAPI(version); //return hash of functions , if ver is omit , return lastest\n\t\n  postings2Tree      // if version is not supply, get lastest\n  tokenize(text,api) // convert a string into tokens(depends on other api)\n  normalizeToken     // stemming and etc\n  isSpaceChar        // not a searchable token\n  isSkipChar         // 0 vpos\n\n  for client and server side\n  \n*/\nvar configs=require(\"./configs\");\nvar config_simple=\"simple1\";\nvar optimize=function(json,config) {\n\tconfig=config||config_simple;\n\treturn json;\n}\n\nvar getAPI=function(config) {\n\tconfig=config||config_simple;\n\tvar func=configs[config].func;\n\tfunc.optimize=optimize;\n\tif (config==\"simple1\") {\n\t\t//add common custom function here\n\t} else if (config==\"tibetan1\") {\n\n\t} else throw \"config \"+config +\"not supported\";\n\n\treturn func;\n}\n\nmodule.exports={getAPI:getAPI};",
    "var tibetan =function(s) {\n\t//continuous tsheg grouped into same token\n\t//shad and space grouped into same token\n\tif (!s) return {tokens:[],offsets:[]};\n\tvar offset=0;\n\tvar tokens=[],offsets=[];\n\ts=s.replace(/\\r\\n/g,'\\n').replace(/\\r/g,'\\n');\n\tvar arr=s.split('\\n');\n\n\tfor (var i=0;i<arr.length;i++) {\n\t\tvar last=0;\n\t\tvar str=arr[i];\n\t\tstr.replace(/[།་ ]+/g,function(m,m1){\n\t\t\ttokens.push(str.substring(last,m1)+m);\n\t\t\toffsets.push(offset+last);\n\t\t\tlast=m1+m.length;\n\t\t});\n\t\tif (last<str.length) {\n\t\t\ttokens.push(str.substring(last));\n\t\t\toffsets.push(offset+last);\n\t\t}\n\t\tif (i===arr.length-1) break;\n\t\ttokens.push('\\n');\n\t\toffsets.push(offset+last);\n\t\toffset+=str.length+1;\n\t}\n\n\treturn {tokens:tokens,offsets:offsets};\n};\nvar isSpace=function(c) {\n\treturn (c==\" \") ;//|| (c==\",\") || (c==\".\");\n}\nvar isCJK =function(c) {return ((c>=0x3000 && c<=0x9FFF) \n|| (c>=0xD800 && c<0xDC00) || (c>=0xFF00) ) ;}\nvar simple1=function(s) {\n\tif (!s) return {tokens:[],offsets:[]};\n\tvar offset=0;\n\tvar tokens=[],offsets=[];\n\ts=s.replace(/\\r\\n/g,'\\n').replace(/\\r/g,'\\n');\n\tvar arr=s.split('\\n');\n\n\tvar pushtoken=function(t,off) {\n\t\tvar i=0;\n\t\tif (t.charCodeAt(0)>255) {\n\t\t\twhile (i<t.length) {\n\t\t\t\tvar c=t.charCodeAt(i);\n\t\t\t\toffsets.push(off+i);\n\t\t\t\ttokens.push(t[i]);\n\t\t\t\tif (c>=0xD800 && c<=0xDFFF) {\n\t\t\t\t\ttokens[tokens.length-1]+=t[i]; //extension B,C,D\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t} else {\n\t\t\ttokens.push(t);\n\t\t\toffsets.push(off);\t\n\t\t}\n\t}\n\tfor (var i=0;i<arr.length;i++) {\n\t\tvar last=0,sp=\"\";\n\t\tstr=arr[i];\n\t\tstr.replace(/[_0-9A-Za-z]+/g,function(m,m1){\n\t\t\twhile (isSpace(sp=str[last]) && last<str.length) {\n\t\t\t\ttokens[tokens.length-1]+=sp;\n\t\t\t\tlast++;\n\t\t\t}\n\t\t\tpushtoken(str.substring(last,m1)+m , offset+last);\n\t\t\toffsets.push(offset+last);\n\t\t\tlast=m1+m.length;\n\t\t});\n\n\t\tif (last<str.length) {\n\t\t\twhile (isSpace(sp=str[last]) && last<str.length) {\n\t\t\t\ttokens[tokens.length-1]+=sp;\n\t\t\t\tlast++;\n\t\t\t}\n\t\t\tpushtoken(str.substring(last), offset+last);\n\t\t\t\n\t\t}\t\t\n\t\toffsets.push(offset+last);\n\t\toffset+=str.length+1;\n\t\tif (i===arr.length-1) break;\n\t\ttokens.push('\\n');\n\t}\n\n\treturn {tokens:tokens,offsets:offsets};\n\n};\n\nvar simple=function(s) {\n\tvar token='';\n\tvar tokens=[], offsets=[] ;\n\tvar i=0; \n\tvar lastspace=false;\n\tvar addtoken=function() {\n\t\tif (!token) return;\n\t\ttokens.push(token);\n\t\toffsets.push(i);\n\t\ttoken='';\n\t}\n\twhile (i<s.length) {\n\t\tvar c=s.charAt(i);\n\t\tvar code=s.charCodeAt(i);\n\t\tif (isCJK(code)) {\n\t\t\taddtoken();\n\t\t\ttoken=c;\n\t\t\tif (code>=0xD800 && code<0xDC00) { //high sorragate\n\t\t\t\ttoken+=s.charAt(i+1);i++;\n\t\t\t}\n\t\t\taddtoken();\n\t\t} else {\n\t\t\tif (c=='&' || c=='<' || c=='?' || c==\",\" || c==\".\"\n\t\t\t|| c=='|' || c=='~' || c=='`' || c==';' \n\t\t\t|| c=='>' || c==':' \n\t\t\t|| c=='=' || c=='@'  || c==\"-\" \n\t\t\t|| c==']' || c=='}'  || c==\")\" \n\t\t\t//|| c=='{' || c=='}'|| c=='[' || c==']' || c=='(' || c==')'\n\t\t\t|| code==0xf0b || code==0xf0d // tibetan space\n\t\t\t|| (code>=0x2000 && code<=0x206f)) {\n\t\t\t\taddtoken();\n\t\t\t\tif (c=='&' || c=='<'){ // || c=='{'|| c=='('|| c=='[') {\n\t\t\t\t\tvar endchar='>';\n\t\t\t\t\tif (c=='&') endchar=';'\n\t\t\t\t\t//else if (c=='{') endchar='}';\n\t\t\t\t\t//else if (c=='[') endchar=']';\n\t\t\t\t\t//else if (c=='(') endchar=')';\n\n\t\t\t\t\twhile (i<s.length && s.charAt(i)!=endchar) {\n\t\t\t\t\t\ttoken+=s.charAt(i);\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\ttoken+=endchar;\n\t\t\t\t\taddtoken();\n\t\t\t\t} else {\n\t\t\t\t\ttoken=c;\n\t\t\t\t\taddtoken();\n\t\t\t\t}\n\t\t\t\ttoken='';\n\t\t\t} else {\n\t\t\t\tif (c==\" \") {\n\t\t\t\t\ttoken+=c;\n\t\t\t\t\tlastspace=true;\n\t\t\t\t} else {\n\t\t\t\t\tif (lastspace) addtoken();\n\t\t\t\t\tlastspace=false;\n\t\t\t\t\ttoken+=c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\taddtoken();\n\treturn {tokens:tokens,offsets:offsets};\n}\nmodule.exports={simple:simple,tibetan:tibetan};",
    "var indexOfSorted = function (array, obj, near) { \n  var low = 0,\n  high = array.length;\n  while (low < high) {\n    var mid = (low + high) >> 1;\n    if (array[mid]==obj) return mid;\n    array[mid] < obj ? low = mid + 1 : high = mid;\n  }\n  if (near) return low;\n  else if (array[low]==obj) return low;else return -1;\n};\nvar indexOfSorted_str = function (array, obj, near) { \n  var low = 0,\n  high = array.length;\n  while (low < high) {\n    var mid = (low + high) >> 1;\n    if (array[mid]==obj) return mid;\n    //(array[mid].localeCompare(obj)<0) ? low = mid + 1 : high = mid;\n    array[mid]<obj ? low=mid+1 : high=mid;\n  }\n  if (near) return low;\n  else if (array[low]==obj) return low;else return -1;\n};\n\n\nvar bsearch=function(array,value,near) {\n\tvar func=indexOfSorted;\n\tif (typeof array[0]==\"string\") func=indexOfSorted_str;\n\treturn func(array,value,near);\n}\nvar bsearchNear=function(array,value) {\n\treturn bsearch(array,value,true);\n}\n\nmodule.exports=bsearch;",
    "module.exports=require(\"./kde\");",
    "// Ksana Database Engine\n\n//   2015/1/2 , \n//   move to ksana-database\n//   simplified by removing document support and socket.io support\n//   2015/5/18 , add RPC support, move common method to method.js\n\nvar localPool={};\nvar apppath=\"\";\nvar bsearch=require(\"./bsearch\");\nvar Kdb=require('ksana-jsonrom');\nvar kdbs=[]; //available kdb , id and absolute path\nvar strsep=\"\\uffff\";\nvar kdblisted=false;\n\nvar method=require(\"./method\");\n\nvar createLocalEngine=function(kdb,opts,cb,context) {\n\tvar engine={kdb:kdb, queryCache:{}, postingCache:{}, cache:{}, TOC:{} };\n\tif (typeof context==\"object\") engine.context=context;\n\tmethod.setup(engine);\n\t//speedy native functions\n\tif (kdb.fs.mergePostings) {\n\t\tengine.mergePostings=kdb.fs.mergePostings.bind(kdb.fs);\n\t}\n\tvar setPreload=function(res) {\n\t\tengine.dbname=res[0].name;\n\t\t//engine.customfunc=customfunc.getAPI(res[0].config);\n\t\tengine.ready=true;\n\t}\n\tvar preload=method.getPreloadField(opts.preload);\n\tvar opts={recursive:true};\n\tmethod.gets.apply(engine,[ preload, opts,function(res){\n\t\tsetPreload(res);\n\t\tcb.apply(engine.context,[engine]);\n\t}]);\n\treturn engine;\n}\n\n\n //TODO delete directly from kdb instance\n //kdb.free();\nvar closeLocal=function(kdbid) {\n\tvar engine=localPool[kdbid];\n\tif (engine) {\n\t\tengine.kdb.free();\n\t\tdelete localPool[kdbid];\n\t}\n}\n\n\nvar getLocalTries=function(kdbfn,cb) {\n\tkdbid=kdbfn.replace('.kdb','');\n\tvar tries= [\"./\"+kdbid+\".kdb\"\n\t           ,\"../\"+kdbid+\".kdb\"\n\t];\n\n\tfor (var i=0;i<kdbs.length;i++) {\n\t\tif (kdbs[i][0]==kdbid) {\n\t\t\ttries.push(kdbs[i][1]);\n\t\t}\n\t}\n\treturn tries;;\n}\n\nvar openLocalReactNative=function(kdbid,opts,cb,context) {\n\n\tif (kdbid.indexOf(\".kdb\")==-1) kdbid+=\".kdb\";\n\tnew Kdb.open(kdbid,function(err,kdb){\n\t\tif (err) {\n\t\t\tcb.apply(context,[err]);\n\t\t} else {\n\t\t\tcreateLocalEngine(kdb,opts,function(engine){\n\t\t\t\tlocalPool[kdbid]=engine;\n\t\t\t\tcb.apply(context||engine.context,[0,engine]);\n\t\t\t},context);\n\t\t}\n\t});\n}\n\n\nvar openLocalKsanagap=function(kdbid,opts,cb,context) {\n\tvar kdbfn=kdbid;\n\tvar tries=getLocalTries(kdbfn);\n\n\tfor (var i=0;i<tries.length;i++) {\n\t\tif (fs.existsSync(tries[i])) {\n\t\t\t//console.log(\"kdb path: \"+nodeRequire('path').resolve(tries[i]));\n\t\t\tvar kdb=new Kdb.open(tries[i],function(err,kdb){\n\t\t\t\tif (err) {\n\t\t\t\t\tcb.apply(context,[err]);\n\t\t\t\t} else {\n\t\t\t\t\tcreateLocalEngine(kdb,opts,function(engine){\n\t\t\t\t\t\tlocalPool[kdbid]=engine;\n\t\t\t\t\t\tcb.apply(context||engine.context,[0,engine]);\n\t\t\t\t\t},context);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn null;\n\t\t}\n\t}\n\tif (cb) cb.apply(context,[kdbid+\" not found\"]);\n\treturn null;\n\n}\nvar openLocalNode=function(kdbid,opts,cb,context) {\n\tvar fs=require('fs');\n\tvar tries=getLocalTries(kdbid);\n\tfor (var i=0;i<tries.length;i++) {\n\t\tif (fs.existsSync(tries[i])) {\n\n\t\t\tnew Kdb.open(tries[i],function(err,kdb){\n\t\t\t\tif (err) {\n\t\t\t\t\tcb.apply(context||engine.content,[err]);\n\t\t\t\t} else {\n\t\t\t\t\tcreateLocalEngine(kdb,opts,function(engine){\n\t\t\t\t\t\tlocalPool[kdbid]=engine;\n\t\t\t\t\t\tcb.apply(context||engine.context,[0,engine]);\n\t\t\t\t\t},context);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn null;\n\t\t}\n\t}\n\tif (cb) cb.apply(context,[kdbid+\" not found\"]);\n\treturn null;\n}\n\nvar openLocalHtml5=function(kdbid,opts,cb,context) {\t\n\tvar engine=localPool[kdbid];\n\tvar kdbfn=kdbid;\n\tif (kdbfn.indexOf(\".kdb\")==-1) kdbfn+=\".kdb\";\n\tnew Kdb.open(kdbfn,function(err,handle){\n\t\tif (err) {\n\t\t\tvar remoteurl=window.location.origin+window.location.pathname+kdbid;\n\t\t\tif (kdbid.indexOf(\"/\")>-1) remoteurl=window.location.origin+'/'+kdbid;\n\t\t\treturn kde_remote(remoteurl,opts,cb,context);\n\t\t\t//cb.apply(context,[err]);\n\t\t} else {\n\t\t\tcreateLocalEngine(handle,opts,function(engine){\n\t\t\t\tlocalPool[kdbid]=engine;\n\t\t\t\tcb.apply(context||engine.context,[0,engine]);\n\t\t\t},context);\n\t\t}\n\t});\n}\n\nvar kde_remote=require(\"./kde_remote\");\n\n//omit cb for syncronize open\nvar open=function(kdbid,opts,cb,context)  {\n\tif (kdbid.indexOf(\"http\")==0) {\n\t\treturn kde_remote(kdbid,opts,cb,context);\n\t}\n\n\tif (typeof opts==\"function\") { //no opts\n\t\tif (typeof cb==\"object\") context=cb;\n\t\tcb=opts;\n\t\topts={};\n\t}\n\t\n\tvar engine=localPool[kdbid];\n\tif (engine) {\n\t\tif (cb) cb.apply(context||engine.context,[0,engine]);\n\t\treturn engine;\n\t}\n\n\tvar platform=require(\"./platform\").getPlatform();\n\tif (platform==\"node-webkit\" || platform==\"node\") {\n\t\topenLocalNode(kdbid,opts,cb,context);\n\t} else if (platform==\"html5\" || platform==\"chrome\"){\n\t\topenLocalHtml5(kdbid,opts,cb,context);\t\t\n\t} else if (platform==\"react-native\") {\n\t\topenLocalReactNative(kdbid,opts,cb,context);\t\n\t} else {\n\t\topenLocalKsanagap(kdbid,opts,cb,context);\t\n\t}\n}\nvar setPath=function(path) {\n\tapppath=path;\n\tconsole.log(\"set path\",path)\n}\n\nvar enumKdb=function(cb,context){\n\trequire(\"./listkdb\")(function(files){\n\t\tkdbs=files;\n\t\tif (cb) cb.call(context, kdbs.map(function(k){return k[0]}) );\n\t});\n}\n\nvar API={open:open,setPath:setPath, close:closeLocal, enumKdb:enumKdb, bsearch:bsearch,\nkdbs:kdbs};\n\nvar platform=require(\"./platform\").getPlatform();\nif (platform==\"node-webkit\" || platform==\"node\") {\n\tenumKdb();\n} else {\n\tAPI.rpc=require(\"./rpc_kde\"); //for browser only\n}\nmodule.exports=API;",
    "var pool={};\nvar strsep=\"\\uffff\";\nvar method=require(\"./method\");\n\n\nvar getRemote=function(path,opts,cb) {\n\n\tif (typeof opts===\"function\") {\n\t\tcb=opts;\n\t\topts={};\n\t}\n\n\topts=opts||{};\n\t\n\tvar $kde=require(\"./rpc_kde\");\n\n\tvar engine=this;\n\tvar kdbid=engine.kdb;\n\tkdbid=kdbid.substr(window.location.origin.length+1).replace(\".kdb\",\"\");\t\n\n\tif (typeof opts==\"function\") {\n\t\tcb=opts;\n\t\topts={recursive:false};\n\t}\n\topts.recursive=opts.recursive||false;\n\tif (typeof path==\"string\") path=[path];\n\n\tif (path[0] instanceof Array) { //multiple paths\n\t\tvar paths=[],output=[];\n\t\tfor (var i=0;i<path.length;i++) {\n\t\t\tvar cachepath=path[i].join(strsep);\n\t\t\tvar data=engine.cache[cachepath];\n\t\t\tif (typeof data!=\"undefined\") {\n\t\t\t\tpaths.push(null);//  place holder for LINE 28\n\t\t\t\toutput.push(data); //put cached data into output\n\t\t\t} else{\n\t\t\t\tengine.fetched++;\n\t\t\t\tpaths.push(path[i]); //need to ask server\n\t\t\t\toutput.push(null); //data is unknown yet\n\t\t\t}\n\t\t}\n\t\t//now ask server for unknown datum\n\t\tengine.traffic++;\n\t\tvar newopts={recursive:!!opts.recursive, address:opts.address,\n\t\t\tkey:paths,db:kdbid};\n\t\t$kde.get(newopts,function(datum){\n\t\t\t//merge the server result with cached \n\t\t\tfor (var i=0;i<output.length;i++) {\n\t\t\t\tif (datum[i] && paths[i]) {\n\t\t\t\t\tvar cachekey=paths[i].join(strsep);\n\t\t\t\t\tengine.cache[cachekey]=datum[i];\n\t\t\t\t\toutput[i]=datum[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cb) cb.apply(engine.context,[output]);\t\n\t\t});\n\t} else { //single path\n\t\tvar cachepath=path.join(strsep);\n\t\tvar data=engine.cache[cachepath];\n\t\tif (typeof data!=\"undefined\") {\n\t\t\tif (cb) cb.apply(engine.context,[data]);\n\t\t\treturn data;//in cache , return immediately\n\t\t} else {\n\t\t\tengine.traffic++;\n\t\t\tengine.fetched++;\n\t\t\tvar opts={key:path,recursive:!!opts.recursive,db:kdbid};\n\t\t\t$kde.get(opts,function(data){\n\t\t\t\tengine.cache[cachepath]=data;\n\t\t\t\tif (cb) cb.apply(engine.context,[data]);\t\n\t\t\t});\n\t\t}\n\t}\n}\n\nvar createRemoteEngine=function(kdb,opts,cb,context) {\n\n\tvar engine={kdb:kdb, queryCache:{}, postingCache:{}, cache:{}, TOC:{}, fetched:0, traffic:0};\n\tif (typeof context==\"object\") engine.context=context;\n\tmethod.setup(engine);\n\tengine.get=getRemote;\n\n\tvar setPreload=function(res) {\n\t\tengine.dbname=res[0].name;\n\t\t//engine.customfunc=customfunc.getAPI(res[0].config);\n\t\tengine.ready=true;\n\t}\n\tvar preload=method.getPreloadField(opts.preload);\n\tvar opts={recursive:true};\n\tmethod.gets.apply(engine,[ preload, opts,function(res){\n\t\tsetPreload(res);\n\t\tcb.apply(engine.context,[engine]);\n\t}]);\n\treturn engine;\n}\n\nvar openRemote=function(kdbid,opts,cb,context) {\n\tif (typeof opts==\"function\") {\n\t\tcb=opts;\n\t\tcontext=cb;\n\t\topts={};\n\t}\n\n\tvar engine=pool[kdbid];\n\tif (engine) {\n\t\tif (cb) cb.apply(context||engine.context,[0,engine]);\n\t\treturn engine;\n\t}\n\tconsole.log(\"open remote\",kdbid);\n\n\tcreateRemoteEngine(kdbid,opts,function(engine){\n\t\tpool[kdbid]=engine;\n\t\tcb.apply(context||engine.context,[0,engine]);\n\t},context);\n\n\tpool[kdbid]=engine;\n}\n\nvar close=function(kdbid) {\n\tvar engine=pool[kdbid];\n\tif (engine) {\n\t\tdelete pool[kdbid];\n\t}\n}\n\nmodule.exports=openRemote;",
    "/* return array of dbid and absolute path*/\n//var html5fs=require(\"./html5fs\");\n\nvar listkdb_html5=function(cb,context) {\n\tkfs.readDir(function(kdbs){\n\t\t\tcb.call(this,kdbs);\n\t},context||this);\t\t\n}\nvar listkdb_rpc=function() {\n\tvar fs=require(\"fs\");\n\tvar path=require(\"path\");\n\tvar dir=process.cwd();\n\tvar files=fs.readdirSync(dir);\n\tvar output=filterkdb(files,dir);\n\treturn output;\n}\nvar filterkdb=function(files,parent){\n\tvar output=[];\n\tvar fs=require(\"fs\");\n\tvar path=require(\"path\");\n\tfiles.map(function(f){\n\t\tvar subdir=parent+path.sep+f;\n\t\tvar stat=fs.statSync(subdir);\n\t\tif (stat.isDirectory()) {\n\t\t\tvar subfiles=fs.readdirSync(subdir);\n\t\t\tfor (var i=0;i<subfiles.length;i++) {\n\t\t\t\tvar file=subfiles[i];\n\t\t\t\tvar idx=file.indexOf(\".kdb\");\n\t\t\t\tif (idx>-1&&idx==file.length-4) {\n\t\t\t\t\tvar fn=subdir+path.sep+file;\n\t\t\t\t\tfn=fn.replace(/\\\\/g,\"/\");\n\t\t\t\t\toutput.push([ file.substr(0,file.length-4), fn]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\treturn output;\n}\t\n\nvar listkdb_node=function(cb,context){\n\tvar fs=require(\"fs\");\n\tvar path=require(\"path\")\n\tvar parent=path.resolve(process.cwd(),\"..\");\n\tvar files=fs.readdirSync(parent);\n\tvar output=filterkdb(files,parent);\n\n\tif (cb) cb.call(context,output);\n\treturn output;\n}\nvar fileNameOnly=function(fn) {\n\tvar at=fn.lastIndexOf(\"/\");\n\tif (at>-1) return fn.substr(at+1);\n\treturn fn;\n}\nvar listkdb_ksanagap=function(cb,context) {\n\tvar output=[];\n\n\tvar formatoutput=function(apps) {\n\t\tfor (var i=0;i<apps.length;i++) {\n\t\t\tvar app=apps[i];\n\t\t\tif (app.files) for (var j=0;j<app.files.length;j++) {\n\t\t\t\tvar file=app.files[j];\n\t\t\t\tif (file.substr(file.length-4)==\".kdb\") {\n\t\t\t\t\toutput.push([app.dbid,fileNameOnly(file)]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\t\n\t\tcb.call(context,output);\t\n\t}\n\tif (kfs.listApps.length==1) {\n\t\tformatoutput(JSON.parse(kfs.listApps()));\n\t} else {\n\t\tkfs.listApps(function(apps){\n\t\t\tformatoutput(JSON.parse(apps));\n\t\t});\n\t}\n}\nvar listkdb=function(cb,context) {\n\tvar platform=require(\"./platform\").getPlatform();\n\tvar files=[];\n\tif (platform==\"node\" || platform==\"node-webkit\") {\n\t\tlistkdb_node(cb,context);\n\t} else if (platform==\"chrome\") {\n\t\tlistkdb_html5(cb,context);\n\t} else {\n\t\tlistkdb_ksanagap(cb,context);\n\t}\n}\n\nlistkdb.sync=listkdb_rpc;\nmodule.exports=listkdb;",
    "var bsearch=require(\"./bsearch\");\nvar gets=function(paths,opts,cb) { //get many data with one call\n\n\tif (!paths) return ;\n\tif (typeof paths=='string') {\n\t\tpaths=[paths];\n\t}\n\tvar engine=this, output=[];\n\n\tvar makecb=function(path){\n\t\treturn function(data){\n\t\t\t\tif (!(data && typeof data =='object' && data.__empty)) output.push(data);\n\t\t\t\tengine.get(path,opts,taskqueue.shift());\n\t\t};\n\t};\n\n\tvar taskqueue=[];\n\tfor (var i=0;i<paths.length;i++) {\n\t\tif (typeof paths[i]==\"null\") { //this is only a place holder for key data already in client cache\n\t\t\toutput.push(null);\n\t\t} else {\n\t\t\ttaskqueue.push(makecb(paths[i]));\n\t\t}\n\t};\n\n\ttaskqueue.push(function(data){\n\t\toutput.push(data);\n\t\tcb.apply(engine.context||engine,[output,paths]); //return to caller\n\t});\n\n\ttaskqueue.shift()({__empty:true}); //run the task\n}\n\n\nvar localengine_get=function(path,opts,cb,context) {\n\tvar engine=this;\n\tif (typeof opts==\"function\") {\n\t\tcontext=cb;\n\t\tcb=opts;\n\t\topts={recursive:false};\n\t}\n\tif (!path) {\n\t\tif (cb) cb.apply(context,[null]);\n\t\treturn null;\n\t}\n\n\tif (typeof cb!=\"function\") {\n\t\treturn engine.kdb.get(path,opts);\n\t}\n\n\tif (typeof path==\"string\") {\n\t\treturn engine.kdb.get([path],opts,cb,context);\n\t} else if (typeof path[0] ==\"string\") {\n\t\treturn engine.kdb.get(path,opts,cb,context);\n\t} else if (typeof path[0] ==\"object\") {\n\t\treturn gets.apply(engine,[path,opts,cb,context]);\n\t} else {\n\t\tengine.kdb.get([],opts,function(data){\n\t\t\tcb.apply(context,[data]);//return top level keys\n\t\t},context);\n\t}\n};\t\nvar getFileRange=function(i) {\n\tvar engine=this;\n\n\tvar filesegcount=engine.get([\"filesegcount\"]);\n\tif (filesegcount) {\n\t\tif (i==0) {\n\t\t\treturn {start:0,end:filesegcount[0]-1};\n\t\t} else {\n\t\t\treturn {start:filesegcount[i-1],end:filesegcount[i]-1};\n\t\t}\n\t}\n\t//old buggy code\n\tvar filenames=engine.get([\"filenames\"]);\n\tvar fileoffsets=engine.get([\"fileoffsets\"]);\n\tvar segoffsets=engine.get([\"segoffsets\"]);\n\tvar segnames=engine.get([\"segnames\"]);\n\tvar filestart=fileoffsets[i], fileend=fileoffsets[i+1]-1;\n\n\tvar start=bsearch(segoffsets,filestart,true);\n\t//if (segOffsets[start]==fileStart) start--;\n\t\n\t//work around for jiangkangyur\n\t//while (segNames[start+1]==\"_\") start++;\n\n  //if (i==0) start=0; //work around for first file\n\tvar end=bsearch(segoffsets,fileend,true);\n\treturn {start:start,end:end};\n}\n\nvar absSegToFileSeg=function(absoluteseg) {\n\tvar filesegcount=this.get(\"filesegcount\");\n\tvar s=absoluteseg;\n\tvar file=0;\n\twhile (s>filesegcount[file]) {\n\t\tfile++;\n\t}\n\ts=Math.abs(filesegcount[file-1]-s);\n\treturn {file:file,seg:s};\n}\n\nvar fileSegToAbsSeg=function(file,seg) {\n\tif (file==0)return seg;\n\treturn this.get(\"filesegcount\")[file-1]+(seg);\n}\n\n//var vposToFileSeg=function(engine,vpos) {\n//    var segoffsets=engine.get(\"segoffsets\");\n//    var fileoffsets=engine.get([\"fileoffsets\"]);\n//    var segnames=engine.get(\"segnames\");\n//    var fileid=bsearch(fileoffsets,vpos+1,true);\n//    fileid--;\n//    var segid=bsearch(segoffsets,vpos+1,true);\n//\tvar range=engine.getFileRange(fileid);\n//\tsegid-=range.start;\n//    return {file:fileid,seg:segid};\n//}\nvar indexOfSorted_str = function (array, obj, near) { \n  var low = 0,\n  high = array.length;\n  while (low < high) {\n    var mid = (low + high) >> 1;\n    if (array[mid]==obj) return mid;\n    (array[mid].localeCompare(obj)<0) ? low = mid + 1 : high = mid;\n  }\n  if (near) return low;\n  else if (array[low]==obj) return low;else return -1;\n};\nvar searchSeg=function(segname,near) {\n\tvar i=bsearch(this.get(\"segnames\"),segname,near);\n\tif (i>-1) {\n\t\tvar fileseg=absSegToFileSeg.apply(this,[i]);\n\t\treturn {file:fileseg.file,seg:fileseg.seg,absseg:i};\n\t}\n\treturn null;\n}\n\n//return array of object of nfile nseg given segname\nvar findSeg=function(segname,max) {\n\tmeta=this.get(\"meta\");\n\tif (meta.sortedSegNames) {\n\t\treturn findSeg_sorted(segname);\n\t}\n\tvar segnames=this.get(\"segnames\");\n\tvar out=[];\n\tfor (var i=0;i<segnames.length;i++) {\n\t\tif (segnames[i]==segname) {\n\t\t\tvar fileseg=absSegToFileSeg.apply(this,[i]);\n\t\t\tout.push({file:fileseg.file,seg:fileseg.seg,absseg:i});\n\t\t\tif (out.length>=max) break;\n\t\t}\n\t}\n\treturn out;\n}\nvar findFile=function(filename) {\n\tvar filenames=this.get(\"filenames\");\n\tfor (var i=0;i<filenames.length;i++) {\n\t\tif (filenames[i]===filename) return i;\n\t}\n\treturn -1;\n}\n\nvar getFileSegOffsets=function(i) {\n\tvar segoffsets=this.get(\"segoffsets\");\n\tvar range=getFileRange.apply(this,[i]);\n\tif (segoffsets.subarray) {\n\t\treturn segoffsets.subarray(range.start,range.end+1);\n\t} else {\n\t\treturn segoffsets.slice(range.start,range.end+1);\t\n\t}\n}\nvar absSegFromVpos=function(vpos) { \n\tvar segoffsets=this.get([\"segoffsets\"]);\n\tvar i=bsearch(segoffsets,vpos,true);\n\twhile (segoffsets[i]==vpos) i++;\n\treturn i;\n}\n\nvar myAbsSegToFileSeg=function(absoluteseg) {\n     var filesegcount=this.get(\"filesegcount\");\n     var s=absoluteseg;\n     var file=0 ,f=0;     \n     while(s>=filesegcount[file]) {file++}\n     if(file!=0) {\n          var seg=s-filesegcount[file-1];\n          return {file:file,seg: seg};\n     } else return {file:0,seg:absoluteseg};\n}\n\nvar fileSegFromVpos=function(vpos) { \n\tvar seg=absSegFromVpos.call(this,vpos);\n\t//return absSegToFileSeg.call(this,seg);\n\treturn myAbsSegToFileSeg.call(this,seg);\n}\nvar fileSegToVpos=function(f,s) {\n\tvar segoffsets=this.get([\"segoffsets\"]);\n\tvar seg=fileSegToAbsSeg.call(this,f,s);\n\treturn segoffsets[seg-1];\n}\n\nvar getFileSegNames=function(i) {\n\tvar range=getFileRange.apply(this,[i]);\n\tvar segnames=this.get(\"segnames\");\n\treturn segnames.slice(range.start,range.end+1);\n}\n\nvar getPreloadField=function(user) {\n\tvar preload=[[\"meta\"],[\"filenames\"],[\"fileoffsets\"],[\"segnames\"],[\"segoffsets\"],[\"filesegcount\"]];\n\t//[\"tokens\"],[\"postingslen\"] kse will load it\n\tif (user && user.length) { //user supply preload\n\t\tfor (var i=0;i<user.length;i++) {\n\t\t\tif (preload.indexOf(user[i])==-1) {\n\t\t\t\tpreload.push(user[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn preload;\n}\n\n\nvar segOffset=function(segname) {\n\tvar engine=this;\n\tif (arguments.length>1) throw \"argument : segname \";\n\n\tvar segNames=engine.get(\"segnames\");\n\tvar segOffsets=engine.get(\"segoffsets\");\n\n\tvar i=segNames.indexOf(segname);\n\treturn (i>-1)?segOffsets[i]:0;\n}\nvar fileOffset=function(fn) {\n\tvar engine=this;\n\tvar filenames=engine.get(\"filenames\");\n\tvar offsets=engine.get(\"fileoffsets\");\n\tvar i=filenames.indexOf(fn);\n\tif (i==-1) return null;\n\treturn {start: offsets[i], end:offsets[i+1]};\n}\n\nvar folderOffset=function(folder) {\n\tvar engine=this;\n\tvar start=0,end=0;\n\tvar filenames=engine.get(\"filenames\");\n\tvar offsets=engine.get(\"fileoffsets\");\n\tfor (var i=0;i<filenames.length;i++) {\n\t\tif (filenames[i].substring(0,folder.length)==folder) {\n\t\t\tif (!start) start=offsets[i];\n\t\t\tend=offsets[i];\n\t\t} else if (start) break;\n\t}\n\treturn {start:start,end:end};\n}\nvar getTOCNames=function() {\n\treturn engine.get(\"meta\").tocs;\n}\nvar getTOC=function(opts,cb,context) {\n\tvar engine=this;\n\topts=opts||{};\n\tvar tocname=opts.tocname;\n\tvar rootname=opts.rootname||opts.tocname;\n\tif (!tocname) return;\n\n\tvar toc=engine.TOC[tocname];\n\tif (toc) {\n\t\tcb.call(context,toc);\n\t\treturn toc;\n\t}\n\n\tvar keys=[[\"fields\",tocname],[\"fields\",tocname+\"_depth\"],[\"fields\",tocname+\"_vpos\"]];\n\tengine.get(keys,{recursive:true},function(){\n\t  var texts=engine.get([\"fields\",tocname]);\n\t  var depths=engine.get([\"fields\",tocname+\"_depth\"]);\n\t  var voffs=engine.get([\"fields\",tocname+\"_vpos\"]);\n\n\t  var out=[{d:0,t:rootname}];\n\t  if (texts) for (var i=0;i<texts.length;i++) {\n\t      out.push({t:texts[i],d:depths[i], vpos:voffs[i]});\n\t  }\n\n\t  engine.TOC[tocname]=out;\n\t  cb.call(context,out);\n\t  return out; \t\t\n\t});\n}\n\nvar setup=function(engine) {\n\tengine.get=localengine_get;\n\tengine.segOffset=segOffset;\n\tengine.fileOffset=fileOffset;\n\tengine.folderOffset=folderOffset;\n\tengine.getFileSegNames=getFileSegNames;\n\tengine.getFileSegOffsets=getFileSegOffsets;\n\tengine.getFileRange=getFileRange;\n\tengine.findSeg=findSeg;\n\tengine.searchSeg=searchSeg;\n\tengine.findFile=findFile;\n\tengine.absSegToFileSeg=absSegToFileSeg;\n\tengine.fileSegToAbsSeg=fileSegToAbsSeg;\n\tengine.fileSegFromVpos=fileSegFromVpos;\n\tengine.absSegFromVpos=absSegFromVpos;\n\tengine.fileSegToVpos=fileSegToVpos;\n\tengine.getTOC=getTOC;\n\tengine.getTOCNames=getTOCNames;\n}\n\nmodule.exports={setup:setup,getPreloadField:getPreloadField,gets:gets};",
    "var getPlatform=function() {\n\tif (typeof ksanagap==\"undefined\") {\n\t\ttry {\n\t\t\trequire(\"react-native\");\n\t\t\tplatform=\"react-native\";\n\t\t} catch (e) {\n\t\t\tif (typeof process==\"undefined\") {\n\t\t\t\tplatform=\"chrome\";\n\t\t\t} else {\n\t\t\t\tplatform=\"node\";\t\t\n\t\t\t}\n\t\t}\n\t} else {\n\t\tplatform=ksanagap.platform;\n\t}\n\treturn platform;\n}\nmodule.exports={getPlatform:getPlatform};",
    "/*\n\tthis is for browser, a simple wrapper for socket.io rpc\n\t\n\tfor each call to server, create a unique id\n\twhen server return, get the slot by unique id, and invoke callbacks.\n*/\nfunction GUID () {\n  var S4 = function ()    {    return Math.floor(        Math.random() * 0x10000  ).toString(16);  };\n  return (   S4() + S4() + \"-\" + S4() + \"-\" +  S4() + \"-\" + S4() + \"-\" +S4() + S4() + S4()    );\n}\n\nvar RPCs={}; //*  key: unique calling id  */\n\nvar socket = io.connect(window.location.host);\n\nvar returnfromserver=function(res) {\n\tvar slot=RPCs[res.fid];\n\t\n\tif (!slot) {\n\t\tthrow \"invalid fid \"+res.fid;\n\t\treturn;\n\t}\n\t\n\tif (res.success) {\n\t\tif (slot.successCB)  slot.successCB(res.err,res.response);\n\t} else {\n\t\tif (slot.errorCB)  slot.errorCB(res.err,res.response);\n\t}\n\tdelete RPCs[res.fid]; //drop the slot\n}\n\nvar pchost={\n\texec: function(successCB, errorCB, service, action, params) {\n\t\tvar fid=GUID();\n\t\t//create a slot to hold\n\t\tvar slot={  fid:fid, successCB:successCB, errorCB:errorCB ,params:params, action:action, service:service};\n\t\tRPCs[fid]=slot;\n\t\tsocket.emit('rpc',  { service: service, action:action, params: params , fid:fid });\n\t}\n}\n\nsocket.on( 'rpc', returnfromserver );\t \nwindow.host=pchost;\nmodule.exports=pchost;",
    "var host=require(\"./rpc\");\n\nvar makeinf=function(name) {\n\treturn (\n\t\tfunction(opts,callback) {\n\t\t\thost.exec(callback,0,\"kde\",name,opts);\n\t\t});\n}\n\nvar API={};\n//TODO , create a cache object on client side to save network trafic on\n//same getRaw\nAPI.get=makeinf(\"get\");\nAPI.list=makeinf(\"list\");\n\n//API.closeAll=makeinf(\"closeAll\");\n//exports.version='0.0.13'; //this is a quick hack\n\nhost.exec(function(err,data){\n\t//console.log('version',err,data)\n\texports.version=data;\n},0,\"kde\",\"version\",{});\n\n\nmodule.exports=API;",
    "\n/* emulate filesystem on html5 browser */\n/* emulate filesystem on html5 browser */\nvar read=function(handle,buffer,offset,length,position,cb) {//buffer and offset is not used\n\tvar xhr = new XMLHttpRequest();\n\txhr.open('GET', handle.url , true);\n\tvar range=[position,length+position-1];\n\txhr.setRequestHeader('Range', 'bytes='+range[0]+'-'+range[1]);\n\txhr.responseType = 'arraybuffer';\n\txhr.send();\n\txhr.onload = function(e) {\n\t\tvar that=this;\n\t\tsetTimeout(function(){\n\t\t\tcb(0,that.response.byteLength,that.response);\n\t\t},0);\n\t}; \n}\nvar close=function(handle) {}\nvar fstatSync=function(handle) {\n\tthrow \"not implement yet\";\n}\nvar fstat=function(handle,cb) {\n\tthrow \"not implement yet\";\n}\nvar _open=function(fn_url,cb) {\n\t\tvar handle={};\n\t\tif (fn_url.indexOf(\"filesystem:\")==0){\n\t\t\thandle.url=fn_url;\n\t\t\thandle.fn=fn_url.substr( fn_url.lastIndexOf(\"/\")+1);\n\t\t} else {\n\t\t\thandle.fn=fn_url;\n\t\t\tvar url=API.files.filter(function(f){ return (f[0]==fn_url)});\n\t\t\tif (url.length) handle.url=url[0][1];\n\t\t\telse cb(null);\n\t\t}\n\t\tcb(handle);\n}\nvar open=function(fn_url,cb) {\n\t\tif (!API.initialized) {init(1024*1024,function(){\n\t\t\t_open.apply(this,[fn_url,cb]);\n\t\t},this)} else _open.apply(this,[fn_url,cb]);\n}\nvar load=function(filename,mode,cb) {\n\topen(filename,mode,cb,true);\n}\nfunction errorHandler(e) {\n\tconsole.error('Error: ' +e.name+ \" \"+e.message);\n}\nvar readdir=function(cb,context) {\n\t var dirReader = API.fs.root.createReader();\n\t var out=[],that=this;\n\t\tdirReader.readEntries(function(entries) {\n\t\t\tif (entries.length) {\n\t\t\t\tfor (var i = 0, entry; entry = entries[i]; ++i) {\n\t\t\t\t\tif (entry.isFile) {\n\t\t\t\t\t\tout.push([entry.name,entry.toURL ? entry.toURL() : entry.toURI()]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tAPI.files=out;\n\t\t\tif (cb) cb.apply(context,[out]);\n\t\t}, function(){\n\t\t\tif (cb) cb.apply(context,[null]);\n\t\t});\n}\nvar initfs=function(grantedBytes,cb,context) {\n\twebkitRequestFileSystem(PERSISTENT, grantedBytes,  function(fs) {\n\t\tAPI.fs=fs;\n\t\tAPI.quota=grantedBytes;\n\t\treaddir(function(){\n\t\t\tAPI.initialized=true;\n\t\t\tcb.apply(context,[grantedBytes,fs]);\n\t\t},context);\n\t}, errorHandler);\n}\nvar init=function(quota,cb,context) {\n\tnavigator.webkitPersistentStorage.requestQuota(quota, \n\t\t\tfunction(grantedBytes) {\n\t\t\t\tinitfs(grantedBytes,cb,context);\n\t\t}, errorHandler \n\t);\n}\nvar API={\n\tread:read\n\t,readdir:readdir\n\t,open:open\n\t,close:close\n\t,fstatSync:fstatSync\n\t,fstat:fstat\n}\nmodule.exports=API;",
    "module.exports={\n\topen:require(\"./kdb\")\n}\n",
    "/*\n\tKDB version 3.0 GPL\n\tyapcheahshen@gmail.com\n\t2013/12/28\n\tasyncronize version of yadb\n\n  remove dependency of Q, thanks to\n  http://stackoverflow.com/questions/4234619/how-to-avoid-long-nesting-of-asynchronous-functions-in-node-js\n\n  2015/1/2\n  moved to ksanaforge/ksana-jsonrom\n  add err in callback for node.js compliant\n*/\nvar Kfs=null;\n\nif (typeof ksanagap==\"undefined\") {\n\ttry {\n\t\trequire(\"react-native\");\n\t\tKfs=require(\"./kdbfs_ios\");\n\t} catch(e) {\n\t\tKfs=require('./kdbfs');\t\n\t}\t\t\t\n} else {\n\tif (ksanagap.platform==\"ios\") {\n\t\tKfs=require(\"./kdbfs_ios\");\n\t} else if (ksanagap.platform==\"node-webkit\") {\n\t\tKfs=require(\"./kdbfs\");\n\t} else if (ksanagap.platform==\"chrome\") {\n\t\tKfs=require(\"./kdbfs\");\n\t} else {\n\t\tKfs=require(\"./kdbfs_android\");\n\t}\n\t\t\n}\n\n\nvar DT={\n\tuint8:'1', //unsigned 1 byte integer\n\tint32:'4', // signed 4 bytes integer\n\tutf8:'8',  \n\tucs2:'2',\n\tbool:'^', \n\tblob:'&',\n\tutf8arr:'*', //shift of 8\n\tucs2arr:'@', //shift of 2\n\tuint8arr:'!', //shift of 1\n\tint32arr:'$', //shift of 4\n\tvint:'`',\n\tpint:'~',\t\n\n\tarray:'\\u001b',\n\tobject:'\\u001a' \n\t//ydb start with object signature,\n\t//type a ydb in command prompt shows nothing\n}\nvar verbose=0, readLog=function(){};\nvar _readLog=function(readtype,bytes) {\n\tconsole.log(readtype,bytes,\"bytes\");\n}\nif (verbose) readLog=_readLog;\nvar strsep=\"\\uffff\";\nvar Create=function(path,opts,cb) {\n\t/* loadxxx functions move file pointer */\n\t// load variable length int\n\tif (typeof opts==\"function\") {\n\t\tcb=opts;\n\t\topts={};\n\t}\n\n\t\n\tvar loadVInt =function(opts,blocksize,count,cb) {\n\t\t//if (count==0) return [];\n\t\tvar that=this;\n\n\t\tthis.fs.readBuf_packedint(opts.cur,blocksize,count,true,function(o){\n\t\t\t//console.log(\"vint\");\n\t\t\topts.cur+=o.adv;\n\t\t\tcb.apply(that,[o.data]);\n\t\t});\n\t}\n\tvar loadVInt1=function(opts,cb) {\n\t\tvar that=this;\n\t\tloadVInt.apply(this,[opts,6,1,function(data){\n\t\t\t//console.log(\"vint1\");\n\t\t\tcb.apply(that,[data[0]]);\n\t\t}])\n\t}\n\t//for postings\n\tvar loadPInt =function(opts,blocksize,count,cb) {\n\t\tvar that=this;\n\t\tthis.fs.readBuf_packedint(opts.cur,blocksize,count,false,function(o){\n\t\t\t//console.log(\"pint\");\n\t\t\topts.cur+=o.adv;\n\t\t\tcb.apply(that,[o.data]);\n\t\t});\n\t}\n\t// item can be any type (variable length)\n\t// maximum size of array is 1TB 2^40\n\t// structure:\n\t// signature,5 bytes offset, payload, itemlengths\n\tvar getArrayLength=function(opts,cb) {\n\t\tvar that=this;\n\t\tvar dataoffset=0;\n\n\t\tthis.fs.readUI8(opts.cur,function(len){\n\t\t\tvar lengthoffset=len*4294967296;\n\t\t\topts.cur++;\n\t\t\tthat.fs.readUI32(opts.cur,function(len){\n\t\t\t\topts.cur+=4;\n\t\t\t\tdataoffset=opts.cur; //keep this\n\t\t\t\tlengthoffset+=len;\n\t\t\t\topts.cur+=lengthoffset;\n\n\t\t\t\tloadVInt1.apply(that,[opts,function(count){\n\t\t\t\t\tloadVInt.apply(that,[opts,count*6,count,function(sz){\t\t\t\t\t\t\n\t\t\t\t\t\tcb({count:count,sz:sz,offset:dataoffset});\n\t\t\t\t\t}]);\n\t\t\t\t}]);\n\t\t\t\t\n\t\t\t});\n\t\t});\n\t}\n\n\tvar loadArray = function(opts,blocksize,cb) {\n\t\tvar that=this;\n\t\tgetArrayLength.apply(this,[opts,function(L){\n\t\t\t\tvar o=[];\n\t\t\t\tvar endcur=opts.cur;\n\t\t\t\topts.cur=L.offset;\n\n\t\t\t\tif (opts.lazy) { \n\t\t\t\t\t\tvar offset=L.offset;\n\t\t\t\t\t\tfor (var i=0;i<L.sz.length;i++) {\n\t\t\t\t\t\t\tvar sz=L.sz[i];\n\t\t\t\t\t\t\to[o.length]=strsep+offset.toString(16)\n\t\t\t\t\t\t\t\t   +strsep+sz.toString(16);\n\t\t\t\t\t\t\toffset+=sz;\n\t\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tvar taskqueue=[];\n\t\t\t\t\tfor (var i=0;i<L.count;i++) {\n\t\t\t\t\t\ttaskqueue.push(\n\t\t\t\t\t\t\t(function(sz){\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tfunction(data){\n\t\t\t\t\t\t\t\t\t\tif (typeof data=='object' && data.__empty) {\n\t\t\t\t\t\t\t\t\t\t\t //not pushing the first call\n\t\t\t\t\t\t\t\t\t\t}\telse o.push(data);\n\t\t\t\t\t\t\t\t\t\topts.blocksize=sz;\n\t\t\t\t\t\t\t\t\t\tload.apply(that,[opts, taskqueue.shift()]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})(L.sz[i])\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//last call to child load\n\t\t\t\t\ttaskqueue.push(function(data){\n\t\t\t\t\t\to.push(data);\n\t\t\t\t\t\topts.cur=endcur;\n\t\t\t\t\t\tcb.apply(that,[o]);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (opts.lazy) cb.apply(that,[o]);\n\t\t\t\telse {\n\t\t\t\t\ttaskqueue.shift()({__empty:true});\n\t\t\t\t}\n\t\t\t}\n\t\t])\n\t}\t\t\n\t// item can be any type (variable length)\n\t// support lazy load\n\t// structure:\n\t// signature,5 bytes offset, payload, itemlengths, \n\t//                    stringarray_signature, keys\n\tvar loadObject = function(opts,blocksize,cb) {\n\t\tvar that=this;\n\t\tvar start=opts.cur;\n\t\tgetArrayLength.apply(this,[opts,function(L) {\n\t\t\topts.blocksize=blocksize-opts.cur+start;\n\t\t\tload.apply(that,[opts,function(keys){ //load the keys\n\t\t\t\tif (opts.keys) { //caller ask for keys\n\t\t\t\t\tkeys.map(function(k) { opts.keys.push(k)});\n\t\t\t\t}\n\n\t\t\t\tvar o={};\n\t\t\t\tvar endcur=opts.cur;\n\t\t\t\topts.cur=L.offset;\n\t\t\t\tif (opts.lazy) { \n\t\t\t\t\tvar offset=L.offset;\n\t\t\t\t\tfor (var i=0;i<L.sz.length;i++) {\n\t\t\t\t\t\t//prefix with a \\0, impossible for normal string\n\t\t\t\t\t\to[keys[i]]=strsep+offset.toString(16)\n\t\t\t\t\t\t\t   +strsep+L.sz[i].toString(16);\n\t\t\t\t\t\toffset+=L.sz[i];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar taskqueue=[];\n\t\t\t\t\tfor (var i=0;i<L.count;i++) {\n\t\t\t\t\t\ttaskqueue.push(\n\t\t\t\t\t\t\t(function(sz,key){\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tfunction(data){\n\t\t\t\t\t\t\t\t\t\tif (typeof data=='object' && data.__empty) {\n\t\t\t\t\t\t\t\t\t\t\t//not saving the first call;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\to[key]=data; \n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\topts.blocksize=sz;\n\t\t\t\t\t\t\t\t\t\tif (verbose) readLog(\"key\",key);\n\t\t\t\t\t\t\t\t\t\tload.apply(that,[opts, taskqueue.shift()]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})(L.sz[i],keys[i-1])\n\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t//last call to child load\n\t\t\t\t\ttaskqueue.push(function(data){\n\t\t\t\t\t\to[keys[keys.length-1]]=data;\n\t\t\t\t\t\topts.cur=endcur;\n\t\t\t\t\t\tcb.apply(that,[o]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (opts.lazy) cb.apply(that,[o]);\n\t\t\t\telse {\n\t\t\t\t\ttaskqueue.shift()({__empty:true});\n\t\t\t\t}\n\t\t\t}]);\n\t\t}]);\n\t}\n\n\t//item is same known type\n\tvar loadStringArray=function(opts,blocksize,encoding,cb) {\n\t\tvar that=this;\n\t\tthis.fs.readStringArray(opts.cur,blocksize,encoding,function(o){\n\t\t\topts.cur+=blocksize;\n\t\t\tcb.apply(that,[o]);\n\t\t});\n\t}\n\tvar loadIntegerArray=function(opts,blocksize,unitsize,cb) {\n\t\tvar that=this;\n\t\tloadVInt1.apply(this,[opts,function(count){\n\t\t\tvar o=that.fs.readFixedArray(opts.cur,count,unitsize,function(o){\n\t\t\t\topts.cur+=count*unitsize;\n\t\t\t\tcb.apply(that,[o]);\n\t\t\t});\n\t\t}]);\n\t}\n\tvar loadBlob=function(blocksize,cb) {\n\t\tvar o=this.fs.readBuf(this.cur,blocksize);\n\t\tthis.cur+=blocksize;\n\t\treturn o;\n\t}\t\n\tvar loadbysignature=function(opts,signature,cb) {\n\t\t  var blocksize=opts.blocksize||this.fs.size; \n\t\t\topts.cur+=this.fs.signature_size;\n\t\t\tvar datasize=blocksize-this.fs.signature_size;\n\t\t\t//basic types\n\t\t\tif (signature===DT.int32) {\n\t\t\t\topts.cur+=4;\n\t\t\t\tthis.fs.readI32(opts.cur-4,cb);\n\t\t\t} else if (signature===DT.uint8) {\n\t\t\t\topts.cur++;\n\t\t\t\tthis.fs.readUI8(opts.cur-1,cb);\n\t\t\t} else if (signature===DT.utf8) {\n\t\t\t\tvar c=opts.cur;opts.cur+=datasize;\n\t\t\t\tthis.fs.readString(c,datasize,'utf8',cb);\n\t\t\t} else if (signature===DT.ucs2) {\n\t\t\t\tvar c=opts.cur;opts.cur+=datasize;\n\t\t\t\tthis.fs.readString(c,datasize,'ucs2',cb);\t\n\t\t\t} else if (signature===DT.bool) {\n\t\t\t\topts.cur++;\n\t\t\t\tthis.fs.readUI8(opts.cur-1,function(data){cb(!!data)});\n\t\t\t} else if (signature===DT.blob) {\n\t\t\t\tloadBlob(datasize,cb);\n\t\t\t}\n\t\t\t//variable length integers\n\t\t\telse if (signature===DT.vint) {\n\t\t\t\tloadVInt.apply(this,[opts,datasize,datasize,cb]);\n\t\t\t}\n\t\t\telse if (signature===DT.pint) {\n\t\t\t\tloadPInt.apply(this,[opts,datasize,datasize,cb]);\n\t\t\t}\n\t\t\t//simple array\n\t\t\telse if (signature===DT.utf8arr) {\n\t\t\t\tloadStringArray.apply(this,[opts,datasize,'utf8',cb]);\n\t\t\t}\n\t\t\telse if (signature===DT.ucs2arr) {\n\t\t\t\tloadStringArray.apply(this,[opts,datasize,'ucs2',cb]);\n\t\t\t}\n\t\t\telse if (signature===DT.uint8arr) {\n\t\t\t\tloadIntegerArray.apply(this,[opts,datasize,1,cb]);\n\t\t\t}\n\t\t\telse if (signature===DT.int32arr) {\n\t\t\t\tloadIntegerArray.apply(this,[opts,datasize,4,cb]);\n\t\t\t}\n\t\t\t//nested structure\n\t\t\telse if (signature===DT.array) {\n\t\t\t\tloadArray.apply(this,[opts,datasize,cb]);\n\t\t\t}\n\t\t\telse if (signature===DT.object) {\n\t\t\t\tloadObject.apply(this,[opts,datasize,cb]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.error('unsupported type',signature,opts)\n\t\t\t\tcb.apply(this,[null]);//make sure it return\n\t\t\t\t//throw 'unsupported type '+signature;\n\t\t\t}\n\t}\n\n\tvar load=function(opts,cb) {\n\t\topts=opts||{}; // this will served as context for entire load procedure\n\t\topts.cur=opts.cur||0;\n\t\tvar that=this;\n\t\tthis.fs.readSignature(opts.cur, function(signature){\n\t\t\tloadbysignature.apply(that,[opts,signature,cb])\n\t\t});\n\t\treturn this;\n\t}\n\tvar CACHE=null;\n\tvar KEY={};\n\tvar ADDRESS={};\n\tvar reset=function(cb) {\n\t\tif (!CACHE) {\n\t\t\tload.apply(this,[{cur:0,lazy:true},function(data){\n\t\t\t\tCACHE=data;\n\t\t\t\tcb.call(this);\n\t\t\t}]);\t\n\t\t} else {\n\t\t\tcb.call(this);\n\t\t}\n\t}\n\n\tvar exists=function(path,cb) {\n\t\tif (path.length==0) return true;\n\t\tvar key=path.pop();\n\t\tvar that=this;\n\t\tget.apply(this,[path,false,function(data){\n\t\t\tif (!path.join(strsep)) return (!!KEY[key]);\n\t\t\tvar keys=KEY[path.join(strsep)];\n\t\t\tpath.push(key);//put it back\n\t\t\tif (keys) cb.apply(that,[keys.indexOf(key)>-1]);\n\t\t\telse cb.apply(that,[false]);\n\t\t}]);\n\t}\n\n\tvar getSync=function(path) {\n\t\tif (!CACHE) return undefined;\t\n\t\tvar o=CACHE;\n\t\tfor (var i=0;i<path.length;i++) {\n\t\t\tvar r=o[path[i]];\n\t\t\tif (typeof r==\"undefined\") return null;\n\t\t\to=r;\n\t\t}\n\t\treturn o;\n\t}\n\tvar get=function(path,opts,cb,context) {\n\t\tif (typeof path=='undefined') path=[];\n\t\tif (typeof path==\"string\") path=[path];\n\t\t//opts.recursive=!!opts.recursive;\n\t\tif (typeof opts==\"function\") {\n\t\t\tcontext=cb;\n\t\t\tcb=opts;\n\t\t\topts={};\n\t\t}\n\t\tvar context=context||this;\n\t\tvar that=this;\n\t\tif (typeof cb!='function') return getSync(path);\n\n\t\treset.apply(this,[function(){\n\t\t\tvar o=CACHE;\n\t\t\tif (path.length==0) {\n\t\t\t\tif (opts.address) {\n\t\t\t\t\tcb.apply(context,[[0,that.fs.size]]);\n\t\t\t\t} else {\n\t\t\t\t\tcb.apply(context,[Object.keys(CACHE)]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} \n\t\t\t\n\t\t\tvar pathnow=\"\",taskqueue=[],newopts={},r=null;\n\t\t\tvar lastkey=\"\";\n\n\t\t\tfor (var i=0;i<path.length;i++) {\n\t\t\t\tvar task=(function(key,k){\n\n\t\t\t\t\treturn (function(data){\n\t\t\t\t\t\tif (!(typeof data=='object' && data.__empty)) {\n\t\t\t\t\t\t\tif (typeof o[lastkey]=='string' && o[lastkey][0]==strsep) o[lastkey]={};\n\t\t\t\t\t\t\to[lastkey]=data; \n\t\t\t\t\t\t\to=o[lastkey];\n\t\t\t\t\t\t\tr=data[key];\n\t\t\t\t\t\t\tKEY[pathnow]=opts.keys;\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdata=o[key];\n\t\t\t\t\t\t\tr=data;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof r===\"undefined\") {\n\t\t\t\t\t\t\ttaskqueue=null;\n\t\t\t\t\t\t\tcb.apply(context,[r]); //return empty value\n\t\t\t\t\t\t} else {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (parseInt(k)) pathnow+=strsep;\n\t\t\t\t\t\t\tpathnow+=key;\n\t\t\t\t\t\t\tif (typeof r=='string' && r[0]==strsep) { //offset of data to be loaded\n\t\t\t\t\t\t\t\tvar p=r.substring(1).split(strsep).map(function(item){return parseInt(item,16)});\n\t\t\t\t\t\t\t\tvar cur=p[0],sz=p[1];\n\t\t\t\t\t\t\t\tnewopts.lazy=!opts.recursive || (k<path.length-1) ;\n\t\t\t\t\t\t\t\tnewopts.blocksize=sz;newopts.cur=cur,newopts.keys=[];\n\t\t\t\t\t\t\t\tlastkey=key; //load is sync in android\n\t\t\t\t\t\t\t\tif (opts.address && taskqueue.length==1) {\n\t\t\t\t\t\t\t\t\tADDRESS[pathnow]=[cur,sz];\n\t\t\t\t\t\t\t\t\ttaskqueue.shift()(null,ADDRESS[pathnow]);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tload.apply(that,[newopts, taskqueue.shift()]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (opts.address && taskqueue.length==1) {\n\t\t\t\t\t\t\t\t\ttaskqueue.shift()(null,ADDRESS[pathnow]);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttaskqueue.shift().apply(that,[r]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t(path[i],i);\n\t\t\t\t\n\t\t\t\ttaskqueue.push(task);\n\t\t\t}\n\n\t\t\tif (taskqueue.length==0) {\n\t\t\t\tcb.apply(context,[o]);\n\t\t\t} else {\n\t\t\t\t//last call to child load\n\t\t\t\ttaskqueue.push(function(data,cursz){\n\t\t\t\t\tif (opts.address) {\n\t\t\t\t\t\tcb.apply(context,[cursz]);\n\t\t\t\t\t} else{\n\t\t\t\t\t\tvar key=path[path.length-1];\n\t\t\t\t\t\to[key]=data; KEY[pathnow]=opts.keys;\n\t\t\t\t\t\tcb.apply(context,[data]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\ttaskqueue.shift()({__empty:true});\t\t\t\n\t\t\t}\n\n\t\t}]); //reset\n\t}\n\t// get all keys in given path\n\tvar getkeys=function(path,cb) {\n\t\tif (!path) path=[]\n\t\tvar that=this;\n\n\t\tget.apply(this,[path,false,function(){\n\t\t\tif (path && path.length) {\n\t\t\t\tcb.apply(that,[KEY[path.join(strsep)]]);\n\t\t\t} else {\n\t\t\t\tcb.apply(that,[Object.keys(CACHE)]); \n\t\t\t\t//top level, normally it is very small\n\t\t\t}\n\t\t}]);\n\t}\n\n\tvar setupapi=function() {\n\t\tthis.load=load;\n//\t\tthis.cur=0;\n\t\tthis.cache=function() {return CACHE};\n\t\tthis.key=function() {return KEY};\n\t\tthis.free=function() {\n\t\t\tCACHE=null;\n\t\t\tKEY=null;\n\t\t\tthis.fs.free();\n\t\t}\n\t\tthis.setCache=function(c) {CACHE=c};\n\t\tthis.keys=getkeys;\n\t\tthis.get=get;   // get a field, load if needed\n\t\tthis.exists=exists;\n\t\tthis.DT=DT;\n\t\t\n\t\t//install the sync version for node\n\t\t//if (typeof process!=\"undefined\") require(\"./kdb_sync\")(this);\n\t\t//if (cb) setTimeout(cb.bind(this),0);\n\t\tvar that=this;\n\t\tvar err=0;\n\t\tif (cb) {\n\t\t\tsetTimeout(function(){\n\t\t\t\tcb(err,that);\t\n\t\t\t},0);\n\t\t}\n\t}\n\tvar that=this;\n\tvar kfs=new Kfs(path,opts,function(err){\n\t\tif (err) {\n\t\t\tsetTimeout(function(){\n\t\t\t\tcb(err,0);\n\t\t\t},0);\n\t\t\treturn null;\n\t\t} else {\n\t\t\tthat.size=this.size;\n\t\t\tsetupapi.call(that);\t\t\t\n\t\t}\n\t});\n\tthis.fs=kfs;\n\treturn this;\n}\n\nCreate.datatypes=DT;\n\nif (module) module.exports=Create;\n//return Create;\n",
    "/* node.js and html5 file system abstraction layer*/\ntry {\n\tvar fs=require(\"fs\");\n\tvar Buffer=require(\"buffer\").Buffer;\n} catch (e) {\n\tvar fs=require('./html5read');\n\tvar Buffer=function(){ return \"\"};\n\tvar html5fs=true; \t\n}\nvar signature_size=1;\nvar verbose=0, readLog=function(){};\nvar _readLog=function(readtype,bytes) {\n\tconsole.log(readtype,bytes,\"bytes\");\n}\nif (verbose) readLog=_readLog;\n\nvar unpack_int = function (ar, count , reset) {\n   count=count||ar.length;\n  var r = []\n  //var r=new Uint32Array(count);\n  var i = 0, v = 0,n=0;\n  do {\n\tvar shift = 0;\n\tdo {\n\t  v += ((ar[i] & 0x7F) << shift);\n\t  shift += 7;\t  \n\t} while (ar[++i] & 0x80);\n\tr.push(v);\n\t//r[n++]=v;\n\tif (reset) v=0;\n\tcount--;\n  } while (i<ar.length && count);\n\n  //var rr=r.subarray(0,n);\n  return {data:r, adv:i };\n}\nvar Open=function(path,opts,cb) {\n\topts=opts||{};\n\n\tvar readSignature=function(pos,cb) {\n\t\tvar buf=new Buffer(signature_size);\n\t\tvar that=this;\n\t\tfs.read(this.handle,buf,0,signature_size,pos,function(err,len,buffer){\n\t\t\tif (html5fs) var signature=String.fromCharCode((new Uint8Array(buffer))[0])\n\t\t\telse var signature=buffer.toString('utf8',0,signature_size);\n\t\t\tcb.apply(that,[signature]);\n\t\t});\n\t}\n\n\t//this is quite slow\n\t//wait for StringView +ArrayBuffer to solve the problem\n\t//https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/ylgiNY_ZSV0\n\t//if the string is always ucs2\n\t//can use Uint16 to read it.\n\t//http://updates.html5rocks.com/2012/06/How-to-convert-ArrayBuffer-to-and-from-String\n\tvar decodeutf8 = function (utftext) {\n\t\tvar string = \"\";\n\t\tvar i = 0;\n\t\tvar c=0,c1 = 0, c2 = 0 , c3=0;\n\t\tfor (var i=0;i<utftext.length;i++) {\n\t\t\tif (utftext.charCodeAt(i)>127) break;\n\t\t}\n\t\tif (i>=utftext.length) return utftext;\n\n\t\twhile ( i < utftext.length ) {\n\t\t\tc = utftext.charCodeAt(i);\n\t\t\tif (c < 128) {\n\t\t\t\tstring += utftext[i];\n\t\t\t\ti++;\n\t\t\t} else if((c > 191) && (c < 224)) {\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\n\t\t\t\tstring += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t\ti += 2;\n\t\t\t} else {\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\n\t\t\t\tc3 = utftext.charCodeAt(i+2);\n\t\t\t\tstring += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t\ti += 3;\n\t\t\t}\n\t\t}\n\t\treturn string;\n\t}\n\n\tvar readString= function(pos,blocksize,encoding,cb) {\n\t\tencoding=encoding||'utf8';\n\t\tvar buffer=new Buffer(blocksize);\n\t\tvar that=this;\n\t\tfs.read(this.handle,buffer,0,blocksize,pos,function(err,len,buffer){\n\t\t\treadLog(\"string\",len);\n\t\t\tif (html5fs) {\n\t\t\t\tif (encoding=='utf8') {\n\t\t\t\t\tvar str=decodeutf8(String.fromCharCode.apply(null, new Uint8Array(buffer)))\n\t\t\t\t} else { //ucs2 is 3 times faster\n\t\t\t\t\tvar str=String.fromCharCode.apply(null, new Uint16Array(buffer))\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcb.apply(that,[str]);\n\t\t\t} \n\t\t\telse cb.apply(that,[buffer.toString(encoding)]);\t\n\t\t});\n\t}\n\n\t//work around for chrome fromCharCode cannot accept huge array\n\t//https://code.google.com/p/chromium/issues/detail?id=56588\n\tvar buf2stringarr=function(buf,enc) {\n\t\tif (enc==\"utf8\") \tvar arr=new Uint8Array(buf);\n\t\telse var arr=new Uint16Array(buf);\n\t\tvar i=0,codes=[],out=[],s=\"\";\n\t\twhile (i<arr.length) {\n\t\t\tif (arr[i]) {\n\t\t\t\tcodes[codes.length]=arr[i];\n\t\t\t} else {\n\t\t\t\ts=String.fromCharCode.apply(null,codes);\n\t\t\t\tif (enc==\"utf8\") out[out.length]=decodeutf8(s);\n\t\t\t\telse out[out.length]=s;\n\t\t\t\tcodes=[];\t\t\t\t\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\t\n\t\ts=String.fromCharCode.apply(null,codes);\n\t\tif (enc==\"utf8\") out[out.length]=decodeutf8(s);\n\t\telse out[out.length]=s;\n\n\t\treturn out;\n\t}\n\tvar readStringArray = function(pos,blocksize,encoding,cb) {\n\t\tvar that=this,out=null;\n\t\tif (blocksize==0) return [];\n\t\tencoding=encoding||'utf8';\n\t\tvar buffer=new Buffer(blocksize);\n\t\tfs.read(this.handle,buffer,0,blocksize,pos,function(err,len,buffer){\n\t\t\tif (html5fs) {\n\t\t\t\treadLog(\"stringArray\",buffer.byteLength);\n\n\t\t\t\tif (encoding=='utf8') {\n\t\t\t\t\tout=buf2stringarr(buffer,\"utf8\");\n\t\t\t\t} else { //ucs2 is 3 times faster\n\t\t\t\t\tout=buf2stringarr(buffer,\"ucs2\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treadLog(\"stringArray\",buffer.length);\n\t\t\t\tout=buffer.toString(encoding).split('\\0');\n\t\t\t} \t\n\t\t\tcb.apply(that,[out]);\n\t\t});\n\t}\n\tvar readUI32=function(pos,cb) {\n\t\tvar buffer=new Buffer(4);\n\t\tvar that=this;\n\t\tfs.read(this.handle,buffer,0,4,pos,function(err,len,buffer){\n\t\t\treadLog(\"ui32\",len);\n\t\t\tif (html5fs){\n\t\t\t\t//v=(new Uint32Array(buffer))[0];\n\t\t\t\tvar v=new DataView(buffer).getUint32(0, false)\n\t\t\t\tcb(v);\n\t\t\t}\n\t\t\telse cb.apply(that,[buffer.readInt32BE(0)]);\t\n\t\t});\t\t\n\t}\n\n\tvar readI32=function(pos,cb) {\n\t\tvar buffer=new Buffer(4);\n\t\tvar that=this;\n\t\tfs.read(this.handle,buffer,0,4,pos,function(err,len,buffer){\n\t\t\treadLog(\"i32\",len);\n\t\t\tif (html5fs){\n\t\t\t\tvar v=new DataView(buffer).getInt32(0, false)\n\t\t\t\tcb(v);\n\t\t\t}\n\t\t\telse  \tcb.apply(that,[buffer.readInt32BE(0)]);\t\n\t\t});\n\t}\n\tvar readUI8=function(pos,cb) {\n\t\tvar buffer=new Buffer(1);\n\t\tvar that=this;\n\n\t\tfs.read(this.handle,buffer,0,1,pos,function(err,len,buffer){\n\t\t\treadLog(\"ui8\",len);\n\t\t\tif (html5fs)cb( (new Uint8Array(buffer))[0]) ;\n\t\t\telse  \t\t\tcb.apply(that,[buffer.readUInt8(0)]);\t\n\t\t\t\n\t\t});\n\t}\n\tvar readBuf=function(pos,blocksize,cb) {\n\t\tvar that=this;\n\t\tvar buf=new Buffer(blocksize);\n\t\tfs.read(this.handle,buf,0,blocksize,pos,function(err,len,buffer){\n\t\t\treadLog(\"buf\",len);\n\t\t\tvar buff=new Uint8Array(buffer)\n\t\t\tcb.apply(that,[buff]);\n\t\t});\n\t}\n\tvar readBuf_packedint=function(pos,blocksize,count,reset,cb) {\n\t\tvar that=this;\n\t\treadBuf.apply(this,[pos,blocksize,function(buffer){\n\t\t\tcb.apply(that,[unpack_int(buffer,count,reset)]);\t\n\t\t}]);\n\t\t\n\t}\n\tvar readFixedArray_html5fs=function(pos,count,unitsize,cb) {\n\t\tvar func=null;\n\t\tif (unitsize===1) {\n\t\t\tfunc='getUint8';//Uint8Array;\n\t\t} else if (unitsize===2) {\n\t\t\tfunc='getUint16';//Uint16Array;\n\t\t} else if (unitsize===4) {\n\t\t\tfunc='getUint32';//Uint32Array;\n\t\t} else throw 'unsupported integer size';\n\n\t\tfs.read(this.handle,null,0,unitsize*count,pos,function(err,len,buffer){\n\t\t\treadLog(\"fix array\",len);\n\t\t\tvar out=[];\n\t\t\tif (unitsize==1) {\n\t\t\t\tout=new Uint8Array(buffer);\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < len / unitsize; i++) { //endian problem\n\t\t\t\t//\tout.push( func(buffer,i*unitsize));\n\t\t\t\t\tout.push( v=new DataView(buffer)[func](i,false) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcb.apply(that,[out]);\n\t\t});\n\t}\n\t// signature, itemcount, payload\n\tvar readFixedArray = function(pos ,count, unitsize,cb) {\n\t\tvar func=null;\n\t\tvar that=this;\n\t\t\n\t\tif (unitsize* count>this.size && this.size)  {\n\t\t\tconsole.log(\"array size exceed file size\",this.size)\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (html5fs) return readFixedArray_html5fs.apply(this,[pos,count,unitsize,cb]);\n\n\t\tvar items=new Buffer( unitsize* count);\n\t\tif (unitsize===1) {\n\t\t\tfunc=items.readUInt8;\n\t\t} else if (unitsize===2) {\n\t\t\tfunc=items.readUInt16BE;\n\t\t} else if (unitsize===4) {\n\t\t\tfunc=items.readUInt32BE;\n\t\t} else throw 'unsupported integer size';\n\t\t//console.log('itemcount',itemcount,'buffer',buffer);\n\n\t\tfs.read(this.handle,items,0,unitsize*count,pos,function(err,len,buffer){\n\t\t\treadLog(\"fix array\",len);\n\t\t\tvar out=[];\n\t\t\tfor (var i = 0; i < items.length / unitsize; i++) {\n\t\t\t\tout.push( func.apply(items,[i*unitsize]));\n\t\t\t}\n\t\t\tcb.apply(that,[out]);\n\t\t});\n\t}\n\n\tvar free=function() {\n\t\t//console.log('closing ',handle);\n\t\tfs.closeSync(this.handle);\n\t}\n\tvar setupapi=function() {\n\t\tvar that=this;\n\t\tthis.readSignature=readSignature;\n\t\tthis.readI32=readI32;\n\t\tthis.readUI32=readUI32;\n\t\tthis.readUI8=readUI8;\n\t\tthis.readBuf=readBuf;\n\t\tthis.readBuf_packedint=readBuf_packedint;\n\t\tthis.readFixedArray=readFixedArray;\n\t\tthis.readString=readString;\n\t\tthis.readStringArray=readStringArray;\n\t\tthis.signature_size=signature_size;\n\t\tthis.free=free;\n\n\t\tif (html5fs) {\n\t\t\tvar fn=path;\n\t\t\tif (path.indexOf(\"filesystem:\")==0) fn=path.substr(path.lastIndexOf(\"/\"));\n\t\t\tfs.fs.root.getFile(fn,{},function(entry){\n\t\t\t  entry.getMetadata(function(metadata) { \n\t\t\t\tthat.size=metadata.size;\n\t\t\t\tif (cb) setTimeout(cb.bind(that),0);\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tvar stat=fs.fstatSync(this.handle);\n\t\t\tthis.stat=stat;\n\t\t\tthis.size=stat.size;\t\t\n\t\t\tif (cb)\tsetTimeout(cb.bind(this,0),0);\t\n\t\t}\n\t}\n\n\tvar that=this;\n\tif (html5fs) {\n\t\tfs.open(path,function(h){\n\t\t\tif (!h) {\n\t\t\t\tif (cb)\tsetTimeout(cb.bind(null,\"file not found:\"+path),0);\t\n\t\t\t} else {\n\t\t\t\tthat.handle=h;\n\t\t\t\tthat.html5fs=true;\n\t\t\t\tsetupapi.call(that);\n\t\t\t\tthat.opened=true;\t\t\t\t\n\t\t\t}\n\t\t})\n\t} else {\n\t\tif (fs.existsSync(path)){\n\t\t\tthis.handle=fs.openSync(path,'r');//,function(err,handle){\n\t\t\tthis.opened=true;\n\t\t\tsetupapi.call(this);\n\t\t} else {\n\t\t\tif (cb)\tsetTimeout(cb.bind(null,\"file not found:\"+path),0);\t\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn this;\n}\nmodule.exports=Open;",
    "/*\n  JAVA can only return Number and String\n\tarray and buffer return in string format\n\tneed JSON.parse\n*/\nvar verbose=0;\n\nvar readSignature=function(pos,cb) {\n\tif (verbose) console.debug(\"read signature\");\n\tvar signature=kfs.readUTF8String(this.handle,pos,1);\n\tif (verbose) console.debug(signature,signature.charCodeAt(0));\n\tcb.apply(this,[signature]);\n}\nvar readI32=function(pos,cb) {\n\tif (verbose) console.debug(\"read i32 at \"+pos);\n\tvar i32=kfs.readInt32(this.handle,pos);\n\tif (verbose) console.debug(i32);\n\tcb.apply(this,[i32]);\t\n}\nvar readUI32=function(pos,cb) {\n\tif (verbose) console.debug(\"read ui32 at \"+pos);\n\tvar ui32=kfs.readUInt32(this.handle,pos);\n\tif (verbose) console.debug(ui32);\n\tcb.apply(this,[ui32]);\n}\nvar readUI8=function(pos,cb) {\n\tif (verbose) console.debug(\"read ui8 at \"+pos); \n\tvar ui8=kfs.readUInt8(this.handle,pos);\n\tif (verbose) console.debug(ui8);\n\tcb.apply(this,[ui8]);\n}\nvar readBuf=function(pos,blocksize,cb) {\n\tif (verbose) console.debug(\"read buffer at \"+pos+ \" blocksize \"+blocksize);\n\tvar buf=kfs.readBuf(this.handle,pos,blocksize);\n\tvar buff=JSON.parse(buf);\n\tif (verbose) console.debug(\"buffer length\"+buff.length);\n\tcb.apply(this,[buff]);\t\n}\nvar readBuf_packedint=function(pos,blocksize,count,reset,cb) {\n\tif (verbose) console.debug(\"read packed int at \"+pos+\" blocksize \"+blocksize+\" count \"+count);\n\tvar buf=kfs.readBuf_packedint(this.handle,pos,blocksize,count,reset);\n\tvar adv=parseInt(buf);\n\tvar buff=JSON.parse(buf.substr(buf.indexOf(\"[\")));\n\tif (verbose) console.debug(\"packedInt length \"+buff.length+\" first item=\"+buff[0]);\n\tcb.apply(this,[{data:buff,adv:adv}]);\t\n}\n\n\nvar readString= function(pos,blocksize,encoding,cb) {\n\tif (verbose) console.debug(\"readstring at \"+pos+\" blocksize \" +blocksize+\" enc:\"+encoding);\n\tif (encoding==\"ucs2\") {\n\t\tvar str=kfs.readULE16String(this.handle,pos,blocksize);\n\t} else {\n\t\tvar str=kfs.readUTF8String(this.handle,pos,blocksize);\t\n\t}\t \n\tif (verbose) console.debug(str);\n\tcb.apply(this,[str]);\t\n}\n\nvar readFixedArray = function(pos ,count, unitsize,cb) {\n\tif (verbose) console.debug(\"read fixed array at \"+pos+\" count \"+count+\" unitsize \"+unitsize); \n\tvar buf=kfs.readFixedArray(this.handle,pos,count,unitsize);\n\tvar buff=JSON.parse(buf);\n\tif (verbose) console.debug(\"array length\"+buff.length);\n\tcb.apply(this,[buff]);\t\n}\nvar readStringArray = function(pos,blocksize,encoding,cb) {\n\tif (verbose) console.log(\"read String array at \"+pos+\" blocksize \"+blocksize +\" enc \"+encoding); \n\tencoding = encoding||\"utf8\";\n\tvar buf=kfs.readStringArray(this.handle,pos,blocksize,encoding);\n\t//var buff=JSON.parse(buf);\n\tif (verbose) console.debug(\"read string array\");\n\tvar buff=buf.split(\"\\uffff\"); //cannot return string with 0\n\tif (verbose) console.debug(\"array length\"+buff.length);\n\tcb.apply(this,[buff]);\t\n}\nvar mergePostings=function(positions,cb) {\n\tvar buf=kfs.mergePostings(this.handle,JSON.stringify(positions));\n\tif (!buf || buf.length==0) return cb([]);\n\telse return cb(JSON.parse(buf));\n}\n\nvar free=function() {\n\t//console.log('closing ',handle);\n\tkfs.close(this.handle);\n}\nvar Open=function(path,opts,cb) {\n\topts=opts||{};\n\tvar signature_size=1;\n\tvar setupapi=function() { \n\t\tthis.readSignature=readSignature;\n\t\tthis.readI32=readI32;\n\t\tthis.readUI32=readUI32;\n\t\tthis.readUI8=readUI8;\n\t\tthis.readBuf=readBuf;\n\t\tthis.readBuf_packedint=readBuf_packedint;\n\t\tthis.readFixedArray=readFixedArray;\n\t\tthis.readString=readString;\n\t\tthis.readStringArray=readStringArray;\n\t\tthis.signature_size=signature_size;\n\t\tthis.mergePostings=mergePostings;\n\t\tthis.free=free;\n\t\tthis.size=kfs.getFileSize(this.handle);\n\t\tif (verbose) console.log(\"filesize  \"+this.size);\n\t\tif (cb)\tcb.call(this);\n\t}\n\n\tthis.handle=kfs.open(path);\n\tthis.opened=true;\n\tsetupapi.call(this);\n\treturn this;\n}\n\nmodule.exports=Open;",
    "/*\n  JSContext can return all Javascript types.\n*/\nvar verbose=0,async=!!kfs.async;\n\nvar readSignature=function(pos,cb) {\n\tif (verbose)  ksanagap.log(\"read signature at \"+pos);\n\tif (async) {\n\t\tvar that=this;\n\t\tkfs.readUTF8String(this.handle,pos,1,function(signature){\n\t\t\tcb.call(that,signature);\n\t\t});\n\t} else {\n\t\t\n\t\tvar signature=kfs.readUTF8String(this.handle,pos,1);\n\t\tif (verbose)  ksanagap.log(signature+\" \"+signature.charCodeAt(0));\n\t\tcb.apply(this,[signature]);\n\t}\n}\nvar readI32=function(pos,cb) {\n\tif (async) {\n\t\tvar that=this;\n\t\tkfs.readInt32(this.handle,pos,function(i32){\n\t\t\tcb.call(that,i32);\n\t\t});\n\t} else {\t\n\t\tif (verbose)  ksanagap.log(\"read i32 at \"+pos);\n\t\tvar i32=kfs.readInt32(this.handle,pos);\n\t\tif (verbose)  ksanagap.log(i32);\n\t\tcb.apply(this,[i32]);\t\n\t}\n}\nvar readUI32=function(pos,cb) {\n\tif (async) {\n\t\tvar that=this;\n\t\tkfs.readUInt32(this.handle,pos,function(ui32){\n\t\t\tcb.call(that,ui32);\n\t\t});\n\t} else {\t\n\t\tif (verbose)  ksanagap.log(\"read ui32 at \"+pos);\n\t\tvar ui32=kfs.readUInt32(this.handle,pos);\n\t\tif (verbose)  ksanagap.log(ui32);\n\t\tcb.apply(this,[ui32]);\n\t}\n}\nvar readUI8=function(pos,cb) {\n\tif (async) {\n\t\tvar that=this;\n\t\tkfs.readUInt8(this.handle,pos,function(ui8){\n\t\t\tcb.call(that,ui8);\n\t\t});\n\t} else {\n\t\tif (verbose)  ksanagap.log(\"read ui8 at \"+pos); \n\t\tvar ui8=kfs.readUInt8(this.handle,pos);\n\t\tif (verbose)  ksanagap.log(ui8);\n\t\tcb.apply(this,[ui8]);\n\t}\n}\nvar readBuf=function(pos,blocksize,cb) {\n\tif (async) {\n\t\tvar that=this;\n\t\tkfs.readBuf(this.handle,pos,blocksize,function(buf){\n\t\t\tcb.call(that,buf);\n\t\t});\n\t} else {\n\n\t\tif (verbose)  ksanagap.log(\"read buffer at \"+pos);\n\t\tvar buf=kfs.readBuf(this.handle,pos,blocksize);\n\t\tif (verbose)  ksanagap.log(\"buffer length\"+buf.length);\n\t\tcb.apply(this,[buf]);\t\n\t}\n}\nvar readBuf_packedint=function(pos,blocksize,count,reset,cb) {\n\tif (async) {\n\t\tvar that=this;\n\t\tkfs.readBuf_packedint(this.handle,pos,blocksize,count,reset,function(buf){\n\t\t\tif (typeof buf.data==\"string\") {\n\t\t\t\tbuf.data=eval(\"[\"+buf.data.substr(0,buf.data.length-1)+\"]\");\n\t\t\t}\t\t\t\n\t\t\tcb.call(that,buf);\n\t\t});\n\t} else {\n\n\t\tif (verbose)  ksanagap.log(\"read packed int fast, blocksize \"+blocksize+\" at \"+pos);var t=new Date();\n\t\tvar buf=kfs.readBuf_packedint(this.handle,pos,blocksize,count,reset);\n\t\tif (verbose)  ksanagap.log(\"return from packedint, time\" + (new Date()-t));\n\t\tif (typeof buf.data==\"string\") {\n\t\t\tbuf.data=eval(\"[\"+buf.data.substr(0,buf.data.length-1)+\"]\");\n\t\t}\n\t\tif (verbose)  ksanagap.log(\"unpacked length\"+buf.data.length+\" time\" + (new Date()-t) );\n\t\tcb.apply(this,[buf]);\n\t}\n}\n\n\nvar readString= function(pos,blocksize,encoding,cb) {\n\tif (verbose)  ksanagap.log(\"readstring at \"+pos+\" blocksize \"+blocksize+\" \"+encoding);var t=new Date();\n\tif (encoding==\"ucs2\") {\n\t\tif (async) {\n\t\t\tvar that=this;\n\t\t\tkfs.readULE16String(this.handle,pos,blocksize,function(str){\n\t\t\t\tcb.call(that,str);\n\t\t\t});\n\t\t\treturn;\n\t\t} else {\n\t\t\tvar str=kfs.readULE16String(this.handle,pos,blocksize);\n\t\t}\n\t\t\n\t} else {\n\t\tif (async) {\n\t\t\tvar that=this;\n\t\t\tkfs.readUTF8String(this.handle,pos,blocksize,function(str){\n\t\t\t\tcb.call(that,str);\n\t\t\t});\n\t\t\treturn;\t\n\t\t} else {\n\t\t\tvar str=kfs.readUTF8String(this.handle,pos,blocksize);\t\n\t\t}\n\t}\n\tif (verbose)  ksanagap.log(str+\" time\"+(new Date()-t));\n\tcb.apply(this,[str]);\t\n}\n\nvar readFixedArray = function(pos ,count, unitsize,cb) {\n\tif (async) {\n\t\tvar that=this;\n\t\tkfs.readFixedArray(this.handle,pos,count,unitsize,function(buf){\n\t\t\tcb.call(that,buf);\n\t\t});\n\t} else {\n\n\t\tif (verbose)  ksanagap.log(\"read fixed array at \"+pos); var t=new Date();\n\t\tvar buf=kfs.readFixedArray(this.handle,pos,count,unitsize);\n\t\tif (verbose)  ksanagap.log(\"array length \"+buf.length+\" time\"+(new Date()-t));\n\t\tcb.apply(this,[buf]);\t\t\n\t}\n\n}\nvar readStringArray = function(pos,blocksize,encoding,cb) {\n\t//if (verbose)  ksanagap.log(\"read String array \"+blocksize +\" \"+encoding); \n\tencoding = encoding||\"utf8\";\n\n\tif (async) {\n\t\tvar that=this;\n\t\tkfs.readStringArray(this.handle,pos,blocksize,encoding,function(buf){\n\t\t\tif (typeof buf==\"string\") buf=buf.split(\"\\0\");\n\t\t\tcb.call(that,buf);\n\t\t});\n\t} else {\n\t\tif (verbose)  ksanagap.log(\"read string array at \"+pos);var t=new Date();\n\t\tvar buf=kfs.readStringArray(this.handle,pos,blocksize,encoding);\n\t\tif (typeof buf==\"string\") buf=buf.split(\"\\0\");\n\t\t//var buff=JSON.parse(buf);\n\t\t//var buff=buf.split(\"\\uffff\"); //cannot return string with 0\n\t\tif (verbose)  ksanagap.log(\"string array length\"+buf.length+\" time\"+(new Date()-t));\n\t\tcb.apply(this,[buf]);\n\t}\n}\n\nvar mergePostings=function(positions,cb) {\n\tif (kfs.async) {\n\t\tkfs.mergePostings(this.handle,positions,function(buf){\n\t\t\tif (typeof buf==\"string\") {\n\t\t\t\tbuf=eval(\"[\"+buf.substr(0,buf.length-1)+\"]\");\n\t\t\t}\n\t\t\tcb(buf);\n\t\t});\n\t} else {\n\t\tvar buf=kfs.mergePostings(this.handle,positions,cb);\n\t\tif (typeof buf==\"string\") {\n\t\t\tbuf=eval(\"[\"+buf.substr(0,buf.length-1)+\"]\");\n\t\t}\n\t\tcb(buf);\n\t}\t\t\n\t\n}\nvar free=function() {\n\t////if (verbose)  ksanagap.log('closing ',handle);\n\tkfs.close(this.handle);\n}\nvar Open=function(path,opts,cb) {\n\topts=opts||{};\n\tvar signature_size=1;\n\tvar setupapi=function() { \n\t\tthis.readSignature=readSignature;\n\t\tthis.readI32=readI32;\n\t\tthis.readUI32=readUI32;\n\t\tthis.readUI8=readUI8;\n\t\tthis.readBuf=readBuf;\n\t\tthis.readBuf_packedint=readBuf_packedint;\n\t\tthis.readFixedArray=readFixedArray;\n\t\tthis.readString=readString;\n\t\tthis.readStringArray=readStringArray;\n\t\tthis.signature_size=signature_size;\n\t\tthis.mergePostings=mergePostings;\n\t\tthis.free=free;\n\t\tif (kfs.getFileSize.length==1) {\n\t\t\tthis.size=kfs.getFileSize(this.handle);\n\t\t\tif (cb)\tcb.call(this);\t\n\t\t} else {\n\t\t\tvar that=this;\n\t\t\tkfs.getFileSize(this.handle,function(size){\n\t\t\t\tthat.size=size;\n\t\t\t\tif (cb)\tcb.call(that);\n\t\t\t});\n\t\t}\t\t\n\t}\n\n\tif (kfs.open.length==1) {\n\t\tthis.handle=kfs.open(path);\n\t\tthis.opened=true;\n\t\tsetupapi.call(this);\n\t\treturn this;\t\t\n\t} else { //react-native\n\t\tvar that=this;\n\t\tthis.async=true;\n\t\tkfs.open(path,function(handle){\n\t\t\tthat.opened=true;\n\t\t\tthat.handle=handle;\n\t\t\tsetupapi.call(that);\n\t\t});\n\t}\n}\n\nmodule.exports=Open;",
    "/*\n  TODO\n  and not\n\n*/\n\n// http://jsfiddle.net/neoswf/aXzWw/\nvar plist=require('./plist');\nfunction intersect(I, J) {\n  var i = j = 0;\n  var result = [];\n\n  while( i < I.length && j < J.length ){\n     if      (I[i] < J[j]) i++; \n     else if (I[i] > J[j]) j++; \n     else {\n       result[result.length]=l[i];\n       i++;j++;\n     }\n  }\n  return result;\n}\n\n/* return all items in I but not in J */\nfunction subtract(I, J) {\n  var i = j = 0;\n  var result = [];\n\n  while( i < I.length && j < J.length ){\n    if (I[i]==J[j]) {\n      i++;j++;\n    } else if (I[i]<J[j]) {\n      while (I[i]<J[j]) result[result.length]= I[i++];\n    } else {\n      while(J[j]<I[i]) j++;\n    }\n  }\n\n  if (j==J.length) {\n    while (i<I.length) result[result.length]=I[i++];\n  }\n\n  return result;\n}\n\nvar union=function(a,b) {\n\tif (!a || !a.length) return b;\n\tif (!b || !b.length) return a;\n    var result = [];\n    var ai = 0;\n    var bi = 0;\n    while (true) {\n        if ( ai < a.length && bi < b.length) {\n            if (a[ai] < b[bi]) {\n                result[result.length]=a[ai];\n                ai++;\n            } else if (a[ai] > b[bi]) {\n                result[result.length]=b[bi];\n                bi++;\n            } else {\n                result[result.length]=a[ai];\n                result[result.length]=b[bi];\n                ai++;\n                bi++;\n            }\n        } else if (ai < a.length) {\n            result.push.apply(result, a.slice(ai, a.length));\n            break;\n        } else if (bi < b.length) {\n            result.push.apply(result, b.slice(bi, b.length));\n            break;\n        } else {\n            break;\n        }\n    }\n    return result;\n}\nvar OPERATION={'include':intersect, 'union':union, 'exclude':subtract};\n\nvar boolSearch=function(opts) {\n  opts=opts||{};\n  ops=opts.op||this.opts.op;\n  this.docs=[];\n\tif (!this.phrases.length) return;\n\tvar r=this.phrases[0].docs;\n  /* ignore operator of first phrase */\n\tfor (var i=1;i<this.phrases.length;i++) {\n\t\tvar op= ops[i] || 'union';\n\t\tr=OPERATION[op](r,this.phrases[i].docs);\n\t}\n\tthis.docs=plist.unique(r);\n\treturn this;\n}\nmodule.exports={search:boolSearch}",
    "var indexOfSorted = function (array, obj, near) { \n  var low = 0,\n  high = array.length;\n  while (low < high) {\n    var mid = (low + high) >> 1;\n    if (array[mid]==obj) return mid;\n    array[mid] < obj ? low = mid + 1 : high = mid;\n  }\n  if (near) return low;\n  else if (array[low]==obj) return low;else return -1;\n};\nvar indexOfSorted_str = function (array, obj, near) { \n  var low = 0,\n  high = array.length;\n  while (low < high) {\n    var mid = (low + high) >> 1;\n    if (array[mid]==obj) return mid;\n    (array[mid].localeCompare(obj)<0) ? low = mid + 1 : high = mid;\n  }\n  if (near) return low;\n  else if (array[low]==obj) return low;else return -1;\n};\n\n\nvar bsearch=function(array,value,near) {\n\tvar func=indexOfSorted;\n\tif (typeof array[0]==\"string\") func=indexOfSorted_str;\n\treturn func(array,value,near);\n}\nvar bsearchNear=function(array,value) {\n\treturn bsearch(array,value,true);\n}\n\nmodule.exports=bsearch;",
    "var plist=require(\"./plist\");\n\nvar getPhraseWidths=function (Q,phraseid,vposs) {\n\tvar res=[];\n\tfor (var i in vposs) {\n\t\tres.push(getPhraseWidth(Q,phraseid,vposs[i]));\n\t}\n\treturn res;\n}\nvar getPhraseWidth=function (Q,phraseid,vpos) {\n\tvar P=Q.phrases[phraseid];\n\tvar width=0,varwidth=false;\n\tif (P.width) return P.width; // no wildcard\n\tif (P.termid.length<2) return P.termlength[0];\n\tvar lasttermposting=Q.terms[P.termid[P.termid.length-1]].posting;\n\n\tfor (var i in P.termid) {\n\t\tvar T=Q.terms[P.termid[i]];\n\t\tif (T.op=='wildcard') {\n\t\t\twidth+=T.width;\n\t\t\tif (T.wildcard=='*') varwidth=true;\n\t\t} else {\n\t\t\twidth+=P.termlength[i];\n\t\t}\n\t}\n\tif (varwidth) { //width might be smaller due to * wildcard\n\t\tvar at=plist.indexOfSorted(lasttermposting,vpos);\n\t\tvar endpos=lasttermposting[at];\n\t\tif (endpos-vpos<width) width=endpos-vpos+1;\n\t}\n\n\treturn width;\n}\n/* return [vpos, phraseid, phrasewidth, optional_tagname] by slot range*/\nvar hitInRange=function(Q,startvpos,endvpos) {\n\tvar res=[];\n\tif (!Q || !Q.rawresult || !Q.rawresult.length) return res;\n\tfor (var i=0;i<Q.phrases.length;i++) {\n\t\tvar P=Q.phrases[i];\n\t\tif (!P.posting) continue;\n\t\tvar s=plist.indexOfSorted(P.posting,startvpos);\n\t\tvar e=plist.indexOfSorted(P.posting,endvpos);\n\t\tvar r=P.posting.slice(s,e);\n\t\tvar width=getPhraseWidths(Q,i,r);\n\n\t\tres=res.concat(r.map(function(vpos,idx){ return [vpos,width[idx],i] }));\n\t}\n\t// order by vpos, if vpos is the same, larger width come first.\n\t// so the output will be\n\t// <tag1><tag2>one</tag2>two</tag1>\n\t//TODO, might cause overlap if same vpos and same width\n\t//need to check tag name\n\tres.sort(function(a,b){return a[0]==b[0]? b[1]-a[1] :a[0]-b[0]});\n\n\treturn res;\n}\n\nvar tagsInRange=function(Q,renderTags,startvpos,endvpos) {\n\tvar res=[];\n\tif (typeof renderTags==\"string\") renderTags=[renderTags];\n\n\trenderTags.map(function(tag){\n\t\tvar starts=Q.engine.get([\"fields\",tag+\"_start\"]);\n\t\tvar ends=Q.engine.get([\"fields\",tag+\"_end\"]);\n\t\tif (!starts) return;\n\n\t\tvar s=plist.indexOfSorted(starts,startvpos);\n\t\tvar e=s;\n\t\twhile (e<starts.length && starts[e]<endvpos) e++;\n\t\tvar opentags=starts.slice(s,e);\n\n\t\ts=plist.indexOfSorted(ends,startvpos);\n\t\te=s;\n\t\twhile (e<ends.length && ends[e]<endvpos) e++;\n\t\tvar closetags=ends.slice(s,e);\n\n\t\topentags.map(function(start,idx) {\n\t\t\tres.push([start,closetags[idx]-start,tag]);\n\t\t})\n\t});\n\t// order by vpos, if vpos is the same, larger width come first.\n\tres.sort(function(a,b){return a[0]==b[0]? b[1]-a[1] :a[0]-b[0]});\n\n\treturn res;\n}\n\n/*\ngiven a vpos range start, file, convert to filestart, fileend\n   filestart : starting file\n   start   : vpos start\n   showfile: how many files to display\n   showpage: how many pages to display\n\noutput:\n   array of fileid with hits\n*/\nvar getFileWithHits=function(engine,Q,range) {\n\tvar fileOffsets=engine.get(\"fileoffsets\");\n\tvar out=[],filecount=100;\n\tvar start=0 , end=Q.byFile.length;\n\tQ.excerptOverflow=false;\n\tif (range.start) {\n\t\tvar first=range.start ;\n\t\tvar last=range.end;\n\t\tif (!last) last=Number.MAX_SAFE_INTEGER;\n\t\tfor (var i=0;i<fileOffsets.length;i++) {\n\t\t\t//if (fileOffsets[i]>first) break;\n\t\t\tif (fileOffsets[i]>last) {\n\t\t\t\tend=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (fileOffsets[i]<first) start=i;\n\t\t}\t\t\n\t} else {\n\t\tstart=range.filestart || 0;\n\t\tif (range.maxfile) {\n\t\t\tfilecount=range.maxfile;\n\t\t} else if (range.showseg) {\n\t\t\tthrow \"not implement yet\"\n\t\t}\n\t}\n\n\tvar fileWithHits=[],totalhit=0;\n\trange.maxhit=range.maxhit||1000;\n\n\tfor (var i=start;i<end;i++) {\n\t\tif(Q.byFile[i].length>0) {\n\t\t\ttotalhit+=Q.byFile[i].length;\n\t\t\tfileWithHits.push(i);\n\t\t\trange.nextFileStart=i;\n\t\t\tif (fileWithHits.length>=filecount) {\n\t\t\t\tQ.excerptOverflow=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (totalhit>range.maxhit) {\n\t\t\t\tQ.excerptOverflow=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif (i>=end) { //no more file\n\t\tQ.excerptStop=true;\n\t}\n\treturn fileWithHits;\n}\nvar calculateRealPos=function(Q,vpos,text,hits) {\n\tvar out=[];\n\tvar tokens=Q.tokenize(text).tokens;\n\tvar i=0,j=0,end=0;\n\tvar hitstart=0,hitend=0,textnow=0;\n\twhile (i<tokens.length) {\n\t\tvar skip=Q.isSkip(tokens[i]);\n\t\tif (!skip && j<hits.length && vpos===hits[j][0]) {\n\t\t\tout.push([textnow,0,hits[j][2]]);\n\t\t\tend=vpos+hits[j][1];\n\t\t\tj++;\n\t\t}\n\t\tif (vpos==end && out.length) {\n\t\t\tvar start=out[out.length-1][0];\n\t\t\tout[out.length-1][1]=textnow-start;\n\t\t}\n\t\ttextnow+=tokens[i].length;\n\t\tif (!skip) vpos++;\n\t\ti++;\n\t}\n\treturn out;\n}\nvar resultlist=function(engine,Q,opts,cb) {\n\tvar output=[];\n\tif (!Q.rawresult || !Q.rawresult.length) {\n\t\tcb(output);\n\t\treturn;\n\t}\n\n\tif (opts.range) {\n\t\tif (opts.range.maxhit && !opts.range.maxfile) {\n\t\t\topts.range.maxfile=opts.range.maxhit;\n\t\t\topts.range.maxseg=opts.range.maxhit;\n\t\t}\n\t\tif (!opts.range.maxseg) opts.range.maxseg=100;\n\t\tif (!opts.range.end) {\n\t\t\topts.range.end=Number.MAX_SAFE_INTEGER;\n\t\t}\n\t}\n\tvar fileWithHits=getFileWithHits(engine,Q,opts.range);\n\tif (!fileWithHits.length) {\n\t\tcb(output);\n\t\treturn;\n\t}\n\n\tvar output=[],files=[];//temporary holder for segnames\n\tfor (var i=0;i<fileWithHits.length;i++) {\n\t\tvar nfile=fileWithHits[i];\n\t\tvar segoffsets=engine.getFileSegOffsets(nfile);\n\t\tvar segnames=engine.getFileSegNames(nfile);\n\t\tfiles[nfile]={segoffsets:segoffsets};\n\t\tvar segwithhit=plist.groupbyposting2(Q.byFile[ nfile ],  segoffsets);\n\t\t//if (segoffsets[0]==1)\n\t\t//segwithhit.shift(); //the first item is not used (0~Q.byFile[0] )\n\n\t\tfor (var j=0; j<segwithhit.length;j++) {\n\t\t\tif (!segwithhit[j].length) continue;\n\t\t\t//var offsets=segwithhit[j].map(function(p){return p- fileOffsets[i]});\n\t\t\tif (segoffsets[j]>opts.range.end) break;\n\t\t\toutput.push(  {file: nfile, seg:j,  segname:segnames[j]});\n\t\t\tif (output.length>opts.range.maxseg) break;\n\t\t}\n\t}\n\n\tvar segpaths=output.map(function(p){\n\t\treturn [\"filecontents\",p.file,p.seg];\n\t});\n\t//prepare the text\n\tengine.get(segpaths,function(segs){\n\t\tvar seq=0;\n\t\tif (segs) for (var i=0;i<segs.length;i++) {\n\t\t\tvar startvpos=files[output[i].file].segoffsets[output[i].seg-1] ||0;\n\t\t\tvar endvpos=files[output[i].file].segoffsets[output[i].seg];\n\t\t\tvar hl={};\n\n\t\t\tif (opts.range && opts.range.start  ) {\n\t\t\t\tif ( startvpos<opts.range.start) startvpos=opts.range.start;\n\t\t\t//\tif (endvpos>opts.range.end) endvpos=opts.range.end;\n\t\t\t}\n\t\t\t\n\t\t\tif (opts.nohighlight) {\n\t\t\t\thl.text=segs[i];\n\t\t\t\thl.hits=hitInRange(Q,startvpos,endvpos);\n\t\t\t\thl.realHits=calculateRealPos(Q,startvpos,hl.text,hl.hits);\n\t\t\t} else {\n\t\t\t\tvar o={nocrlf:true,nospan:true,\n\t\t\t\t\ttext:segs[i],startvpos:startvpos, endvpos: endvpos, \n\t\t\t\t\tQ:Q,fulltext:opts.fulltext};\n\t\t\t\thl=highlight(Q,o);\n\t\t\t}\n\t\t\tif (hl.text) {\n\t\t\t\toutput[i].text=hl.text;\n\t\t\t\toutput[i].hits=hl.hits;\n\t\t\t\toutput[i].realHits=hl.realHits;\n\t\t\t\toutput[i].seq=seq;\n\t\t\t\tseq+=hl.hits.length;\n\n\t\t\t\toutput[i].start=startvpos;\t\t\t\t\n\t\t\t} else {\n\t\t\t\toutput[i]=null; //remove item vpos less than opts.range.start\n\t\t\t}\n\t\t} \n\t\toutput=output.filter(function(o){return o!=null});\n\t\tcb(output);\n\t});\n}\nvar injectTag=function(Q,opts){\n\tvar hits=opts.hits;\n\tvar tags=opts.tags;\n\tif (!tags) tags=[];\n\tvar hitclass=opts.hitclass||'hl';\n\tvar output='',O=[],j=0,k=0;\n\tvar surround=opts.surround||5;\n\n\tvar tokens=Q.tokenize(opts.text).tokens;\n\tvar vpos=opts.vpos;\n\tvar i=0,previnrange=!!opts.fulltext ,inrange=!!opts.fulltext;\n\tvar hitstart=0,hitend=0,tagstart=0,tagend=0,tagclass=\"\";\n\twhile (i<tokens.length) {\n\t\tvar skip=Q.isSkip(tokens[i]);\n\t\tvar hashit=false;\n\t\tinrange=opts.fulltext || (j<hits.length && vpos+surround>=hits[j][0] ||\n\t\t\t\t(j>0 && j<=hits.length &&  hits[j-1][0]+surround*2>=vpos));\t\n\n\t\tif (previnrange!=inrange) {\n\t\t\toutput+=opts.abridge||\"...\";\n\t\t}\n\t\tprevinrange=inrange;\n\t\tvar token=tokens[i];\n\t\tif (opts.nocrlf && token==\"\\n\") token=\"\";\n\n\t\tif (inrange && i<tokens.length) {\n\t\t\tif (skip) {\n\t\t\t\toutput+=token;\n\t\t\t} else {\n\t\t\t\tvar classes=\"\";\t\n\n\t\t\t\t//check hit\n\t\t\t\tif (j<hits.length && vpos==hits[j][0]) {\n\t\t\t\t\tvar nphrase=hits[j][2] % 10, width=hits[j][1];\n\t\t\t\t\thitstart=hits[j][0];\n\t\t\t\t\thitend=hitstart+width;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\n\t\t\t\t//check tag\n\t\t\t\tif (k<tags.length && vpos==tags[k][0]) {\n\t\t\t\t\tvar width=tags[k][1];\n\t\t\t\t\ttagstart=tags[k][0];\n\t\t\t\t\ttagend=tagstart+width;\n\t\t\t\t\ttagclass=tags[k][2];\n\t\t\t\t\tk++;\n\t\t\t\t}\n\n\t\t\t\tif (vpos>=hitstart && vpos<hitend) classes=hitclass+\" \"+hitclass+nphrase;\n\t\t\t\tif (vpos>=tagstart && vpos<tagend) classes+=\" \"+tagclass;\n\n\t\t\t\tif (classes || !opts.nospan) {\n\t\t\t\t\toutput+='<span vpos=\"'+vpos+'\"';\n\t\t\t\t\tif (classes) classes=' class=\"'+classes+'\"';\n\t\t\t\t\toutput+=classes+'>';\n\t\t\t\t\toutput+=token+'</span>';\n\t\t\t\t} else {\n\t\t\t\t\toutput+=token;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!skip) vpos++;\n\t\ti++; \n\t}\n\n\tO.push(output);\n\toutput=\"\";\n\n\treturn O.join(\"\");\n}\nvar highlight=function(Q,opts) {\n\tif (!opts.text) return {text:\"\",hits:[]};\n\tvar opt={text:opts.text,\n\t\thits:null,abridge:opts.abridge,vpos:opts.startvpos,\n\t\tfulltext:opts.fulltext,renderTags:opts.renderTags,nospan:opts.nospan,nocrlf:opts.nocrlf,\n\t};\n\n\topt.hits=hitInRange(opts.Q,opts.startvpos,opts.endvpos);\n\treturn {text:injectTag(Q,opt),hits:opt.hits};\n}\n\nvar addspan=function(text,startvpos){\n\tengine=this;\n\tvar output=\"\";\n\tvar tokens=engine.analyzer.tokenize(text).tokens;\n\tvar isSkip=engine.analyzer.isSkip;\n\tvar vpos=startvpos;\n\tfor (var i=0;i<tokens.length;i++) {\n\t\toutput+='<span vpos=\"'+(vpos)+'\">'+tokens[i]+\"</span>\";\n\t\tif (!isSkip(tokens[i])) vpos++;\n\t}\t\t\n\treturn output;\n}\nvar addtoken=function(text,startvpos) {\n\tengine=this;\n\tvar output=[];\n\tvar tokens=engine.analyzer.tokenize(text).tokens;\n\tvar isSkip=engine.analyzer.isSkip;\n\tvar vpos=startvpos;\n\tfor (var i=0;i<tokens.length;i++) {\n\t\toutput.push([tokens[i],vpos]);\n\t\tif (!isSkip(tokens[i])) vpos++;\n\t}\t\t\n\treturn output;\n}\nvar getSeg=function(engine,fileid,segid,opts,cb,context) {\n\tif (typeof opts==\"function\") {\n\t\tcontext=cb;\n\t\tcb=opts;\n\t\topts={};\n\t}\n\n\tvar fileOffsets=engine.get(\"fileoffsets\");\n\tvar segpaths=[\"filecontents\",fileid,segid];\n\tvar segnames=engine.getFileSegNames(fileid);\n\tvar vpos=engine.fileSegToVpos(fileid,segid);\n\n\tengine.get(segpaths,function(text){\n\t\tvar out=text;\n\t\tif (opts.span) out=addspan.apply(engine,[text,vpos]);\n\t\telse if(opts.token) out=addtoken.apply(engine,[text,vpos]);\n\t\tcb.apply(context||engine.context,[{text:out,file:fileid,seg:segid,segname:segnames[segid]}]);\n\t});\n}\n\nvar getSegSync=function(engine,fileid,segid) {\n\tvar fileOffsets=engine.get(\"fileoffsets\");\n\tvar segpaths=[\"filecontents\",fileid,segid];\n\tvar segnames=engine.getFileSegNames(fileid);\n\n\tvar text=engine.get(segpaths);\n\treturn {text:text,file:fileid,seg:segid,segname:segnames[segid]};\n}\n\nvar getRange=function(engine,start,end,cb) {\n\tvar fileoffsets=engine.get(\"fileoffsets\");\n\t//var pagepaths=[\"fileContents\",];\n\t//find first page and last page\n\t//create get paths\n\n}\n\nvar getFile=function(engine,fileid,cb) {\n\tvar filename=engine.get(\"filenames\")[fileid];\n\tvar segnames=engine.getFileSegNames(fileid);\n\tvar filestart=engine.get(\"fileoffsets\")[fileid];\n\tvar offsets=engine.getFileSegOffsets(fileid);\n\tvar pc=0;\n\tengine.get([\"fileContents\",fileid],true,function(data){\n\t\tvar text=data.map(function(t,idx) {\n\t\t\tif (idx==0) return \"\"; \n\t\t\tvar pb='<pb n=\"'+segnames[idx]+'\"></pb>';\n\t\t\treturn pb+t;\n\t\t});\n\t\tcb({texts:data,text:text.join(\"\"),segnames:segnames,filestart:filestart,offsets:offsets,file:fileid,filename:filename}); //force different token\n\t});\n}\n\nvar highlightRange=function(Q,startvpos,endvpos,opts,cb){\n\t//not implement yet\n}\n\nvar highlightFile=function(Q,fileid,opts,cb) {\n\tif (typeof opts==\"function\") {\n\t\tcb=opts;\n\t}\n\n\tif (!Q || !Q.engine) return cb(null);\n\n\tvar segoffsets=Q.engine.getFileSegOffsets(fileid);\n\tvar output=[];\t\n\t//console.log(startvpos,endvpos)\n\tQ.engine.get([\"filecontents\",fileid],true,function(data){\n\t\tif (!data) {\n\t\t\tconsole.error(\"wrong file id\",fileid);\n\t\t} else {\n\t\t\tfor (var i=0;i<data.length-1;i++ ){\n\t\t\t\tvar startvpos=segoffsets[i];\n\t\t\t\tvar endvpos=segoffsets[i+1];\n\t\t\t\tvar segnames=Q.engine.getFileSegNames(fileid);\n\t\t\t\tvar seg=getSegSync(Q.engine, fileid,i+1);\n\t\t\t\tvar opt={text:seg.text,hits:null,tag:'hl',vpos:startvpos,\n\t\t\t\t\tfulltext:true,nospan:opts.nospan,nocrlf:opts.nocrlf};\n\t\t\t\tvar segname=segnames[i+1];\n\t\t\t\topt.hits=hitInRange(Q,startvpos,endvpos);\n\t\t\t\tvar pb='<pb n=\"'+segname+'\"></pb>';\n\t\t\t\tvar withtag=injectTag(Q,opt);\n\t\t\t\toutput.push(pb+withtag);\n\t\t\t}\t\t\t\n\t\t}\n\n\t\tcb.apply(Q.engine.context,[{text:output.join(\"\"),file:fileid}]);\n\t})\n}\nvar highlightSeg=function(Q,fileid,segid,opts,cb,context) {\n\tif (typeof opts==\"function\") {\n\t\tcb=opts;\n\t}\n\n\tif (!Q || !Q.engine) return cb.apply(context,[null]);\n\tvar segoffsets=Q.engine.getFileSegOffsets(fileid);\n\tvar startvpos=segoffsets[segid-1];\n\tvar endvpos=segoffsets[segid];\n\tvar segnames=Q.engine.getFileSegNames(fileid);\n\n\tthis.getSeg(Q.engine,fileid,segid,function(res){\n\t\tvar opt={text:res.text,hits:null,vpos:startvpos,fulltext:true,\n\t\t\tnospan:opts.nospan,nocrlf:opts.nocrlf};\n\t\t\topt.hits=hitInRange(Q,startvpos,endvpos);\n\t\t\tif (opts.renderTags) {\n\t\t\t\topt.tags=tagsInRange(Q,opts.renderTags,startvpos,endvpos);\n\t\t\t}\n\n\t\tvar segname=segnames[segid];\n\t\tcb.apply(context||Q.engine.context,[{text:injectTag(Q,opt),seg:segid,file:fileid,hits:opt.hits,segname:segname}]);\n\t});\n}\nmodule.exports={resultlist:resultlist, \n\thitInRange:hitInRange, \n\thighlightSeg:highlightSeg,\n\tgetSeg:getSeg,\n\thighlightFile:highlightFile,\n\tgetFile:getFile\n\t//highlightRange:highlightRange,\n  //getRange:getRange,\n};",
    "//\n// Ksana Search Engine.\n\n//  need a KDE instance to be functional\n\nvar bsearch=require(\"./bsearch\");\nvar dosearch=require(\"./search\");\n\nvar prepareEngineForSearch=function(engine,cb){\n\tif (engine.get(\"tokens\") && engine.tokenizer) {\n\t\tcb();\n\t\treturn;\n\t}\n\n\tengine.get([[\"tokens\"],[\"postingslength\"]],function(){\n\t\tif (!engine.analyzer) {\n\t\t\tvar analyzer=require(\"ksana-analyzer\");\n\t\t\tvar config=engine.get(\"meta\").config;\n\t\t\tengine.analyzer=analyzer.getAPI(config);\t\t\t\n\t\t}\n\t\tcb();\n\t});\n}\n\nvar _search=function(engine,q,opts,cb,context) {\n\tif (typeof engine==\"string\") {//browser only\n\t\tvar kde=require(\"ksana-database\");\n\t\tif (typeof opts==\"function\") { //user didn't supply options\n\t\t\tif (typeof cb==\"object\")context=cb;\n\t\t\tcb=opts;\n\t\t\topts={};\n\t\t}\n\t\tif (!opts) opts={};\n\t\topts.q=q;\n\t\topts.dbid=engine;\n\t\tkde.open(opts.dbid,function(err,db){\n\t\t\tif (err) {\n\t\t\t\tcb(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tprepareEngineForSearch(db,function(){\n\t\t\t\treturn dosearch(db,q,opts,cb);\t\n\t\t\t});\n\t\t},context);\n\t} else {\n\t\tprepareEngineForSearch(engine,function(){\n\t\t\treturn dosearch(engine,q,opts,cb);\t\n\t\t});\n\t}\n}\n\n\nvar _highlightSeg=function(engine,fileid,segid,opts,cb,context){\n\tif (!opts.q) {\n\t\tif (!engine.analyzer) {\n\t\t\tvar analyzer=require(\"ksana-analyzer\");\n\t\t\tvar config=engine.get(\"meta\").config;\n\t\t\tengine.analyzer=analyzer.getAPI(config);\t\t\t\n\t\t}\n\t\tapi.excerpt.getSeg(engine,fileid,segid,opts,cb,context);\n\t} else {\n\t\t_search(engine,opts.q,opts,function(err,Q){\n\t\t\tapi.excerpt.highlightSeg(Q,fileid,segid,opts,cb,context);\n\t\t});\t\t\t\n\t}\n}\nvar _highlightRange=function(engine,start,end,opts,cb,context){\n\n\tif (opts.q) {\n\t\t_search(engine,opts.q,opts,function(err,Q){\n\t\t\tapi.excerpt.highlightRange(Q,start,end,opts,cb,context);\n\t\t});\n\t} else {\n\t\tprepareEngineForSearch(engine,function(){\n\t\t\tapi.excerpt.getRange(engine,start,end,cb,context);\n\t\t});\n\t}\n}\nvar _highlightFile=function(engine,fileid,opts,cb){\n\tif (!opts.q) opts.q=\"\"; \n\t_search(engine,opts.q,opts,function(err,Q){\n\t\tapi.excerpt.highlightFile(Q,fileid,opts,cb);\n\t});\n}\nvar api={\n\tsearch:_search\n\t,highlightSeg:_highlightSeg\n\t,highlightFile:_highlightFile\n\t,excerpt:require(\"./excerpt\")\t\n}\nmodule.exports=api;",
    "\nvar unpack = function (ar) { // unpack variable length integer list\n  var r = [],\n  i = 0,\n  v = 0;\n  do {\n\tvar shift = 0;\n\tdo {\n\t  v += ((ar[i] & 0x7F) << shift);\n\t  shift += 7;\n\t} while (ar[++i] & 0x80);\n\tr[r.length]=v;\n  } while (i < ar.length);\n  return r;\n}\n\n/*\n   arr:  [1,1,1,1,1,1,1,1,1]\n   levels: [0,1,1,2,2,0,1,2]\n   output: [5,1,3,1,1,3,1,1]\n*/\n\nvar groupsum=function(arr,levels) {\n  if (arr.length!=levels.length+1) return null;\n  var stack=[];\n  var output=new Array(levels.length);\n  for (var i=0;i<levels.length;i++) output[i]=0;\n  for (var i=1;i<arr.length;i++) { //first one out of toc scope, ignored\n    if (stack.length>levels[i-1]) {\n      while (stack.length>levels[i-1]) stack.pop();\n    }\n    stack.push(i-1);\n    for (var j=0;j<stack.length;j++) {\n      output[stack[j]]+=arr[i];\n    }\n  }\n  return output;\n}\n/* arr= 1 , 2 , 3 ,4 ,5,6,7 //token posting\n  posting= 3 , 5  //tag posting\n  out = 3 , 2, 2\n*/\nvar countbyposting = function (arr, posting) {\n  if (!posting.length) return [arr.length];\n  var out=[];\n  for (var i=0;i<posting.length;i++) out[i]=0;\n  out[posting.length]=0;\n  var p=0,i=0,lasti=0;\n  while (i<arr.length && p<posting.length) {\n    if (arr[i]<=posting[p]) {\n      while (p<posting.length && i<arr.length && arr[i]<=posting[p]) {\n        out[p]++;\n        i++;\n      }      \n    } \n    p++;\n  }\n  out[posting.length] = arr.length-i; //remaining\n  return out;\n}\n\nvar groupbyposting=function(arr,gposting) { //relative vpos\n  if (!gposting.length) return [arr.length];\n  var out=[];\n  for (var i=0;i<=gposting.length;i++) out[i]=[];\n  \n  var p=0,i=0,lasti=0;\n  while (i<arr.length && p<gposting.length) {\n    if (arr[i]<gposting[p]) {\n      while (p<gposting.length && i<arr.length && arr[i]<gposting[p]) {\n        var start=0;\n        if (p>0) start=gposting[p-1];\n        out[p].push(arr[i++]-start);  // relative\n      }      \n    } \n    p++;\n  }\n  //remaining\n  while(i<arr.length) out[out.length-1].push(arr[i++]-gposting[gposting.length-1]);\n  return out;\n}\nvar groupbyposting2=function(arr,gposting) { //absolute vpos\n  if (!arr || !arr.length) return [];\n  if (!gposting.length) return [arr.length];\n  var out=[];\n  for (var i=0;i<=gposting.length;i++) out[i]=[];\n  \n  var p=0,i=0,lasti=0;\n  while (i<arr.length && p<gposting.length) {\n    if (arr[i]<gposting[p]) {\n      while (p<gposting.length && i<arr.length && arr[i]<gposting[p]) {\n        var start=0;\n        if (p>0) start=gposting[p-1]; //absolute\n        out[p].push(arr[i++]);\n      }      \n    } \n    p++;\n  }\n  //remaining\n  while(i<arr.length) out[out.length-1].push(arr[i++]-gposting[gposting.length-1]);\n  return out;\n}\nvar groupbyblock2 = function(ar, ntoken,slotshift,opts) {\n  if (!ar.length) return [{},{}];\n  \n  slotshift = slotshift || 16;\n  var g = Math.pow(2,slotshift);\n  var i = 0;\n  var r = {}, ntokens={};\n  var groupcount=0;\n  do {\n    var group = Math.floor(ar[i] / g) ;\n    if (!r[group]) {\n      r[group] = [];\n      ntokens[group]=[];\n      groupcount++;\n    }\n    r[group].push(ar[i] % g);\n    ntokens[group].push(ntoken[i]);\n    i++;\n  } while (i < ar.length);\n  if (opts) opts.groupcount=groupcount;\n  return [r,ntokens];\n}\nvar groupbyslot = function (ar, slotshift, opts) {\n  if (!ar.length)\n\treturn {};\n  \n  slotshift = slotshift || 16;\n  var g = Math.pow(2,slotshift);\n  var i = 0;\n  var r = {};\n  var groupcount=0;\n  do {\n\tvar group = Math.floor(ar[i] / g) ;\n\tif (!r[group]) {\n\t  r[group] = [];\n\t  groupcount++;\n\t}\n\tr[group].push(ar[i] % g);\n\ti++;\n  } while (i < ar.length);\n  if (opts) opts.groupcount=groupcount;\n  return r;\n}\n/*\nvar identity = function (value) {\n  return value;\n};\nvar sortedIndex = function (array, obj, iterator) { //taken from underscore\n  iterator || (iterator = identity);\n  var low = 0,\n  high = array.length;\n  while (low < high) {\n\tvar mid = (low + high) >> 1;\n\titerator(array[mid]) < iterator(obj) ? low = mid + 1 : high = mid;\n  }\n  return low;\n};*/\n\nvar indexOfSorted = function (array, obj) { \n  var low = 0,\n  high = array.length-1;\n  while (low < high) {\n    var mid = (low + high) >> 1;\n    array[mid] < obj ? low = mid + 1 : high = mid;\n  }\n  return low;\n};\nvar plhead=function(pl, pltag, opts) {\n  opts=opts||{};\n  opts.max=opts.max||1;\n  var out=[];\n  if (pltag.length<pl.length) {\n    for (var i=0;i<pltag.length;i++) {\n       k = indexOfSorted(pl, pltag[i]);\n       if (k>-1 && k<pl.length) {\n        if (pl[k]==pltag[i]) {\n          out[out.length]=pltag[i];\n          if (out.length>=opts.max) break;\n        }\n      }\n    }\n  } else {\n    for (var i=0;i<pl.length;i++) {\n       k = indexOfSorted(pltag, pl[i]);\n       if (k>-1 && k<pltag.length) {\n        if (pltag[k]==pl[i]) {\n          out[out.length]=pltag[k];\n          if (out.length>=opts.max) break;\n        }\n      }\n    }\n  }\n  return out;\n}\n/*\n pl2 occur after pl1, \n pl2>=pl1+mindis\n pl2<=pl1+maxdis\n*/\nvar plfollow2 = function (pl1, pl2, mindis, maxdis) {\n  var r = [],i=0;\n  var swap = 0;\n  \n  while (i<pl1.length){\n    var k = indexOfSorted(pl2, pl1[i] + mindis);\n    var t = (pl2[k] >= (pl1[i] +mindis) && pl2[k]<=(pl1[i]+maxdis)) ? k : -1;\n    if (t > -1) {\n      r[r.length]=pl1[i];\n      i++;\n    } else {\n      if (k>=pl2.length) break;\n      var k2=indexOfSorted (pl1,pl2[k]-maxdis);\n      if (k2>i) {\n        var t = (pl2[k] >= (pl1[i] +mindis) && pl2[k]<=(pl1[i]+maxdis)) ? k : -1;\n        if (t>-1) r[r.length]=pl1[k2];\n        i=k2;\n      } else break;\n    }\n  }\n  return r;\n}\n\nvar plnotfollow2 = function (pl1, pl2, mindis, maxdis) {\n  var r = [],i=0;\n  \n  while (i<pl1.length){\n    var k = indexOfSorted(pl2, pl1[i] + mindis);\n    var t = (pl2[k] >= (pl1[i] +mindis) && pl2[k]<=(pl1[i]+maxdis)) ? k : -1;\n    if (t > -1) {\n      i++;\n    } else {\n      if (k>=pl2.length) {\n        r=r.concat(pl1.slice(i));\n        break;\n      } else {\n        var k2=indexOfSorted (pl1,pl2[k]-maxdis);\n        if (k2>i) {\n          r=r.concat(pl1.slice(i,k2));\n          i=k2;\n        } else break;\n      }\n    }\n  }\n  return r;\n}\n/* this is incorrect */\nvar plfollow = function (pl1, pl2, distance) {\n  var r = [],i=0;\n\n  while (i<pl1.length){\n    var k = indexOfSorted(pl2, pl1[i] + distance);\n    var t = (pl2[k] === (pl1[i] + distance)) ? k : -1;\n    if (t > -1) {\n      r.push(pl1[i]);\n      i++;\n    } else {\n      if (k>=pl2.length) break;\n      var k2=indexOfSorted (pl1,pl2[k]-distance);\n      if (k2>i) {\n        t = (pl2[k] === (pl1[k2] + distance)) ? k : -1;\n        if (t>-1) {\n           r.push(pl1[k2]);\n           k2++;\n        }\n        i=k2;\n      } else break;\n    }\n  }\n  return r;\n}\nvar plnotfollow = function (pl1, pl2, distance) {\n  var r = [];\n  var r = [],i=0;\n  var swap = 0;\n  \n  while (i<pl1.length){\n    var k = indexOfSorted(pl2, pl1[i] + distance);\n    var t = (pl2[k] === (pl1[i] + distance)) ? k : -1;\n    if (t > -1) { \n      i++;\n    } else {\n      if (k>=pl2.length) {\n        r=r.concat(pl1.slice(i));\n        break;\n      } else {\n        var k2=indexOfSorted (pl1,pl2[k]-distance);\n        if (k2>i) {\n          r=r.concat(pl1.slice(i,k2));\n          i=k2;\n        } else break;\n      }\n    }\n  }\n  return r;\n}\nvar pland = function (pl1, pl2, distance) {\n  var r = [];\n  var swap = 0;\n  \n  if (pl1.length > pl2.length) { //swap for faster compare\n    var t = pl2;\n    pl2 = pl1;\n    pl1 = t;\n    swap = distance;\n    distance = -distance;\n  }\n  for (var i = 0; i < pl1.length; i++) {\n    var k = indexOfSorted(pl2, pl1[i] + distance);\n    var t = (pl2[k] === (pl1[i] + distance)) ? k : -1;\n    if (t > -1) {\n      r.push(pl1[i] - swap);\n    }\n  }\n  return r;\n}\nvar combine=function (postings) {\n  var out=[];\n  for (var i in postings) {\n    out=out.concat(postings[i]);\n  }\n  out.sort(function(a,b){return a-b});\n  return out;\n}\n\nvar unique = function(ar){\n   if (!ar || !ar.length) return [];\n   var u = {}, a = [];\n   for(var i = 0, l = ar.length; i < l; ++i){\n    if(u.hasOwnProperty(ar[i])) continue;\n    a.push(ar[i]);\n    u[ar[i]] = 1;\n   }\n   return a;\n}\n\n\n\nvar plphrase = function (postings,ops) {\n  var r = [];\n  for (var i=0;i<postings.length;i++) {\n  \tif (!postings[i])  return [];\n  \tif (0 === i) {\n  \t  r = postings[0];\n  \t} else {\n      if (ops[i]=='andnot') {\n        r = plnotfollow(r, postings[i], i);  \n      }else {\n        r = pland(r, postings[i], i);  \n      }\n  \t}\n  }\n  \n  return r;\n}\n//return an array of group having any of pl item\nvar matchPosting=function(pl,gupl,start,end) {\n  start=start||0;\n  end=end||-1;\n  if (end==-1) end=Math.pow(2, 53); // max integer value\n\n  var count=0, i = j= 0,  result = [] ,v=0;\n  var docs=[], freq=[];\n  if (!pl) return {docs:[],freq:[]};\n  while( i < pl.length && j < gupl.length ){\n     if (pl[i] < gupl[j] ){ \n       count++;\n       v=pl[i];\n       i++; \n     } else {\n       if (count) {\n        if (v>=start && v<end) {\n          docs.push(j);\n          freq.push(count);          \n        }\n       }\n       j++;\n       count=0;\n     }\n  }\n  if (count && j<gupl.length && v>=start && v<end) {\n    docs.push(j);\n    freq.push(count);\n    count=0;\n  }\n  else {\n    while (j==gupl.length && i<pl.length && pl[i] >= gupl[gupl.length-1]) {\n      i++;\n      count++;\n    }\n    if (v>=start && v<end) {\n      docs.push(j);\n      freq.push(count);      \n    }\n  } \n  return {docs:docs,freq:freq};\n}\n\nvar trim=function(arr,start,end) {\n  var s=indexOfSorted(arr,start);\n  var e=indexOfSorted(arr,end);\n  return arr.slice(s,e+1);\n}\nvar plist={};\nplist.unpack=unpack;\nplist.plphrase=plphrase;\nplist.plhead=plhead;\nplist.plfollow2=plfollow2;\nplist.plnotfollow2=plnotfollow2;\nplist.plfollow=plfollow;\nplist.plnotfollow=plnotfollow;\nplist.unique=unique;\nplist.indexOfSorted=indexOfSorted;\nplist.matchPosting=matchPosting;\nplist.trim=trim;\n\nplist.groupbyslot=groupbyslot;\nplist.groupbyblock2=groupbyblock2;\nplist.countbyposting=countbyposting;\nplist.groupbyposting=groupbyposting;\nplist.groupbyposting2=groupbyposting2;\nplist.groupsum=groupsum;\nplist.combine=combine;\nmodule.exports=plist;",
    "/*\nvar dosearch2=function(engine,opts,cb,context) {\n\topts\n\t\tnfile,npage  //return a highlighted page\n\t\tnfile,[pages] //return highlighted pages \n\t\tnfile        //return entire highlighted file\n\t\tabs_npage\n\t\t[abs_pages]  //return set of highlighted pages (may cross file)\n\n\t\tfilename, pagename\n\t\tfilename,[pagenames]\n\n\t\texcerpt      //\n\t    sortBy       //default natural, sortby by vsm ranking\n\n\t//return err,array_of_string ,Q  (Q contains low level search result)\n}\n\n*/\n/* TODO sorted tokens */\nvar plist=require(\"./plist\");\nvar boolsearch=require(\"./boolsearch\");\nvar excerpt=require(\"./excerpt\");\nvar parseTerm = function(engine,raw,opts) {\n\tif (!raw) return;\n\tvar res={raw:raw,variants:[],term:'',op:''};\n\tvar term=raw, op=0;\n\tvar firstchar=term[0];\n\tvar termregex=\"\";\n\tif (firstchar=='-') {\n\t\tterm=term.substring(1);\n\t\tfirstchar=term[0];\n\t\tres.exclude=true; //exclude\n\t}\n\tterm=term.trim();\n\tvar lastchar=term[term.length-1];\n\tterm=engine.analyzer.normalize(term);\n\t\n\tif (term.indexOf(\"%\")>-1) {\n\t\tvar termregex=\"^\"+term.replace(/%+/g,\".+\")+\"$\";\n\t\tif (firstchar==\"%\") \ttermregex=\".+\"+termregex.substr(1);\n\t\tif (lastchar==\"%\") \ttermregex=termregex.substr(0,termregex.length-1)+\".+\";\n\t}\n\n\tif (termregex) {\n\t\tres.variants=expandTerm(engine,termregex);\n\t}\n\n\tres.key=term;\n\treturn res;\n}\nvar expandTerm=function(engine,regex) {\n\tvar r=new RegExp(regex);\n\tvar tokens=engine.get(\"tokens\");\n\tvar postingsLength=engine.get(\"postingslength\");\n\tif (!postingsLength) postingsLength=[];\n\tvar out=[];\n\tfor (var i=0;i<tokens.length;i++) {\n\t\tvar m=tokens[i].match(r);\n\t\tif (m) {\n\t\t\tout.push([m[0],postingsLength[i]||1]);\n\t\t}\n\t}\n\tout.sort(function(a,b){return b[1]-a[1]});\n\treturn out;\n}\nvar isWildcard=function(raw) {\n\treturn !!raw.match(/[\\*\\?]/);\n}\n\nvar isOrTerm=function(term) {\n\tterm=term.trim();\n\treturn (term[term.length-1]===',');\n}\nvar orterm=function(engine,term,key) {\n\t\tvar t={text:key};\n\t\tif (engine.analyzer.simplifiedToken) {\n\t\t\tt.simplified=engine.analyzer.simplifiedToken(key);\n\t\t}\n\t\tterm.variants.push(t);\n}\nvar orTerms=function(engine,tokens,now) {\n\tvar raw=tokens[now];\n\tvar term=parseTerm(engine,raw);\n\tif (!term) return;\n\torterm(engine,term,term.key);\n\twhile (isOrTerm(raw))  {\n\t\traw=tokens[++now];\n\t\tvar term2=parseTerm(engine,raw);\n\t\torterm(engine,term,term2.key);\n\t\tfor (var i in term2.variants){\n\t\t\tterm.variants[i]=term2.variants[i];\n\t\t}\n\t\tterm.key+=','+term2.key;\n\t}\n\treturn term;\n}\n\nvar getOperator=function(raw) {\n\tvar op='';\n\tif (raw[0]=='+') op='include';\n\tif (raw[0]=='-') op='exclude';\n\treturn op;\n}\nvar parsePhrase=function(q) {\n\tvar match=q.match(/(\".+?\"|'.+?'|\\S+)/g)\n\tmatch=match.map(function(str){\n\t\tvar n=str.length, h=str.charAt(0), t=str.charAt(n-1)\n\t\tif (h===t&&(h==='\"'|h===\"'\")) str=str.substr(1,n-2)\n\t\treturn str;\n\t})\n\treturn match;\n}\nvar tibetanNumber={\n\t\"\\u0f20\":\"0\",\"\\u0f21\":\"1\",\"\\u0f22\":\"2\",\t\"\\u0f23\":\"3\",\t\"\\u0f24\":\"4\",\n\t\"\\u0f25\":\"5\",\"\\u0f26\":\"6\",\"\\u0f27\":\"7\",\"\\u0f28\":\"8\",\"\\u0f29\":\"9\"\n}\nvar parseNumber=function(raw) {\n\tvar n=parseInt(raw,10);\n\tif (isNaN(n)){\n\t\tvar converted=[];\n\t\tfor (var i=0;i<raw.length;i++) {\n\t\t\tvar nn=tibetanNumber[raw[i]];\n\t\t\tif (typeof nn !=\"undefined\") converted[i]=nn;\n\t\t\telse break;\n\t\t}\n\t\treturn parseInt(converted,10);\n\t} else {\n\t\treturn n;\n\t}\n}\nvar parseWildcard=function(raw) {\n\tvar n=parseNumber(raw) || 1;\n\tvar qcount=raw.split('?').length-1;\n\tvar scount=raw.split('*').length-1;\n\tvar type='';\n\tif (qcount) type='?';\n\telse if (scount) type='*';\n\treturn {wildcard:type, width: n , op:'wildcard'};\n}\n\nvar newPhrase=function() {\n\treturn {termid:[],posting:[],raw:'',termlength:[]};\n} \nvar parseQuery=function(q,sep) {\n\tif (sep && q.indexOf(sep)>-1) {\n\t\tvar match=q.split(sep);\n\t} else {\n\t\tvar match=q.match(/(\".+?\"|'.+?'|\\S+)/g)\n\t\tmatch=match.map(function(str){\n\t\t\tvar n=str.length, h=str.charAt(0), t=str.charAt(n-1)\n\t\t\tif (h===t&&(h==='\"'|h===\"'\")) str=str.substr(1,n-2)\n\t\t\treturn str\n\t\t})\n\t\t//console.log(input,'==>',match)\t\t\n\t}\n\treturn match;\n}\nvar loadPhrase=function(phrase) {\n\t/* remove leading and ending wildcard */\n\tvar Q=this;\n\tvar cache=Q.engine.postingCache;\n\tif (cache[phrase.key]) {\n\t\tphrase.posting=cache[phrase.key];\n\t\treturn Q;\n\t}\n\tif (phrase.termid.length==1) {\n\t\tif (!Q.terms.length){\n\t\t\tphrase.posting=[];\n\t\t} else {\n\t\t\tcache[phrase.key]=phrase.posting=Q.terms[phrase.termid[0]].posting;\t\n\t\t}\n\t\treturn Q;\n\t}\n\n\tvar i=0, r=[],dis=0;\n\twhile(i<phrase.termid.length) {\n\t  var T=Q.terms[phrase.termid[i]];\n\t\tif (0 === i) {\n\t\t\tr = T.posting;\n\t\t} else {\n\t\t    if (T.op=='wildcard') {\n\t\t    \tT=Q.terms[phrase.termid[i++]];\n\t\t    \tvar width=T.width;\n\t\t    \tvar wildcard=T.wildcard;\n\t\t    \tT=Q.terms[phrase.termid[i]];\n\t\t    \tvar mindis=dis;\n\t\t    \tif (wildcard=='?') mindis=dis+width;\n\t\t    \tif (T.exclude) r = plist.plnotfollow2(r, T.posting, mindis, dis+width);\n\t\t    \telse r = plist.plfollow2(r, T.posting, mindis, dis+width);\t\t    \t\n\t\t    \tdis+=(width-1);\n\t\t    }else {\n\t\t    \tif (T.posting) {\n\t\t    \t\tif (T.exclude) r = plist.plnotfollow(r, T.posting, dis);\n\t\t    \t\telse r = plist.plfollow(r, T.posting, dis);\n\t\t    \t}\n\t\t    }\n\t\t}\n\t\tdis += phrase.termlength[i];\n\t\ti++;\n\t\tif (!r) return Q;\n  }\n  phrase.posting=r;\n  cache[phrase.key]=r;\n  return Q;\n}\nvar trimSpace=function(engine,query) {\n\tif (!query) return \"\";\n\tvar i=0;\n\tvar isSkip=engine.analyzer.isSkip;\n\twhile (i<query.length && isSkip(query[i])) i++;\n\treturn query.substring(i);\n}\nvar getSegWithHit=function(fileid,offsets) {\n\tvar Q=this,engine=Q.engine;\n\tvar segWithHit=plist.groupbyposting2(Q.byFile[fileid ], offsets);\n\tif (segWithHit.length) segWithHit.shift(); //the first item is not used (0~Q.byFile[0] )\n\tvar out=[];\n\tsegWithHit.map(function(p,idx){if (p.length) out.push(idx)});\n\treturn out;\n}\nvar segWithHit=function(fileid) {\n\tvar Q=this,engine=Q.engine;\n\tvar offsets=engine.getFileSegOffsets(fileid);\n\treturn getSegWithHit.apply(this,[fileid,offsets]);\n}\nvar isSimplePhrase=function(phrase) {\n\tvar m=phrase.match(/[\\?%^]/);\n\treturn !m;\n}\n\n// 發菩提心   ==> 發菩  提心       2 2   \n// 菩提心     ==> 菩提  提心       1 2\n// 劫劫       ==> 劫    劫         1 1   // invalid\n// 因緣所生道  ==> 因緣  所生   道   2 2 1\nvar splitPhrase=function(engine,simplephrase,bigram) {\n\tvar bigram=bigram||engine.get(\"meta\").bigram||[];\n\tvar tokens=engine.analyzer.tokenize(simplephrase).tokens;\n\tvar loadtokens=[],lengths=[],j=0,lastbigrampos=-1;\n\twhile (j+1<tokens.length) {\n\t\tvar token=engine.analyzer.normalize(tokens[j]);\n\t\tvar nexttoken=engine.analyzer.normalize(tokens[j+1]);\n\t\tvar bi=token+nexttoken;\n\t\tvar i=plist.indexOfSorted(bigram,bi);\n\t\tif (bigram[i]==bi) {\n\t\t\tloadtokens.push(bi);\n\t\t\tif (j+3<tokens.length) {\n\t\t\t\tlastbigrampos=j;\n\t\t\t\tj++;\n\t\t\t} else {\n\t\t\t\tif (j+2==tokens.length){ \n\t\t\t\t\tif (lastbigrampos+1==j ) {\n\t\t\t\t\t\tlengths[lengths.length-1]--;\n\t\t\t\t\t}\n\t\t\t\t\tlastbigrampos=j;\n\t\t\t\t\tj++;\n\t\t\t\t}else {\n\t\t\t\t\tlastbigrampos=j;\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tlengths.push(2);\n\t\t} else {\n\t\t\tif (!bigram || lastbigrampos==-1 || lastbigrampos+1!=j) {\n\t\t\t\tloadtokens.push(token);\n\t\t\t\tlengths.push(1);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tj++;\n\t}\n\n\twhile (j<tokens.length) {\n\t\tvar token=engine.analyzer.normalize(tokens[j]);\n\t\tloadtokens.push(token);\n\t\tlengths.push(1);\n\t\tj++;\n\t}\n\n\treturn {tokens:loadtokens, lengths: lengths , tokenlength: tokens.length};\n}\n/* host has fast native function */\nvar fastPhrase=function(engine,phrase,cb) {\n\tvar phrase_term=newPhrase();\n\t//var tokens=engine.analyzer.tokenize(phrase).tokens;\n\tvar splitted=splitPhrase(engine,phrase);\n\n\tvar paths=postingPathFromTokens(engine,splitted.tokens);\n//create wildcard\n\n\tphrase_term.width=splitted.tokenlength; //for excerpt.js to getPhraseWidth\n\n\tengine.get(paths,{address:true},function(postingAddress){ //this is sync\n\t\tphrase_term.key=phrase;\n\t\tvar postingAddressWithWildcard=[];\n\t\tfor (var i=0;i<postingAddress.length;i++) {\n\t\t\tpostingAddressWithWildcard.push(postingAddress[i]);\n\t\t\tif (splitted.lengths[i]>1) {\n\t\t\t\tpostingAddressWithWildcard.push([splitted.lengths[i],0]); //wildcard has blocksize==0 \n\t\t\t}\n\t\t};\n\t\tengine.mergePostings(postingAddressWithWildcard,function(r){\n\t\t\tengine.postingCache[phrase]=r;\n\t\t\tcb(phrase_term);\n\t\t});\n\t\t\n\t});\n}\nvar slowPhrase=function(engine,terms,phrase) {\n\tvar j=0,tokens=engine.analyzer.tokenize(phrase).tokens;\n\tvar phrase_term=newPhrase();\n\tvar termid=0;\n\twhile (j<tokens.length) {\n\t\tvar raw=tokens[j], termlength=1;\n\t\tif (isWildcard(raw)) {\n\t\t\tif (phrase_term.termid.length==0)  { //skip leading wild card\n\t\t\t\tj++\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tterms.push(parseWildcard(raw));\n\t\t\ttermid=terms.length-1;\n\t\t\tphrase_term.termid.push(termid);\n\t\t\tphrase_term.termlength.push(termlength);\n\t\t} else if (isOrTerm(raw)){\n\t\t\tvar term=orTerms.apply(this,[tokens,j]);\n\t\t\tif (term) {\n\t\t\t\tterms.push(term);\n\t\t\t\ttermid=terms.length-1;\n\t\t\t\tj+=term.key.split(',').length-1;\t\t\t\t\t\n\t\t\t}\n\t\t\tj++;\n\t\t\tphrase_term.termid.push(termid);\n\t\t\tphrase_term.termlength.push(termlength);\n\t\t} else {\n\t\t\tvar phrase=\"\";\n\t\t\twhile (j<tokens.length) {\n\t\t\t\tif (!(isWildcard(tokens[j]) || isOrTerm(tokens[j]))) {\n\t\t\t\t\tphrase+=tokens[j];\n\t\t\t\t\tj++;\n\t\t\t\t} else break;\n\t\t\t}\n\n\t\t\tvar splitted=splitPhrase(engine,phrase);\n\t\t\tfor (var i=0;i<splitted.tokens.length;i++) {\n\t\t\t\tvar term=parseTerm(engine,splitted.tokens[i]);\n\t\t\t\tif (!term) continue;\n\t\t\t\tvar termidx=terms.map(function(a){return a.key}).indexOf(term.key);\n\t\t\t\tif (termidx==-1) {\n\t\t\t\t\tterms.push(term);\n\t\t\t\t\ttermid=terms.length-1;\n\t\t\t\t} else {\n\t\t\t\t\ttermid=termidx;\n\t\t\t\t}\t\t\t\t\n\t\t\t\tphrase_term.termid.push(termid);\n\t\t\t\tphrase_term.termlength.push(splitted.lengths[i]);\n\t\t\t}\n\t\t}\n\t\tj++;\n\t}\n\tphrase_term.key=phrase;\n\t//remove ending wildcard\n\tvar P=phrase_term , T=null;\n\tdo {\n\t\tT=terms[P.termid[P.termid.length-1]];\n\t\tif (!T) break;\n\t\tif (T.wildcard) P.termid.pop(); else break;\n\t} while(T);\t\t\n\treturn phrase_term;\n}\n\n\nvar newQuery =function(engine,query,opts,cb) {\n\tvar Q=engine.queryCache[query];\n\tif (Q) {\n\t\tcb(Q);\n\t\treturn;\n\t}\n\n\topts=opts||{};\n\tquery=trimSpace(engine,query);\n\n\tvar phrases=query,phrases=[];\n\tif (typeof query=='string' && query) {\n\t\tphrases=parseQuery(query,opts.phrase_sep || \"\");\n\t}\n\t\n\tvar phrase_terms=[], terms=[],variants=[],operators=[];\n\tvar pc=0;//phrase count\n\tvar that=this,taskqueue=[];\n\tfor  (var i=0;i<phrases.length;i++) {\n\t\tvar op=getOperator(phrases[pc]);\n\t\tif (op) phrases[pc]=phrases[pc].substring(1);\n\n\t\t/* auto add + for natural order ?*/\n\t\t//if (!opts.rank && op!='exclude' &&i) op='include';\n\t\toperators.push(op);\n\n\t\ttaskqueue.push(function(data){\n\n\t\t\tif (typeof data=='object' && data.__empty) {\n\t\t\t\t//not pushing the first call\n\t\t\t} else {\n\t\t\t\tif (engine.mergePostings || data.termid.length!=0) {\n\t\t\t\t\tphrase_terms.push(data);\n\t\t\t\t\tpc++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isSimplePhrase(phrases[pc]) && engine.mergePostings ) {\n\t\t\t\t\n\t\t\t\tfastPhrase(engine,phrases[pc],function(res){\n\t\t\t\t\ttaskqueue.shift()(res);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttaskqueue.shift()(slowPhrase(engine,terms,phrases[pc] ));\n\t\t\t}\n\t\t});\n\t}\n\n\t//last call to child load\n\ttaskqueue.push(function(data){\n\t\tif (engine.mergePostings || (data.termid && data.termid.length!=0))  {\n\t\t\tphrase_terms.push(data);\n\t\t\tpc++;\n\t\t}\n\t\topts.op=operators;\n\t\tcb.call(that,Q);\n\t});\n\n\n\tvar Q={dbname:engine.dbname,engine:engine,opts:opts,query:query,phrases:phrase_terms,terms:terms,segWithHit:segWithHit};\n\tQ.tokenize=function() {return engine.analyzer.tokenize.apply(engine,arguments);}\n\tQ.isSkip=function() {return engine.analyzer.isSkip.apply(engine,arguments);}\n\tQ.normalize=function() {return engine.analyzer.normalize.apply(engine,arguments);}\t\n\n\t//invoke task queue\n\ttaskqueue.shift()({__empty:true});\n}\nvar postingPathFromTokens=function(engine,tokens) {\n\tvar alltokens=engine.get(\"tokens\");\n\n\tvar tokenIds=tokens.map(function(t){ return 1+alltokens.indexOf(t)});\n\tvar postingid=[];\n\tfor (var i=0;i<tokenIds.length;i++) {\n\t\tpostingid.push( tokenIds[i]); // tokenId==0 , empty token\n\t}\n\treturn postingid.map(function(t){return [\"postings\",t]});\n}\nvar loadPostings=function(engine,tokens,cb) {\n\tvar toloadtokens=tokens.filter(function(t){\n\t\treturn !engine.postingCache[t.key]; //already in cache\n\t});\n\tif (toloadtokens.length==0) {\n\t\tcb();\n\t\treturn;\n\t}\n\tvar postingPaths=postingPathFromTokens(engine,tokens.map(function(t){return t.key}));\n\tengine.get(postingPaths,function(postings){\n\t\tpostings.map(function(p,i) { tokens[i].posting=p });\n\t\tif (cb) cb();\n\t});\n}\nvar groupBy=function(Q,posting) {\n\tphrases.forEach(function(P){\n\t\tvar key=P.key;\n\t\tvar docfreq=docfreqcache[key];\n\t\tif (!docfreq) docfreq=docfreqcache[key]={};\n\t\tif (!docfreq[that.groupunit]) {\n\t\t\tdocfreq[that.groupunit]={doclist:null,freq:null};\n\t\t}\t\t\n\t\tif (P.posting) {\n\t\t\tvar res=matchPosting(engine,P.posting);\n\t\t\tP.freq=res.freq;\n\t\t\tP.docs=res.docs;\n\t\t} else {\n\t\t\tP.docs=[];\n\t\t\tP.freq=[];\n\t\t}\n\t\tdocfreq[that.groupunit]={doclist:P.docs,freq:P.freq};\n\t});\n\treturn this;\n}\nvar groupByFolder=function(engine,filehits) {\n\tvar files=engine.get(\"filenames\");\n\tvar prevfolder=\"\",hits=0,out=[];\n\tfor (var i=0;i<filehits.length;i++) {\n\t\tvar fn=files[i];\n\t\tvar folder=fn.substring(0,fn.indexOf('/'));\n\t\tif (prevfolder && prevfolder!=folder) {\n\t\t\tout.push(hits);\n\t\t\thits=0;\n\t\t}\n\t\thits+=filehits[i].length;\n\t\tprevfolder=folder;\n\t}\n\tout.push(hits);\n\treturn out;\n}\nvar phrase_intersect=function(engine,Q) {\n\tvar intersected=null;\n\tvar fileoffsets=Q.engine.get(\"fileoffsets\");\n\tvar empty=[],emptycount=0,hashit=0;\n\tfor (var i=0;i<Q.phrases.length;i++) {\n\t\tvar byfile=plist.groupbyposting2(Q.phrases[i].posting,fileoffsets);\n\t\tif (byfile.length) byfile.shift();\n\t\tif (byfile.length) byfile.pop();\n\t\tbyfile.pop();\n\t\tif (intersected==null) {\n\t\t\tintersected=byfile;\n\t\t} else {\n\t\t\tfor (var j=0;j<byfile.length;j++) {\n\t\t\t\tif (!(byfile[j].length && intersected[j] && intersected[j].length)) {\n\t\t\t\t\tintersected[j]=empty; //reuse empty array\n\t\t\t\t\temptycount++;\n\t\t\t\t} else hashit++;\n\t\t\t}\n\t\t}\n\t}\n\n\tQ.byFile=intersected;\n\tQ.byFolder=groupByFolder(engine,Q.byFile);\n\tvar out=[];\n\t//calculate new rawposting\n\tfor (var i=0;i<Q.byFile.length;i++) {\n\t\tif (Q.byFile[i].length) out=out.concat(Q.byFile[i]);\n\t}\n\tQ.rawresult=out;\n\tcountFolderFile(Q);\n}\nvar countFolderFile=function(Q) {\n\tQ.fileWithHitCount=0;\n\tQ.byFile.map(function(f){if (f.length) Q.fileWithHitCount++});\n\t\t\t\n\tQ.folderWithHitCount=0;\n\tQ.byFolder.map(function(f){if (f) Q.folderWithHitCount++});\n}\n\nvar main=function(engine,q,opts,cb){\n\n\tvar starttime=new Date();\n\tvar meta=engine.get(\"meta\");\n\tif (meta.normalize && engine.analyzer.setNormalizeTable) {\n\t\tmeta.normalizeObj=engine.analyzer.setNormalizeTable(meta.normalize,meta.normalizeObj);\n\t}\n\tif (typeof opts==\"function\") cb=opts;\n\topts=opts||{};\n\t\n\tnewQuery(engine,q,opts,function(Q){ \n\t\tif (!Q) {\n\t\t\tengine.searchtime=new Date()-starttime;\n\t\t\tengine.totaltime=engine.searchtime;\n\t\t\tif (engine.context) cb.apply(engine.context,[\"empty result\",{rawresult:[]}]);\n\t\t\telse cb(\"empty result\",{rawresult:[]});\n\t\t\treturn;\n\t\t};\n\t\tengine.queryCache[q]=Q;\n\t\tif (Q.phrases.length) {\n\t\t\t\n\t\t\tloadPostings(engine,Q.terms,function(){\n\t\t\t\tif (!Q.phrases[0].posting) {\n\t\t\t\t\tengine.searchtime=new Date()-starttime;\n\t\t\t\t\tengine.totaltime=engine.searchtime;\n\t\t\t\t\tcb.apply(engine.context,[\"no such posting\",{rawresult:[]}]);\n\t\t\t\t\treturn;\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!Q.phrases[0].posting.length) { //\n\t\t\t\t\tQ.phrases.forEach(loadPhrase.bind(Q));\n\t\t\t\t}\n\t\t\t\tif (Q.phrases.length==1) {\n\t\t\t\t\tQ.rawresult=Q.phrases[0].posting;\n\t\t\t\t} else {\n\t\t\t\t\tphrase_intersect(engine,Q);\n\t\t\t\t}\n\t\t\t\tvar fileoffsets=Q.engine.get(\"fileoffsets\");\n\t\t\t\t//console.log(\"search opts \"+JSON.stringify(opts));\n\n\t\t\t\tif (!Q.byFile && Q.rawresult && !opts.nogroup) {\n\t\t\t\t\tQ.byFile=plist.groupbyposting2(Q.rawresult, fileoffsets);\n\t\t\t\t\tQ.byFile.shift();Q.byFile.pop();\n\t\t\t\t\tQ.byFolder=groupByFolder(engine,Q.byFile);\n\n\t\t\t\t\tcountFolderFile(Q);\n\t\t\t\t}\n\n\t\t\t\tif (opts.range) {\n\t\t\t\t\tengine.searchtime=new Date()-starttime;\n\t\t\t\t\texcerpt.resultlist(engine,Q,opts,function(data) { \n\t\t\t\t\t\t//console.log(\"excerpt ok\");\n\t\t\t\t\t\tQ.excerpt=data;\n\t\t\t\t\t\tengine.totaltime=new Date()-starttime;\n\t\t\t\t\t\tcb.apply(engine.context,[0,Q]);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tengine.searchtime=new Date()-starttime;\n\t\t\t\t\tengine.totaltime=new Date()-starttime;\n\t\t\t\t\tcb.apply(engine.context,[0,Q]);\n\t\t\t\t}\n\t\t\t});\n\t\t} else { //empty search\n\t\t\tengine.searchtime=new Date()-starttime;\n\t\t\tengine.totaltime=new Date()-starttime;\n\t\t\tcb.apply(engine.context,[0,Q]);\n\t\t};\n\t});\n}\n\nmain.splitPhrase=splitPhrase; //just for debug\nmodule.exports=main;",
    "var React=(window&&window.React)||require(\"react\");\nvar E=React.createElement;\nvar trimHit=function(hit) {\n  if (hit>999) { \n    return (Math.floor(hit/1000)).toString()+\"K+\";\n  } else return hit.toString();\n}\nvar trimText=function(text,opts) {\n    if (opts.maxitemlength && text.length>opts.maxitemlength) {\n      var stopAt=opts.stopAt||\"\";\n      if (stopAt) {\n        var at=opts.maxitemlength;\n        while (at>10) {\n          if (text.charAt(at)==stopAt) return text.substr(0,at)+\"...\";\n          at--;\n        }\n      } else {\n        return text.substr(0,opts.maxitemlength)+\"...\";\n      }\n    } \n    return text;\n}\nvar ganzhi=\"　甲乙丙丁戊己庚辛壬癸子丑寅卯辰巳午未申酉戌亥\";\n\nvar renderDepth=function(depth,opts,nodetype) {\n  var out=[];\n  if (opts.tocstyle==\"vertical_line\") {\n    for (var i=0;i<depth;i++) {\n      if (i==depth-1) {\n        out.push(E(\"img\", {src: opts.tocbar_start}));\n      } else {\n        out.push(E(\"img\", {src: opts.tocbar}));  \n      }\n    }\n    return out;    \n  } else if (opts.tocstyle==\"ganzhi\") {\n    return E(\"span\", null, ganzhi[depth]+\".\");\n  } else {\n    if (depth) return E(\"span\", null, depth, \".\")\n    else return null;\n  }\n  return null;\n};\n\n\nvar Ancestors=React.createClass({\n  goback:function(e) {\n    var n=e.target.dataset[\"n\"];  \n    if (typeof n==\"undefined\") n=e.target.parentNode.dataset[\"n\"];\n    this.props.setCurrent(n); \n  },\n  showExcerpt:function(e) {\n    var n=parseInt(e.target.parentNode.dataset[\"n\"]);\n    e.stopPropagation();\n    e.preventDefault();\n    this.props.showExcerpt(n);\n  }, \n  showHit:function(hit) {\n    if (hit)  return E(\"a\", {href: \"#\", onClick: this.showExcerpt, className: \"pull-right badge hitbadge\"}, trimHit(hit))\n    else return E(\"span\", null);\n  },\n  renderAncestor:function(n,idx) {\n    var hit=this.props.toc[n].hit;\n    var text=this.props.toc[n].text.trim();\n    text=trimText(text,this.props.opts);\n    if (this.props.textConverter) text=this.props.textConverter(text);\n    return E(\"div\", {key: \"a\"+n, className: \"node parent\", \"data-n\": n, onClick: this.goback}, renderDepth(idx,this.props.opts,\"ancestor\"),\n              E(\"a\", {className: \"text\", href: \"#\"}, text), this.showHit(hit))\n  },\n  render:function() {\n    if (!this.props.data || !this.props.data.length) return E(\"div\",null);\n    return E(\"div\", null, this.props.data.map(this.renderAncestor))\n  } \n}); \nvar Children=React.createClass({\n  getInitialState:function() {\n    return {selected:0};\n  },\n  shouldComponentUpdate:function(nextProps,nextState) {\n    if (nextProps.data.join()!=this.props.data.join() ) {\n      nextState.selected=parseInt(nextProps.data[0]);\n    }\n    return true;\n  },\n  open:function(e) {\n    var n=e.target.parentNode.dataset[\"n\"];\n    if (typeof n!==\"undefined\") this.props.setCurrent(parseInt(n));\n  }, \n  showHit:function(hit) {\n    if (hit)  return E(\"a\", {href: \"#\", onClick: this.showExcerpt, \n      className: \"pull-right badge hitbadge\"}, trimHit(hit))\n    else return E(\"span\",null);\n  },\n  showExcerpt:function(e) {\n    var n=parseInt(e.target.parentNode.dataset[\"n\"]);\n    e.stopPropagation();\n    e.preventDefault();\n    this.props.hitClick(n);\n  }, \n  nodeClicked:function(e) {\n    var target=e.target;\n    while (target && typeof target.dataset.n==\"undefined\")target=target.parentNode;\n    if (!target) return;\n    var n=parseInt(target.dataset.n);\n    var child=this.props.toc[n];\n    if (this.props.showTextOnLeafNodeOnly) {\n      if (child.hasChild) {\n        this.open(e);\n      } else {\n        this.showText(e);\n      }\n    } else {\n      if (n==this.state.selected) {\n        if (child.hasChild) this.open(e);\n        else this.showText(e);\n      } else {\n        this.showText(e);\n      }\n    }\n    this.setState({selected:n});\n  },\n  renderChild:function(n) {\n    var child=this.props.toc[n];\n    var hit=this.props.toc[n].hit;\n    var classes=\"node child\",haschild=false;  \n    //if (child.extra) extra=\"<extra>\"+child.extra+\"</extra>\";\n    if (!child.hasChild) classes+=\" nochild\";\n    else haschild=true;\n    var selected=this.state.selected;\n    if (this.props.showTextOnLeafNodeOnly) {\n      selected=n;\n    }\n\n    var classes=\"btn btn-link\";\n    if (n==selected) {\n      if (haschild) classes=\"btn btn-default expandable\";\n      else classes=\"btn btn-link link-selected\";\n    }\n\n    var text=this.props.toc[n].text.trim();\n    var depth=this.props.toc[n].depth;\n    text=trimText(text,this.props.opts)\n    if (this.props.textConverter) text=this.props.textConverter(text);\n    return E(\"div\", {key: \"child\"+n, \"data-n\": n}, renderDepth(depth,this.props.opts,\"child\"), \n           E(\"a\", {\"data-n\": n, className: classes +\" tocitem text\", onClick: this.nodeClicked}, text+\" \"), this.showHit(hit)\n           )\n  },\n  showText:function(e) { \n    var target=e.target;\n    var n=e.target.dataset.n;\n    while (target && typeof target.dataset.n==\"undefined\") {\n      target=target.parentNode;\n    }\n    if (target && target.dataset.n && this.props.showText) {\n      this.props.showText(parseInt(target.dataset.n));\n    }\n  },\n  render:function() {\n    if (!this.props.data || !this.props.data.length) return E(\"div\", null);\n    return E(\"div\", null, this.props.data.map(this.renderChild))\n  }\n}); \n\nvar stacktoc = React.createClass({\n  getInitialState: function() {\n    return {bar: \"world\",cur:this.props.current|0};//403\n  },\n  buildtoc: function(toc) {\n    if (!toc || !toc.length) return;  \n      var depths=[];\n      var prev=0;\n      for (var i=0;i<toc.length;i++) {\n        var depth=toc[i].depth;\n        if (prev>depth) { //link to prev sibling\n          if (depths[depth]) toc[depths[depth]].next = i;\n          for (var j=depth;j<prev;j++) depths[j]=0;\n        }\n        if (i<toc.length-1 && toc[i+1].depth>depth) {\n          toc[i].hasChild=true;\n        }\n        depths[depth]=i;\n        prev=depth;\n      } \n\n  }, \n\n  componentWillReceiveProps:function(nextProps) {\n    if (nextProps.data && nextProps.data.length && nextProps.data != this.props.data) {\n      this.buildtoc(nextProps.data);\n    }\n  }, \n  setCurrent:function(n) {\n    n=parseInt(n);\n    this.setState({cur:n});\n    var child=this.props.data[n];\n    if (!(child.hasChild && this.props.showTextOnLeafNodeOnly)) {\n\t\t  if (this.props.showText)  this.props.showText(n);\n    }\n  },\n  findByVoff:function(voff) {\n    for (var i=0;i<this.props.data.length;i++) {\n      var t=this.props.data[i];\n      if (t.voff>voff) return i-1;\n    }\n    return 0; //return root node\n  },\n  shouldComponentUpdate:function(nextProps,nextState) {\n    if (nextProps.goVoff&&nextProps.goVoff !=this.props.goVoff) {\n      nextState.cur=this.findByVoff(nextProps.goVoff);\n    }\n    if (nextProps.current != this.props.current) {\n      nextState.cur=nextProps.current;\n    }\n    return true;\n  },\n  fillHit:function(nodeIds) {\n    if (typeof nodeIds==\"undefined\") return;\n    if (typeof nodeIds==\"number\") nodeIds=[nodeIds];\n    var toc=this.props.data;\n    var hits=this.props.hits;\n    if (toc.length<2) return;\n    var getRange=function(n) {\n      if (n+1>=toc.length) {\n        console.error(\"exceed toc length\",n);\n        return;\n      }\n      var depth=toc[n].depth , nextdepth=toc[n+1].depth;\n      if (n==toc.length-1 || n==0) {\n          toc[n].end=Math.pow(2, 48);\n          return;\n      } else  if (nextdepth>depth){\n        if (toc[n].next) {\n          toc[n].end= toc[toc[n].next].voff;  \n        } else { //last sibling\n          var next=n+1;\n          while (next<toc.length && toc[next].depth>depth) next++;\n          if (next==toc.length) toc[n].end=Math.pow(2,48);\n          else toc[n].end=toc[next].voff;\n        }\n      } else { //same level or end of sibling\n        toc[n].end=toc[n+1].voff;\n      }\n    }\n    var getHit=function(n) {\n      var start=toc[n].voff;\n      var end=toc[n].end;\n      if (n==0) {\n        toc[0].hit=hits.length;\n      } else {\n        var hit=0;\n        for (var i=0;i<hits.length;i++) {\n          if (hits[i]>=start && hits[i]<end) hit++;\n        }\n        toc[n].hit=hit;\n      }\n    }\n    nodeIds.forEach(function(n){getRange(n)});\n    nodeIds.forEach(function(n){getHit(n)});\n  },\n  fillHits:function(ancestors,children) {\n      this.fillHit(ancestors);\n      this.fillHit(children);\n      this.fillHit(this.state.cur);\n  },\n  hitClick:function(n) {\n    if (this.props.showExcerpt)  this.props.showExcerpt(n);\n  },\n  onHitClick:function(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.hitClick(this.state.cur);\n  },\n  showHit:function(hit) {\n    if (hit)  return E(\"a\", {href: \"#\", onClick: this.onHitClick, className: \"pull-right badge hitbadge\"}, trimHit(hit))\n    else return E(\"span\",null);\n  },\n  showText:function(e) {\n    var target=e.target;\n    var n=e.target.dataset.n;\n    while (target && typeof target.dataset.n==\"undefined\") {\n      target=target.parentNode;\n    }\n    if (target && target.dataset.n && this.props.showText) {\n      this.props.showText(parseInt(target.dataset.n));\n    }\n  },\n  render: function() {\n    if (!this.props.data || !this.props.data.length) return E(\"div\",null);\n    var depth=this.props.data[this.state.cur].depth+1;\n    var ancestors=enumAncestors(this.props.data,this.state.cur);\n    var children=enumChildren(this.props.data,this.state.cur);\n    var opts=this.props.opts||{};\n    var current=this.props.data[this.state.cur];\n    if (this.props.hits && this.props.hits.length) {\n      this.fillHits(ancestors,children);\n    }\n\n    var text=current.text.trim();\n    text=trimText(text,opts);\n    if (this.props.textConverter) text=this.props.textConverter(text);\n    return ( \n      E(\"div\", {className: \"stacktoc\"}, \n        E(Ancestors, {opts: opts, textConverter: this.props.textConverter, showExcerpt: this.hitClick, setCurrent: this.setCurrent, toc: this.props.data, data: ancestors}), \n        E(\"div\", {className: \"node current\"}, renderDepth(depth-1,opts,\"current\"), E(\"a\", {href: \"#\", onClick: this.showText, \"data-n\": this.state.cur}, E(\"span\", {className: \"text\"}, text)), this.showHit(current.hit)), \n        E(Children, {opts: opts, textConverter: this.props.textConverter, showTextOnLeafNodeOnly: this.props.showTextOnLeafNodeOnly, \n                  showText: this.props.showText, hitClick: this.hitClick, setCurrent: this.setCurrent, toc: this.props.data, data: children})\n      )\n    ); \n  }\n});\nvar enumAncestors=function(toc,cur) {\n    if (!toc || !toc.length) return;\n    if (cur==0) return [];\n    var n=cur-1;\n    var depth=toc[cur].depth - 1;\n    var parents=[];\n    while (n>=0 && depth>0) {\n      if (toc[n].depth==depth) {\n        parents.unshift(n);\n        depth--;\n      }\n      n--;\n    }\n    parents.unshift(0); //first ancestor is root node\n    return parents;\n}\n\nvar enumChildren=function(toc,cur) {\n    var children=[];\n    if (!toc || !toc.length || toc.length==1) return children;\n\n    if (toc[cur+1].depth!= 1+toc[cur].depth) return children;  // no children node\n    var n=cur+1;\n    var child=toc[n];\n    \n    while (child) {\n      children.push(n);\n      var next=toc[n+1];\n      if (!next) break;\n      if (next.depth==child.depth) {\n        n++;\n      } else if (next.depth>child.depth) {\n        n=child.next;\n      } else break;\n      if (n) child=toc[n];else break;\n    }\n    return children;\n}\nvar genToc=function(toc,title) {\n    var out=[{depth:0,text:title||ksana.js.title}];\n    if (toc.texts) for (var i=0;i<toc.texts.length;i++) {\n      out.push({text:toc.texts[i],depth:toc.depths[i], voff:toc.vpos[i]});\n    }\n    return out; \n}\nmodule.exports={component:stacktoc,genToc:genToc,enumChildren:enumChildren,enumAncestors:enumAncestors};\n",
    "\nvar userCancel=false;\nvar files=[];\nvar totalDownloadByte=0;\nvar targetPath=\"\";\nvar tempPath=\"\";\nvar nfile=0;\nvar baseurl=\"\";\nvar result=\"\";\nvar downloading=false;\nvar startDownload=function(dbid,_baseurl,_files) { //return download id\n\tvar fs     = require(\"fs\");\n\tvar path   = require(\"path\");\n\n\t\n\tfiles=_files.split(\"\\uffff\");\n\tif (downloading) return false; //only one session\n\tuserCancel=false;\n\ttotalDownloadByte=0;\n\tnextFile();\n\tdownloading=true;\n\tbaseurl=_baseurl;\n\tif (baseurl[baseurl.length-1]!='/')baseurl+='/';\n\ttargetPath=ksanagap.rootPath+dbid+'/';\n\ttempPath=ksanagap.rootPath+\".tmp/\";\n\tresult=\"\";\n\treturn true;\n}\n\nvar nextFile=function() {\n\tsetTimeout(function(){\n\t\tif (nfile==files.length) {\n\t\t\tnfile++;\n\t\t\tendDownload();\n\t\t} else {\n\t\t\tdownloadFile(nfile++);\t\n\t\t}\n\t},100);\n}\n\nvar downloadFile=function(nfile) {\n\tvar url=baseurl+files[nfile];\n\tvar tmpfilename=tempPath+files[nfile];\n\tvar mkdirp = require(\"./mkdirp\");\n\tvar fs     = require(\"fs\");\n\tvar http   = require(\"http\");\n\n\tmkdirp.sync(path.dirname(tmpfilename));\n\tvar writeStream = fs.createWriteStream(tmpfilename);\n\tvar datalength=0;\n\tvar request = http.get(url, function(response) {\n\t\tresponse.on('data',function(chunk){\n\t\t\twriteStream.write(chunk);\n\t\t\ttotalDownloadByte+=chunk.length;\n\t\t\tif (userCancel) {\n\t\t\t\twriteStream.end();\n\t\t\t\tsetTimeout(function(){nextFile();},100);\n\t\t\t}\n\t\t});\n\t\tresponse.on(\"end\",function() {\n\t\t\twriteStream.end();\n\t\t\tsetTimeout(function(){nextFile();},100);\n\t\t});\n\t});\n}\n\nvar cancelDownload=function() {\n\tuserCancel=true;\n\tendDownload();\n}\nvar verify=function() {\n\treturn true;\n}\nvar endDownload=function() {\n\tnfile=files.length+1;//stop\n\tresult=\"cancelled\";\n\tdownloading=false;\n\tif (userCancel) return;\n\tvar fs     = require(\"fs\");\n\tvar mkdirp = require(\"./mkdirp\");\n\n\tfor (var i=0;i<files.length;i++) {\n\t\tvar targetfilename=targetPath+files[i];\n\t\tvar tmpfilename   =tempPath+files[i];\n\t\tmkdirp.sync(path.dirname(targetfilename));\n\t\tfs.renameSync(tmpfilename,targetfilename);\n\t}\n\tif (verify()) {\n\t\tresult=\"success\";\n\t} else {\n\t\tresult=\"error\";\n\t}\n}\n\nvar downloadedByte=function() {\n\treturn totalDownloadByte;\n}\nvar doneDownload=function() {\n\tif (nfile>files.length) return result;\n\telse return \"\";\n}\nvar downloadingFile=function() {\n\treturn nfile-1;\n}\n\nvar downloader={startDownload:startDownload, downloadedByte:downloadedByte,\n\tdownloadingFile:downloadingFile, cancelDownload:cancelDownload,doneDownload:doneDownload};\nmodule.exports=downloader;",
    "/* emulate filesystem on html5 browser */\nvar get_head=function(url,field,cb){\n\tvar xhr = new XMLHttpRequest();\n\txhr.open(\"HEAD\", url, true);\n\txhr.onreadystatechange = function() {\n\t\t\tif (this.readyState == this.DONE) {\n\t\t\t\tcb(xhr.getResponseHeader(field));\n\t\t\t} else {\n\t\t\t\tif (this.status!==200&&this.status!==206) {\n\t\t\t\t\tcb(\"\");\n\t\t\t\t}\n\t\t\t}\n\t};\n\txhr.send();\n}\nvar get_date=function(url,cb) {\n\tget_head(url,\"Last-Modified\",function(value){\n\t\tcb(value);\n\t});\n}\nvar get_size=function(url, cb) {\n\tget_head(url,\"Content-Length\",function(value){\n\t\tcb(parseInt(value));\n\t});\n};\nvar checkUpdate=function(url,fn,cb) {\n\tif (!url) {\n\t\tcb(false);\n\t\treturn;\n\t}\n\tget_date(url,function(d){\n\t\tAPI.fs.root.getFile(fn, {create: false, exclusive: false}, function(fileEntry) {\n\t\t\tfileEntry.getMetadata(function(metadata){\n\t\t\t\tvar localDate=Date.parse(metadata.modificationTime);\n\t\t\t\tvar urlDate=Date.parse(d);\n\t\t\t\tcb(urlDate>localDate);\n\t\t\t});\n\t\t},function(){\n\t\t\tcb(false);\n\t\t});\n\t});\n}\nvar download=function(url,fn,cb,statuscb,context) {\n\t var totalsize=0,batches=null,written=0;\n\t var fileEntry=0, fileWriter=0;\n\t var createBatches=function(size) {\n\t\tvar bytes=1024*1024, out=[];\n\t\tvar b=Math.floor(size / bytes);\n\t\tvar last=size %bytes;\n\t\tfor (var i=0;i<=b;i++) {\n\t\t\tout.push(i*bytes);\n\t\t}\n\t\tout.push(b*bytes+last);\n\t\treturn out;\n\t }\n\t var finish=function() {\n\t\t rm(fn,function(){\n\t\t\t\tfileEntry.moveTo(fileEntry.filesystem.root, fn,function(){\n\t\t\t\t\tsetTimeout( cb.bind(context,false) , 0) ;\n\t\t\t\t},function(e){\n\t\t\t\t\tconsole.log(\"failed\",e)\n\t\t\t\t});\n\t\t },this);\n\t };\n\t\tvar tempfn=\"temp.kdb\";\n\t\tvar batch=function(b) {\n\t\tvar abort=false;\n\t\tvar xhr = new XMLHttpRequest();\n\t\tvar requesturl=url+\"?\"+Math.random();\n\t\txhr.open('get', requesturl, true);\n\t\txhr.setRequestHeader('Range', 'bytes='+batches[b]+'-'+(batches[b+1]-1));\n\t\txhr.responseType = 'blob';\n\t\txhr.addEventListener('load', function() {\n\t\t\tvar blob=this.response;\n\t\t\tfileEntry.createWriter(function(fileWriter) {\n\t\t\t\tfileWriter.seek(fileWriter.length);\n\t\t\t\tfileWriter.write(blob);\n\t\t\t\twritten+=blob.size;\n\t\t\t\tfileWriter.onwriteend = function(e) {\n\t\t\t\t\tif (statuscb) {\n\t\t\t\t\t\tabort=statuscb.apply(context,[ fileWriter.length / totalsize,totalsize ]);\n\t\t\t\t\t\tif (abort) setTimeout( cb.bind(context,false) , 0) ;\n\t\t\t\t \t}\n\t\t\t\t\tb++;\n\t\t\t\t\tif (!abort) {\n\t\t\t\t\t\tif (b<batches.length-1) setTimeout(batch.bind(context,b),0);\n\t\t\t\t\t\telse                    finish();\n\t\t\t\t \t}\n\t\t\t \t};\n\t\t\t}, console.error);\n\t\t},false);\n\t\txhr.send();\n\t}\n\n\tget_size(url,function(size){\n\t\ttotalsize=size;\n\t\tif (!size) {\n\t\t\tif (cb) cb.apply(context,[false]);\n\t\t} else {//ready to download\n\t\t\trm(tempfn,function(){\n\t\t\t\t batches=createBatches(size);\n\t\t\t\t if (statuscb) statuscb.apply(context,[ 0, totalsize ]);\n\t\t\t\t API.fs.root.getFile(tempfn, {create: 1, exclusive: false}, function(_fileEntry) {\n\t\t\t\t\t\t\tfileEntry=_fileEntry;\n\t\t\t\t\t\tbatch(0);\n\t\t\t\t });\n\t\t\t},this);\n\t\t}\n\t});\n}\n\nvar readFile=function(filename,cb,context) {\n\tAPI.fs.root.getFile(filename, {create: false, exclusive: false},function(fileEntry) {\n\t\tfileEntry.file(function(file){\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onloadend = function(e) {\n\t\t\t\tif (cb) cb.call(cb,this.result);\n\t\t\t};\n\t\t\treader.readAsText(file,\"utf8\");\n\t\t});\n\t}, console.error);\n}\n\nfunction createDir(rootDirEntry, folders,  cb) {\n  // Throw out './' or '/' and move on to prevent something like '/foo/.//bar'.\n  if (folders[0] == '.' || folders[0] == '') {\n    folders = folders.slice(1);\n  }\n  rootDirEntry.getDirectory(folders[0], {create: true}, function(dirEntry) {\n    // Recursively add the new subfolder (if we still have another to create).\n    if (folders.length) {\n      createDir(dirEntry, folders.slice(1),cb);\n    } else {\n\t\t\tcb();\n\t\t}\n  }, cb);\n};\n\n\nvar writeFile=function(filename,buf,cb,context){\n\tvar write=function(fileEntry){\n\t\tfileEntry.createWriter(function(fileWriter) {\n\t\t\tfileWriter.write(buf);\n\t\t\tfileWriter.onwriteend = function(e) {\n\t\t\t\tif (cb) cb.apply(cb,[buf.byteLength]);\n\t\t\t};\n\t\t}, console.error);\n\t}\n\n\tvar getFile=function(filename){\n\t\tAPI.fs.root.getFile(filename, {exclusive:true}, function(fileEntry) {\n\t\t\twrite(fileEntry);\n\t\t}, function(){\n\t\t\t\tAPI.fs.root.getFile(filename, {create:true,exclusive:true}, function(fileEntry) {\n\t\t\t\t\twrite(fileEntry);\n\t\t\t\t});\n\n\t\t});\n\t}\n\tvar slash=filename.lastIndexOf(\"/\");\n\tif (slash>-1) {\n\t\tcreateDir(API.fs.root, filename.substr(0,slash).split(\"/\"),function(){\n\t\t\tgetFile(filename);\n\t\t});\n\t} else {\n\t\tgetFile(filename);\n\t}\n}\n\nvar readdir=function(cb,context) {\n\tvar dirReader = API.fs.root.createReader();\n\tvar out=[],that=this;\n\tdirReader.readEntries(function(entries) {\n\t\tif (entries.length) {\n\t\t\tfor (var i = 0, entry; entry = entries[i]; ++i) {\n\t\t\t\tif (entry.isFile) {\n\t\t\t\t\tout.push([entry.name,entry.toURL ? entry.toURL() : entry.toURI()]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tAPI.files=out;\n\t\tif (cb) cb.apply(context,[out]);\n\t}, function(){\n\t\tif (cb) cb.apply(context,[null]);\n\t});\n}\nvar getFileURL=function(filename) {\n\tif (!API.files ) return null;\n\tvar file= API.files.filter(function(f){return f[0]==filename});\n\tif (file.length) return file[0][1];\n}\nvar rm=function(filename,cb,context) {\n\tvar url=getFileURL(filename);\n\tif (url) rmURL(url,cb,context);\n\telse if (cb) cb.apply(context,[false]);\n}\n\nvar rmURL=function(filename,cb,context) {\n\twebkitResolveLocalFileSystemURL(filename, function(fileEntry) {\n\t\tfileEntry.remove(function() {\n\t\t\tif (cb) cb.apply(context,[true]);\n\t\t}, console.error);\n\t},  function(e){\n\t\tif (cb) cb.apply(context,[false]);//no such file\n\t});\n}\nfunction errorHandler(e) {\n\tconsole.error('Error: ' +e.name+ \" \"+e.message);\n}\nvar initfs=function(grantedBytes,cb,context) {\n\twebkitRequestFileSystem(PERSISTENT, grantedBytes,  function(fs) {\n\t\tAPI.fs=fs;\n\t\tAPI.quota=grantedBytes;\n\t\treaddir(function(){\n\t\t\tAPI.initialized=true;\n\t\t\tcb.apply(context,[grantedBytes,fs]);\n\t\t},context);\n\t}, errorHandler);\n}\nvar init=function(quota,cb,context) {\n\tnavigator.webkitPersistentStorage.requestQuota(quota,\n\t\t\tfunction(grantedBytes) {\n\t\t\t\tinitfs(grantedBytes,cb,context);\n\t\t}, errorHandler\n\t);\n}\nvar queryQuota=function(cb,context) {\n\tvar that=this;\n\tnavigator.webkitPersistentStorage.queryUsageAndQuota(\n\t function(usage,quota){\n\t\t\tinitfs(quota,function(){\n\t\t\t\tcb.apply(context,[usage,quota]);\n\t\t\t},context);\n\t});\n}\nvar API={\n\tinit:init\n\t,readdir:readdir\n\t,checkUpdate:checkUpdate\n\t,rm:rm\n\t,rmURL:rmURL\n\t,getFileURL:getFileURL\n\t,writeFile:writeFile\n\t,readFile:readFile\n\t,download:download\n\t,get_head:get_head\n\t,get_date:get_date\n\t,get_size:get_size\n\t,getDownloadSize:get_size\n\t,queryQuota:queryQuota\n}\nmodule.exports=API;\n",
    "var appname=\"installer\";\nif (typeof ksana==\"undefined\") {\n\twindow.ksana={platform:\"chrome\"};\n}\nvar switchApp=function(path) {\n\tvar fs=require(\"fs\");\n\tpath=\"../\"+path;\n\tappname=path;\n\tdocument.location.href= path+\"/index.html\"; \n\tprocess.chdir(path);\n}\nvar downloader={};\nvar rootPath=\"\";\n\nvar deleteApp=function(app) {\n\tconsole.error(\"not allow on PC, do it in File Explorer/ Finder\");\n}\nvar username=function() {\n\treturn \"\";\n}\nvar useremail=function() {\n\treturn \"\"\n}\nvar runtime_version=function() {\n\treturn \"1.4\";\n}\n\n//copy from liveupdate\nvar jsonp=function(url,dbid,callback,context) {\n  var script=document.getElementById(\"jsonp2\");\n  if (script) {\n    script.parentNode.removeChild(script);\n  }\n  window.jsonp_handler=function(data) {\n    if (typeof data==\"object\") {\n      data.dbid=dbid;\n      callback.apply(context,[data]);    \n    }  \n  }\n  window.jsonp_error_handler=function() {\n    console.error(\"url unreachable\",url);\n    callback.apply(context,[null]);\n  }\n  script=document.createElement('script');\n  script.setAttribute('id', \"jsonp2\");\n  script.setAttribute('onerror', \"jsonp_error_handler()\");\n  url=url+'?'+(new Date().getTime());\n  script.setAttribute('src', url);\n  document.getElementsByTagName('head')[0].appendChild(script); \n}\n\n\nvar loadKsanajs=function(){\n\tif (typeof process!=\"undefined\" && !process.browser) {\n\t\tvar ksanajs=require(\"fs\").readFileSync(\"./ksana.js\",\"utf8\").trim();\n\t\tdownloader=require(\"./downloader\");\n\t\t//ksana.js=JSON.parse(ksanajs.substring(14,ksanajs.length-1));\n\t\trootPath=process.cwd();\n\t\trootPath=require(\"path\").resolve(rootPath,\"..\").replace(/\\\\/g,\"/\")+'/';\n\t\tksana.ready=true;\n\t} else{\n\t\tvar url=window.location.origin+window.location.pathname.replace(\"index.html\",\"\")+\"ksana.js\";\n\t\tjsonp(url,appname,function(data){\n\t\t\tksana.js=data;\n\t\t\tksana.ready=true;\n\t\t});\n\t}\n}\n\nloadKsanajs();\n\nvar boot=function(appId,cb) {\n\tif (typeof appId==\"function\") {\n\t\tcb=appId;\n\t\tappId=\"unknownapp\";\n\t}\n\n\tksana.appId=appId;\n\tvar timer=setInterval(function(){\n\t\t\tif (ksana.ready){\n\t\t\t\tclearInterval(timer);\n\t\t\t\tcb();\n\t\t\t}\n\t\t});\n}\n\n\nvar ksanagap={\n\tplatform:\"node-webkit\",\n\tstartDownload:downloader.startDownload,\n\tdownloadedByte:downloader.downloadedByte,\n\tdownloadingFile:downloader.downloadingFile,\n\tcancelDownload:downloader.cancelDownload,\n\tdoneDownload:downloader.doneDownload,\n\tswitchApp:switchApp,\n\trootPath:rootPath,\n\tdeleteApp: deleteApp,\n\tusername:username, //not support on PC\n\tuseremail:username,\n\truntime_version:runtime_version,\n\tboot:boot\n}\nmodule.exports=ksanagap;",
    "var started=false;\nvar timer=null;\nvar bundledate=null;\nvar get_date=require(\"./html5fs\").get_date;\nvar checkIfBundleUpdated=function() {\n\tget_date(\"bundle.js\",function(date){\n\t\tif (bundledate &&bundledate!=date){\n\t\t\tlocation.reload();\n\t\t}\n\t\tbundledate=date;\n\t});\n}\nvar livereload=function() {\n\tif (started) return;\n\n\ttimer1=setInterval(function(){\n\t\tcheckIfBundleUpdated();\n\t},2000);\n\tstarted=true;\n}\n\nmodule.exports=livereload;",
    "function mkdirP (p, mode, f, made) {\n     var path = nodeRequire('path');\n     var fs = nodeRequire('fs');\n\t\n    if (typeof mode === 'function' || mode === undefined) {\n        f = mode;\n        mode = 0x1FF & (~process.umask());\n    }\n    if (!made) made = null;\n\n    var cb = f || function () {};\n    if (typeof mode === 'string') mode = parseInt(mode, 8);\n    p = path.resolve(p);\n\n    fs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), mode, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, mode, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                fs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, mode, made) {\n    var path = nodeRequire('path');\n    var fs = nodeRequire('fs');\n    if (mode === undefined) {\n        mode = 0x1FF & (~process.umask());\n    }\n    if (!made) made = null;\n\n    if (typeof mode === 'string') mode = parseInt(mode, 8);\n    p = path.resolve(p);\n\n    try {\n        fs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), mode, made);\n                sync(p, mode, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = fs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n",
    "var opt = { check:false, check_strict:false, print_warnings:false, fix_spacing:false }\r\n\r\nfunction setopt(arg_opt) {\r\n\tfor (i in arg_opt) opt[i] = arg_opt[i]\r\n\tif (opt.check_strict && !opt.check) { \r\n\t\tthrow 'check_strict requires check.'\r\n\t}\r\n}\r\n\r\nfunction newHashSet() {\r\n\tvar x = []\r\n\tx.add = function (K) {\r\n\t\tif (this.indexOf(K) < 0) this.push(K)\r\n\t}\r\n\tx.contains = function (K) {\r\n\t\treturn this.indexOf(K) >= 0\r\n\t}\r\n\treturn x\r\n}\r\n\r\nfunction newHashMap() {\r\n\tvar x = {}\r\n\tx.k = [], x.v = []\r\n\tx.put = function (K, V) {\r\n\t\tvar i = this.k.indexOf(K)\r\n\t\tif (i < 0) this.k.push(K), this.v.push(V); else this.v[i] = V\r\n\t}\r\n\tx.containsKey = function (K) {\r\n\t\treturn this.k.indexOf(K) >= 0\r\n\t}\r\n\tx.get = function (K) {\r\n\t\tvar i = this.k.indexOf(K)\r\n\t\tif (i >= 0) return this.v[i]\r\n\t}\r\n\treturn x\r\n}\r\nvar tmpSet;\r\n// mappings are ported from Java code\r\n// *** Wylie to Unicode mappings ***\r\n// list of wylie consonant => unicode\r\nvar m_consonant = new newHashMap();\r\nm_consonant.put(\"k\", \t\"\\u0f40\");\r\nm_consonant.put(\"kh\", \t\"\\u0f41\");\r\nm_consonant.put(\"g\", \t\"\\u0f42\");\r\nm_consonant.put(\"gh\", \t\"\\u0f42\\u0fb7\");\r\nm_consonant.put(\"g+h\", \t\"\\u0f42\\u0fb7\");\r\nm_consonant.put(\"ng\", \t\"\\u0f44\");\r\nm_consonant.put(\"c\", \t\"\\u0f45\");\r\nm_consonant.put(\"ch\", \t\"\\u0f46\");\r\nm_consonant.put(\"j\", \t\"\\u0f47\");\r\nm_consonant.put(\"ny\", \t\"\\u0f49\");\r\nm_consonant.put(\"T\", \t\"\\u0f4a\");\r\nm_consonant.put(\"-t\", \t\"\\u0f4a\");\r\nm_consonant.put(\"Th\", \t\"\\u0f4b\");\r\nm_consonant.put(\"-th\", \t\"\\u0f4b\");\r\nm_consonant.put(\"D\", \t\"\\u0f4c\");\r\nm_consonant.put(\"-d\", \t\"\\u0f4c\");\r\nm_consonant.put(\"Dh\", \t\"\\u0f4c\\u0fb7\");\r\nm_consonant.put(\"D+h\", \t\"\\u0f4c\\u0fb7\");\r\nm_consonant.put(\"-dh\", \t\"\\u0f4c\\u0fb7\");\r\nm_consonant.put(\"-d+h\", \"\\u0f4c\\u0fb7\");\r\nm_consonant.put(\"N\", \t\"\\u0f4e\");\r\nm_consonant.put(\"-n\", \t\"\\u0f4e\");\r\nm_consonant.put(\"t\", \t\"\\u0f4f\");\r\nm_consonant.put(\"th\", \t\"\\u0f50\");\r\nm_consonant.put(\"d\", \t\"\\u0f51\");\r\nm_consonant.put(\"dh\", \t\"\\u0f51\\u0fb7\");\r\nm_consonant.put(\"d+h\", \t\"\\u0f51\\u0fb7\");\r\nm_consonant.put(\"n\", \t\"\\u0f53\");\r\nm_consonant.put(\"p\", \t\"\\u0f54\");\r\nm_consonant.put(\"ph\", \t\"\\u0f55\");\r\nm_consonant.put(\"b\", \t\"\\u0f56\");\r\nm_consonant.put(\"bh\", \t\"\\u0f56\\u0fb7\");\r\nm_consonant.put(\"b+h\", \t\"\\u0f56\\u0fb7\");\r\nm_consonant.put(\"m\", \t\"\\u0f58\");\r\nm_consonant.put(\"ts\", \t\"\\u0f59\");\r\nm_consonant.put(\"tsh\", \t\"\\u0f5a\");\r\nm_consonant.put(\"dz\", \t\"\\u0f5b\");\r\nm_consonant.put(\"dzh\", \t\"\\u0f5b\\u0fb7\");\r\nm_consonant.put(\"dz+h\", \"\\u0f5b\\u0fb7\");\r\nm_consonant.put(\"w\", \t\"\\u0f5d\");\r\nm_consonant.put(\"zh\", \t\"\\u0f5e\");\r\nm_consonant.put(\"z\", \t\"\\u0f5f\");\r\nm_consonant.put(\"'\", \t\"\\u0f60\");\r\nm_consonant.put(\"\\u2018\", \t\"\\u0f60\");\t// typographic quotes\r\nm_consonant.put(\"\\u2019\", \t\"\\u0f60\");\r\nm_consonant.put(\"y\", \t\"\\u0f61\");\r\nm_consonant.put(\"r\", \t\"\\u0f62\");\r\nm_consonant.put(\"l\", \t\"\\u0f63\");\r\nm_consonant.put(\"sh\", \t\"\\u0f64\");\r\nm_consonant.put(\"Sh\", \t\"\\u0f65\");\r\nm_consonant.put(\"-sh\", \t\"\\u0f65\");\r\nm_consonant.put(\"s\", \t\"\\u0f66\");\r\nm_consonant.put(\"h\", \t\"\\u0f67\");\r\nm_consonant.put(\"W\", \t\"\\u0f5d\");\r\nm_consonant.put(\"Y\", \t\"\\u0f61\");\r\nm_consonant.put(\"R\", \t\"\\u0f6a\");\r\nm_consonant.put(\"f\", \t\"\\u0f55\\u0f39\");\r\nm_consonant.put(\"v\", \t\"\\u0f56\\u0f39\");\r\n\r\n// subjoined letters\r\nvar m_subjoined = new newHashMap();\r\nm_subjoined.put(\"k\", \t\"\\u0f90\");\r\nm_subjoined.put(\"kh\", \t\"\\u0f91\");\r\nm_subjoined.put(\"g\", \t\"\\u0f92\");\r\nm_subjoined.put(\"gh\", \t\"\\u0f92\\u0fb7\");\r\nm_subjoined.put(\"g+h\", \t\"\\u0f92\\u0fb7\");\r\nm_subjoined.put(\"ng\", \t\"\\u0f94\");\r\nm_subjoined.put(\"c\", \t\"\\u0f95\");\r\nm_subjoined.put(\"ch\", \t\"\\u0f96\");\r\nm_subjoined.put(\"j\", \t\"\\u0f97\");\r\nm_subjoined.put(\"ny\", \t\"\\u0f99\");\r\nm_subjoined.put(\"T\", \t\"\\u0f9a\");\r\nm_subjoined.put(\"-t\", \t\"\\u0f9a\");\r\nm_subjoined.put(\"Th\", \t\"\\u0f9b\");\r\nm_subjoined.put(\"-th\", \t\"\\u0f9b\");\r\nm_subjoined.put(\"D\", \t\"\\u0f9c\");\r\nm_subjoined.put(\"-d\", \t\"\\u0f9c\");\r\nm_subjoined.put(\"Dh\", \t\"\\u0f9c\\u0fb7\");\r\nm_subjoined.put(\"D+h\", \t\"\\u0f9c\\u0fb7\");\r\nm_subjoined.put(\"-dh\", \t\"\\u0f9c\\u0fb7\");\r\nm_subjoined.put(\"-d+h\",\t\"\\u0f9c\\u0fb7\");\r\nm_subjoined.put(\"N\", \t\"\\u0f9e\");\r\nm_subjoined.put(\"-n\", \t\"\\u0f9e\");\r\nm_subjoined.put(\"t\", \t\"\\u0f9f\");\r\nm_subjoined.put(\"th\", \t\"\\u0fa0\");\r\nm_subjoined.put(\"d\", \t\"\\u0fa1\");\r\nm_subjoined.put(\"dh\", \t\"\\u0fa1\\u0fb7\");\r\nm_subjoined.put(\"d+h\", \t\"\\u0fa1\\u0fb7\");\r\nm_subjoined.put(\"n\", \t\"\\u0fa3\");\r\nm_subjoined.put(\"p\", \t\"\\u0fa4\");\r\nm_subjoined.put(\"ph\", \t\"\\u0fa5\");\r\nm_subjoined.put(\"b\", \t\"\\u0fa6\");\r\nm_subjoined.put(\"bh\", \t\"\\u0fa6\\u0fb7\");\r\nm_subjoined.put(\"b+h\", \t\"\\u0fa6\\u0fb7\");\r\nm_subjoined.put(\"m\", \t\"\\u0fa8\");\r\nm_subjoined.put(\"ts\", \t\"\\u0fa9\");\r\nm_subjoined.put(\"tsh\", \t\"\\u0faa\");\r\nm_subjoined.put(\"dz\", \t\"\\u0fab\");\r\nm_subjoined.put(\"dzh\", \t\"\\u0fab\\u0fb7\");\r\nm_subjoined.put(\"dz+h\",\t\"\\u0fab\\u0fb7\");\r\nm_subjoined.put(\"w\", \t\"\\u0fad\");\r\nm_subjoined.put(\"zh\", \t\"\\u0fae\");\r\nm_subjoined.put(\"z\", \t\"\\u0faf\");\r\nm_subjoined.put(\"'\", \t\"\\u0fb0\");\r\nm_subjoined.put(\"\\u2018\", \t\"\\u0fb0\");\t// typographic quotes\r\nm_subjoined.put(\"\\u2019\", \t\"\\u0fb0\");\r\nm_subjoined.put(\"y\", \t\"\\u0fb1\");\r\nm_subjoined.put(\"r\", \t\"\\u0fb2\");\r\nm_subjoined.put(\"l\", \t\"\\u0fb3\");\r\nm_subjoined.put(\"sh\", \t\"\\u0fb4\");\r\nm_subjoined.put(\"Sh\", \t\"\\u0fb5\");\r\nm_subjoined.put(\"-sh\", \t\"\\u0fb5\");\r\nm_subjoined.put(\"s\", \t\"\\u0fb6\");\r\nm_subjoined.put(\"h\", \t\"\\u0fb7\");\r\nm_subjoined.put(\"a\", \t\"\\u0fb8\");\r\nm_subjoined.put(\"W\", \t\"\\u0fba\");\r\nm_subjoined.put(\"Y\", \t\"\\u0fbb\");\r\nm_subjoined.put(\"R\", \t\"\\u0fbc\");\r\n\r\n// vowels\r\nvar m_vowel = new newHashMap();\r\nm_vowel.put(\"a\", \t\"\\u0f68\");\r\nm_vowel.put(\"A\", \t\"\\u0f71\");\r\nm_vowel.put(\"i\", \t\"\\u0f72\");\r\nm_vowel.put(\"I\", \t\"\\u0f71\\u0f72\");\r\nm_vowel.put(\"u\", \t\"\\u0f74\");\r\nm_vowel.put(\"U\", \t\"\\u0f71\\u0f74\");\r\nm_vowel.put(\"e\", \t\"\\u0f7a\");\r\nm_vowel.put(\"ai\", \t\"\\u0f7b\");\r\nm_vowel.put(\"o\", \t\"\\u0f7c\");\r\nm_vowel.put(\"au\", \t\"\\u0f7d\");\r\nm_vowel.put(\"-i\", \t\"\\u0f80\");\r\nm_vowel.put(\"-I\", \t\"\\u0f71\\u0f80\");\r\n\r\n// final symbols to unicode\r\nvar m_final_uni = new newHashMap();\r\nm_final_uni.put(\"M\", \t\"\\u0f7e\");\r\nm_final_uni.put(\"~M`\", \t\"\\u0f82\");\r\nm_final_uni.put(\"~M\", \t\"\\u0f83\");\r\nm_final_uni.put(\"X\", \t\"\\u0f37\");\r\nm_final_uni.put(\"~X\", \t\"\\u0f35\");\r\nm_final_uni.put(\"H\", \t\"\\u0f7f\");\r\nm_final_uni.put(\"?\", \t\"\\u0f84\");\r\nm_final_uni.put(\"^\", \t\"\\u0f39\");\r\n\r\n// final symbols organized by class\r\nvar m_final_class = new newHashMap();\r\nm_final_class.put(\"M\", \t\"M\");\r\nm_final_class.put(\"~M`\", \"M\");\r\nm_final_class.put(\"~M\",  \"M\");\r\nm_final_class.put(\"X\", \t\"X\");\r\nm_final_class.put(\"~X\", \"X\");\r\nm_final_class.put(\"H\", \t\"H\");\r\nm_final_class.put(\"?\", \t\"?\");\r\nm_final_class.put(\"^\", \t\"^\");\r\n\r\n// other stand-alone symbols\r\nvar m_other = new newHashMap();\r\nm_other.put(\"0\", \t\"\\u0f20\");\r\nm_other.put(\"1\", \t\"\\u0f21\");\r\nm_other.put(\"2\", \t\"\\u0f22\");\r\nm_other.put(\"3\", \t\"\\u0f23\");\r\nm_other.put(\"4\", \t\"\\u0f24\");\r\nm_other.put(\"5\", \t\"\\u0f25\");\r\nm_other.put(\"6\", \t\"\\u0f26\");\r\nm_other.put(\"7\", \t\"\\u0f27\");\r\nm_other.put(\"8\", \t\"\\u0f28\");\r\nm_other.put(\"9\", \t\"\\u0f29\");\r\nm_other.put(\" \", \t\"\\u0f0b\");\r\nm_other.put(\"*\", \t\"\\u0f0c\");\r\nm_other.put(\"/\", \t\"\\u0f0d\");\r\nm_other.put(\"//\", \t\"\\u0f0e\");\r\nm_other.put(\";\", \t\"\\u0f0f\");\r\nm_other.put(\"|\", \t\"\\u0f11\");\r\nm_other.put(\"!\", \t\"\\u0f08\");\r\nm_other.put(\":\", \t\"\\u0f14\");\r\nm_other.put(\"_\", \t\" \");\r\nm_other.put(\"=\", \t\"\\u0f34\");\r\nm_other.put(\"<\", \t\"\\u0f3a\");\r\nm_other.put(\">\", \t\"\\u0f3b\");\r\nm_other.put(\"(\", \t\"\\u0f3c\");\r\nm_other.put(\")\", \t\"\\u0f3d\");\r\nm_other.put(\"@\", \t\"\\u0f04\");\r\nm_other.put(\"#\", \t\"\\u0f05\");\r\nm_other.put(\"$\", \t\"\\u0f06\");\r\nm_other.put(\"%\", \t\"\\u0f07\");\r\n\r\n// special characters: flag those if they occur out of context\r\nvar m_special = new newHashSet();\r\nm_special.add(\".\");\r\nm_special.add(\"+\");\r\nm_special.add(\"-\");\r\nm_special.add(\"~\");\r\nm_special.add(\"^\");\r\nm_special.add(\"?\");\r\nm_special.add(\"`\");\r\nm_special.add(\"]\");\r\n\r\n// superscripts: hashmap of superscript => set of letters or stacks below\r\nvar m_superscripts = new newHashMap();\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"k\");\r\ntmpSet.add(\"g\");\r\ntmpSet.add(\"ng\");\r\ntmpSet.add(\"j\");\r\ntmpSet.add(\"ny\");\r\ntmpSet.add(\"t\");\r\ntmpSet.add(\"d\");\r\ntmpSet.add(\"n\");\r\ntmpSet.add(\"b\");\r\ntmpSet.add(\"m\");\r\ntmpSet.add(\"ts\");\r\ntmpSet.add(\"dz\");\r\ntmpSet.add(\"k+y\");\r\ntmpSet.add(\"g+y\");\r\ntmpSet.add(\"m+y\");\r\ntmpSet.add(\"b+w\");\r\ntmpSet.add(\"ts+w\");\r\ntmpSet.add(\"g+w\");\r\nm_superscripts.put(\"r\", tmpSet);\r\n\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"k\");\r\ntmpSet.add(\"g\");\r\ntmpSet.add(\"ng\");\r\ntmpSet.add(\"c\");\r\ntmpSet.add(\"j\");\r\ntmpSet.add(\"t\");\r\ntmpSet.add(\"d\");\r\ntmpSet.add(\"p\");\r\ntmpSet.add(\"b\");\r\ntmpSet.add(\"h\");\r\nm_superscripts.put(\"l\", tmpSet);\r\n\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"k\");\r\ntmpSet.add(\"g\");\r\ntmpSet.add(\"ng\");\r\ntmpSet.add(\"ny\");\r\ntmpSet.add(\"t\");\r\ntmpSet.add(\"d\");\r\ntmpSet.add(\"n\");\r\ntmpSet.add(\"p\");\r\ntmpSet.add(\"b\");\r\ntmpSet.add(\"m\");\r\ntmpSet.add(\"ts\");\r\ntmpSet.add(\"k+y\");\r\ntmpSet.add(\"g+y\");\r\ntmpSet.add(\"p+y\");\r\ntmpSet.add(\"b+y\");\r\ntmpSet.add(\"m+y\");\r\ntmpSet.add(\"k+r\");\r\ntmpSet.add(\"g+r\");\r\ntmpSet.add(\"p+r\");\r\ntmpSet.add(\"b+r\");\r\ntmpSet.add(\"m+r\");\r\ntmpSet.add(\"n+r\");\r\nm_superscripts.put(\"s\", tmpSet);\r\n\r\n// subscripts => set of letters above\r\nvar m_subscripts = new newHashMap();\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"k\");\r\ntmpSet.add(\"kh\");\r\ntmpSet.add(\"g\");\r\ntmpSet.add(\"p\");\r\ntmpSet.add(\"ph\");\r\ntmpSet.add(\"b\");\r\ntmpSet.add(\"m\");\r\ntmpSet.add(\"r+k\");\r\ntmpSet.add(\"r+g\");\r\ntmpSet.add(\"r+m\");\r\ntmpSet.add(\"s+k\");\r\ntmpSet.add(\"s+g\");\r\ntmpSet.add(\"s+p\");\r\ntmpSet.add(\"s+b\");\r\ntmpSet.add(\"s+m\");\r\nm_subscripts.put(\"y\", tmpSet);\r\n\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"k\");\r\ntmpSet.add(\"kh\");\r\ntmpSet.add(\"g\");\r\ntmpSet.add(\"t\");\r\ntmpSet.add(\"th\");\r\ntmpSet.add(\"d\");\r\ntmpSet.add(\"n\");\r\ntmpSet.add(\"p\");\r\ntmpSet.add(\"ph\");\r\ntmpSet.add(\"b\");\r\ntmpSet.add(\"m\");\r\ntmpSet.add(\"sh\");\r\ntmpSet.add(\"s\");\r\ntmpSet.add(\"h\");\r\ntmpSet.add(\"dz\");\r\ntmpSet.add(\"s+k\");\r\ntmpSet.add(\"s+g\");\r\ntmpSet.add(\"s+p\");\r\ntmpSet.add(\"s+b\");\r\ntmpSet.add(\"s+m\");\r\ntmpSet.add(\"s+n\");\r\nm_subscripts.put(\"r\", tmpSet);\r\n\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"k\");\r\ntmpSet.add(\"g\");\r\ntmpSet.add(\"b\");\r\ntmpSet.add(\"r\");\r\ntmpSet.add(\"s\");\r\ntmpSet.add(\"z\");\r\nm_subscripts.put(\"l\", tmpSet);\r\n\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"k\");\r\ntmpSet.add(\"kh\");\r\ntmpSet.add(\"g\");\r\ntmpSet.add(\"c\");\r\ntmpSet.add(\"ny\");\r\ntmpSet.add(\"t\");\r\ntmpSet.add(\"d\");\r\ntmpSet.add(\"ts\");\r\ntmpSet.add(\"tsh\");\r\ntmpSet.add(\"zh\");\r\ntmpSet.add(\"z\");\r\ntmpSet.add(\"r\");\r\ntmpSet.add(\"l\");\r\ntmpSet.add(\"sh\");\r\ntmpSet.add(\"s\");\r\ntmpSet.add(\"h\");\r\ntmpSet.add(\"g+r\");\r\ntmpSet.add(\"d+r\");\r\ntmpSet.add(\"ph+y\");\r\ntmpSet.add(\"r+g\");\r\ntmpSet.add(\"r+ts\");\r\nm_subscripts.put(\"w\", tmpSet);\r\n\r\n// prefixes => set of consonants or stacks after\r\nvar m_prefixes = new newHashMap();\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"c\");\r\ntmpSet.add(\"ny\");\r\ntmpSet.add(\"t\");\r\ntmpSet.add(\"d\");\r\ntmpSet.add(\"n\");\r\ntmpSet.add(\"ts\");\r\ntmpSet.add(\"zh\");\r\ntmpSet.add(\"z\");\r\ntmpSet.add(\"y\");\r\ntmpSet.add(\"sh\");\r\ntmpSet.add(\"s\");\r\nm_prefixes.put(\"g\", tmpSet);\r\n\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"k\");\r\ntmpSet.add(\"g\");\r\ntmpSet.add(\"ng\");\r\ntmpSet.add(\"p\");\r\ntmpSet.add(\"b\");\r\ntmpSet.add(\"m\");\r\ntmpSet.add(\"k+y\");\r\ntmpSet.add(\"g+y\");\r\ntmpSet.add(\"p+y\");\r\ntmpSet.add(\"b+y\");\r\ntmpSet.add(\"m+y\");\r\ntmpSet.add(\"k+r\");\r\ntmpSet.add(\"g+r\");\r\ntmpSet.add(\"p+r\");\r\ntmpSet.add(\"b+r\");\r\nm_prefixes.put(\"d\", tmpSet);\r\n\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"k\");\r\ntmpSet.add(\"g\");\r\ntmpSet.add(\"c\");\r\ntmpSet.add(\"t\");\r\ntmpSet.add(\"d\");\r\ntmpSet.add(\"ts\");\r\ntmpSet.add(\"zh\");\r\ntmpSet.add(\"z\");\r\ntmpSet.add(\"sh\");\r\ntmpSet.add(\"s\");\r\ntmpSet.add(\"r\");\r\ntmpSet.add(\"l\");\r\ntmpSet.add(\"k+y\");\r\ntmpSet.add(\"g+y\");\r\ntmpSet.add(\"k+r\");\r\ntmpSet.add(\"g+r\");\r\ntmpSet.add(\"r+l\");\r\ntmpSet.add(\"s+l\");\r\ntmpSet.add(\"r+k\");\r\ntmpSet.add(\"r+g\");\r\ntmpSet.add(\"r+ng\");\r\ntmpSet.add(\"r+j\");\r\ntmpSet.add(\"r+ny\");\r\ntmpSet.add(\"r+t\");\r\ntmpSet.add(\"r+d\");\r\ntmpSet.add(\"r+n\");\r\ntmpSet.add(\"r+ts\");\r\ntmpSet.add(\"r+dz\");\r\ntmpSet.add(\"s+k\");\r\ntmpSet.add(\"s+g\");\r\ntmpSet.add(\"s+ng\");\r\ntmpSet.add(\"s+ny\");\r\ntmpSet.add(\"s+t\");\r\ntmpSet.add(\"s+d\");\r\ntmpSet.add(\"s+n\");\r\ntmpSet.add(\"s+ts\");\r\ntmpSet.add(\"r+k+y\");\r\ntmpSet.add(\"r+g+y\");\r\ntmpSet.add(\"s+k+y\");\r\ntmpSet.add(\"s+g+y\");\r\ntmpSet.add(\"s+k+r\");\r\ntmpSet.add(\"s+g+r\");\r\ntmpSet.add(\"l+d\");\r\ntmpSet.add(\"l+t\");\r\ntmpSet.add(\"k+l\");\r\ntmpSet.add(\"s+r\");\r\ntmpSet.add(\"z+l\");\r\ntmpSet.add(\"s+w\");\r\nm_prefixes.put(\"b\", tmpSet);\r\n\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"kh\");\r\ntmpSet.add(\"g\");\r\ntmpSet.add(\"ng\");\r\ntmpSet.add(\"ch\");\r\ntmpSet.add(\"j\");\r\ntmpSet.add(\"ny\");\r\ntmpSet.add(\"th\");\r\ntmpSet.add(\"d\");\r\ntmpSet.add(\"n\");\r\ntmpSet.add(\"tsh\");\r\ntmpSet.add(\"dz\");\r\ntmpSet.add(\"kh+y\");\r\ntmpSet.add(\"g+y\");\r\ntmpSet.add(\"kh+r\");\r\ntmpSet.add(\"g+r\");\r\nm_prefixes.put(\"m\", tmpSet);\r\n\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"kh\");\r\ntmpSet.add(\"g\");\r\ntmpSet.add(\"ch\");\r\ntmpSet.add(\"j\");\r\ntmpSet.add(\"th\");\r\ntmpSet.add(\"d\");\r\ntmpSet.add(\"ph\");\r\ntmpSet.add(\"b\");\r\ntmpSet.add(\"tsh\");\r\ntmpSet.add(\"dz\");\r\ntmpSet.add(\"kh+y\");\r\ntmpSet.add(\"g+y\");\r\ntmpSet.add(\"ph+y\");\r\ntmpSet.add(\"b+y\");\r\ntmpSet.add(\"kh+r\");\r\ntmpSet.add(\"g+r\");\r\ntmpSet.add(\"d+r\");\r\ntmpSet.add(\"ph+r\");\r\ntmpSet.add(\"b+r\");\r\nm_prefixes.put(\"'\", tmpSet);\r\nm_prefixes.put(\"\\u2018\", tmpSet);\r\nm_prefixes.put(\"\\u2019\", tmpSet);\r\n\r\n// set of suffix letters\r\n// also included are some Skt letters b/c they occur often in suffix position in Skt words\r\nvar m_suffixes = new newHashSet();\r\nm_suffixes.add(\"'\");\r\nm_suffixes.add(\"\\u2018\");\r\nm_suffixes.add(\"\\u2019\");\r\nm_suffixes.add(\"g\");\r\nm_suffixes.add(\"ng\");\r\nm_suffixes.add(\"d\");\r\nm_suffixes.add(\"n\");\r\nm_suffixes.add(\"b\");\r\nm_suffixes.add(\"m\");\r\nm_suffixes.add(\"r\");\r\nm_suffixes.add(\"l\");\r\nm_suffixes.add(\"s\");\r\nm_suffixes.add(\"N\");\r\nm_suffixes.add(\"T\");\r\nm_suffixes.add(\"-n\");\r\nm_suffixes.add(\"-t\");\r\n\r\n// suffix2 => set of letters before\r\nvar m_suff2 = new newHashMap();\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"g\");\r\ntmpSet.add(\"ng\");\r\ntmpSet.add(\"b\");\r\ntmpSet.add(\"m\");\r\nm_suff2.put(\"s\", tmpSet);\r\n\r\ntmpSet = new newHashSet();\r\ntmpSet.add(\"n\");\r\ntmpSet.add(\"r\");\r\ntmpSet.add(\"l\");\r\nm_suff2.put(\"d\", tmpSet);\r\n\r\n// root letter index for very ambiguous three-stack syllables\r\nvar m_ambiguous_key = new newHashMap();\r\nm_ambiguous_key.put(\"dgs\", \t1);\r\nm_ambiguous_key.put(\"dms\", \t1);\r\nm_ambiguous_key.put(\"'gs\", \t1);\r\nm_ambiguous_key.put(\"mngs\", \t0);\r\nm_ambiguous_key.put(\"bgs\", \t0);\r\nm_ambiguous_key.put(\"dbs\", \t1);\r\n\r\nvar m_ambiguous_wylie = new newHashMap();\r\nm_ambiguous_wylie.put(\"dgs\", \t\"dgas\");\r\nm_ambiguous_wylie.put(\"dms\", \t\"dmas\");\r\nm_ambiguous_wylie.put(\"'gs\", \t\"'gas\");\r\nm_ambiguous_wylie.put(\"mngs\", \t\"mangs\");\r\nm_ambiguous_wylie.put(\"bgs\", \t\"bags\");\r\nm_ambiguous_wylie.put(\"dbs\", \t\"dbas\");\r\n\r\n// *** Unicode to Wylie mappings ***\r\n\r\n// top letters\r\nvar m_tib_top = new newHashMap();\r\nm_tib_top.put('\\u0f40', \t\"k\");\r\nm_tib_top.put('\\u0f41', \t\"kh\");\r\nm_tib_top.put('\\u0f42', \t\"g\");\r\nm_tib_top.put('\\u0f43', \t\"g+h\");\r\nm_tib_top.put('\\u0f44', \t\"ng\");\r\nm_tib_top.put('\\u0f45', \t\"c\");\r\nm_tib_top.put('\\u0f46', \t\"ch\");\r\nm_tib_top.put('\\u0f47', \t\"j\");\r\nm_tib_top.put('\\u0f49', \t\"ny\");\r\nm_tib_top.put('\\u0f4a', \t\"T\");\r\nm_tib_top.put('\\u0f4b', \t\"Th\");\r\nm_tib_top.put('\\u0f4c', \t\"D\");\r\nm_tib_top.put('\\u0f4d', \t\"D+h\");\r\nm_tib_top.put('\\u0f4e', \t\"N\");\r\nm_tib_top.put('\\u0f4f', \t\"t\");\r\nm_tib_top.put('\\u0f50', \t\"th\");\r\nm_tib_top.put('\\u0f51', \t\"d\");\r\nm_tib_top.put('\\u0f52', \t\"d+h\");\r\nm_tib_top.put('\\u0f53', \t\"n\");\r\nm_tib_top.put('\\u0f54', \t\"p\");\r\nm_tib_top.put('\\u0f55', \t\"ph\");\r\nm_tib_top.put('\\u0f56', \t\"b\");\r\nm_tib_top.put('\\u0f57', \t\"b+h\");\r\nm_tib_top.put('\\u0f58', \t\"m\");\r\nm_tib_top.put('\\u0f59', \t\"ts\");\r\nm_tib_top.put('\\u0f5a', \t\"tsh\");\r\nm_tib_top.put('\\u0f5b', \t\"dz\");\r\nm_tib_top.put('\\u0f5c', \t\"dz+h\");\r\nm_tib_top.put('\\u0f5d', \t\"w\");\r\nm_tib_top.put('\\u0f5e', \t\"zh\");\r\nm_tib_top.put('\\u0f5f', \t\"z\");\r\nm_tib_top.put('\\u0f60', \t\"'\");\r\nm_tib_top.put('\\u0f61', \t\"y\");\r\nm_tib_top.put('\\u0f62', \t\"r\");\r\nm_tib_top.put('\\u0f63', \t\"l\");\r\nm_tib_top.put('\\u0f64', \t\"sh\");\r\nm_tib_top.put('\\u0f65', \t\"Sh\");\r\nm_tib_top.put('\\u0f66', \t\"s\");\r\nm_tib_top.put('\\u0f67', \t\"h\");\r\nm_tib_top.put('\\u0f68', \t\"a\");\r\nm_tib_top.put('\\u0f69', \t\"k+Sh\");\r\nm_tib_top.put('\\u0f6a', \t\"R\");\r\n\r\n// subjoined letters\r\nvar m_tib_subjoined = new newHashMap();\r\nm_tib_subjoined.put('\\u0f90', \t\"k\");\r\nm_tib_subjoined.put('\\u0f91', \t\"kh\");\r\nm_tib_subjoined.put('\\u0f92', \t\"g\");\r\nm_tib_subjoined.put('\\u0f93', \t\"g+h\");\r\nm_tib_subjoined.put('\\u0f94', \t\"ng\");\r\nm_tib_subjoined.put('\\u0f95', \t\"c\");\r\nm_tib_subjoined.put('\\u0f96', \t\"ch\");\r\nm_tib_subjoined.put('\\u0f97', \t\"j\");\r\nm_tib_subjoined.put('\\u0f99', \t\"ny\");\r\nm_tib_subjoined.put('\\u0f9a', \t\"T\");\r\nm_tib_subjoined.put('\\u0f9b', \t\"Th\");\r\nm_tib_subjoined.put('\\u0f9c', \t\"D\");\r\nm_tib_subjoined.put('\\u0f9d', \t\"D+h\");\r\nm_tib_subjoined.put('\\u0f9e', \t\"N\");\r\nm_tib_subjoined.put('\\u0f9f', \t\"t\");\r\nm_tib_subjoined.put('\\u0fa0', \t\"th\");\r\nm_tib_subjoined.put('\\u0fa1', \t\"d\");\r\nm_tib_subjoined.put('\\u0fa2', \t\"d+h\");\r\nm_tib_subjoined.put('\\u0fa3', \t\"n\");\r\nm_tib_subjoined.put('\\u0fa4', \t\"p\");\r\nm_tib_subjoined.put('\\u0fa5', \t\"ph\");\r\nm_tib_subjoined.put('\\u0fa6', \t\"b\");\r\nm_tib_subjoined.put('\\u0fa7', \t\"b+h\");\r\nm_tib_subjoined.put('\\u0fa8', \t\"m\");\r\nm_tib_subjoined.put('\\u0fa9', \t\"ts\");\r\nm_tib_subjoined.put('\\u0faa', \t\"tsh\");\r\nm_tib_subjoined.put('\\u0fab', \t\"dz\");\r\nm_tib_subjoined.put('\\u0fac', \t\"dz+h\");\r\nm_tib_subjoined.put('\\u0fad', \t\"w\");\r\nm_tib_subjoined.put('\\u0fae', \t\"zh\");\r\nm_tib_subjoined.put('\\u0faf', \t\"z\");\r\nm_tib_subjoined.put('\\u0fb0', \t\"'\");\r\nm_tib_subjoined.put('\\u0fb1', \t\"y\");\r\nm_tib_subjoined.put('\\u0fb2', \t\"r\");\r\nm_tib_subjoined.put('\\u0fb3', \t\"l\");\r\nm_tib_subjoined.put('\\u0fb4', \t\"sh\");\r\nm_tib_subjoined.put('\\u0fb5', \t\"Sh\");\r\nm_tib_subjoined.put('\\u0fb6', \t\"s\");\r\nm_tib_subjoined.put('\\u0fb7', \t\"h\");\r\nm_tib_subjoined.put('\\u0fb8', \t\"a\");\r\nm_tib_subjoined.put('\\u0fb9', \t\"k+Sh\");\r\nm_tib_subjoined.put('\\u0fba', \t\"W\");\r\nm_tib_subjoined.put('\\u0fbb', \t\"Y\");\r\nm_tib_subjoined.put('\\u0fbc', \t\"R\");\r\n\r\n// vowel signs:\r\n// a-chen is not here because that's a top character, not a vowel sign.\r\n// pre-composed \"I\" and \"U\" are dealt here; other pre-composed Skt vowels are more\r\n// easily handled by a global replace in toWylie(), b/c they turn into subjoined \"r\"/\"l\".\r\n\r\nvar m_tib_vowel = new newHashMap();\r\nm_tib_vowel.put('\\u0f71', \t\"A\");\r\nm_tib_vowel.put('\\u0f72', \t\"i\");\r\nm_tib_vowel.put('\\u0f73', \t\"I\");\r\nm_tib_vowel.put('\\u0f74', \t\"u\");\r\nm_tib_vowel.put('\\u0f75', \t\"U\");\r\nm_tib_vowel.put('\\u0f7a', \t\"e\");\r\nm_tib_vowel.put('\\u0f7b', \t\"ai\");\r\nm_tib_vowel.put('\\u0f7c', \t\"o\");\r\nm_tib_vowel.put('\\u0f7d', \t\"au\");\r\nm_tib_vowel.put('\\u0f80', \t\"-i\");\r\n\r\n// long (Skt) vowels\r\nvar m_tib_vowel_long = new newHashMap();\r\nm_tib_vowel_long.put(\"i\", \t\"I\");\r\nm_tib_vowel_long.put(\"u\", \t\"U\");\r\nm_tib_vowel_long.put(\"-i\", \t\"-I\");\r\n\r\n// final symbols => wylie\r\nvar m_tib_final_wylie = new newHashMap();\r\nm_tib_final_wylie.put('\\u0f7e', \t\"M\");\r\nm_tib_final_wylie.put('\\u0f82', \t\"~M`\");\r\nm_tib_final_wylie.put('\\u0f83', \t\"~M\");\r\nm_tib_final_wylie.put('\\u0f37', \t\"X\");\r\nm_tib_final_wylie.put('\\u0f35', \t\"~X\");\r\nm_tib_final_wylie.put('\\u0f39', \t\"^\");\r\nm_tib_final_wylie.put('\\u0f7f', \t\"H\");\r\nm_tib_final_wylie.put('\\u0f84', \t\"?\");\r\n\r\n// final symbols by class\r\nvar m_tib_final_class = new newHashMap();\r\nm_tib_final_class.put('\\u0f7e', \t\"M\");\r\nm_tib_final_class.put('\\u0f82', \t\"M\");\r\nm_tib_final_class.put('\\u0f83', \t\"M\");\r\nm_tib_final_class.put('\\u0f37', \t\"X\");\r\nm_tib_final_class.put('\\u0f35', \t\"X\");\r\nm_tib_final_class.put('\\u0f39', \t\"^\");\r\nm_tib_final_class.put('\\u0f7f', \t\"H\");\r\nm_tib_final_class.put('\\u0f84', \t\"?\");\r\n\r\n// special characters introduced by ^\r\nvar m_tib_caret = new newHashMap();\r\nm_tib_caret.put(\"ph\", \t\"f\");\r\nm_tib_caret.put(\"b\", \t\"v\");\r\n\r\n// other stand-alone characters\r\nvar m_tib_other = new newHashMap();\r\nm_tib_other.put(' ', \t\t\"_\");\r\nm_tib_other.put('\\u0f04', \t\"@\");\r\nm_tib_other.put('\\u0f05', \t\"#\");\r\nm_tib_other.put('\\u0f06', \t\"$\");\r\nm_tib_other.put('\\u0f07', \t\"%\");\r\nm_tib_other.put('\\u0f08', \t\"!\");\r\nm_tib_other.put('\\u0f0b', \t\" \");\r\nm_tib_other.put('\\u0f0c', \t\"*\");\r\nm_tib_other.put('\\u0f0d', \t\"/\");\r\nm_tib_other.put('\\u0f0e', \t\"//\");\r\nm_tib_other.put('\\u0f0f', \t\";\");\r\nm_tib_other.put('\\u0f11', \t\"|\");\r\nm_tib_other.put('\\u0f14', \t\":\");\r\nm_tib_other.put('\\u0f20', \t\"0\");\r\nm_tib_other.put('\\u0f21', \t\"1\");\r\nm_tib_other.put('\\u0f22', \t\"2\");\r\nm_tib_other.put('\\u0f23', \t\"3\");\r\nm_tib_other.put('\\u0f24', \t\"4\");\r\nm_tib_other.put('\\u0f25', \t\"5\");\r\nm_tib_other.put('\\u0f26', \t\"6\");\r\nm_tib_other.put('\\u0f27', \t\"7\");\r\nm_tib_other.put('\\u0f28', \t\"8\");\r\nm_tib_other.put('\\u0f29', \t\"9\");\r\nm_tib_other.put('\\u0f34', \t\"=\");\r\nm_tib_other.put('\\u0f3a', \t\"<\");\r\nm_tib_other.put('\\u0f3b', \t\">\");\r\nm_tib_other.put('\\u0f3c', \t\"(\");\r\nm_tib_other.put('\\u0f3d', \t\")\");\r\n\r\n// all these stacked consonant combinations don't need \"+\"s in them\r\nvar m_tib_stacks = new newHashSet();\r\nm_tib_stacks.add(\"b+l\");\r\nm_tib_stacks.add(\"b+r\");\r\nm_tib_stacks.add(\"b+y\");\r\nm_tib_stacks.add(\"c+w\");\r\nm_tib_stacks.add(\"d+r\");\r\nm_tib_stacks.add(\"d+r+w\");\r\nm_tib_stacks.add(\"d+w\");\r\nm_tib_stacks.add(\"dz+r\");\r\nm_tib_stacks.add(\"g+l\");\r\nm_tib_stacks.add(\"g+r\");\r\nm_tib_stacks.add(\"g+r+w\");\r\nm_tib_stacks.add(\"g+w\");\r\nm_tib_stacks.add(\"g+y\");\r\nm_tib_stacks.add(\"h+r\");\r\nm_tib_stacks.add(\"h+w\");\r\nm_tib_stacks.add(\"k+l\");\r\nm_tib_stacks.add(\"k+r\");\r\nm_tib_stacks.add(\"k+w\");\r\nm_tib_stacks.add(\"k+y\");\r\nm_tib_stacks.add(\"kh+r\");\r\nm_tib_stacks.add(\"kh+w\");\r\nm_tib_stacks.add(\"kh+y\");\r\nm_tib_stacks.add(\"l+b\");\r\nm_tib_stacks.add(\"l+c\");\r\nm_tib_stacks.add(\"l+d\");\r\nm_tib_stacks.add(\"l+g\");\r\nm_tib_stacks.add(\"l+h\");\r\nm_tib_stacks.add(\"l+j\");\r\nm_tib_stacks.add(\"l+k\");\r\nm_tib_stacks.add(\"l+ng\");\r\nm_tib_stacks.add(\"l+p\");\r\nm_tib_stacks.add(\"l+t\");\r\nm_tib_stacks.add(\"l+w\");\r\nm_tib_stacks.add(\"m+r\");\r\nm_tib_stacks.add(\"m+y\");\r\nm_tib_stacks.add(\"n+r\");\r\nm_tib_stacks.add(\"ny+w\");\r\nm_tib_stacks.add(\"p+r\");\r\nm_tib_stacks.add(\"p+y\");\r\nm_tib_stacks.add(\"ph+r\");\r\nm_tib_stacks.add(\"ph+y\");\r\nm_tib_stacks.add(\"ph+y+w\");\r\nm_tib_stacks.add(\"r+b\");\r\nm_tib_stacks.add(\"r+d\");\r\nm_tib_stacks.add(\"r+dz\");\r\nm_tib_stacks.add(\"r+g\");\r\nm_tib_stacks.add(\"r+g+w\");\r\nm_tib_stacks.add(\"r+g+y\");\r\nm_tib_stacks.add(\"r+j\");\r\nm_tib_stacks.add(\"r+k\");\r\nm_tib_stacks.add(\"r+k+y\");\r\nm_tib_stacks.add(\"r+l\");\r\nm_tib_stacks.add(\"r+m\");\r\nm_tib_stacks.add(\"r+m+y\");\r\nm_tib_stacks.add(\"r+n\");\r\nm_tib_stacks.add(\"r+ng\");\r\nm_tib_stacks.add(\"r+ny\");\r\nm_tib_stacks.add(\"r+t\");\r\nm_tib_stacks.add(\"r+ts\");\r\nm_tib_stacks.add(\"r+ts+w\");\r\nm_tib_stacks.add(\"r+w\");\r\nm_tib_stacks.add(\"s+b\");\r\nm_tib_stacks.add(\"s+b+r\");\r\nm_tib_stacks.add(\"s+b+y\");\r\nm_tib_stacks.add(\"s+d\");\r\nm_tib_stacks.add(\"s+g\");\r\nm_tib_stacks.add(\"s+g+r\");\r\nm_tib_stacks.add(\"s+g+y\");\r\nm_tib_stacks.add(\"s+k\");\r\nm_tib_stacks.add(\"s+k+r\");\r\nm_tib_stacks.add(\"s+k+y\");\r\nm_tib_stacks.add(\"s+l\");\r\nm_tib_stacks.add(\"s+m\");\r\nm_tib_stacks.add(\"s+m+r\");\r\nm_tib_stacks.add(\"s+m+y\");\r\nm_tib_stacks.add(\"s+n\");\r\nm_tib_stacks.add(\"s+n+r\");\r\nm_tib_stacks.add(\"s+ng\");\r\nm_tib_stacks.add(\"s+ny\");\r\nm_tib_stacks.add(\"s+p\");\r\nm_tib_stacks.add(\"s+p+r\");\r\nm_tib_stacks.add(\"s+p+y\");\r\nm_tib_stacks.add(\"s+r\");\r\nm_tib_stacks.add(\"s+t\");\r\nm_tib_stacks.add(\"s+ts\");\r\nm_tib_stacks.add(\"s+w\");\r\nm_tib_stacks.add(\"sh+r\");\r\nm_tib_stacks.add(\"sh+w\");\r\nm_tib_stacks.add(\"t+r\");\r\nm_tib_stacks.add(\"t+w\");\r\nm_tib_stacks.add(\"th+r\");\r\nm_tib_stacks.add(\"ts+w\");\r\nm_tib_stacks.add(\"tsh+w\");\r\nm_tib_stacks.add(\"z+l\");\r\nm_tib_stacks.add(\"z+w\");\r\nm_tib_stacks.add(\"zh+w\");\r\n\r\n// a map used to split the input string into tokens for fromWylie().\r\n// all letters which start tokens longer than one letter are mapped to the max length of\r\n// tokens starting with that letter.  \r\nvar m_tokens_start = new newHashMap();\r\nm_tokens_start.put('S', 2);\r\nm_tokens_start.put('/', 2);\r\nm_tokens_start.put('d', 4);\r\nm_tokens_start.put('g', 3);\r\nm_tokens_start.put('b', 3);\r\nm_tokens_start.put('D', 3);\r\nm_tokens_start.put('z', 2);\r\nm_tokens_start.put('~', 3);\r\nm_tokens_start.put('-', 4);\r\nm_tokens_start.put('T', 2);\r\nm_tokens_start.put('a', 2);\r\nm_tokens_start.put('k', 2);\r\nm_tokens_start.put('t', 3);\r\nm_tokens_start.put('s', 2);\r\nm_tokens_start.put('c', 2);\r\nm_tokens_start.put('n', 2);\r\nm_tokens_start.put('p', 2);\r\nm_tokens_start.put('\\r', 2);\r\n\r\n// also for tokenization - a set of tokens longer than one letter\r\nvar m_tokens = new newHashSet();\r\nm_tokens.add(\"-d+h\");\r\nm_tokens.add(\"dz+h\");\r\nm_tokens.add(\"-dh\");\r\nm_tokens.add(\"-sh\");\r\nm_tokens.add(\"-th\");\r\nm_tokens.add(\"D+h\");\r\nm_tokens.add(\"b+h\");\r\nm_tokens.add(\"d+h\");\r\nm_tokens.add(\"dzh\");\r\nm_tokens.add(\"g+h\");\r\nm_tokens.add(\"tsh\");\r\nm_tokens.add(\"~M`\");\r\nm_tokens.add(\"-I\");\r\nm_tokens.add(\"-d\");\r\nm_tokens.add(\"-i\");\r\nm_tokens.add(\"-n\");\r\nm_tokens.add(\"-t\");\r\nm_tokens.add(\"//\");\r\nm_tokens.add(\"Dh\");\r\nm_tokens.add(\"Sh\");\r\nm_tokens.add(\"Th\");\r\nm_tokens.add(\"ai\");\r\nm_tokens.add(\"au\");\r\nm_tokens.add(\"bh\");\r\nm_tokens.add(\"ch\");\r\nm_tokens.add(\"dh\");\r\nm_tokens.add(\"dz\");\r\nm_tokens.add(\"gh\");\r\nm_tokens.add(\"kh\");\r\nm_tokens.add(\"ng\");\r\nm_tokens.add(\"ny\");\r\nm_tokens.add(\"ph\");\r\nm_tokens.add(\"sh\");\r\nm_tokens.add(\"th\");\r\nm_tokens.add(\"ts\");\r\nm_tokens.add(\"zh\");\r\nm_tokens.add(\"~M\");\r\nm_tokens.add(\"~X\");\r\nm_tokens.add(\"\\r\\n\");\r\n\r\n// A class to encapsulate the return value of fromWylieOneStack.\r\nvar WylieStack = function() {\r\n\tthis.uni_string = ''\r\n\tthis.tokens_used = 0\r\n\tthis.single_consonant = ''\r\n\tthis.single_cons_a = ''\r\n\tthis.warns = []\r\n\tthis.visarga = false\r\n\treturn this\r\n}\r\n\r\n// Looking from i onwards within tokens, returns as many consonants as it finds,\r\n// up to and not including the next vowel or punctuation.  Skips the caret \"^\".\r\n// Returns: a string of consonants joined by \"+\" signs.\r\nfunction consonantString(tokens, i) { // strings, int\r\n\tvar out = [];\r\n\tvar t = '';\r\n\twhile (tokens[i] != null) {\r\n\t\tt = tokens[i++];\r\n\t\tif (t == '+' || t == '^') continue;\r\n\t\tif (consonant(t) == null) break;\r\n\t\tout.push(t);\r\n\t}\r\n\treturn out.join(\"+\");\r\n}\r\n\r\n// Looking from i backwards within tokens, at most up to orig_i, returns as \r\n// many consonants as it finds, up to and not including the next vowel or\r\n// punctuation.  Skips the caret \"^\".\r\n// Returns: a string of consonants (in forward order) joined by \"+\" signs.\r\nfunction consonantStringBackwards(tokens, i, orig_i) {\r\n\tvar out = [];\r\n\tvar t = '';\r\n\twhile (i >= orig_i && tokens[i] != null) {\r\n\t\tt = tokens[i--];\r\n\t\tif (t == '+' || t == '^') continue;\r\n\t\tif (consonant(t) == null) break;\r\n\t\tout.unshift(t);\r\n\t}\r\n\treturn out.join(\"+\");\r\n}\r\n\r\n// A class to encapsulate the return value of fromWylieOneTsekbar.\r\nvar WylieTsekbar = function() {\r\n\tthis.uni_string = ''\r\n\tthis.tokens_used = 0\r\n\tthis.warns = []\r\n\treturn this\r\n}\r\n// A class to encapsulate an analyzed tibetan stack, while converting Unicode to Wylie.\r\nvar ToWylieStack = function() {\r\n\tthis.top = ''\r\n\tthis.stack = []\r\n\tthis.caret = false\r\n\tthis.vowels = []\r\n\tthis.finals = []\r\n\tthis.finals_found = newHashMap()\r\n\tthis.visarga = false\r\n\tthis.cons_str = ''\r\n\tthis.single_cons = ''\r\n\tthis.prefix = false\r\n\tthis.suffix = false\r\n\tthis.suff2 = false\r\n\tthis.dot = false\r\n\tthis.tokens_used = 0\r\n\tthis.warns = []\r\n\treturn this\r\n}\r\n\r\n// A class to encapsulate the return value of toWylieOneTsekbar.\r\nvar ToWylieTsekbar = function() {\r\n\tthis.wylie = ''\r\n\tthis.tokens_used = 0\r\n\tthis.warns = []\r\n\treturn this\r\n}\r\n\r\n// Converts successive stacks of Wylie into unicode, starting at the given index\r\n// within the array of tokens. \r\n// \r\n// Assumes that the first available token is valid, and is either a vowel or a consonant.\r\n// Returns a WylieTsekbar object\r\n// HELPER CLASSES AND STRUCTURES\r\nvar State = { PREFIX: 0, MAIN: 1, SUFF1: 2, SUFF2: 3, NONE: 4 }\r\n\t// split a string into Wylie tokens; \r\n\t// make sure there is room for at least one null element at the end of the array\r\nvar splitIntoTokens = function(str) {\r\n\tvar tokens = [] // size = str.length + 2\r\n\tvar i = 0;\r\n\tvar maxlen = str.length;\r\n\tTOKEN:\r\n\twhile (i < maxlen) {\r\n\t\tvar c = str.charAt(i);\r\n\t\tvar mlo = m_tokens_start.get(c);\r\n\t\t// if there are multi-char tokens starting with this char, try them\r\n\t\tif (mlo != null) {\r\n\t\t\tfor (var len = mlo; len > 1; len--) {\r\n\t\t\t\tif (i <= maxlen - len) {\r\n\t\t\t\t\tvar tr = str.substring(i, i + len);\r\n\t\t\t\t\tif (m_tokens.contains(tr)) {\r\n\t\t\t\t\t\ttokens.push(tr);\r\n\t\t\t\t\t\ti += len;\r\n\t\t\t\t\t\tcontinue TOKEN;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// things starting with backslash are special\r\n\t\tif (c == '\\\\' && i <= maxlen - 2) {\r\n\t\t\tif (str.charAt(i + 1) == 'u' && i <= maxlen - 6) {\r\n\t\t\t\ttokens.push(str.substring(i, i + 6));\t\t// \\\\uxxxx\r\n\t\t\t\ti += 6;\r\n\t\t\t} else if (str.charAt(i + 1) == 'U' && i <= maxlen - 10) {\r\n\t\t\t\ttokens.push(str.substring(i, i + 10));\t\t// \\\\Uxxxxxxxx\r\n\t\t\t\ti += 10;\r\n\t\t\t} else {\r\n\t\t\t\ttokens.push(str.substring(i, i + 2));\t\t// \\\\x\r\n\t\t\t\ti += 2;\r\n\t\t\t}\r\n\t\t\tcontinue TOKEN;\r\n\t\t}\r\n\t\t// otherwise just take one char\r\n\t\ttokens.push(c.toString());\r\n\t\ti += 1;\r\n\t}\r\n\treturn tokens;\r\n}\r\n\r\n// helper functions to access the various hash tables\r\nvar consonant = function(s) { return m_consonant.get(s) }\r\nvar subjoined = function(s) { return m_subjoined.get(s) }\r\nvar vowel = function(s) { return m_vowel.get(s) }\r\nvar final_uni = function(s) { return m_final_uni.get(s) }\r\nvar final_class = function(s) { return m_final_class.get(s) }\r\nvar other = function(s) { return m_other.get(s) }\r\nvar isSpecial = function(s) { return m_special.contains(s) }\r\nvar isSuperscript = function(s) { return m_superscripts.containsKey(s) }\r\nvar superscript = function(sup, below) {\r\n\tvar tmpSet = m_superscripts.get(sup);\r\n\tif (tmpSet == null) return false;\r\n\treturn tmpSet.contains(below);\r\n}\r\nvar isSubscript = function(s) { return m_subscripts.containsKey(s) }\r\nvar subscript = function(sub, above) {\r\n\tvar tmpSet = m_subscripts.get(sub);\r\n\tif (tmpSet == null) return false;\r\n\treturn tmpSet.contains(above);\r\n}\r\nvar isPrefix = function(s) { return m_prefixes.containsKey(s) }\r\nvar prefix = function(pref, after) {\r\n\tvar tmpSet = m_prefixes.get(pref);\r\n\tif (tmpSet == null) return false;\r\n\treturn tmpSet.contains(after);\r\n}\r\nvar isSuffix = function(s) { return m_suffixes.contains(s) }\r\nvar isSuff2 = function(s) { return m_suff2.containsKey(s) }\r\nvar suff2 = function(suff, before) {\r\n\tvar tmpSet = m_suff2.get(suff);\r\n\tif (tmpSet == null) return false;\r\n\treturn tmpSet.contains(before);\r\n}\r\nvar ambiguous_key = function(syll) { return m_ambiguous_key.get(syll) }\r\nvar ambiguous_wylie = function(syll) { return m_ambiguous_wylie.get(syll) }\r\nvar tib_top = function(c) { return m_tib_top.get(c) }\r\nvar tib_subjoined = function(c) { return m_tib_subjoined.get(c) }\r\nvar tib_vowel = function(c) { return m_tib_vowel.get(c) }\r\nvar tib_vowel_long = function(s) { return m_tib_vowel_long.get(s) }\r\nvar tib_final_wylie = function(c) { return m_tib_final_wylie.get(c) }\r\nvar tib_final_class = function(c) { return m_tib_final_class.get(c) }\r\nvar tib_caret = function(s) { return m_tib_caret.get(s) }\r\nvar tib_other = function(c) { return m_tib_other.get(c) }\r\nvar tib_stack = function(s) { return m_tib_stacks.contains(s) }\r\n\r\n// does this string consist of only hexadecimal digits?\r\nfunction validHex(t) {\r\n\tfor (var i = 0; i < t.length; i++) {\r\n\t\tvar c = t.charAt(i);\r\n\t\tif (!((c >= 'a' && c <= 'f') || (c >= '0' && c <= '9'))) return false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n// generate a warning if we are keeping them; prints it out if we were asked to\r\n// handle a Wylie unicode escape, \\\\uxxxx or \\\\Uxxxxxxxx\r\nfunction unicodeEscape (warns, line, t) { // [], int, str\r\n\tvar hex = t.substring(2);\r\n\tif (hex == '') return null;\r\n\tif (!validHex(hex)) {\r\n\t\twarnl(warns, line, \"\\\"\" + t + \"\\\": invalid hex code.\");\r\n\t\treturn \"\";\r\n\t}\r\n\treturn String.fromCharCode(parseInt(hex, 16))\r\n}\r\n\r\nfunction warn(warns, str) {\r\n\tif (warns != null) warns.push(str);\r\n\tif (opt.print_warnings) console.log(str);\r\n}\r\n\r\n// warn with line number\r\nfunction warnl(warns, line, str) {\r\n\twarn(warns, \"line \" + line + \": \" + str);\r\n}\r\n\r\nfunction fromWylieOneTsekbar(tokens, i) { // (str, int)\r\n\tvar orig_i = i\r\n\tvar t = tokens[i]\r\n\t// variables for tracking the state within the syllable as we parse it\r\n\tvar stack = null\r\n\tvar prev_cons = ''\r\n\tvar visarga = false\r\n\t// variables for checking the root letter, after parsing a whole tsekbar made of only single\r\n\t// consonants and one consonant with \"a\" vowel\r\n\tvar check_root = true\r\n\tvar consonants = [] // strings\r\n\tvar root_idx = -1\r\n\tvar out = ''\r\n\tvar warns = []\r\n\t// the type of token that we are expecting next in the input stream\r\n\t//   - PREFIX : expect a prefix consonant, or a main stack\r\n\t//   - MAIN   : expect only a main stack\r\n\t//   - SUFF1  : expect a 1st suffix \r\n\t//   - SUFF2  : expect a 2nd suffix\r\n\t//   - NONE   : expect nothing (after a 2nd suffix)\r\n\t//\r\n\t// the state machine is actually more lenient than this, in that a \"main stack\" is allowed\r\n\t// to come at any moment, even after suffixes.  this is because such syllables are sometimes\r\n\t// found in abbreviations or other places.  basically what we check is that prefixes and \r\n\t// suffixes go with what they are attached to.\r\n\t//\r\n\t// valid tsek-bars end in one of these states: SUFF1, SUFF2, NONE\r\n\tvar state = State.PREFIX;\r\n\r\n\t// iterate over the stacks of a tsek-bar\r\n\tSTACK:\r\n\twhile (t != null && (vowel(t) != null || consonant(t) != null) && !visarga) {\r\n\t\t// translate a stack\r\n\t\tif (stack != null) prev_cons = stack.single_consonant;\r\n\t\tstack = fromWylieOneStack(tokens, i);\r\n\t\ti += stack.tokens_used;\r\n\t\tt = tokens[i];\r\n\t\tout += stack.uni_string;\r\n\t\twarns = warns.concat(stack.warns);\r\n\t\tvisarga = stack.visarga;\r\n\t\tif (!opt.check) continue;\r\n\t\t// check for syllable structure consistency by iterating a simple state machine\r\n\t\t// - prefix consonant\r\n\t\tif (state == State.PREFIX && stack.single_consonant != null) {\r\n\t\t\tconsonants.push(stack.single_consonant);\r\n\t\t\tif (isPrefix(stack.single_consonant)) {\r\n\t\t\tvar next = t;\r\n\t\t\tif (opt.check_strict) next = consonantString(tokens, i);\r\n\t\t\tif (next != null && !prefix(stack.single_consonant, next)) {\r\n\t\t\t\tnext = next.replace(/\\+/g, \"\");\r\n\t\t\t\twarns.push(\"Prefix \\\"\" + stack.single_consonant + \"\\\" does not occur before \\\"\" + next + \"\\\".\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\twarns.push(\"Invalid prefix consonant: \\\"\" + stack.single_consonant + \"\\\".\");\r\n\t\t}\r\n\t\tstate = State.MAIN;\r\n\t\t// - main stack with vowel or multiple consonants\r\n\t\t} else if (stack.single_consonant == null) {\r\n\t\tstate = State.SUFF1;\r\n\t\t// keep track of the root consonant if it was a single cons with an \"a\" vowel\r\n\t\tif (root_idx >= 0) {\r\n\t\t\tcheck_root = false;\r\n\t\t} else if (stack.single_cons_a != null) {\r\n\t\t\tconsonants.push(stack.single_cons_a);\r\n\t\t\troot_idx = consonants.length - 1;\r\n\t\t}\r\n\t\t// - unexpected single consonant after prefix\r\n\t\t} else if (state == State.MAIN) {\r\n\t\t\twarns.push(\"Expected vowel after \\\"\" + stack.single_consonant + \"\\\".\");\r\n\t\t\t// - 1st suffix\r\n\t\t} else if (state == State.SUFF1) {\r\n\t\t\tconsonants.push(stack.single_consonant);\r\n\t\t\t// check this one only in strict mode b/c it trips on lots of Skt stuff\r\n\t\t\tif (opt.check_strict) {\r\n\t\t\t\tif (!isSuffix(stack.single_consonant)) {\r\n\t\t\t\t\twarns.push(\"Invalid suffix consonant: \\\"\" + stack.single_consonant + \"\\\".\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tstate = State.SUFF2;\r\n\t\t\t// - 2nd suffix\r\n\t\t} else if (state == State.SUFF2) {\r\n\t\t\tconsonants.push(stack.single_consonant);\r\n\t\t\tif (isSuff2(stack.single_consonant)) {\r\n\t\t\t\tif (!suff2(stack.single_consonant, prev_cons)) {\r\n\t\t\t\t\twarns.push(\"Second suffix \\\"\" + stack.single_consonant \r\n\t\t\t\t\t+ \"\\\" does not occur after \\\"\" + prev_cons + \"\\\".\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twarns.push(\"Invalid 2nd suffix consonant: \\\"\" + stack.single_consonant  + \"\\\".\");\r\n\t\t\t}\r\n\t\t\tstate = State.NONE;\r\n\t\t\t// - more crap after a 2nd suffix\r\n\t\t} else if (state == State.NONE) {\r\n\t\t\twarns.push(\"Cannot have another consonant \\\"\" + stack.single_consonant + \"\\\" after 2nd suffix.\");\r\n\t\t}\r\n\t}\r\n\r\n\tif (state == State.MAIN && stack.single_consonant != null && isPrefix(stack.single_consonant)) {\r\n\twarns.push(\"Vowel expected after \\\"\" + stack.single_consonant + \"\\\".\");\r\n\t}\r\n\r\n\t// check root consonant placement only if there were no warnings so far, and the syllable \r\n\t// looks ambiguous.  not many checks are needed here because the previous state machine \r\n\t// already takes care of most illegal combinations.\r\n\tif (opt.check && warns.length == 0 && check_root && root_idx >= 0) {\r\n\t\t// 2 letters where each could be prefix/suffix: root is 1st\r\n\t\tif (consonants.length == 2 && root_idx != 0 \r\n\t\t&& prefix(consonants[0], consonants[1]) && isSuffix(consonants[1]))\r\n\t\t{\r\n\t\t\twarns.push(\"Syllable should probably be \\\"\" + consonants[0] + \"a\" + consonants[1] + \"\\\".\");\r\n\r\n\t\t\t// 3 letters where 1st can be prefix, 2nd can be postfix before \"s\" and last is \"s\":\r\n\t\t\t// use a lookup table as this is completely ambiguous.\r\n\t\t} else if (consonants.length == 3 && isPrefix(consonants[0]) &&\r\n\t\t\tsuff2(\"s\", consonants[1]) && consonants[2] == \"s\")\r\n\t\t{\r\n\t\t\tvar cc = consonants.join(\"\");\r\n\t\t\tcc = cc.replace(/\\u2018/g, '\\'');\r\n\t\t\tcc = cc.replace(/\\u2019/g, '\\'');\t// typographical quotes\r\n\t\t\tvar expect_key = ambiguous_key(cc);\r\n\t//\t\tconsole.log('typeof expect_key', typeof expect_key)\r\n\t\t\tif (expect_key != null && expect_key != root_idx) {\r\n\t\t\t\twarns.push(\"Syllable should probably be \\\"\" + ambiguous_wylie(cc) + \"\\\".\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// return the stuff as a WylieTsekbar struct\r\n\tvar ret = new WylieTsekbar();\r\n\tret.uni_string = out;\r\n\tret.tokens_used = i - orig_i;\r\n\tret.warns = warns;\r\n\treturn ret;\r\n}\r\n\r\n    // Converts one stack's worth of Wylie into unicode, starting at the given index\r\n    // within the array of tokens.\r\n    // Assumes that the first available token is valid, and is either a vowel or a consonant.\r\n    // Returns a WylieStack object.\r\nfunction fromWylieOneStack(tokens, i) {\r\n\tvar orig_i = i\r\n\tvar t = '', t2 = '', o = ''\r\n\tvar out = ''\r\n\tvar warns = []\r\n\tvar consonants = 0\t\t// how many consonants found\r\n\tvar vowel_found = null; // any vowels (including a-chen)\r\n\tvar vowel_sign = null; // any vowel signs (that go under or above the main stack)\r\n\tvar single_consonant = null; // did we find just a single consonant?\r\n\tvar plus = false;\t\t// any explicit subjoining via '+'?\r\n\tvar caret = 0;\t\t\t// find any '^'?\r\n\tvar final_found = new newHashMap(); // keep track of finals (H, M, etc) by class\r\n\r\n\t// do we have a superscript?\r\n\tt = tokens[i]\r\n\tt2 = tokens[i + 1]\r\n\tif (t2 != null && isSuperscript(t) && superscript(t, t2)) {\r\n\t\tif (opt.check_strict) {\r\n\t\t\tvar next = consonantString(tokens, i + 1);\r\n\t\t\tif (!superscript(t, next)) {\r\n\t\t\t\tnext = next.replace(/\\+/g, '')\r\n\t\t\t\twarns.push(\"Superscript \\\"\" + t + \"\\\" does not occur above combination \\\"\" + next + \"\\\".\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tout += consonant(t);\r\n\t\tconsonants++;\r\n\t\ti++;\r\n\t\twhile (tokens[i] != null && tokens[i] == (\"^\")) { caret++; i++; }\r\n\t}\r\n\t// main consonant + stuff underneath.\r\n\t// this is usually executed just once, but the \"+\" subjoining operator makes it come back here\r\n\tMAIN: \r\n\twhile (true) {\r\n\t\t// main consonant (or a \"a\" after a \"+\")\r\n\t\tt = tokens[i];\r\n\t\tif (consonant(t) != null || (out.length > 0 && subjoined(t) != null)) {\r\n\t\t\tif (out.length > 0) {\r\n\t\t\t\tout += (subjoined(t));\r\n\t\t\t} else {\r\n\t\t\t\tout += (consonant(t));\r\n\t\t\t}\r\n\t\t\ti++;\r\n\r\n\t\t\tif (t == \"a\") {\r\n\t\t\t\tvowel_found = \"a\";\r\n\t\t\t} else {\r\n\t\t\t\tconsonants++;\r\n\t\t\t\tsingle_consonant = t;\r\n\t\t\t}\r\n\r\n\t\t\twhile (tokens[i] != null && tokens[i] == \"^\") {\r\n\t\t\t\tcaret++;\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\t// subjoined: rata, yata, lata, wazur.  there can be up two subjoined letters in a stack.\r\n\t\t\tfor (var z = 0; z < 2; z++) {\r\n\t\t\t\tt2 = tokens[i];\r\n\t\t\t\tif (t2 != null && isSubscript(t2)) {\r\n\t\t\t\t\t// lata does not occur below multiple consonants \r\n\t\t\t\t\t// (otherwise we mess up \"brla\" = \"b.r+la\")\r\n\t\t\t\t\tif (t2 == \"l\" && consonants > 1) break;\r\n\t\t\t\t\t// full stack checking (disabled by \"+\")\r\n\t\t\t\t\tif (opt.check_strict && !plus) {\r\n\t\t\t\t\t\tvar prev = consonantStringBackwards(tokens, i-1, orig_i);\r\n\t\t\t\t\t\tif (!subscript(t2, prev)) {\r\n\t\t\t\t\t\t\tprev = prev.replace(/\\+/g, \"\");\r\n\t\t\t\t\t\t\twarns.push(\"Subjoined \\\"\" + t2 + \"\\\" not expected after \\\"\" + prev + \"\\\".\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// simple check only\r\n\t\t\t\t\t} else if (opt.check) {\r\n\t\t\t\t\t\tif (!subscript(t2, t) && !(z == 1 && t2 == (\"w\") && t == (\"y\"))) {\r\n\t\t\t\t\t\t\twarns.push(\"Subjoined \\\"\" + t2 + \"\\\"not expected after \\\"\" + t + \"\\\".\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tout += subjoined(t2);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tconsonants++;\r\n\t\t\t\t\twhile (tokens[i] != null && tokens[i] == (\"^\")) { caret++; i++; }\r\n\t\t\t\t\tt = t2;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// caret (^) can come anywhere in Wylie but in Unicode we generate it at the end of \r\n\t\t// the stack but before vowels if it came there (seems to be what OpenOffice expects),\r\n\t\t// or at the very end of the stack if that's how it was in the Wylie.\r\n\t\tif (caret > 0) {\r\n\t\t\tif (caret > 1) {\r\n\t\t\t\twarns.push(\"Cannot have more than one \\\"^\\\" applied to the same stack.\");\r\n\t\t\t}\r\n\t\t\tfinal_found.put(final_class(\"^\"), \"^\");\r\n\t\t\tout += (final_uni(\"^\"));\r\n\t\t\tcaret = 0;\r\n\t\t}\r\n\t\t// vowel(s)\r\n\t\tt = tokens[i];\r\n\t\tif (t != null && vowel(t) != null) {\r\n\t\t\tif (out.length == 0) out += (vowel(\"a\"));\r\n\t\t\tif (t != \"a\") out += (vowel(t));\r\n\t\t\ti++;\r\n\t\t\tvowel_found = t;\r\n\t\t\tif (t != \"a\") vowel_sign = t;\r\n\t\t}\r\n\t\t// plus sign: forces more subjoining\r\n\t\tt = tokens[i];\r\n\t\tif (t != null && t == (\"+\")) {\r\n\t\t\ti++;\r\n\t\t\tplus = true;\r\n\t\t\t// sanity check: next token must be vowel or subjoinable consonant.  \r\n\t\t\tt = tokens[i];\r\n\t\t\tif (t == null || (vowel(t) == null && subjoined(t) == null)) {\r\n\t\t\t\tif (opt.check) warns.push(\"Expected vowel or consonant after \\\"+\\\".\");\r\n\t\t\t\tbreak MAIN;\r\n\t\t\t}\r\n\t\t\t// consonants after vowels doesn't make much sense but process it anyway\r\n\t\t\tif (opt.check) {\r\n\t\t\t\tif (vowel(t) == null && vowel_sign != null) {\r\n\t\t\t\t\twarns.push(\"Cannot subjoin consonant (\" + t + \") after vowel (\" + vowel_sign + \") in same stack.\");\r\n\t\t\t\t} else if (t == (\"a\") && vowel_sign != null) {\r\n\t\t\t\t\twarns.push(\"Cannot subjoin a-chen (a) after vowel (\" + vowel_sign + \") in same stack.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcontinue MAIN;\r\n\t\t}\r\n\t\tbreak MAIN;\r\n\t}\r\n\t// final tokens\r\n\tt = tokens[i];\r\n\twhile (t != null && final_class(t) != null) {\r\n\t\tvar uni = final_uni(t);\r\n\t\tvar klass = final_class(t);\r\n\t\t// check for duplicates\r\n\t\tif (final_found.containsKey(klass)) {\r\n\t\t\tif (final_found.get(klass) == t) {\r\n\t\t\t\twarns.push(\"Cannot have two \\\"\" + t + \"\\\" applied to the same stack.\");\r\n\t\t\t} else {\r\n\t\t\t\twarns.push(\"Cannot have \\\"\" + t + \"\\\" and \\\"\" + final_found.get(klass)\r\n\t\t\t\t\t+ \"\\\" applied to the same stack.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfinal_found.put(klass, t);\r\n\t\t\tout += (uni);\r\n\t\t}\r\n\t\ti++;\r\n\t\tsingle_consonant = null;\r\n\t\tt = tokens[i];\r\n\t}\r\n\t// if next is a dot \".\" (stack separator), skip it.\r\n\tif (tokens[i] != null && tokens[i] == (\".\")) i++;\r\n\t// if we had more than a consonant and no vowel, and no explicit \"+\" joining, backtrack and \r\n\t// return the 1st consonant alone\r\n\tif (consonants > 1 && vowel_found == null) {\r\n\t\tif (plus) {\r\n\t\t\tif (opt.check) warns.push(\"Stack with multiple consonants should end with vowel.\");\r\n\t\t} else {\r\n\t\t\ti = orig_i + 1;\r\n\t\t\tconsonants = 1;\r\n\t\t\tsingle_consonant = tokens[orig_i];\r\n\t\t\tout = '';\r\n\t\t\tout += (consonant(single_consonant));\r\n\t\t}\r\n\t}\r\n\t// calculate \"single consonant\"\r\n\tif (consonants != 1 || plus) {\r\n\t\tsingle_consonant = null;\r\n\t}\r\n\t// return the stuff as a WylieStack struct\r\n\tvar ret = new WylieStack();\r\n\tret.uni_string = out;\r\n\tret.tokens_used = i - orig_i;\r\n\tif (vowel_found != null) {\r\n\t\tret.single_consonant = null;\r\n\t} else {\r\n\t\tret.single_consonant = single_consonant;\r\n\t}\r\n\r\n\tif (vowel_found != null && vowel_found == (\"a\")) {\r\n\t\tret.single_cons_a = single_consonant;\r\n\t} else {\r\n\t\tret.single_cons_a = null;\r\n\t}\r\n\tret.warns = warns;\r\n\tret.visarga = final_found.containsKey(\"H\");\r\n\treturn ret;\r\n}\r\n\r\n\t// Converts a Wylie (EWTS) string to unicode.  If 'warns' is not 'null', puts warnings into it.\r\nfunction fromWylie(str, warns) {\r\n\t\tvar out = '', line = 1, units = 0, i = 0\r\n\t\tif (opt.fix_spacing) { str = str.replace(/^\\s+/, '') }\r\n\t\tvar tokens = splitIntoTokens(str);\r\n\t\tITER:while (tokens[i] != null) {\r\n\t\t\tvar t = tokens[i], o = null\r\n\t\t\t// [non-tibetan text] : pass through, nesting brackets\r\n\t\t\tif (t == \"[\") {\r\n\t\t\t\tvar nesting = 1;\r\n\t\t\t\ti++;\r\n\t\t\t\t\tESC:while (tokens[i] != null) {\r\n\t\t\t\t\tt = tokens[i++];\r\n\t\t\t\t\tif (t == \"[\") nesting++;\r\n\t\t\t\t\tif (t == \"]\") nesting--;\r\n\t\t\t\t\tif (nesting == 0) continue ITER;\r\n\t\t\t\t\t// handle unicode escapes and \\1-char escapes within [comments]...\r\n\t\t\t\t\tif (t.charAt(0) == '\\\\' && (t.charAt(1) == 'u' || t.charAt(1) == 'U')) {\r\n\t\t\t\t\t\to = unicodeEscape(warns, line, t);\r\n\t\t\t\t\t\tif (o != null) {\r\n\t\t\t\t\t\t\tout += o;\r\n\t\t\t\t\t\t\tcontinue ESC;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (t.charAt(0) == '\\\\') {\r\n\t\t\t\t\t\to = t.substring(1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\to = t;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tout += o;\r\n\t\t\t\t}\r\n\t\t\t\twarnl(warns, line, \"Unfinished [non-Wylie stuff].\");\r\n\t\t\t\tbreak ITER;\r\n\t\t\t}\r\n\t\t\t// punctuation, numbers, etc\r\n\t\t\to = other(t);\r\n\t\t\tif (o != null) {\r\n\t\t\t\tout += o;\r\n\t\t\t\ti++;\r\n\t\t\t\tunits++;\r\n\t\t\t\t// collapse multiple spaces?\r\n\t\t\t\tif (t == \" \" && opt.fix_spacing) {\r\n\t\t\t\t\twhile (tokens[i] != null && tokens[i] == \" \") i++;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue ITER;\r\n\t\t\t}\r\n\t\t\t// vowels & consonants: process tibetan script up to a tsek, punctuation or line noise\r\n\t\t\tif (vowel(t) != null || consonant(t) != null) {\r\n\t\t\t\tvar tb = fromWylieOneTsekbar(tokens, i);\r\n\t\t\t\tvar word = '';\r\n\t\t\t\tfor (var j = 0; j < tb.tokens_used; j++) {\r\n\t\t\t\t\tword += (tokens[i+j]);\r\n\t\t\t\t}\r\n\t\t\t\tout += tb.uni_string;\r\n\t\t\t\ti += tb.tokens_used;\r\n\t\t\t\tunits++;\r\n\t\t\t\tfor (var w = 0; w < tb.warns.length; w++) {\r\n\t\t\t\t\twarnl(warns, line, \"\\\"\" + word + \"\\\": \" + tb.warns[w]);\r\n\t\t\t\t}\r\n\t\t\t\tcontinue ITER;\r\n\t\t\t}\r\n\t\t\t// *** misc unicode and line handling stuff ***\r\n\t\t\t// ignore BOM and zero-width space\r\n\t\t\tif (t == \"\\ufeff\" || t == \"\\u200b\") {\r\n\t\t\t\ti++;\r\n\t\t\t\tcontinue ITER;\r\n\t\t\t}\r\n\t\t\t// \\\\u, \\\\U unicode characters\r\n\t\t\tif (t.charAt(0) == '\\\\' && (t.charAt(1) == 'u' || t.charAt(1) == 'U')) {\r\n\t\t\t\to = unicodeEscape(warns, line, t);\r\n\t\t\t\tif (o != null) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tout += o;\r\n\t\t\t\t\tcontinue ITER;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// backslashed characters\r\n\t\t\tif (t.charAt(0) == '\\\\') {\r\n\t\t\t\tout += t.substring(1);\r\n\t\t\t\ti++;\r\n\t\t\t\tcontinue ITER;\r\n\t\t\t}\r\n\t\t\t// count lines\r\n\t\t\tif (t == \"\\r\\n\" || t == \"\\n\" || t == \"\\r\") {\r\n\t\t\t\tline++;\r\n\t\t\t\tout += t;\r\n\t\t\t\ti++;\r\n\t\t\t\t// also eat spaces after newlines (optional)\r\n\t\t\t\tif (opt.fix_spacing) {\r\n\t\t\t\t\twhile (tokens[i] != null && tokens[i] == \" \") i++;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue ITER;\r\n\t\t\t}\r\n\t\t\t// stuff that shouldn't occur out of context: special chars and remaining [a-zA-Z]\r\n\t\t\tvar c = t.charAt(0);\r\n\t\t\tif (isSpecial(t) || (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\r\n\t\t\t\twarnl(warns, line, \"Unexpected character \\\"\" + t + \"\\\".\");\r\n\t\t\t}\r\n\t\t\t// anything else: pass through\r\n\t\t\tout += t;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif (units == 0) warn(warns, \"No Tibetan characters found!\");\r\n\t\treturn out\r\n\t}\r\n\t\r\n\t// given a character, return a string like \"\\\\uxxxx\", with its code in hex\r\nfunction formatHex(t) { //char\r\n\t\t// not compatible with GWT...\r\n\t\t// return String.format(\"\\\\u%04x\", (int)t);\r\n\t\tvar sb = '';\r\n\t\tsb += '\\\\u';\r\n\t\tvar s = t.charCodeAt(0).toString(16);\r\n\t\tfor (var i = s.length; i < 4; i++) sb += '0';\r\n\t\tsb += s;\r\n\t\treturn sb;\r\n\t}\r\n\r\n\t// handles spaces (if any) in the input stream, turning them into '_'.\r\n\t// this is abstracted out because in non-escaping mode, we only want to turn spaces into _\r\n\t// when they come in the middle of Tibetan script.\r\nfunction handleSpaces(str, i, out) { //return int\r\n\tvar found = 0;\r\n\tvar orig_i = i;\r\n\twhile (i < str.length && str.charAt(i) == ' ') {\r\n\t\ti++;\r\n\t\tfound++;\r\n\t}\r\n\tif (found == 0 || i == str.length) return 0;\r\n\tvar t = str.charAt(i);\r\n\tif (tib_top(t) == null && tib_other(t) == null) return 0;\r\n\t// found 'found' spaces between two tibetan bits; generate the same number of '_'s\r\n\tfor (i = 0; i < found; i++) out += '_';\r\n\treturn found;\r\n}\r\n\r\n// for space-handling in escaping mode: is the next thing coming (after a number of spaces)\r\n// some non-tibetan bit, within the same line?\r\nfunction followedByNonTibetan(str, i) {\r\n\tvar len = str.length;\r\n\twhile (i < len && str.charAt(i) == ' ') i++;\r\n\tif (i == len) return false;\r\n\tvar t = str.charAt(i);\r\n\treturn tib_top(t) == null && tib_other(t) == null && t != '\\r' && t != '\\n';\r\n}\r\n\r\n// Convert Unicode to Wylie: one tsekbar\r\nfunction toWylieOneTsekbar(str, len, i) {\r\n\tvar orig_i = i;\r\n\tvar warns = [];\r\n\tvar stacks = [];// ArrayList<ToWylieStack>;\r\n\tITER: \r\n\twhile (true) {\r\n\t\tvar st = toWylieOneStack(str, len, i);\r\n\t\tstacks.push(st);\r\n\t\twarns = warns.concat(st.warns);\r\n\t\ti += st.tokens_used;\r\n\t\tif (st.visarga) break ITER;\r\n\t\tif (i >= len || tib_top(str.charAt(i)) == null) break ITER;\r\n\t}\r\n\t// figure out if some of these stacks can be prefixes or suffixes (in which case\r\n\t// they don't need their \"a\" vowels)\r\n\tvar last = stacks.length - 1;\r\n\tif (stacks.length > 1 && stacks[0].single_cons != null) {\r\n\t\t// we don't count the wazur in the root stack, for prefix checking\r\n\t\tvar cs = stacks[1].cons_str.replace(/\\+w/g, \"\")\r\n\t\tif (prefix(stacks[0].single_cons, cs)) stacks[0].prefix = true;\r\n\t}\r\n\tif (stacks.length > 1 && stacks[last].single_cons != null \r\n\t&& isSuffix(stacks[last].single_cons)) {\r\n\t\tstacks[last].suffix = true;\r\n\t}\r\n\tif (stacks.length > 2 && stacks[last].single_cons != null \r\n\t&& stacks[last - 1].single_cons != null\r\n\t&& isSuffix(stacks[last - 1].single_cons)\r\n\t&& suff2(stacks[last].single_cons, stacks[last - 1].single_cons)) {\r\n\t\tstacks[last].suff2 = true;\r\n\t\tstacks[last - 1].suffix = true;\r\n\t}\r\n\t// if there are two stacks and both can be prefix-suffix, then 1st is root\r\n\tif (stacks.length == 2 && stacks[0].prefix && stacks[1].suffix) {\r\n\t    stacks[0].prefix = false;\r\n\t}\r\n\t// if there are three stacks and they can be prefix, suffix and suff2, then check w/ a table\r\n\tif (stacks.length == 3 && stacks[0].prefix && stacks[1].suffix && stacks[2].suff2) {\r\n\t\tvar strb = []\r\n\t\tfor (var si = 0; si < stacks.length; si++) strb.push(stacks[si].single_cons)\r\n\t\tvar ztr = strb.join('')\r\n\t\tvar root = ambiguous_key(ztr)\r\n\t\tif (root == null) {\r\n\t\t\twarns.push(\"Ambiguous syllable found: root consonant not known for \\\"\" + ztr + \"\\\".\")\r\n\t\t\t// make it up...  (ex. \"mgas\" for ma, ga, sa)\r\n\t\t\troot = 1\r\n\t\t}\r\n\t\tstacks[root].prefix = stacks[root].suffix = false\r\n\t\tstacks[root + 1].suff2 = false\r\n\t}\r\n\t// if the prefix together with the main stack could be mistaken for a single stack, add a \".\"\r\n\tif (stacks[0].prefix && tib_stack(stacks[0].single_cons + \"+\" + stacks[1].cons_str)) \r\n\t\tstacks[0].dot = true;\r\n\t// put it all together\r\n\tvar out = ''\r\n\tfor (var si = 0; si < stacks.length; si++) out += putStackTogether(stacks[si])\r\n\tvar ret = new ToWylieTsekbar();\r\n\tret.wylie = out;\r\n\tret.tokens_used = i - orig_i;\r\n\tret.warns = warns;\r\n\treturn ret;\r\n}\r\n\t \r\n// Unicode to Wylie: one stack at a time\r\nfunction toWylieOneStack(str, len, i) {\r\n\tvar orig_i = i;\r\n\tvar ffinal = null, vowel = null, klass = null;\r\n\t// split the stack into a ToWylieStack object:\r\n\t//   - top symbol\r\n\t//   - stacked signs (first is the top symbol again, then subscribed main characters...)\r\n\t//   - caret (did we find a stray tsa-phru or not?)\r\n\t//   - vowel signs (including small subscribed a-chung, \"-i\" Skt signs, etc)\r\n\t//   - final stuff (including anusvara, visarga, halanta...)\r\n\t//   - and some more variables to keep track of what has been found\r\n\tvar st = new ToWylieStack();\r\n\t// assume: tib_top(t) exists\r\n\tvar t = str.charAt(i++);\r\n\tst.top = tib_top(t);\r\n\tst.stack.push(tib_top(t));\r\n\t// grab everything else below the top sign and classify in various categories\r\n\twhile (i < len) {\r\n\t\tt = str.charAt(i);\r\n\t\tvar o;\r\n\t\tif ((o = tib_subjoined(t)) != null) {\r\n\t\t\ti++;\r\n\t\t\tst.stack.push(o);\r\n\t\t\t// check for bad ordering\r\n\t\t\tif (st.finals.length > 0) {\r\n\t\t\t\tst.warns.push(\"Subjoined sign \\\"\" + o + \"\\\" found after final sign \\\"\" + ffinal + \"\\\".\");\r\n\t\t\t} else if (st.vowels.length > 0) {\r\n\t\t\t\tst.warns.push(\"Subjoined sign \\\"\" + o + \"\\\" found after vowel sign \\\"\" + vowel + \"\\\".\");\r\n\t\t\t}\r\n\t\t} else if ((o = tib_vowel(t)) != null) {\r\n\t\t\ti++;\r\n\t\t\tst.vowels.push(o);\r\n\t\t\tif (vowel == null) vowel = o;\r\n\t\t\t// check for bad ordering\r\n\t\t\tif (st.finals.length > 0) {\r\n\t\t\t\tst.warns.push(\"Vowel sign \\\"\" + o + \"\\\" found after final sign \\\"\" + ffinal + \"\\\".\");\r\n\t\t\t}\r\n\t\t} else if ((o = tib_final_wylie(t)) != null) {\r\n\t\t\ti++;\r\n\t\t\tklass = tib_final_class(t);\r\n\t\t\tif (o == \"^\") {\r\n\t\t\t\tst.caret = true;\r\n\t\t\t} else {\r\n\t\t\t\tif (o == \"H\") st.visarga = true;\r\n\t\t\t\tst.finals.push(o);\r\n\t\t\t\tif (ffinal == null) ffinal = o;\r\n\t\t\t\t// check for invalid combinations\r\n\t\t\t\tif (st.finals_found.containsKey(klass)) {\r\n\t\t\t\t\tst.warns.push(\"Final sign \\\"\" + o \r\n\t\t\t\t\t+ \"\\\" should not combine with found after final sign \\\"\" + ffinal + \"\\\".\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tst.finals_found.put(klass, o);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else break;\r\n\t}\r\n\t// now analyze the stack according to various rules\r\n\t// a-chen with vowel signs: remove the \"a\" and keep the vowel signs\r\n\tif (st.top == \"a\" && st.stack.length == 1 && st.vowels.length > 0) st.stack.shift();\r\n\t// handle long vowels: A+i becomes I, etc.\r\n\tif (st.vowels.length > 1 && st.vowels[0] == \"A\" && tib_vowel_long(st.vowels[1]) != null) {\r\n\t\tvar l = tib_vowel_long(st.vowels[1]);\r\n\t\tst.vowels.shift();\r\n\t\tst.vowels.shift();\r\n\t\tst.vowels.unshift(l);\r\n\t}\r\n\t// special cases: \"ph^\" becomes \"f\", \"b^\" becomes \"v\"\r\n\tif (st.caret && st.stack.length == 1 && tib_caret(st.top) != null) {\r\n\t\tvar l = tib_caret(st.top);\r\n\t\tst.top = l;\r\n\t\tst.stack.shift();\r\n\t\tst.stack.unshift(l);\r\n\t\tst.caret = false;\r\n\t}\r\n\tst.cons_str = st.stack.join(\"+\");\r\n\t// if this is a single consonant, keep track of it (useful for prefix/suffix analysis)\r\n\tif (st.stack.length == 1 && st.stack[0] != (\"a\") && !st.caret \r\n\t&& st.vowels.length == 0 && st.finals.length == 0) {\r\n\t\tst.single_cons = st.cons_str;\r\n\t}\r\n\t// return the analyzed stack\r\n\tst.tokens_used = i - orig_i;\r\n\treturn st;\r\n}\r\n\r\n// Puts an analyzed stack together into Wylie output, adding an implicit \"a\" if needed.\r\nfunction putStackTogether(st) {\r\n\tvar out = '';\r\n\t// put the main elements together... stacked with \"+\" unless it's a regular stack\r\n\tif (tib_stack(st.cons_str)) {\r\n\t    out += st.stack.join(\"\");\r\n\t} else out += (st.cons_str);\r\n\t// caret (tsa-phru) goes here as per some (halfway broken) Unicode specs...\r\n\tif (st.caret) out += (\"^\");\r\n\t// vowels...\r\n\tif (st.vowels.length > 0) {\r\n\t\tout += st.vowels.join(\"+\");\r\n\t} else if (!st.prefix && !st.suffix && !st.suff2\r\n\t&& (st.cons_str.length == 0 || st.cons_str.charAt(st.cons_str.length - 1) != 'a')) {\r\n\t\tout += \"a\"\r\n\t}\r\n\t// final stuff\r\n\tout += st.finals.join(\"\");\r\n\tif (st.dot) out += \".\";\r\n\treturn out;\r\n}\r\n\r\n\t// Converts from Unicode strings to Wylie (EWTS) transliteration.\r\n\t//\r\n\t// Arguments are:\r\n\t//    str   : the unicode string to be converted\r\n\t//    escape: whether to escape non-tibetan characters according to Wylie encoding.\r\n\t//            if escape == false, anything that is not tibetan will be just passed through.\r\n\t//\r\n\t// Returns: the transliterated string.\r\n\t//\r\n\t// To get the warnings, call getWarnings() afterwards.\r\n\r\nfunction toWylie(str, warns, escape) {\r\n\tif (escape == undefined) escape = true\r\n\tvar out = ''\r\n\tvar line = 1\r\n\tvar units = 0\r\n\t// globally search and replace some deprecated pre-composed Sanskrit vowels\r\n\tstr = str.replace(/\\u0f76/g, \"\\u0fb2\\u0f80\")\r\n\tstr = str.replace(/\\u0f77/g, \"\\u0fb2\\u0f71\\u0f80\")\r\n\tstr = str.replace(/\\u0f78/g, \"\\u0fb3\\u0f80\")\r\n\tstr = str.replace(/\\u0f79/g, \"\\u0fb3\\u0f71\\u0f80\")\r\n\tstr = str.replace(/\\u0f81/g, \"\\u0f71\\u0f80\")\r\n\tvar i = 0\r\n\tvar len = str.length\r\n\t// iterate over the string, codepoint by codepoint\r\n\tITER:\r\n\twhile (i < len) {\r\n\t\tvar t = str.charAt(i);\r\n\t\t// found tibetan script - handle one tsekbar\r\n\t\tif (tib_top(t) != null) {\r\n\t\t\tvar tb = toWylieOneTsekbar(str, len, i);\r\n\t\t\tout += tb.wylie;\r\n\t\t\ti += tb.tokens_used;\r\n\t\t\tunits++;\r\n\t\t\tfor (var w = 0; w < tb.warns.length; w++) warnl(warns, line, tb.warns[w]);\r\n\t\t\tif (!escape) i += handleSpaces(str, i, out);\r\n\t\t\tcontinue ITER;\r\n\t\t}\r\n\t\t// punctuation and special stuff. spaces are tricky:\r\n\t\t// - in non-escaping mode: spaces are not turned to '_' here (handled by handleSpaces)\r\n\t\t// - in escaping mode: don't do spaces if there is non-tibetan coming, so they become part\r\n\t\t//   of the [escaped block].\r\n\t\tvar o = tib_other(t);\r\n\t\tif (o != null && (t != ' ' || (escape && !followedByNonTibetan(str, i)))) {\r\n\t\t\tout += o;\r\n\t\t\ti++;\r\n\t\t\tunits++;\r\n\t\t\tif (!escape) i += handleSpaces(str, i, out);\r\n\t\t\tcontinue ITER;\r\n\t\t}\r\n\t\t// newlines, count lines.  \"\\r\\n\" together count as one newline.\r\n\t\tif (t == '\\r' || t == '\\n') {\r\n\t\t\tline++;\r\n\t\t\ti++;\r\n\t\t\tout += t;\r\n\t\t\tif (t == '\\r' && i < len && str.charAt(i) == '\\n') {\r\n\t\t\t\ti++;\r\n\t\t\t\tout += ('\\n');\r\n\t\t\t}\r\n\t\t\tcontinue ITER;\r\n\t\t}\r\n\t\t// ignore BOM and zero-width space\r\n\t\tif (t == '\\ufeff' || t == '\\u200b') {\r\n\t\t\ti++;\r\n\t\t\tcontinue ITER;\r\n\t\t}\r\n\t\t// anything else - pass along?\r\n\t\tif (!escape) {\r\n\t\t\tout += (t);\r\n\t\t\ti++;\r\n\t\t\tcontinue ITER;\r\n\t\t}\r\n\t\t// other characters in the tibetan plane, escape with \\\\u0fxx\r\n\t\tif (t >= '\\u0f00' && t <= '\\u0fff') {\r\n\t\t\tvar c = formatHex(t);\r\n\t\t\tout += c;\r\n\t\t\ti++;\r\n\t\t\t// warn for tibetan codepoints that should appear only after a tib_top\r\n\t\t\tif (tib_subjoined(t) != null || tib_vowel(t) != null || tib_final_wylie(t) != null) {\r\n\t\t\t\twarnl(warns, line, \"Tibetan sign \" + c + \" needs a top symbol to attach to.\");\r\n\t\t\t}\r\n\t\t\tcontinue ITER;\r\n\t\t}\r\n\t\t// ... or escape according to Wylie:\r\n\t\t// put it in [comments], escaping [] sequences and closing at line ends\r\n\t\tout += \"[\";\r\n\t\twhile (tib_top(t) == null && (tib_other(t) == null || t == ' ') && t != '\\r' && t != '\\n') {\r\n\t\t\t// \\escape [opening and closing] brackets\r\n\t\t\tif (t == '[' || t == ']') {\r\n\t\t\t\tout += \"\\\\\";\r\n\t\t\t\tout += t;\r\n\t\t\t// unicode-escape anything in the tibetan plane (i.e characters not handled by Wylie)\r\n\t\t\t} else if (t >= '\\u0f00' && t <= '\\u0fff') {\r\n\t\t\t\tout += formatHex(t);\r\n\t\t\t\t// and just pass through anything else!\r\n\t\t\t} else {\r\n\t\t\t\tout += t;\r\n\t\t\t}\r\n\t\t\tif (++i >= len) break;\r\n\t\t\tt = str.charAt(i);\r\n\t\t}\r\n\t\t out += \"]\";\r\n\t}\r\n\treturn out;\r\n}\r\nmodule.exports= {\r\n\t\tfromWylie: fromWylie,\r\n\t\ttoWylie: toWylie,\r\n\t\tsetopt: setopt,\r\n\t\tgetopt: function() { return opt },\r\n\t\tfive: function() {\r\n\t\t\treturn 555;\r\n\t\t}\r\n}\r\n\r\n\r\n"
  ]
}